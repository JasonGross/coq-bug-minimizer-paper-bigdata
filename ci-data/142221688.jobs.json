{"id":536304802,"status":"success","stage":"stage-4","name":"library:ci-corn","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:14.317Z","started_at":"2020-05-04T00:53:17.658Z","finished_at":"2020-05-04T01:15:05.250Z","duration":1307.591356,"queued_duration":0.504771,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304802","artifacts":[{"file_type":"trace","size":480870,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":536304801,"status":"success","stage":"stage-4","name":"library:ci-fiat_crypto","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:14.299Z","started_at":"2020-05-04T00:54:21.729Z","finished_at":"2020-05-04T03:04:59.905Z","duration":7838.176097,"queued_duration":0.292428,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304801","artifacts":[{"file_type":"trace","size":2310982,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":536304800,"status":"skipped","stage":"stage-3","name":"plugin:ci-metacoq","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:14.281Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304800","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":536304799,"status":"success","stage":"stage-3","name":"library:ci-vst","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:14.265Z","started_at":"2020-05-04T00:46:43.612Z","finished_at":"2020-05-04T01:41:27.664Z","duration":3284.051911,"queued_duration":0.284,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304799","artifacts":[{"file_type":"trace","size":633919,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":536304798,"status":"success","stage":"stage-3","name":"library:ci-math_classes","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:14.247Z","started_at":"2020-05-04T00:44:57.342Z","finished_at":"2020-05-04T00:53:17.011Z","duration":499.668944,"queued_duration":1.264319,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304798","artifacts":[{"file_type":"trace","size":183623,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":536304797,"status":"success","stage":"stage-3","name":"library:ci-coqprime","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:14.231Z","started_at":"2020-05-04T00:44:57.097Z","finished_at":"2020-05-04T00:49:01.514Z","duration":244.416649,"queued_duration":1.078063,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304797","artifacts":[{"file_type":"trace","size":133109,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":536304796,"status":"success","stage":"stage-3","name":"library:ci-color","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:14.212Z","started_at":"2020-05-04T00:44:56.620Z","finished_at":"2020-05-04T00:56:29.974Z","duration":693.353783,"queued_duration":0.674782,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304796","artifacts":[{"file_type":"trace","size":622851,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":536304795,"status":"success","stage":"stage-2","name":"plugin:ci-rewriter","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:14.190Z","started_at":"2020-05-04T00:39:53.888Z","finished_at":"2020-05-04T00:54:21.315Z","duration":867.426819,"queued_duration":0.964217,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304795","artifacts":[{"file_type":"trace","size":218663,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":536304794,"status":"success","stage":"stage-2","name":"plugin:ci-relation_algebra","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:14.177Z","started_at":"2020-05-04T00:32:58.826Z","finished_at":"2020-05-04T00:39:11.987Z","duration":373.161718,"queued_duration":0.801193,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304794","artifacts":[{"file_type":"trace","size":55511,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":536304793,"status":"success","stage":"stage-2","name":"plugin:ci-reduction_effects","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:14.161Z","started_at":"2020-05-04T00:32:58.782Z","finished_at":"2020-05-04T00:36:00.600Z","duration":181.818512,"queued_duration":0.822172,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304793","artifacts":[{"file_type":"trace","size":31697,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":536304792,"status":"success","stage":"stage-2","name":"plugin:ci-quickchick","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:14.147Z","started_at":"2020-05-04T00:39:53.791Z","finished_at":"2020-05-04T00:43:56.326Z","duration":242.535264,"queued_duration":0.941263,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304792","artifacts":[{"file_type":"trace","size":810287,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":536304791,"status":"success","stage":"stage-2","name":"plugin:ci-perennial","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:14.132Z","started_at":"2020-05-04T00:39:53.714Z","finished_at":"2020-05-04T01:30:51.135Z","duration":3057.420786,"queued_duration":0.911998,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304791","artifacts":[{"file_type":"trace","size":38684,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":536304790,"status":"success","stage":"stage-2","name":"plugin:ci-paramcoq","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:14.116Z","started_at":"2020-05-04T00:32:58.720Z","finished_at":"2020-05-04T00:36:23.692Z","duration":204.971087,"queued_duration":0.818704,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304790","artifacts":[{"file_type":"trace","size":82503,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":536304789,"status":"success","stage":"stage-2","name":"plugin:ci-mtac2","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:14.098Z","started_at":"2020-05-04T00:32:58.674Z","finished_at":"2020-05-04T00:37:51.159Z","duration":292.484497,"queued_duration":0.825179,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304789","artifacts":[{"file_type":"trace","size":155084,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":536304788,"status":"success","stage":"stage-2","name":"plugin:ci-fiat_parsers","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:14.080Z","started_at":"2020-05-04T00:32:58.631Z","finished_at":"2020-05-04T00:52:21.965Z","duration":1163.334081,"queued_duration":0.834055,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304788","artifacts":[{"file_type":"trace","size":823123,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":536304787,"status":"failed","stage":"stage-2","name":"plugin:ci-equations","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:14.063Z","started_at":"2020-05-04T00:32:58.509Z","finished_at":"2020-05-04T00:36:02.212Z","duration":183.702172,"queued_duration":0.85496,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/536304787","artifacts":[{"file_type":"trace","size":25275,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":536304786,"status":"success","stage":"stage-2","name":"plugin:ci-elpi","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:14.048Z","started_at":"2020-05-04T00:32:58.464Z","finished_at":"2020-05-04T00:38:04.836Z","duration":306.372135,"queued_duration":0.866281,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304786","artifacts":[{"file_type":"trace","size":355112,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":536304785,"status":"success","stage":"stage-2","name":"plugin:ci-coqhammer","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:14.033Z","started_at":"2020-05-04T00:32:58.420Z","finished_at":"2020-05-04T00:36:06.648Z","duration":188.228251,"queued_duration":0.8906,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304785","artifacts":[{"file_type":"trace","size":39411,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":536304784,"status":"success","stage":"stage-2","name":"plugin:ci-coq_dpdgraph","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:14.019Z","started_at":"2020-05-04T00:32:58.359Z","finished_at":"2020-05-04T00:36:09.900Z","duration":191.54091,"queued_duration":0.881224,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304784","artifacts":[{"file_type":"trace","size":44178,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":536304783,"status":"success","stage":"stage-2","name":"plugin:ci-bignums","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:14.003Z","started_at":"2020-05-04T00:39:53.661Z","finished_at":"2020-05-04T00:44:55.814Z","duration":302.153067,"queued_duration":0.926286,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304783","artifacts":[{"file_type":"trace","size":64371,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":536304782,"status":"success","stage":"stage-2","name":"plugin:ci-aac_tactics","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:13.987Z","started_at":"2020-05-04T00:32:58.271Z","finished_at":"2020-05-04T00:36:06.761Z","duration":188.489372,"queued_duration":0.842318,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304782","artifacts":[{"file_type":"trace","size":50692,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":536304781,"status":"success","stage":"stage-2","name":"library:ci-verdi_raft","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:13.971Z","started_at":"2020-05-04T00:39:53.612Z","finished_at":"2020-05-04T01:11:50.814Z","duration":1917.201078,"queued_duration":0.927124,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304781","artifacts":[{"file_type":"trace","size":314869,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":536304780,"status":"success","stage":"stage-2","name":"library:ci-unimath","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:13.955Z","started_at":"2020-05-04T00:39:53.562Z","finished_at":"2020-05-04T01:59:52.186Z","duration":4798.623956,"queued_duration":1.071815,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304780","artifacts":[{"file_type":"trace","size":224452,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":536304778,"status":"success","stage":"stage-2","name":"library:ci-tlc","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:13.939Z","started_at":"2020-05-04T00:32:58.133Z","finished_at":"2020-05-04T00:37:34.552Z","duration":276.418435,"queued_duration":0.754897,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304778","artifacts":[{"file_type":"trace","size":154358,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":536304777,"status":"success","stage":"stage-2","name":"library:ci-stdlib2","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:13.922Z","started_at":"2020-05-04T00:39:53.514Z","finished_at":"2020-05-04T00:43:18.108Z","duration":204.594029,"queued_duration":1.077626,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304777","artifacts":[{"file_type":"trace","size":37263,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":536304776,"status":"success","stage":"stage-2","name":"library:ci-sf","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:13.907Z","started_at":"2020-05-04T00:32:58.089Z","finished_at":"2020-05-04T00:36:40.860Z","duration":222.770484,"queued_duration":0.760869,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304776","artifacts":[{"file_type":"trace","size":502069,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":536304775,"status":"success","stage":"stage-2","name":"library:ci-mathcomp","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:13.891Z","started_at":"2020-05-04T00:39:53.329Z","finished_at":"2020-05-04T02:00:34.614Z","duration":4841.285045,"queued_duration":0.95921,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304775","artifacts":[{"file_type":"trace","size":419239,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":536304774,"status":"success","stage":"stage-2","name":"library:ci-lambda_rust","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:13.874Z","started_at":"2020-05-04T00:39:53.289Z","finished_at":"2020-05-04T01:32:57.887Z","duration":3184.597577,"queued_duration":0.966906,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304774","artifacts":[{"file_type":"trace","size":329527,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":536304773,"status":"success","stage":"stage-2","name":"library:ci-hott","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:13.858Z","started_at":"2020-05-04T00:32:58.046Z","finished_at":"2020-05-04T00:44:00.410Z","duration":662.363899,"queued_duration":0.768854,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304773","artifacts":[{"file_type":"trace","size":130753,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":536304772,"status":"success","stage":"stage-2","name":"library:ci-geocoq","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:13.842Z","started_at":"2020-05-04T00:39:53.084Z","finished_at":"2020-05-04T01:16:49.300Z","duration":2216.216456,"queued_duration":0.820091,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304772","artifacts":[{"file_type":"trace","size":501703,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":536304771,"status":"success","stage":"stage-2","name":"library:ci-flocq","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:13.825Z","started_at":"2020-05-04T00:39:52.911Z","finished_at":"2020-05-04T00:46:43.218Z","duration":410.306662,"queued_duration":0.695182,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304771","artifacts":[{"file_type":"trace","size":124533,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":536304770,"status":"success","stage":"stage-2","name":"library:ci-fcsl_pcm","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:13.811Z","started_at":"2020-05-04T00:32:58.008Z","finished_at":"2020-05-04T00:37:30.937Z","duration":272.92899,"queued_duration":0.779981,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304770","artifacts":[{"file_type":"trace","size":147642,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":536304769,"status":"success","stage":"stage-2","name":"library:ci-cross_crypto","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:13.795Z","started_at":"2020-05-04T00:32:57.856Z","finished_at":"2020-05-04T01:06:47.157Z","duration":2029.301557,"queued_duration":0.677713,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304769","artifacts":[{"file_type":"trace","size":175905,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":536304768,"status":"success","stage":"stage-2","name":"library:ci-coquelicot","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:13.779Z","started_at":"2020-05-04T00:32:57.752Z","finished_at":"2020-05-04T00:37:37.010Z","duration":279.258526,"queued_duration":0.624547,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304768","artifacts":[{"file_type":"trace","size":383857,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":536304767,"status":"success","stage":"stage-2","name":"library:ci-coq_tools","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:13.759Z","started_at":"2020-05-04T00:32:57.705Z","finished_at":"2020-05-04T00:40:02.932Z","duration":425.227236,"queued_duration":0.627255,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304767","artifacts":[{"file_type":"trace","size":44067,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":536304766,"status":"success","stage":"stage-2","name":"library:ci-compcert","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:13.736Z","started_at":"2020-05-04T00:39:52.784Z","finished_at":"2020-05-04T01:01:22.242Z","duration":1289.457456,"queued_duration":0.620096,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304766","artifacts":[{"file_type":"trace","size":4194361,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":536304765,"status":"success","stage":"stage-2","name":"library:ci-bedrock2","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:13.717Z","started_at":"2020-05-04T00:39:52.648Z","finished_at":"2020-05-04T02:12:27.858Z","duration":5555.209928,"queued_duration":0.537095,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304765","artifacts":[{"file_type":"trace","size":486056,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":536304764,"status":"success","stage":"stage-2","name":"library:ci-bbv","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:13.700Z","started_at":"2020-05-04T00:32:57.575Z","finished_at":"2020-05-04T00:36:36.647Z","duration":219.072184,"queued_duration":0.556052,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304764","artifacts":[{"file_type":"trace","size":116822,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":536304763,"status":"success","stage":"stage-2","name":"library:ci-argosy","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:13.680Z","started_at":"2020-05-04T00:32:57.495Z","finished_at":"2020-05-04T00:37:04.721Z","duration":247.226469,"queued_duration":0.52923,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304763","artifacts":[{"file_type":"trace","size":141800,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":536304762,"status":"success","stage":"stage-2","name":"validate:quick","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:13.660Z","started_at":"2020-05-04T00:26:36.375Z","finished_at":"2020-05-04T00:31:23.010Z","duration":286.63535,"queued_duration":0.333182,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304762","artifacts":[{"file_type":"trace","size":70614,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-07-03T00:31:20.981Z","tag_list":[]}
{"id":536304761,"status":"success","stage":"stage-2","name":"validate:edge+flambda","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:13.644Z","started_at":"2020-05-04T00:39:52.582Z","finished_at":"2020-05-04T00:44:32.227Z","duration":279.644293,"queued_duration":0.519303,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304761","artifacts":[{"file_type":"trace","size":71290,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-07-03T00:44:30.879Z","tag_list":[]}
{"id":536304760,"status":"success","stage":"stage-2","name":"validate:base+32bit","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:13.627Z","started_at":"2020-05-04T00:22:59.302Z","finished_at":"2020-05-04T00:27:38.634Z","duration":279.332517,"queued_duration":0.306763,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304760","artifacts":[{"file_type":"trace","size":69307,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-07-03T00:27:37.313Z","tag_list":[]}
{"id":536304759,"status":"success","stage":"stage-2","name":"validate:base","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:13.611Z","started_at":"2020-05-04T00:32:57.449Z","finished_at":"2020-05-04T00:37:59.707Z","duration":302.257191,"queued_duration":0.536017,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304759","artifacts":[{"file_type":"trace","size":70610,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-07-03T00:37:58.420Z","tag_list":[]}
{"id":536304758,"status":"success","stage":"stage-2","name":"test-suite:base+async","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-05-04T00:14:13.594Z","started_at":"2020-05-04T00:32:57.306Z","finished_at":"2020-05-04T01:06:10.075Z","duration":1992.768794,"queued_duration":0.44402,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304758","artifacts":[{"file_type":"trace","size":97137,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":536304757,"status":"success","stage":"stage-2","name":"test-suite:edge:dune:dev","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:13.579Z","started_at":"2020-05-04T00:35:07.862Z","finished_at":"2020-05-04T00:53:15.128Z","duration":1087.265671,"queued_duration":1.360929,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304757","artifacts":[{"file_type":"trace","size":322643,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":536304756,"status":"success","stage":"stage-2","name":"test-suite:edge+flambda","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:13.562Z","started_at":"2020-05-04T00:39:52.440Z","finished_at":"2020-05-04T00:52:23.812Z","duration":751.371765,"queued_duration":0.429199,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304756","artifacts":[{"file_type":"trace","size":99648,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":536304755,"status":"success","stage":"stage-2","name":"test-suite:base+32bit","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:13.545Z","started_at":"2020-05-04T00:22:59.079Z","finished_at":"2020-05-04T00:33:12.567Z","duration":613.488089,"queued_duration":0.134195,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304755","artifacts":[{"file_type":"trace","size":264847,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":536304754,"status":"success","stage":"stage-2","name":"test-suite:base","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:13.527Z","started_at":"2020-05-04T00:32:57.043Z","finished_at":"2020-05-04T00:45:10.124Z","duration":733.081219,"queued_duration":0.237155,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304754","artifacts":[{"file_type":"trace","size":97654,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":536304753,"status":"success","stage":"stage-2","name":"doc:ml-api:odoc","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:13.510Z","started_at":"2020-05-04T00:35:07.523Z","finished_at":"2020-05-04T00:37:09.318Z","duration":121.794764,"queued_duration":1.071048,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304753","artifacts":[{"file_type":"trace","size":108926,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-07-03T00:37:07.719Z","tag_list":[]}
{"id":536304752,"status":"success","stage":"stage-2","name":"doc:stdlib:dune","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:13.491Z","started_at":"2020-05-04T00:35:07.122Z","finished_at":"2020-05-04T00:37:10.950Z","duration":123.828313,"queued_duration":0.719258,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304752","artifacts":[{"file_type":"trace","size":110096,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-07-03T00:37:09.224Z","tag_list":[]}
{"id":536304751,"status":"success","stage":"stage-2","name":"doc:refman-pdf:dune","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:13.474Z","started_at":"2020-05-04T00:35:06.762Z","finished_at":"2020-05-04T00:42:24.365Z","duration":437.603642,"queued_duration":0.41109,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304751","artifacts":[{"file_type":"trace","size":108973,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-07-03T00:42:22.142Z","tag_list":[]}
{"id":536304750,"status":"success","stage":"stage-2","name":"doc:refman:dune","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:13.457Z","started_at":"2020-05-04T00:35:06.694Z","finished_at":"2020-05-04T00:38:51.731Z","duration":225.03759,"queued_duration":0.394761,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304750","artifacts":[{"file_type":"trace","size":176816,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-07-03T00:38:50.190Z","tag_list":[]}
{"id":536304749,"status":"success","stage":"stage-2","name":"doc:refman","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:13.438Z","started_at":"2020-05-04T00:32:56.979Z","finished_at":"2020-05-04T00:40:50.357Z","duration":473.377364,"queued_duration":0.223953,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304749","artifacts":[{"file_type":"trace","size":1576487,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-07-03T00:40:48.904Z","tag_list":[]}
{"id":536304748,"status":"success","stage":"stage-1","name":"plugin:plugin-tutorial","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:13.408Z","started_at":"2020-05-04T00:14:16.412Z","finished_at":"2020-05-04T00:16:02.432Z","duration":106.02009,"queued_duration":1.603468,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304748","artifacts":[{"file_type":"trace","size":90647,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":536304747,"status":"success","stage":"stage-1","name":"test-suite:edge+4.11+trunk+dune","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-05-04T00:14:13.392Z","started_at":"2020-05-04T00:14:16.372Z","finished_at":"2020-05-04T00:58:21.366Z","duration":2644.993885,"queued_duration":1.583869,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304747","artifacts":[{"file_type":"trace","size":99556,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-18T00:58:19.996Z","tag_list":[]}
{"id":536304746,"status":"success","stage":"stage-1","name":"pkg:nix","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:13.375Z","started_at":"2020-05-04T00:14:16.331Z","finished_at":"2020-05-04T00:58:08.984Z","duration":2632.653281,"queued_duration":1.562411,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304746","artifacts":[{"file_type":"trace","size":584213,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":536304745,"status":"success","stage":"stage-1","name":"pkg:opam","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:13.327Z","started_at":"2020-05-04T00:14:16.231Z","finished_at":"2020-05-04T00:40:02.938Z","duration":1546.707323,"queued_duration":1.483379,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304745","artifacts":[{"file_type":"trace","size":22058,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":536304744,"status":"success","stage":"stage-1","name":"lint","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:13.308Z","started_at":"2020-05-04T00:14:16.017Z","finished_at":"2020-05-04T00:17:06.511Z","duration":170.494049,"queued_duration":1.295276,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304744","artifacts":[{"file_type":"trace","size":51973,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":536304743,"status":"success","stage":"stage-1","name":"windows64","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:13.279Z","started_at":"2020-05-04T00:14:15.073Z","finished_at":"2020-05-04T01:10:46.233Z","duration":3391.159816,"queued_duration":0.371057,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304743","artifacts":[{"file_type":"trace","size":240273,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-05-11T01:10:44.978Z","tag_list":["windows-inria"]}
{"id":536304742,"status":"success","stage":"stage-1","name":"build:quick","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-05-04T00:14:13.262Z","started_at":"2020-05-04T00:14:15.676Z","finished_at":"2020-05-04T00:26:35.934Z","duration":740.258119,"queued_duration":0.995406,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304742","artifacts":[{"file_type":"trace","size":228371,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-05-11T00:26:34.123Z","tag_list":[]}
{"id":536304741,"status":"success","stage":"stage-1","name":"build:base+async","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-05-04T00:14:13.243Z","started_at":"2020-05-04T00:14:15.468Z","finished_at":"2020-05-04T01:19:43.580Z","duration":3928.112082,"queued_duration":0.809036,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304741","artifacts":[{"file_type":"trace","size":280482,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-11T01:19:42.106Z","tag_list":[]}
{"id":536304740,"status":"success","stage":"stage-1","name":"build:edge+flambda:dune:dev","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:13.227Z","started_at":"2020-05-04T00:14:15.387Z","finished_at":"2020-05-04T00:35:06.188Z","duration":1250.801415,"queued_duration":0.746455,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304740","artifacts":[{"file_type":"trace","size":21261,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-11T00:35:04.590Z","tag_list":[]}
{"id":536304739,"status":"success","stage":"stage-1","name":"build:edge+flambda","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:13.210Z","started_at":"2020-05-04T00:14:15.197Z","finished_at":"2020-05-04T00:39:51.900Z","duration":1536.703419,"queued_duration":0.57675,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304739","artifacts":[{"file_type":"trace","size":281347,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-11T00:39:50.164Z","tag_list":[]}
{"id":536304738,"status":"success","stage":"stage-1","name":"build:base+32bit","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:13.194Z","started_at":"2020-05-04T00:14:14.996Z","finished_at":"2020-05-04T00:22:58.818Z","duration":523.822736,"queued_duration":0.39372,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304738","artifacts":[{"file_type":"trace","size":275654,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-05-11T00:22:56.736Z","tag_list":[]}
{"id":536304737,"status":"success","stage":"stage-1","name":"build:base","ref":"pr-11836","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-04T00:14:13.176Z","started_at":"2020-05-04T00:14:14.957Z","finished_at":"2020-05-04T00:32:56.650Z","duration":1121.6934,"queued_duration":0.373043,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","short_id":"d77640e9","created_at":"2020-05-04T02:13:15.000+02:00","parent_ids":["a8219d451cad24fc40fdbaaf06c0d305d1b0d29b"],"title":"[obligations] Functionalize Program state","message":"[obligations] Functionalize Program state\n\nIn our quest to unify all the declaration paths, an important step\nis to account for the state pertaining to `Program` declarations.\n\nWhereas regular proofs keep are kept in a stack-like structure;\nobligations for constants defined by `Program` are stored in a global\nmap which is manipulated by almost regular open/close proof primitives.\n\nWe make this manipulation explicit by handling the program state\nfunctionally, in a similar way than we already do for lemmas.\n\nThis requires to extend the proof DSL a bit; but IMO changes are\nacceptable given the gain.\n\nMost of the PR is routine; only remarkable change is that the hook is\ncalled explicitly in `finish_admitted` as it had to learn about the\ndifferent types of proof_endings.\n\nNote that we could have gone deeper and use the type system to refine\nthe core proof type; IMO it is still too preliminary so it is better\nto do this step as an intermediate one towards a deeper unification.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-03-15T17:52:16.000-04:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-04T02:13:15.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d77640e9ac6fe24cd2cc3f109607e08cce56189e"},"pipeline":{"id":142221688,"iid":15813,"project_id":6138686,"sha":"d77640e9ac6fe24cd2cc3f109607e08cce56189e","ref":"pr-11836","status":"failed","source":"push","created_at":"2020-05-04T00:14:13.153Z","updated_at":"2020-05-04T03:04:59.989Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/142221688"},"web_url":"https://gitlab.com/coq/coq/-/jobs/536304737","artifacts":[{"file_type":"trace","size":312357,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-11T00:32:54.546Z","tag_list":[]}
