{"id":584891689,"status":"success","stage":"stage-5","name":"library:ci-fiat_crypto_ocaml","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:01.368Z","started_at":"2020-06-07T22:59:53.924Z","finished_at":"2020-06-07T23:10:33.248Z","duration":639.324558,"queued_duration":0.350508,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891689","artifacts":[{"file_type":"trace","size":131180,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":584891688,"status":"success","stage":"stage-4","name":"library:ci-corn","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:01.348Z","started_at":"2020-06-07T21:24:06.020Z","finished_at":"2020-06-07T21:58:41.320Z","duration":2075.29987,"queued_duration":1.423722,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891688","artifacts":[{"file_type":"trace","size":452106,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584891687,"status":"success","stage":"stage-4","name":"library:ci-fiat_crypto","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:01.326Z","started_at":"2020-06-07T21:24:49.562Z","finished_at":"2020-06-07T22:59:53.431Z","duration":5703.869355,"queued_duration":0.591613,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891687","artifacts":[{"file_type":"trace","size":2266301,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584891686,"status":"success","stage":"stage-3","name":"plugin:ci-metacoq","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:01.305Z","started_at":"2020-06-07T21:06:56.657Z","finished_at":"2020-06-07T21:34:59.603Z","duration":1682.946656,"queued_duration":0.482099,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891686","artifacts":[{"file_type":"trace","size":301957,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584891685,"status":"success","stage":"stage-3","name":"library:ci-vst","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:01.288Z","started_at":"2020-06-07T21:17:48.709Z","finished_at":"2020-06-07T22:10:53.456Z","duration":3184.747195,"queued_duration":0.377712,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891685","artifacts":[{"file_type":"trace","size":621219,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":584891684,"status":"success","stage":"stage-3","name":"library:ci-math_classes","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:01.271Z","started_at":"2020-06-07T21:15:45.594Z","finished_at":"2020-06-07T21:24:04.460Z","duration":498.866346,"queued_duration":1.369404,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891684","artifacts":[{"file_type":"trace","size":180435,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584891683,"status":"success","stage":"stage-3","name":"library:ci-coqprime","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:01.255Z","started_at":"2020-06-07T21:15:45.401Z","finished_at":"2020-06-07T21:20:59.404Z","duration":314.003788,"queued_duration":1.23116,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891683","artifacts":[{"file_type":"trace","size":105520,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584891682,"status":"success","stage":"stage-3","name":"library:ci-color","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:01.236Z","started_at":"2020-06-07T21:15:45.143Z","finished_at":"2020-06-07T21:34:14.767Z","duration":1109.623483,"queued_duration":1.024501,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891682","artifacts":[{"file_type":"trace","size":596484,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584891681,"status":"success","stage":"stage-2","name":"plugin:ci-rewriter","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:01.213Z","started_at":"2020-06-07T21:10:45.927Z","finished_at":"2020-06-07T21:24:48.824Z","duration":842.896977,"queued_duration":2.232679,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891681","artifacts":[{"file_type":"trace","size":220374,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584891680,"status":"success","stage":"stage-2","name":"plugin:ci-relation_algebra","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:01.197Z","started_at":"2020-06-07T20:58:18.727Z","finished_at":"2020-06-07T21:04:39.627Z","duration":380.90002,"queued_duration":1.393041,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891680","artifacts":[{"file_type":"trace","size":56255,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584891679,"status":"success","stage":"stage-2","name":"plugin:ci-reduction_effects","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:01.177Z","started_at":"2020-06-07T20:58:18.690Z","finished_at":"2020-06-07T21:01:42.062Z","duration":203.371569,"queued_duration":1.411298,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891679","artifacts":[{"file_type":"trace","size":30588,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584891677,"status":"success","stage":"stage-2","name":"plugin:ci-quickchick","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:01.159Z","started_at":"2020-06-07T21:10:45.849Z","finished_at":"2020-06-07T21:16:16.280Z","duration":330.430691,"queued_duration":2.207217,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891677","artifacts":[{"file_type":"trace","size":351998,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":584891675,"status":"success","stage":"stage-2","name":"plugin:ci-perennial","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:01.138Z","started_at":"2020-06-07T21:10:45.808Z","finished_at":"2020-06-07T22:18:57.833Z","duration":4092.024434,"queued_duration":2.217652,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891675","artifacts":[{"file_type":"trace","size":38917,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584891674,"status":"success","stage":"stage-2","name":"plugin:ci-paramcoq","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:01.123Z","started_at":"2020-06-07T20:58:18.647Z","finished_at":"2020-06-07T20:59:37.017Z","duration":78.370281,"queued_duration":1.417054,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891674","artifacts":[{"file_type":"trace","size":116388,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":584891672,"status":"failed","stage":"stage-2","name":"plugin:ci-mtac2","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:01.108Z","started_at":"2020-06-07T20:58:18.608Z","finished_at":"2020-06-07T21:01:21.091Z","duration":182.482833,"queued_duration":1.426995,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/584891672","artifacts":[{"file_type":"trace","size":46419,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584891670,"status":"success","stage":"stage-2","name":"plugin:ci-fiat_parsers","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:01.092Z","started_at":"2020-06-07T20:58:18.567Z","finished_at":"2020-06-07T21:21:23.358Z","duration":1384.790444,"queued_duration":1.436429,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891670","artifacts":[{"file_type":"trace","size":822755,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584891668,"status":"success","stage":"stage-2","name":"plugin:ci-equations","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:01.079Z","started_at":"2020-06-07T20:58:18.531Z","finished_at":"2020-06-07T21:06:56.046Z","duration":517.514647,"queued_duration":1.447843,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891668","artifacts":[{"file_type":"trace","size":134047,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584891666,"status":"success","stage":"stage-2","name":"plugin:ci-elpi","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:01.062Z","started_at":"2020-06-07T20:58:18.489Z","finished_at":"2020-06-07T21:05:42.354Z","duration":443.865281,"queued_duration":1.457398,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891666","artifacts":[{"file_type":"trace","size":312222,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584891665,"status":"success","stage":"stage-2","name":"plugin:ci-coqhammer","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:01.047Z","started_at":"2020-06-07T20:58:18.446Z","finished_at":"2020-06-07T21:01:31.965Z","duration":193.518919,"queued_duration":1.468761,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891665","artifacts":[{"file_type":"trace","size":44016,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584891664,"status":"success","stage":"stage-2","name":"plugin:ci-coq_dpdgraph","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:01.031Z","started_at":"2020-06-07T20:58:18.282Z","finished_at":"2020-06-07T21:01:32.654Z","duration":194.371129,"queued_duration":1.355805,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891664","artifacts":[{"file_type":"trace","size":42989,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584891663,"status":"success","stage":"stage-2","name":"plugin:ci-bignums","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:01.015Z","started_at":"2020-06-07T21:10:45.766Z","finished_at":"2020-06-07T21:15:43.987Z","duration":298.220131,"queued_duration":2.238989,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891663","artifacts":[{"file_type":"trace","size":63052,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584891662,"status":"success","stage":"stage-2","name":"plugin:ci-aac_tactics","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:01.000Z","started_at":"2020-06-07T20:58:18.245Z","finished_at":"2020-06-07T21:01:25.705Z","duration":187.459682,"queued_duration":1.482429,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891662","artifacts":[{"file_type":"trace","size":49458,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584891661,"status":"success","stage":"stage-2","name":"library:ci-verdi_raft","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:00.984Z","started_at":"2020-06-07T21:10:45.724Z","finished_at":"2020-06-07T21:41:13.565Z","duration":1827.840737,"queued_duration":2.387342,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891661","artifacts":[{"file_type":"trace","size":315389,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584891660,"status":"success","stage":"stage-2","name":"library:ci-unimath","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:00.969Z","started_at":"2020-06-07T21:10:45.683Z","finished_at":"2020-06-07T22:19:50.567Z","duration":4144.884737,"queued_duration":2.398923,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891660","artifacts":[{"file_type":"trace","size":222542,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584891659,"status":"success","stage":"stage-2","name":"library:ci-tlc","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:00.955Z","started_at":"2020-06-07T20:58:18.056Z","finished_at":"2020-06-07T21:03:08.825Z","duration":290.768795,"queued_duration":1.35037,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891659","artifacts":[{"file_type":"trace","size":152727,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584891658,"status":"success","stage":"stage-2","name":"library:ci-stdlib2","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:00.939Z","started_at":"2020-06-07T21:10:45.581Z","finished_at":"2020-06-07T21:14:03.621Z","duration":198.039418,"queued_duration":2.350725,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891658","artifacts":[{"file_type":"trace","size":36172,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584891657,"status":"success","stage":"stage-2","name":"library:ci-sf","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:00.924Z","started_at":"2020-06-07T20:58:18.011Z","finished_at":"2020-06-07T21:03:31.173Z","duration":313.161747,"queued_duration":1.361122,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891657","artifacts":[{"file_type":"trace","size":513499,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584891656,"status":"success","stage":"stage-2","name":"library:ci-mathcomp","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:00.910Z","started_at":"2020-06-07T21:10:45.438Z","finished_at":"2020-06-07T22:31:08.238Z","duration":4822.799792,"queued_duration":2.258155,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891656","artifacts":[{"file_type":"trace","size":418321,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584891655,"status":"success","stage":"stage-2","name":"library:ci-lambda_rust","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:00.893Z","started_at":"2020-06-07T21:10:45.194Z","finished_at":"2020-06-07T21:59:35.433Z","duration":2930.23902,"queued_duration":2.074816,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891655","artifacts":[{"file_type":"trace","size":328238,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584891654,"status":"success","stage":"stage-2","name":"library:ci-hott","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:00.876Z","started_at":"2020-06-07T20:58:17.975Z","finished_at":"2020-06-07T21:09:04.508Z","duration":646.533403,"queued_duration":1.39731,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891654","artifacts":[{"file_type":"trace","size":130926,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584891653,"status":"success","stage":"stage-2","name":"library:ci-geocoq","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:00.856Z","started_at":"2020-06-07T21:10:45.117Z","finished_at":"2020-06-07T21:47:28.285Z","duration":2203.168047,"queued_duration":2.04967,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891653","artifacts":[{"file_type":"trace","size":500276,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584891652,"status":"success","stage":"stage-2","name":"library:ci-flocq","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:00.837Z","started_at":"2020-06-07T21:10:45.031Z","finished_at":"2020-06-07T21:17:48.181Z","duration":423.150811,"queued_duration":2.01722,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891652","artifacts":[{"file_type":"trace","size":123296,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584891651,"status":"success","stage":"stage-2","name":"library:ci-fcsl_pcm","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:00.823Z","started_at":"2020-06-07T20:58:17.916Z","finished_at":"2020-06-07T21:02:55.997Z","duration":278.080971,"queued_duration":1.393537,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891651","artifacts":[{"file_type":"trace","size":146478,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584891650,"status":"success","stage":"stage-2","name":"library:ci-engine_bench","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:00.807Z","started_at":"2020-06-07T20:58:17.874Z","finished_at":"2020-06-07T21:18:08.275Z","duration":1190.400814,"queued_duration":1.410992,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891650","artifacts":[{"file_type":"trace","size":167104,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584891649,"status":"success","stage":"stage-2","name":"library:ci-cross_crypto","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:00.790Z","started_at":"2020-06-07T20:58:17.599Z","finished_at":"2020-06-07T21:31:33.488Z","duration":1995.889597,"queued_duration":1.192526,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891649","artifacts":[{"file_type":"trace","size":175853,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584891648,"status":"success","stage":"stage-2","name":"library:ci-coquelicot","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:00.774Z","started_at":"2020-06-07T20:58:17.556Z","finished_at":"2020-06-07T21:04:07.509Z","duration":349.952924,"queued_duration":1.202263,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891648","artifacts":[{"file_type":"trace","size":184343,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584891647,"status":"success","stage":"stage-2","name":"library:ci-coq_tools","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:00.759Z","started_at":"2020-06-07T20:58:17.516Z","finished_at":"2020-06-07T21:06:01.936Z","duration":464.420274,"queued_duration":1.213085,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891647","artifacts":[{"file_type":"trace","size":42436,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584891646,"status":"success","stage":"stage-2","name":"library:ci-compcert","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:00.744Z","started_at":"2020-06-07T21:10:44.992Z","finished_at":"2020-06-07T21:34:14.749Z","duration":1409.757148,"queued_duration":2.036938,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891646","artifacts":[{"file_type":"trace","size":4194361,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584891645,"status":"success","stage":"stage-2","name":"library:ci-bedrock2","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:00.728Z","started_at":"2020-06-07T21:10:44.888Z","finished_at":"2020-06-07T22:38:02.254Z","duration":5237.365706,"queued_duration":1.989259,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891645","artifacts":[{"file_type":"trace","size":476935,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584891644,"status":"success","stage":"stage-2","name":"library:ci-bbv","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:00.713Z","started_at":"2020-06-07T20:58:17.388Z","finished_at":"2020-06-07T21:02:02.622Z","duration":225.233398,"queued_duration":1.137382,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891644","artifacts":[{"file_type":"trace","size":115308,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584891643,"status":"success","stage":"stage-2","name":"library:ci-argosy","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:00.688Z","started_at":"2020-06-07T20:58:17.326Z","finished_at":"2020-06-07T21:02:49.556Z","duration":272.229909,"queued_duration":1.123081,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891643","artifacts":[{"file_type":"trace","size":140109,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584891642,"status":"success","stage":"stage-2","name":"validate:quick","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:00.673Z","started_at":"2020-06-07T21:00:04.273Z","finished_at":"2020-06-07T21:04:50.817Z","duration":286.544597,"queued_duration":0.407427,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891642","artifacts":[{"file_type":"trace","size":70412,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-08-06T21:04:49.448Z","tag_list":[]}
{"id":584891641,"status":"success","stage":"stage-2","name":"validate:edge+flambda","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:00.657Z","started_at":"2020-06-07T21:10:44.766Z","finished_at":"2020-06-07T21:15:26.047Z","duration":281.281327,"queued_duration":1.918866,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891641","artifacts":[{"file_type":"trace","size":70832,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-08-06T21:15:24.686Z","tag_list":[]}
{"id":584891640,"status":"success","stage":"stage-2","name":"validate:base+32bit","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:00.640Z","started_at":"2020-06-07T20:56:02.158Z","finished_at":"2020-06-07T21:01:00.713Z","duration":298.554592,"queued_duration":0.515088,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891640","artifacts":[{"file_type":"trace","size":68787,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-08-06T21:00:59.102Z","tag_list":[]}
{"id":584891639,"status":"success","stage":"stage-2","name":"validate:base","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:00.623Z","started_at":"2020-06-07T20:58:16.910Z","finished_at":"2020-06-07T21:03:15.166Z","duration":298.255993,"queued_duration":0.75247,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891639","artifacts":[{"file_type":"trace","size":70472,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-08-06T21:03:13.858Z","tag_list":[]}
{"id":584891638,"status":"failed","stage":"stage-2","name":"test-suite:base+async","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-06-07T20:38:00.606Z","started_at":"2020-06-07T20:58:16.690Z","finished_at":"2020-06-07T22:38:17.138Z","duration":6000.447975,"queued_duration":0.580192,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"failure_reason":"job_execution_timeout","web_url":"https://gitlab.com/coq/coq/-/jobs/584891638","artifacts":[{"file_type":"trace","size":98519,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584891637,"status":"success","stage":"stage-2","name":"test-suite:edge:dune:dev","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:00.590Z","started_at":"2020-06-07T20:59:09.174Z","finished_at":"2020-06-07T21:23:08.160Z","duration":1438.986797,"queued_duration":1.020059,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891637","artifacts":[{"file_type":"trace","size":98404,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584891636,"status":"success","stage":"stage-2","name":"test-suite:edge+flambda","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:00.576Z","started_at":"2020-06-07T21:10:44.522Z","finished_at":"2020-06-07T21:37:59.595Z","duration":1635.073184,"queued_duration":1.726778,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891636","artifacts":[{"file_type":"trace","size":98712,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584891635,"status":"success","stage":"stage-2","name":"test-suite:base+32bit","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:00.563Z","started_at":"2020-06-07T20:56:01.946Z","finished_at":"2020-06-07T21:17:41.772Z","duration":1299.826163,"queued_duration":0.357012,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891635","artifacts":[{"file_type":"trace","size":96730,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584891634,"status":"success","stage":"stage-2","name":"test-suite:base","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:00.546Z","started_at":"2020-06-07T20:58:16.593Z","finished_at":"2020-06-07T21:20:08.107Z","duration":1311.513925,"queued_duration":0.532078,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891634","artifacts":[{"file_type":"trace","size":98352,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584891633,"status":"success","stage":"stage-2","name":"doc:ml-api:odoc","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:00.529Z","started_at":"2020-06-07T20:59:09.133Z","finished_at":"2020-06-07T21:03:57.458Z","duration":288.325491,"queued_duration":1.03877,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891633","artifacts":[{"file_type":"trace","size":77878,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-08-06T21:03:56.142Z","tag_list":[]}
{"id":584891632,"status":"success","stage":"stage-2","name":"doc:stdlib:dune","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:00.513Z","started_at":"2020-06-07T20:59:08.842Z","finished_at":"2020-06-07T21:03:16.591Z","duration":247.749446,"queued_duration":0.813088,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891632","artifacts":[{"file_type":"trace","size":81050,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-08-06T21:03:14.858Z","tag_list":[]}
{"id":584891631,"status":"success","stage":"stage-2","name":"doc:refman-pdf:dune","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:00.499Z","started_at":"2020-06-07T20:59:08.630Z","finished_at":"2020-06-07T21:07:21.534Z","duration":492.903696,"queued_duration":0.65952,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891631","artifacts":[{"file_type":"trace","size":21746,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-08-06T21:07:20.438Z","tag_list":[]}
{"id":584891630,"status":"success","stage":"stage-2","name":"doc:refman:dune","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:00.484Z","started_at":"2020-06-07T20:59:08.194Z","finished_at":"2020-06-07T21:03:19.665Z","duration":251.47113,"queued_duration":0.284273,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891630","artifacts":[{"file_type":"trace","size":22948,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-08-06T21:03:17.481Z","tag_list":[]}
{"id":584891629,"status":"success","stage":"stage-2","name":"doc:refman","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:00.468Z","started_at":"2020-06-07T20:58:16.538Z","finished_at":"2020-06-07T21:06:34.352Z","duration":497.814457,"queued_duration":0.5269,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891629","artifacts":[{"file_type":"trace","size":40136,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-08-06T21:06:32.921Z","tag_list":[]}
{"id":584891628,"status":"success","stage":"stage-1","name":"plugin:plugin-tutorial","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:00.443Z","started_at":"2020-06-07T20:38:03.112Z","finished_at":"2020-06-07T20:42:38.110Z","duration":274.997792,"queued_duration":1.365354,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891628","artifacts":[{"file_type":"trace","size":59541,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584891626,"status":"success","stage":"stage-1","name":"test-suite:edge+4.11+trunk+dune","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-06-07T20:38:00.427Z","started_at":"2020-06-07T20:38:03.022Z","finished_at":"2020-06-07T21:26:59.534Z","duration":2936.511575,"queued_duration":1.293869,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891626","artifacts":[{"file_type":"trace","size":100542,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-06-21T21:26:58.146Z","tag_list":[]}
{"id":584891625,"status":"success","stage":"stage-1","name":"pkg:nix","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:00.411Z","started_at":"2020-06-07T20:38:02.854Z","finished_at":"2020-06-07T21:25:41.527Z","duration":2858.672559,"queued_duration":1.144711,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891625","artifacts":[{"file_type":"trace","size":593056,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584891624,"status":"success","stage":"stage-1","name":"pkg:opam","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:00.396Z","started_at":"2020-06-07T20:38:02.772Z","finished_at":"2020-06-07T21:06:58.510Z","duration":1735.738656,"queued_duration":1.080778,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891624","artifacts":[{"file_type":"trace","size":21057,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584891623,"status":"success","stage":"stage-1","name":"lint","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:00.383Z","started_at":"2020-06-07T20:38:02.731Z","finished_at":"2020-06-07T20:43:25.342Z","duration":322.610408,"queued_duration":1.056801,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891623","artifacts":[{"file_type":"trace","size":38022,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":584891622,"status":"success","stage":"stage-1","name":"windows64","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:00.363Z","started_at":"2020-06-07T20:38:02.098Z","finished_at":"2020-06-07T21:33:27.369Z","duration":3325.27028,"queued_duration":0.441612,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891622","artifacts":[{"file_type":"trace","size":240121,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-06-14T21:33:26.275Z","tag_list":["windows-inria"]}
{"id":584891621,"status":"success","stage":"stage-1","name":"build:quick","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-06-07T20:38:00.344Z","started_at":"2020-06-07T20:38:02.692Z","finished_at":"2020-06-07T21:00:03.726Z","duration":1321.033957,"queued_duration":1.054209,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891621","artifacts":[{"file_type":"trace","size":201888,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-06-14T21:00:01.866Z","tag_list":[]}
{"id":584891620,"status":"success","stage":"stage-1","name":"build:base+async","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-06-07T20:38:00.329Z","started_at":"2020-06-07T20:38:02.319Z","finished_at":"2020-06-07T21:59:42.085Z","duration":4899.765775,"queued_duration":0.699477,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891620","artifacts":[{"file_type":"trace","size":286929,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-06-14T21:59:40.148Z","tag_list":[]}
{"id":584891619,"status":"success","stage":"stage-1","name":"build:edge+flambda:dune:dev","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:00.310Z","started_at":"2020-06-07T20:38:02.162Z","finished_at":"2020-06-07T20:59:07.777Z","duration":1265.615709,"queued_duration":0.558571,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891619","artifacts":[{"file_type":"trace","size":20549,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-06-14T20:59:06.211Z","tag_list":[]}
{"id":584891618,"status":"success","stage":"stage-1","name":"build:edge+flambda","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:00.290Z","started_at":"2020-06-07T20:38:02.091Z","finished_at":"2020-06-07T21:10:42.662Z","duration":1960.570943,"queued_duration":0.505958,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891618","artifacts":[{"file_type":"trace","size":287475,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-06-14T21:10:40.094Z","tag_list":[]}
{"id":584891617,"status":"success","stage":"stage-1","name":"build:base+32bit","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:00.272Z","started_at":"2020-06-07T20:38:02.045Z","finished_at":"2020-06-07T20:56:01.458Z","duration":1079.413336,"queued_duration":0.478084,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891617","artifacts":[{"file_type":"trace","size":279779,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-06-14T20:56:00.277Z","tag_list":[]}
{"id":584891616,"status":"success","stage":"stage-1","name":"build:base","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-07T20:38:00.249Z","started_at":"2020-06-07T20:38:02.002Z","finished_at":"2020-06-07T20:58:15.883Z","duration":1213.880104,"queued_duration":0.453578,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","short_id":"09a838dc","created_at":"2020-06-07T16:37:43.000-04:00","parent_ids":["aad87d7e7d7b68b13e33f58b8d5b5a6f824d3f38"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-07T16:37:43.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/09a838dce8ea8359c81302ec0cf652e4fc2c1da0"},"pipeline":{"id":153764350,"iid":16674,"project_id":6138686,"sha":"09a838dce8ea8359c81302ec0cf652e4fc2c1da0","ref":"pr-12479","status":"failed","source":"push","created_at":"2020-06-07T20:38:00.227Z","updated_at":"2020-06-07T23:10:33.361Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/153764350"},"web_url":"https://gitlab.com/coq/coq/-/jobs/584891616","artifacts":[{"file_type":"trace","size":312659,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-06-14T20:58:14.470Z","tag_list":[]}
