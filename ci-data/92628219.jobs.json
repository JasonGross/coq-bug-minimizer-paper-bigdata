{"id":337641984,"status":"skipped","stage":"stage-4","name":"library:ci-corn","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T16:53:33.109Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337641984","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337641983,"status":"skipped","stage":"stage-3","name":"library:ci-math-classes","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T16:53:33.085Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337641983","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337641982,"status":"skipped","stage":"stage-3","name":"library:ci-color","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T16:53:33.057Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337641982","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337641981,"status":"skipped","stage":"stage-2","name":"plugin:ci-relation_algebra","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T16:53:33.034Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337641981","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337641980,"status":"skipped","stage":"stage-2","name":"plugin:ci-quickchick","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T16:53:33.013Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337641980","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337641979,"status":"skipped","stage":"stage-2","name":"plugin:ci-perennial","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T16:53:32.995Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337641979","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337641978,"status":"skipped","stage":"stage-2","name":"plugin:ci-paramcoq","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T16:53:32.978Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337641978","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337641977,"status":"skipped","stage":"stage-2","name":"plugin:ci-mtac2","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T16:53:32.960Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337641977","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337641976,"status":"skipped","stage":"stage-2","name":"plugin:ci-fiat_parsers","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T16:53:32.944Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337641976","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337641974,"status":"skipped","stage":"stage-2","name":"plugin:ci-equations","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T16:53:32.928Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337641974","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337641973,"status":"skipped","stage":"stage-2","name":"plugin:ci-elpi","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T16:53:32.911Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337641973","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337641972,"status":"skipped","stage":"stage-2","name":"plugin:ci-coqhammer","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T16:53:32.893Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337641972","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337641971,"status":"skipped","stage":"stage-2","name":"plugin:ci-coq_dpdgraph","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T16:53:32.875Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337641971","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337641970,"status":"skipped","stage":"stage-2","name":"plugin:ci-bignums","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T16:53:32.853Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337641970","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337641969,"status":"skipped","stage":"stage-2","name":"plugin:ci-aac_tactics","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T16:53:32.835Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337641969","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337641968,"status":"skipped","stage":"stage-2","name":"library:ci-vst","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T16:53:32.814Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337641968","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337641967,"status":"skipped","stage":"stage-2","name":"library:ci-verdi-raft","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T16:53:32.793Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337641967","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337641966,"status":"skipped","stage":"stage-2","name":"library:ci-unimath","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T16:53:32.773Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337641966","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337641965,"status":"skipped","stage":"stage-2","name":"library:ci-stdlib2","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T16:53:32.754Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337641965","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337641964,"status":"skipped","stage":"stage-2","name":"library:ci-sf","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-10-30T16:53:32.733Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337641964","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337641963,"status":"skipped","stage":"stage-2","name":"library:ci-math-comp","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T16:53:32.714Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337641963","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337641962,"status":"skipped","stage":"stage-2","name":"library:ci-iris-lambda-rust","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T16:53:32.696Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337641962","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337641961,"status":"skipped","stage":"stage-2","name":"library:ci-hott","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T16:53:32.677Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337641961","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337641960,"status":"skipped","stage":"stage-2","name":"library:ci-geocoq","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T16:53:32.659Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337641960","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337641959,"status":"skipped","stage":"stage-2","name":"library:ci-flocq","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T16:53:32.642Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337641959","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337641958,"status":"skipped","stage":"stage-2","name":"library:ci-fiat-crypto-legacy","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T16:53:32.626Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337641958","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337641957,"status":"skipped","stage":"stage-2","name":"library:ci-fiat-crypto","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T16:53:32.611Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337641957","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337641956,"status":"skipped","stage":"stage-2","name":"library:ci-fcsl-pcm","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T16:53:32.594Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337641956","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337641955,"status":"skipped","stage":"stage-2","name":"library:ci-cross-crypto","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T16:53:32.572Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337641955","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337641954,"status":"skipped","stage":"stage-2","name":"library:ci-coquelicot","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T16:53:32.552Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337641954","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337641953,"status":"skipped","stage":"stage-2","name":"library:ci-compcert","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T16:53:32.531Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337641953","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337641952,"status":"skipped","stage":"stage-2","name":"library:ci-bedrock2","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T16:53:32.515Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337641952","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337641951,"status":"skipped","stage":"stage-2","name":"library:ci-argosy","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T16:53:32.496Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337641951","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337641950,"status":"failed","stage":"stage-2","name":"validate:quick","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T16:53:32.469Z","started_at":"2019-10-30T17:44:24.309Z","finished_at":"2019-10-30T17:45:38.952Z","duration":74.643646,"queued_duration":19.783944,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/337641950","artifacts":[{"file_type":"trace","size":40970,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337641949,"status":"skipped","stage":"stage-2","name":"validate:edge+flambda","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T16:53:32.443Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337641949","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337641948,"status":"skipped","stage":"stage-2","name":"validate:base+32bit","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T16:53:32.419Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337641948","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337641947,"status":"skipped","stage":"stage-2","name":"validate:base","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T16:53:32.396Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337641947","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337641946,"status":"skipped","stage":"stage-2","name":"test-suite:base+async","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-10-30T16:53:32.378Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337641946","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337641945,"status":"skipped","stage":"stage-2","name":"test-suite:egde:dune:dev","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T16:53:32.358Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337641945","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337641944,"status":"skipped","stage":"stage-2","name":"test-suite:edge+flambda","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T16:53:32.338Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337641944","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337641943,"status":"skipped","stage":"stage-2","name":"test-suite:base+32bit","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T16:53:32.318Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337641943","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337641942,"status":"skipped","stage":"stage-2","name":"test-suite:base","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T16:53:32.301Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337641942","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337641941,"status":"skipped","stage":"stage-2","name":"doc:ml-api:odoc","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T16:53:32.285Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337641941","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337641940,"status":"skipped","stage":"stage-2","name":"doc:stdlib:dune","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T16:53:32.268Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337641940","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337641939,"status":"skipped","stage":"stage-2","name":"doc:refman:dune","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T16:53:32.251Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337641939","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337641938,"status":"skipped","stage":"stage-2","name":"doc:refman","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T16:53:32.235Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337641938","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":337641937,"status":"failed","stage":"stage-1","name":"plugin:plugin-tutorial","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T16:53:32.205Z","started_at":"2019-10-30T17:39:08.140Z","finished_at":"2019-10-30T17:43:07.956Z","duration":239.815485,"queued_duration":2734.473304,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/337641937","artifacts":[{"file_type":"trace","size":50079,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":337641936,"status":"failed","stage":"stage-1","name":"pkg:nix","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T16:53:32.190Z","started_at":"2019-10-30T17:39:08.094Z","finished_at":"2019-10-30T17:42:02.112Z","duration":174.017662,"queued_duration":2734.453446,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/337641936","artifacts":[{"file_type":"trace","size":78466,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":337641935,"status":"canceled","stage":"stage-1","name":"pkg:opam","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T16:53:32.172Z","started_at":"2019-10-30T17:38:40.761Z","finished_at":"2019-10-30T17:52:01.448Z","duration":800.687163,"queued_duration":2707.140431,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337641935","artifacts":[{"file_type":"trace","size":16988,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":337641934,"status":"success","stage":"stage-1","name":"lint","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T16:53:32.156Z","started_at":"2019-10-30T17:38:40.700Z","finished_at":"2019-10-30T17:43:44.869Z","duration":304.168889,"queued_duration":2707.105615,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337641934","artifacts":[{"file_type":"trace","size":32682,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":337641933,"status":"canceled","stage":"stage-1","name":"windows64","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T16:53:32.132Z","started_at":"2019-10-30T17:28:44.081Z","finished_at":"2019-10-30T17:52:01.430Z","duration":1397.348902,"queued_duration":2110.511643,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"web_url":"https://gitlab.com/coq/coq/-/jobs/337641933","artifacts":[{"file_type":"trace","size":126858,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":["windows"]}
{"id":337641932,"status":"failed","stage":"stage-1","name":"build:quick","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-10-30T16:53:32.118Z","started_at":"2019-10-30T17:38:40.642Z","finished_at":"2019-10-30T17:44:04.441Z","duration":323.798809,"queued_duration":2707.105081,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/337641932","artifacts":[{"file_type":"trace","size":86594,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":337641931,"status":"failed","stage":"stage-1","name":"build:base+async","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":true,"created_at":"2019-10-30T16:53:32.101Z","started_at":"2019-10-30T17:38:40.586Z","finished_at":"2019-10-30T17:43:34.433Z","duration":293.846769,"queued_duration":2707.074575,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/337641931","artifacts":[{"file_type":"trace","size":84248,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":337641930,"status":"failed","stage":"stage-1","name":"build:edge+flambda:dune:dev","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T16:53:32.086Z","started_at":"2019-10-30T17:38:40.301Z","finished_at":"2019-10-30T17:44:22.630Z","duration":342.329447,"queued_duration":2706.83456,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/337641930","artifacts":[{"file_type":"trace","size":19523,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":337641929,"status":"failed","stage":"stage-1","name":"build:edge+flambda","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T16:53:32.071Z","started_at":"2019-10-30T17:38:33.107Z","finished_at":"2019-10-30T17:51:03.319Z","duration":750.211485,"queued_duration":2699.680501,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/337641929","artifacts":[{"file_type":"trace","size":85835,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":337641928,"status":"failed","stage":"stage-1","name":"build:base+32bit","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T16:53:32.053Z","started_at":"2019-10-30T17:38:28.270Z","finished_at":"2019-10-30T17:43:03.991Z","duration":275.721732,"queued_duration":2694.905481,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/337641928","artifacts":[{"file_type":"trace","size":79416,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":337641927,"status":"failed","stage":"stage-1","name":"build:base","ref":"pr-11002","tag":false,"coverage":null,"allow_failure":false,"created_at":"2019-10-30T16:53:32.035Z","started_at":"2019-10-30T17:38:27.802Z","finished_at":"2019-10-30T17:43:08.294Z","duration":280.49195,"queued_duration":2694.503296,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"79727a1f0b3e506652aeabf8e96c0340806a3e35","short_id":"79727a1f","created_at":"2019-10-30T17:49:21.000+01:00","parent_ids":["28ea499486dd17076d8f2f4c31d7fdebeacdff8e"],"title":"[coqlib] Always produce anomalies when a constant doesn't exist.","message":"[coqlib] Always produce anomalies when a constant doesn't exist.\n\nUsing user_err means that the exception may be recoverable from tactic\ncode. Ideally we would have `lib_ref` to return an option type but\nthat was pretty invasive w.r.t. codebase.\n\nFixes #10989\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2019-10-30T17:49:21.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2019-10-30T17:49:21.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/79727a1f0b3e506652aeabf8e96c0340806a3e35"},"pipeline":{"id":92628219,"iid":11653,"project_id":6138686,"sha":"79727a1f0b3e506652aeabf8e96c0340806a3e35","ref":"pr-11002","status":"failed","source":"push","created_at":"2019-10-30T16:53:32.018Z","updated_at":"2019-10-30T17:52:01.528Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/92628219"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/337641927","artifacts":[{"file_type":"trace","size":89857,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
