{"id":677824669,"status":"success","stage":"stage-5","name":"library:ci-fiat_crypto_ocaml","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:36.420Z","started_at":"2020-08-10T01:38:08.296Z","finished_at":"2020-08-10T01:50:16.737Z","duration":728.441209,"queued_duration":0.323035,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824669","artifacts":[{"file_type":"trace","size":136874,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677824668,"status":"success","stage":"stage-4","name":"library:ci-corn","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:36.400Z","started_at":"2020-08-10T00:08:45.171Z","finished_at":"2020-08-10T00:46:44.011Z","duration":2278.839954,"queued_duration":0.875128,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824668","artifacts":[{"file_type":"trace","size":415074,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":677824667,"status":"success","stage":"stage-4","name":"library:ci-fiat_crypto","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:36.384Z","started_at":"2020-08-10T00:05:39.076Z","finished_at":"2020-08-10T01:38:07.883Z","duration":5548.807089,"queued_duration":1.412692,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824667","artifacts":[{"file_type":"trace","size":346193,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-09-09T01:38:05.185Z","tag_list":[]}
{"id":677824666,"status":"success","stage":"stage-3","name":"plugin:ci-metacoq","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:36.362Z","started_at":"2020-08-09T23:52:37.043Z","finished_at":"2020-08-10T00:16:08.894Z","duration":1411.850825,"queued_duration":0.545251,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824666","artifacts":[{"file_type":"trace","size":423050,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677824665,"status":"success","stage":"stage-3","name":"library:ci-vst","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:36.345Z","started_at":"2020-08-10T00:02:45.694Z","finished_at":"2020-08-10T01:25:38.312Z","duration":4972.618625,"queued_duration":1.075762,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824665","artifacts":[{"file_type":"trace","size":437879,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":677824664,"status":"success","stage":"stage-3","name":"library:ci-math_classes","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:36.330Z","started_at":"2020-08-10T00:00:16.834Z","finished_at":"2020-08-10T00:08:44.219Z","duration":507.385246,"queued_duration":0.347592,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824664","artifacts":[{"file_type":"trace","size":168850,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-09-09T00:08:43.025Z","tag_list":[]}
{"id":677824663,"status":"success","stage":"stage-3","name":"library:ci-coqprime","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:36.316Z","started_at":"2020-08-10T00:00:17.571Z","finished_at":"2020-08-10T00:05:37.567Z","duration":319.995559,"queued_duration":1.059038,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824663","artifacts":[{"file_type":"trace","size":85348,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-09-09T00:05:36.343Z","tag_list":[]}
{"id":677824662,"status":"success","stage":"stage-3","name":"library:ci-color","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:36.301Z","started_at":"2020-08-10T00:00:16.905Z","finished_at":"2020-08-10T00:16:19.930Z","duration":963.025086,"queued_duration":0.366286,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824662","artifacts":[{"file_type":"trace","size":597154,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677824661,"status":"success","stage":"stage-2","name":"plugin:ci-rewriter","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:36.279Z","started_at":"2020-08-09T23:55:00.795Z","finished_at":"2020-08-10T00:05:05.084Z","duration":604.289592,"queued_duration":2.550174,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824661","artifacts":[{"file_type":"trace","size":154146,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-09-09T00:05:03.284Z","tag_list":[]}
{"id":677824660,"status":"success","stage":"stage-2","name":"plugin:ci-relation_algebra","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:36.266Z","started_at":"2020-08-09T23:44:59.482Z","finished_at":"2020-08-09T23:51:11.355Z","duration":371.87302,"queued_duration":3.218794,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824660","artifacts":[{"file_type":"trace","size":50477,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":677824659,"status":"success","stage":"stage-2","name":"plugin:ci-reduction_effects","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:36.251Z","started_at":"2020-08-09T23:44:59.443Z","finished_at":"2020-08-09T23:48:00.572Z","duration":181.128817,"queued_duration":3.515767,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824659","artifacts":[{"file_type":"trace","size":28686,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":677824658,"status":"success","stage":"stage-2","name":"plugin:ci-quickchick","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:36.237Z","started_at":"2020-08-09T23:55:00.758Z","finished_at":"2020-08-10T00:01:15.844Z","duration":375.085897,"queued_duration":2.487455,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824658","artifacts":[{"file_type":"trace","size":154461,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":677824657,"status":"success","stage":"stage-2","name":"plugin:ci-perennial","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:36.221Z","started_at":"2020-08-09T23:55:00.609Z","finished_at":"2020-08-10T01:12:49.532Z","duration":4668.92393,"queued_duration":2.312545,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824657","artifacts":[{"file_type":"trace","size":38746,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":677824656,"status":"success","stage":"stage-2","name":"plugin:ci-paramcoq","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:36.207Z","started_at":"2020-08-09T23:44:59.352Z","finished_at":"2020-08-09T23:46:31.635Z","duration":92.282577,"queued_duration":3.402401,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824656","artifacts":[{"file_type":"trace","size":109124,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677824655,"status":"success","stage":"stage-2","name":"plugin:ci-mtac2","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:36.194Z","started_at":"2020-08-09T23:44:59.314Z","finished_at":"2020-08-09T23:49:36.635Z","duration":277.321129,"queued_duration":3.339769,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824655","artifacts":[{"file_type":"trace","size":140400,"filename":"job.log","file_format":null}],"runner":{"id":2568000,"description":"shared-runners-manager-7","ip_address":"35.229.94.93","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":677824654,"status":"success","stage":"stage-2","name":"plugin:ci-fiat_parsers","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:36.179Z","started_at":"2020-08-09T23:44:59.276Z","finished_at":"2020-08-10T00:05:38.910Z","duration":1239.633853,"queued_duration":3.280216,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824654","artifacts":[{"file_type":"trace","size":822084,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":677824653,"status":"success","stage":"stage-2","name":"plugin:ci-equations","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:36.166Z","started_at":"2020-08-09T23:44:59.187Z","finished_at":"2020-08-09T23:52:36.421Z","duration":457.234284,"queued_duration":3.162142,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824653","artifacts":[{"file_type":"trace","size":79248,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-09-08T23:52:35.208Z","tag_list":[]}
{"id":677824652,"status":"success","stage":"stage-2","name":"plugin:ci-elpi","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:36.153Z","started_at":"2020-08-09T23:44:59.128Z","finished_at":"2020-08-09T23:50:52.437Z","duration":353.309446,"queued_duration":3.080297,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824652","artifacts":[{"file_type":"trace","size":288804,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":677824651,"status":"success","stage":"stage-2","name":"plugin:ci-coqhammer","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:36.139Z","started_at":"2020-08-09T23:44:58.961Z","finished_at":"2020-08-09T23:48:11.145Z","duration":192.184568,"queued_duration":2.881199,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824651","artifacts":[{"file_type":"trace","size":35195,"filename":"job.log","file_format":null}],"runner":{"id":2568000,"description":"shared-runners-manager-7","ip_address":"35.229.94.93","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":677824650,"status":"success","stage":"stage-2","name":"plugin:ci-coq_dpdgraph","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:36.125Z","started_at":"2020-08-09T23:44:58.783Z","finished_at":"2020-08-09T23:46:11.355Z","duration":72.571696,"queued_duration":2.679619,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824650","artifacts":[{"file_type":"trace","size":68922,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677824649,"status":"success","stage":"stage-2","name":"plugin:ci-bignums","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:36.111Z","started_at":"2020-08-09T23:55:00.539Z","finished_at":"2020-08-10T00:00:16.407Z","duration":315.868491,"queued_duration":2.218751,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824649","artifacts":[{"file_type":"trace","size":59225,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-09-09T00:00:15.225Z","tag_list":[]}
{"id":677824648,"status":"success","stage":"stage-2","name":"plugin:ci-aac_tactics","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:36.097Z","started_at":"2020-08-09T23:44:58.650Z","finished_at":"2020-08-09T23:49:06.855Z","duration":248.205811,"queued_duration":2.514031,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824648","artifacts":[{"file_type":"trace","size":590022,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677824647,"status":"success","stage":"stage-2","name":"library:ci-verdi_raft","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:36.082Z","started_at":"2020-08-09T23:55:00.498Z","finished_at":"2020-08-10T00:22:28.539Z","duration":1648.041008,"queued_duration":2.15503,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824647","artifacts":[{"file_type":"trace","size":287748,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677824646,"status":"success","stage":"stage-2","name":"library:ci-unimath","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:36.069Z","started_at":"2020-08-09T23:55:00.402Z","finished_at":"2020-08-10T01:04:54.311Z","duration":4193.908822,"queued_duration":2.010586,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824646","artifacts":[{"file_type":"trace","size":166182,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":677824645,"status":"success","stage":"stage-2","name":"library:ci-tlc","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:36.056Z","started_at":"2020-08-09T23:44:58.577Z","finished_at":"2020-08-09T23:49:33.647Z","duration":275.070344,"queued_duration":2.418679,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824645","artifacts":[{"file_type":"trace","size":146480,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":677824644,"status":"success","stage":"stage-2","name":"library:ci-stdlib2","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:36.043Z","started_at":"2020-08-09T23:55:00.355Z","finished_at":"2020-08-09T23:58:28.463Z","duration":208.108118,"queued_duration":1.99003,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824644","artifacts":[{"file_type":"trace","size":34327,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":677824643,"status":"success","stage":"stage-2","name":"library:ci-sf","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:36.028Z","started_at":"2020-08-09T23:44:58.386Z","finished_at":"2020-08-09T23:47:45.278Z","duration":166.892641,"queued_duration":2.194582,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824643","artifacts":[{"file_type":"trace","size":1150515,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677824642,"status":"success","stage":"stage-2","name":"library:ci-mathcomp","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:36.013Z","started_at":"2020-08-09T23:55:00.311Z","finished_at":"2020-08-10T01:15:31.690Z","duration":4831.379098,"queued_duration":1.897227,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824642","artifacts":[{"file_type":"trace","size":408255,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":677824641,"status":"success","stage":"stage-2","name":"library:ci-lambda_rust","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:35.999Z","started_at":"2020-08-09T23:54:59.382Z","finished_at":"2020-08-10T00:53:15.518Z","duration":3496.135901,"queued_duration":0.946479,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824641","artifacts":[{"file_type":"trace","size":194179,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":677824640,"status":"success","stage":"stage-2","name":"library:ci-hott","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:35.986Z","started_at":"2020-08-09T23:44:58.286Z","finished_at":"2020-08-09T23:54:24.492Z","duration":566.206473,"queued_duration":2.072046,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824640","artifacts":[{"file_type":"trace","size":96043,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677824639,"status":"success","stage":"stage-2","name":"library:ci-geocoq","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:35.971Z","started_at":"2020-08-09T23:54:59.343Z","finished_at":"2020-08-10T00:32:39.809Z","duration":2260.466352,"queued_duration":0.860392,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824639","artifacts":[{"file_type":"trace","size":189691,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":677824638,"status":"success","stage":"stage-2","name":"library:ci-flocq","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:35.957Z","started_at":"2020-08-09T23:54:59.946Z","finished_at":"2020-08-10T00:02:44.521Z","duration":464.575084,"queued_duration":1.44143,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824638","artifacts":[{"file_type":"trace","size":143800,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-09-09T00:02:42.111Z","tag_list":[]}
{"id":677824637,"status":"success","stage":"stage-2","name":"library:ci-fiat_crypto_legacy","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-08-09T23:23:35.943Z","started_at":"2020-08-09T23:54:59.906Z","finished_at":"2020-08-10T01:19:04.133Z","duration":5044.226868,"queued_duration":1.377429,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824637","artifacts":[{"file_type":"trace","size":3342698,"filename":"job.log","file_format":null}],"runner":{"id":2568000,"description":"shared-runners-manager-7","ip_address":"35.229.94.93","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":677824636,"status":"success","stage":"stage-2","name":"library:ci-fcsl_pcm","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:35.929Z","started_at":"2020-08-09T23:44:58.251Z","finished_at":"2020-08-09T23:49:30.489Z","duration":272.23803,"queued_duration":2.580918,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824636","artifacts":[{"file_type":"trace","size":43704,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":677824635,"status":"success","stage":"stage-2","name":"library:ci-engine_bench","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:35.914Z","started_at":"2020-08-09T23:44:58.216Z","finished_at":"2020-08-10T00:07:25.518Z","duration":1347.302078,"queued_duration":2.521518,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824635","artifacts":[{"file_type":"trace","size":132938,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":677824634,"status":"success","stage":"stage-2","name":"library:ci-cross_crypto","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:35.901Z","started_at":"2020-08-09T23:44:58.178Z","finished_at":"2020-08-10T00:18:57.400Z","duration":2039.221592,"queued_duration":2.461439,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824634","artifacts":[{"file_type":"trace","size":175703,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":677824633,"status":"success","stage":"stage-2","name":"library:ci-coquelicot","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:35.887Z","started_at":"2020-08-09T23:44:58.070Z","finished_at":"2020-08-09T23:50:55.043Z","duration":356.97291,"queued_duration":2.323582,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824633","artifacts":[{"file_type":"trace","size":80372,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":677824632,"status":"success","stage":"stage-2","name":"library:ci-coqtail","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:35.873Z","started_at":"2020-08-09T23:44:58.028Z","finished_at":"2020-08-09T23:46:11.117Z","duration":73.088813,"queued_duration":2.25922,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824632","artifacts":[{"file_type":"trace","size":55621,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677824631,"status":"success","stage":"stage-2","name":"library:ci-coq_tools","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:35.860Z","started_at":"2020-08-09T23:44:57.886Z","finished_at":"2020-08-09T23:51:54.381Z","duration":416.494194,"queued_duration":2.085094,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824631","artifacts":[{"file_type":"trace","size":52988,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677824630,"status":"success","stage":"stage-2","name":"library:ci-coq_performance_tests","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:35.845Z","started_at":"2020-08-09T23:44:57.836Z","finished_at":"2020-08-09T23:55:34.367Z","duration":636.530928,"queued_duration":2.014114,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824630","artifacts":[{"file_type":"trace","size":89106,"filename":"job.log","file_format":null}],"runner":{"id":2568000,"description":"shared-runners-manager-7","ip_address":"35.229.94.93","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":677824629,"status":"success","stage":"stage-2","name":"library:ci-compcert","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:35.830Z","started_at":"2020-08-09T23:54:59.626Z","finished_at":"2020-08-10T00:18:00.557Z","duration":1380.931371,"queued_duration":1.072558,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824629","artifacts":[{"file_type":"trace","size":58737,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":677824628,"status":"success","stage":"stage-2","name":"library:ci-bedrock2","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:35.818Z","started_at":"2020-08-09T23:54:59.541Z","finished_at":"2020-08-10T01:47:04.568Z","duration":6725.026462,"queued_duration":0.964318,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824628","artifacts":[{"file_type":"trace","size":505808,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-09-09T01:47:02.488Z","tag_list":[]}
{"id":677824627,"status":"success","stage":"stage-2","name":"library:ci-bbv","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:35.804Z","started_at":"2020-08-09T23:44:57.673Z","finished_at":"2020-08-09T23:46:53.364Z","duration":115.691039,"queued_duration":1.78026,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824627","artifacts":[{"file_type":"trace","size":662776,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677824626,"status":"success","stage":"stage-2","name":"library:ci-argosy","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:35.792Z","started_at":"2020-08-09T23:44:57.512Z","finished_at":"2020-08-09T23:49:58.102Z","duration":300.590631,"queued_duration":1.911236,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824626","artifacts":[{"file_type":"trace","size":52196,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677824625,"status":"success","stage":"stage-2","name":"validate:quick","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:35.780Z","started_at":"2020-08-09T23:43:57.671Z","finished_at":"2020-08-09T23:47:54.124Z","duration":236.453429,"queued_duration":0.45702,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824625","artifacts":[{"file_type":"trace","size":309969,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-10-08T23:47:52.115Z","tag_list":[]}
{"id":677824624,"status":"success","stage":"stage-2","name":"validate:edge+flambda","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:35.767Z","started_at":"2020-08-09T23:54:59.085Z","finished_at":"2020-08-10T00:02:33.143Z","duration":454.058092,"queued_duration":0.626575,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824624","artifacts":[{"file_type":"trace","size":88990,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-10-09T00:02:30.211Z","tag_list":[]}
{"id":677824623,"status":"success","stage":"stage-2","name":"validate:base+32bit","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:35.754Z","started_at":"2020-08-09T23:40:59.886Z","finished_at":"2020-08-09T23:46:13.432Z","duration":313.546056,"queued_duration":0.910865,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824623","artifacts":[{"file_type":"trace","size":68076,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-10-08T23:46:12.223Z","tag_list":[]}
{"id":677824622,"status":"success","stage":"stage-2","name":"validate:base","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:35.737Z","started_at":"2020-08-09T23:44:57.268Z","finished_at":"2020-08-09T23:50:13.281Z","duration":316.013261,"queued_duration":1.644968,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824622","artifacts":[{"file_type":"trace","size":69698,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-10-08T23:50:12.101Z","tag_list":[]}
{"id":677824621,"status":"success","stage":"stage-2","name":"test-suite:base+async","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-08-09T23:23:35.718Z","started_at":"2020-08-09T23:44:57.111Z","finished_at":"2020-08-10T00:18:59.820Z","duration":2042.708973,"queued_duration":1.465284,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824621","artifacts":[{"file_type":"trace","size":99863,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":677824620,"status":"success","stage":"stage-2","name":"test-suite:edge:dune:dev","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:35.704Z","started_at":"2020-08-09T23:44:20.149Z","finished_at":"2020-08-10T00:08:13.856Z","duration":1433.706235,"queued_duration":1.294134,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824620","artifacts":[{"file_type":"trace","size":99909,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":677824619,"status":"success","stage":"stage-2","name":"test-suite:edge+flambda","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:35.690Z","started_at":"2020-08-09T23:54:58.660Z","finished_at":"2020-08-10T00:18:31.464Z","duration":1412.80407,"queued_duration":0.057929,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824619","artifacts":[{"file_type":"trace","size":125101,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677824618,"status":"success","stage":"stage-2","name":"test-suite:base+32bit","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:35.677Z","started_at":"2020-08-09T23:40:59.434Z","finished_at":"2020-08-09T23:52:14.069Z","duration":674.634761,"queued_duration":0.433049,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824618","artifacts":[{"file_type":"trace","size":99965,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":677824617,"status":"success","stage":"stage-2","name":"test-suite:base","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:35.663Z","started_at":"2020-08-09T23:44:57.034Z","finished_at":"2020-08-10T00:08:45.673Z","duration":1428.639551,"queued_duration":1.184073,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824617","artifacts":[{"file_type":"trace","size":99795,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":677824616,"status":"success","stage":"stage-2","name":"doc:ml-api:odoc","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:35.650Z","started_at":"2020-08-09T23:44:19.667Z","finished_at":"2020-08-09T23:48:33.975Z","duration":254.307856,"queued_duration":0.791047,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824616","artifacts":[{"file_type":"trace","size":77292,"filename":"job.log","file_format":null}],"runner":{"id":2568000,"description":"shared-runners-manager-7","ip_address":"35.229.94.93","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-10-08T23:48:32.825Z","tag_list":[]}
{"id":677824615,"status":"success","stage":"stage-2","name":"doc:stdlib:dune","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:35.635Z","started_at":"2020-08-09T23:44:20.034Z","finished_at":"2020-08-09T23:48:23.930Z","duration":243.896048,"queued_duration":1.136306,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824615","artifacts":[{"file_type":"trace","size":81394,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-10-08T23:48:22.833Z","tag_list":[]}
{"id":677824614,"status":"success","stage":"stage-2","name":"doc:refman-pdf:dune","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:35.620Z","started_at":"2020-08-09T23:44:19.718Z","finished_at":"2020-08-09T23:52:57.552Z","duration":517.834068,"queued_duration":0.794425,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824614","artifacts":[{"file_type":"trace","size":21539,"filename":"job.log","file_format":null}],"runner":{"id":2568000,"description":"shared-runners-manager-7","ip_address":"35.229.94.93","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-10-08T23:52:56.459Z","tag_list":[]}
{"id":677824613,"status":"success","stage":"stage-2","name":"doc:refman:dune","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:35.606Z","started_at":"2020-08-09T23:44:19.854Z","finished_at":"2020-08-09T23:51:19.183Z","duration":419.329447,"queued_duration":0.9084,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824613","artifacts":[{"file_type":"trace","size":20742,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-10-08T23:51:18.043Z","tag_list":[]}
{"id":677824612,"status":"success","stage":"stage-2","name":"doc:refman","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:35.592Z","started_at":"2020-08-09T23:44:56.911Z","finished_at":"2020-08-09T23:53:15.431Z","duration":498.51948,"queued_duration":1.040625,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824612","artifacts":[{"file_type":"trace","size":40077,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-10-08T23:53:14.284Z","tag_list":[]}
{"id":677824611,"status":"success","stage":"stage-1","name":"plugin:plugin-tutorial","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:35.537Z","started_at":"2020-08-09T23:23:39.530Z","finished_at":"2020-08-09T23:28:03.339Z","duration":263.808144,"queued_duration":2.437252,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824611","artifacts":[{"file_type":"trace","size":58653,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":677824610,"status":"success","stage":"stage-1","name":"test-suite:4.11+trunk+dune","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-08-09T23:23:35.524Z","started_at":"2020-08-09T23:23:39.434Z","finished_at":"2020-08-09T23:51:07.638Z","duration":1648.204304,"queued_duration":2.320654,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824610","artifacts":[{"file_type":"trace","size":127367,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-08-23T23:51:05.101Z","tag_list":[]}
{"id":677824609,"status":"success","stage":"stage-1","name":"pkg:nix","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:35.511Z","started_at":"2020-08-09T23:23:39.392Z","finished_at":"2020-08-10T00:10:37.527Z","duration":2818.135234,"queued_duration":2.258019,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824609","artifacts":[{"file_type":"trace","size":597207,"filename":"job.log","file_format":null}],"runner":{"id":2568000,"description":"shared-runners-manager-7","ip_address":"35.229.94.93","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":677824608,"status":"success","stage":"stage-1","name":"pkg:opam","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:35.497Z","started_at":"2020-08-09T23:23:39.351Z","finished_at":"2020-08-09T23:50:08.536Z","duration":1589.184625,"queued_duration":2.197728,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824608","artifacts":[{"file_type":"trace","size":20530,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":677824607,"status":"success","stage":"stage-1","name":"lint","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:35.484Z","started_at":"2020-08-09T23:23:39.314Z","finished_at":"2020-08-09T23:28:53.148Z","duration":313.833676,"queued_duration":2.144176,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824607","artifacts":[{"file_type":"trace","size":19459,"filename":"job.log","file_format":null}],"runner":{"id":2568000,"description":"shared-runners-manager-7","ip_address":"35.229.94.93","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":677824606,"status":"success","stage":"stage-1","name":"windows64","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:35.467Z","started_at":"2020-08-09T23:23:38.022Z","finished_at":"2020-08-10T00:21:25.411Z","duration":3467.388654,"queued_duration":0.836545,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824606","artifacts":[{"file_type":"trace","size":245915,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-08-17T00:21:24.272Z","tag_list":["windows-inria"]}
{"id":677824605,"status":"success","stage":"stage-1","name":"build:quick","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-08-09T23:23:35.452Z","started_at":"2020-08-09T23:23:38.709Z","finished_at":"2020-08-09T23:43:57.144Z","duration":1218.434784,"queued_duration":1.505878,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824605","artifacts":[{"file_type":"trace","size":201546,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-08-16T23:43:55.985Z","tag_list":[]}
{"id":677824604,"status":"success","stage":"stage-1","name":"build:base+async","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-08-09T23:23:35.438Z","started_at":"2020-08-09T23:23:38.651Z","finished_at":"2020-08-10T00:36:06.718Z","duration":4348.067568,"queued_duration":1.431337,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824604","artifacts":[{"file_type":"trace","size":287460,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-08-17T00:36:05.502Z","tag_list":[]}
{"id":677824603,"status":"success","stage":"stage-1","name":"build:edge+flambda:dune:dev","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:35.425Z","started_at":"2020-08-09T23:23:38.602Z","finished_at":"2020-08-09T23:44:18.775Z","duration":1240.172734,"queued_duration":1.366754,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824603","artifacts":[{"file_type":"trace","size":20202,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-08-16T23:44:17.547Z","tag_list":[]}
{"id":677824602,"status":"success","stage":"stage-1","name":"build:edge+flambda","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:35.412Z","started_at":"2020-08-09T23:23:38.489Z","finished_at":"2020-08-09T23:54:58.171Z","duration":1879.681697,"queued_duration":1.23803,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824602","artifacts":[{"file_type":"trace","size":287943,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-08-16T23:54:56.595Z","tag_list":[]}
{"id":677824601,"status":"success","stage":"stage-1","name":"build:base+32bit","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:35.397Z","started_at":"2020-08-09T23:23:38.231Z","finished_at":"2020-08-09T23:40:58.885Z","duration":1040.65448,"queued_duration":0.958399,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824601","artifacts":[{"file_type":"trace","size":280237,"filename":"job.log","file_format":null}],"runner":{"id":2568000,"description":"shared-runners-manager-7","ip_address":"35.229.94.93","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-08-16T23:40:57.625Z","tag_list":[]}
{"id":677824600,"status":"success","stage":"stage-1","name":"build:base","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-08-09T23:23:35.382Z","started_at":"2020-08-09T23:23:38.137Z","finished_at":"2020-08-09T23:44:55.418Z","duration":1277.28025,"queued_duration":0.84856,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","short_id":"d39730a0","created_at":"2020-08-09T19:23:13.000-04:00","parent_ids":["ef08abec26c2f0017d1136870f8f99144e579538"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-08-09T19:23:13.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/d39730a03b03bdbb23f0ad042a2bb87055d91d00"},"pipeline":{"id":175950163,"iid":17529,"project_id":6138686,"sha":"d39730a03b03bdbb23f0ad042a2bb87055d91d00","ref":"pr-12479","status":"success","source":"push","created_at":"2020-08-09T23:23:35.359Z","updated_at":"2020-08-10T01:50:16.811Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/175950163"},"web_url":"https://gitlab.com/coq/coq/-/jobs/677824600","artifacts":[{"file_type":"trace","size":310041,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-08-16T23:44:54.098Z","tag_list":[]}
