{"id":124993783,"status":"failed","stage":"test","name":"ci-vst","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:09:46.656Z","started_at":"2018-11-24T17:36:49.523Z","finished_at":"2018-11-24T17:36:59.247Z","duration":9.723911,"queued_duration":94.684837,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","short_id":"ce425cfb","created_at":"2018-11-24T18:04:37.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:04:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ce425cfbeef9a32f3c46aafe9f31fb054bb8a103"},"pipeline":{"id":37775514,"iid":5577,"project_id":6138686,"sha":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:09:45.795Z","updated_at":"2018-11-24T18:17:06.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775514"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/124993783","artifacts":[{"file_type":"trace","size":1110,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124993782,"status":"failed","stage":"test","name":"ci-unimath","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:09:46.639Z","started_at":"2018-11-24T17:36:42.882Z","finished_at":"2018-11-24T17:36:53.979Z","duration":11.097059,"queued_duration":88.009997,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","short_id":"ce425cfb","created_at":"2018-11-24T18:04:37.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:04:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ce425cfbeef9a32f3c46aafe9f31fb054bb8a103"},"pipeline":{"id":37775514,"iid":5577,"project_id":6138686,"sha":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:09:45.795Z","updated_at":"2018-11-24T18:17:06.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775514"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/124993782","artifacts":[{"file_type":"trace","size":1111,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124993781,"status":"failed","stage":"test","name":"ci-sf","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:09:46.623Z","started_at":"2018-11-24T17:36:37.739Z","finished_at":"2018-11-24T17:36:49.214Z","duration":11.475032,"queued_duration":82.836387,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","short_id":"ce425cfb","created_at":"2018-11-24T18:04:37.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:04:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ce425cfbeef9a32f3c46aafe9f31fb054bb8a103"},"pipeline":{"id":37775514,"iid":5577,"project_id":6138686,"sha":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:09:45.795Z","updated_at":"2018-11-24T18:17:06.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775514"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/124993781","artifacts":[{"file_type":"trace","size":1110,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124993780,"status":"failed","stage":"test","name":"ci-quickchick","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:09:46.605Z","started_at":"2018-11-24T17:36:29.132Z","finished_at":"2018-11-24T17:36:42.564Z","duration":13.432111,"queued_duration":74.196023,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","short_id":"ce425cfb","created_at":"2018-11-24T18:04:37.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:04:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ce425cfbeef9a32f3c46aafe9f31fb054bb8a103"},"pipeline":{"id":37775514,"iid":5577,"project_id":6138686,"sha":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:09:45.795Z","updated_at":"2018-11-24T18:17:06.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775514"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/124993780","artifacts":[{"file_type":"trace","size":1111,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124993779,"status":"failed","stage":"test","name":"ci-plugin_tutorial","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:09:46.589Z","started_at":"2018-11-24T17:36:23.899Z","finished_at":"2018-11-24T17:36:37.484Z","duration":13.585534,"queued_duration":68.922131,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","short_id":"ce425cfb","created_at":"2018-11-24T18:04:37.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:04:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ce425cfbeef9a32f3c46aafe9f31fb054bb8a103"},"pipeline":{"id":37775514,"iid":5577,"project_id":6138686,"sha":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:09:45.795Z","updated_at":"2018-11-24T18:17:06.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775514"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/124993779","artifacts":[{"file_type":"trace","size":1110,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124993778,"status":"failed","stage":"test","name":"ci-paramcoq","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:09:46.572Z","started_at":"2018-11-24T17:36:22.349Z","finished_at":"2018-11-24T17:38:54.236Z","duration":151.886953,"queued_duration":67.32971,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","short_id":"ce425cfb","created_at":"2018-11-24T18:04:37.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:04:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ce425cfbeef9a32f3c46aafe9f31fb054bb8a103"},"pipeline":{"id":37775514,"iid":5577,"project_id":6138686,"sha":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:09:45.795Z","updated_at":"2018-11-24T18:17:06.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775514"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/124993778","artifacts":[{"file_type":"trace","size":1098,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124993777,"status":"failed","stage":"test","name":"ci-mtac2","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:09:46.555Z","started_at":"2018-11-24T17:36:21.819Z","finished_at":"2018-11-24T17:38:50.360Z","duration":148.541678,"queued_duration":66.758039,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","short_id":"ce425cfb","created_at":"2018-11-24T18:04:37.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:04:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ce425cfbeef9a32f3c46aafe9f31fb054bb8a103"},"pipeline":{"id":37775514,"iid":5577,"project_id":6138686,"sha":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:09:45.795Z","updated_at":"2018-11-24T18:17:06.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775514"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/124993777","artifacts":[{"file_type":"trace","size":1098,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124993776,"status":"failed","stage":"test","name":"ci-math-comp","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:09:46.539Z","started_at":"2018-11-24T17:36:21.693Z","finished_at":"2018-11-24T17:38:49.903Z","duration":148.209684,"queued_duration":66.585799,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","short_id":"ce425cfb","created_at":"2018-11-24T18:04:37.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:04:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ce425cfbeef9a32f3c46aafe9f31fb054bb8a103"},"pipeline":{"id":37775514,"iid":5577,"project_id":6138686,"sha":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:09:45.795Z","updated_at":"2018-11-24T18:17:06.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775514"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/124993776","artifacts":[{"file_type":"trace","size":1098,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124993775,"status":"failed","stage":"test","name":"ci-ltac2","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:09:46.521Z","started_at":"2018-11-24T17:36:21.305Z","finished_at":"2018-11-24T17:38:57.185Z","duration":155.879489,"queued_duration":66.131699,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","short_id":"ce425cfb","created_at":"2018-11-24T18:04:37.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:04:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ce425cfbeef9a32f3c46aafe9f31fb054bb8a103"},"pipeline":{"id":37775514,"iid":5577,"project_id":6138686,"sha":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:09:45.795Z","updated_at":"2018-11-24T18:17:06.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775514"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/124993775","artifacts":[{"file_type":"trace","size":1098,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124993774,"status":"failed","stage":"test","name":"ci-iris-lambda-rust","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:09:46.504Z","started_at":"2018-11-24T17:36:21.196Z","finished_at":"2018-11-24T17:38:56.410Z","duration":155.214268,"queued_duration":65.970425,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","short_id":"ce425cfb","created_at":"2018-11-24T18:04:37.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:04:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ce425cfbeef9a32f3c46aafe9f31fb054bb8a103"},"pipeline":{"id":37775514,"iid":5577,"project_id":6138686,"sha":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:09:45.795Z","updated_at":"2018-11-24T18:17:06.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775514"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/124993774","artifacts":[{"file_type":"trace","size":1098,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124993773,"status":"failed","stage":"test","name":"ci-hott","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:09:46.487Z","started_at":"2018-11-24T17:36:20.729Z","finished_at":"2018-11-24T17:38:50.400Z","duration":149.670737,"queued_duration":65.467785,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","short_id":"ce425cfb","created_at":"2018-11-24T18:04:37.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:04:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ce425cfbeef9a32f3c46aafe9f31fb054bb8a103"},"pipeline":{"id":37775514,"iid":5577,"project_id":6138686,"sha":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:09:45.795Z","updated_at":"2018-11-24T18:17:06.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775514"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/124993773","artifacts":[{"file_type":"trace","size":1098,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124993772,"status":"failed","stage":"test","name":"ci-coqhammer","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:09:46.471Z","started_at":"2018-11-24T17:36:20.619Z","finished_at":"2018-11-24T17:38:45.598Z","duration":144.979134,"queued_duration":65.326447,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","short_id":"ce425cfb","created_at":"2018-11-24T18:04:37.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:04:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ce425cfbeef9a32f3c46aafe9f31fb054bb8a103"},"pipeline":{"id":37775514,"iid":5577,"project_id":6138686,"sha":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:09:45.795Z","updated_at":"2018-11-24T18:17:06.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775514"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/124993772","artifacts":[{"file_type":"trace","size":1098,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124993771,"status":"failed","stage":"test","name":"ci-geocoq","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:09:46.454Z","started_at":"2018-11-24T17:35:15.414Z","finished_at":"2018-11-24T17:35:28.344Z","duration":12.929928,"queued_duration":0.090602,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","short_id":"ce425cfb","created_at":"2018-11-24T18:04:37.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:04:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ce425cfbeef9a32f3c46aafe9f31fb054bb8a103"},"pipeline":{"id":37775514,"iid":5577,"project_id":6138686,"sha":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:09:45.795Z","updated_at":"2018-11-24T18:17:06.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775514"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/124993771","artifacts":[{"file_type":"trace","size":4785,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124993770,"status":"failed","stage":"test","name":"ci-formal-topology","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:09:46.437Z","started_at":"2018-11-24T17:36:20.166Z","finished_at":"2018-11-24T17:38:45.137Z","duration":144.971277,"queued_duration":64.785887,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","short_id":"ce425cfb","created_at":"2018-11-24T18:04:37.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:04:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ce425cfbeef9a32f3c46aafe9f31fb054bb8a103"},"pipeline":{"id":37775514,"iid":5577,"project_id":6138686,"sha":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:09:45.795Z","updated_at":"2018-11-24T18:17:06.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775514"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/124993770","artifacts":[{"file_type":"trace","size":1098,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124993769,"status":"failed","stage":"test","name":"ci-flocq","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:09:46.422Z","started_at":"2018-11-24T17:36:19.682Z","finished_at":"2018-11-24T17:36:28.900Z","duration":9.218457,"queued_duration":64.271876,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","short_id":"ce425cfb","created_at":"2018-11-24T18:04:37.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:04:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ce425cfbeef9a32f3c46aafe9f31fb054bb8a103"},"pipeline":{"id":37775514,"iid":5577,"project_id":6138686,"sha":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:09:45.795Z","updated_at":"2018-11-24T18:17:06.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775514"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/124993769","artifacts":[{"file_type":"trace","size":1111,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124993768,"status":"failed","stage":"test","name":"ci-fiat-parsers","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:09:46.405Z","started_at":"2018-11-24T17:36:19.616Z","finished_at":"2018-11-24T17:38:54.117Z","duration":154.500888,"queued_duration":64.176662,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","short_id":"ce425cfb","created_at":"2018-11-24T18:04:37.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:04:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ce425cfbeef9a32f3c46aafe9f31fb054bb8a103"},"pipeline":{"id":37775514,"iid":5577,"project_id":6138686,"sha":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:09:45.795Z","updated_at":"2018-11-24T18:17:06.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775514"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/124993768","artifacts":[{"file_type":"trace","size":1098,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124993767,"status":"failed","stage":"test","name":"ci-fiat-crypto-legacy","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:09:46.389Z","started_at":"2018-11-24T17:36:19.556Z","finished_at":"2018-11-24T17:38:49.856Z","duration":150.300349,"queued_duration":64.064632,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","short_id":"ce425cfb","created_at":"2018-11-24T18:04:37.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:04:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ce425cfbeef9a32f3c46aafe9f31fb054bb8a103"},"pipeline":{"id":37775514,"iid":5577,"project_id":6138686,"sha":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:09:45.795Z","updated_at":"2018-11-24T18:17:06.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775514"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/124993767","artifacts":[{"file_type":"trace","size":1098,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124993766,"status":"failed","stage":"test","name":"ci-fiat-crypto","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:09:46.372Z","started_at":"2018-11-24T17:36:19.315Z","finished_at":"2018-11-24T17:38:54.217Z","duration":154.902384,"queued_duration":63.792884,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","short_id":"ce425cfb","created_at":"2018-11-24T18:04:37.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:04:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ce425cfbeef9a32f3c46aafe9f31fb054bb8a103"},"pipeline":{"id":37775514,"iid":5577,"project_id":6138686,"sha":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:09:45.795Z","updated_at":"2018-11-24T18:17:06.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775514"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/124993766","artifacts":[{"file_type":"trace","size":1098,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124993765,"status":"failed","stage":"test","name":"ci-fcsl-pcm","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:09:46.356Z","started_at":"2018-11-24T17:36:19.256Z","finished_at":"2018-11-24T17:38:50.955Z","duration":151.699411,"queued_duration":63.704045,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","short_id":"ce425cfb","created_at":"2018-11-24T18:04:37.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:04:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ce425cfbeef9a32f3c46aafe9f31fb054bb8a103"},"pipeline":{"id":37775514,"iid":5577,"project_id":6138686,"sha":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:09:45.795Z","updated_at":"2018-11-24T18:17:06.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775514"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/124993765","artifacts":[{"file_type":"trace","size":1098,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124993764,"status":"failed","stage":"test","name":"ci-equations","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:09:46.338Z","started_at":"2018-11-24T17:36:19.205Z","finished_at":"2018-11-24T17:38:29.370Z","duration":130.164622,"queued_duration":63.599134,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","short_id":"ce425cfb","created_at":"2018-11-24T18:04:37.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:04:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ce425cfbeef9a32f3c46aafe9f31fb054bb8a103"},"pipeline":{"id":37775514,"iid":5577,"project_id":6138686,"sha":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:09:45.795Z","updated_at":"2018-11-24T18:17:06.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775514"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/124993764","artifacts":[{"file_type":"trace","size":1098,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124993763,"status":"failed","stage":"test","name":"ci-elpi","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:09:46.321Z","started_at":"2018-11-24T17:36:12.992Z","finished_at":"2018-11-24T17:36:23.673Z","duration":10.680762,"queued_duration":57.351797,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","short_id":"ce425cfb","created_at":"2018-11-24T18:04:37.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:04:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ce425cfbeef9a32f3c46aafe9f31fb054bb8a103"},"pipeline":{"id":37775514,"iid":5577,"project_id":6138686,"sha":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:09:45.795Z","updated_at":"2018-11-24T18:17:06.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775514"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/124993763","artifacts":[{"file_type":"trace","size":1110,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124993762,"status":"failed","stage":"test","name":"ci-cross-crypto","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:09:46.305Z","started_at":"2018-11-24T17:36:08.708Z","finished_at":"2018-11-24T17:36:19.451Z","duration":10.742973,"queued_duration":53.024188,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","short_id":"ce425cfb","created_at":"2018-11-24T18:04:37.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:04:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ce425cfbeef9a32f3c46aafe9f31fb054bb8a103"},"pipeline":{"id":37775514,"iid":5577,"project_id":6138686,"sha":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:09:45.795Z","updated_at":"2018-11-24T18:17:06.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775514"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/124993762","artifacts":[{"file_type":"trace","size":1111,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124993761,"status":"failed","stage":"test","name":"ci-coquelicot","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:09:46.287Z","started_at":"2018-11-24T17:36:06.729Z","finished_at":"2018-11-24T17:38:29.940Z","duration":143.210925,"queued_duration":50.992557,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","short_id":"ce425cfb","created_at":"2018-11-24T18:04:37.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:04:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ce425cfbeef9a32f3c46aafe9f31fb054bb8a103"},"pipeline":{"id":37775514,"iid":5577,"project_id":6138686,"sha":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:09:45.795Z","updated_at":"2018-11-24T18:17:06.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775514"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/124993761","artifacts":[{"file_type":"trace","size":1098,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124993760,"status":"failed","stage":"test","name":"ci-coq_dpdgraph","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:09:46.271Z","started_at":"2018-11-24T17:36:05.604Z","finished_at":"2018-11-24T17:38:32.950Z","duration":147.346158,"queued_duration":49.820804,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","short_id":"ce425cfb","created_at":"2018-11-24T18:04:37.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:04:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ce425cfbeef9a32f3c46aafe9f31fb054bb8a103"},"pipeline":{"id":37775514,"iid":5577,"project_id":6138686,"sha":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:09:45.795Z","updated_at":"2018-11-24T18:17:06.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775514"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/124993760","artifacts":[{"file_type":"trace","size":1098,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124993759,"status":"failed","stage":"test","name":"ci-compcert","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:09:46.254Z","started_at":"2018-11-24T17:36:05.391Z","finished_at":"2018-11-24T17:38:37.102Z","duration":151.711133,"queued_duration":49.561353,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","short_id":"ce425cfb","created_at":"2018-11-24T18:04:37.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:04:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ce425cfbeef9a32f3c46aafe9f31fb054bb8a103"},"pipeline":{"id":37775514,"iid":5577,"project_id":6138686,"sha":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:09:45.795Z","updated_at":"2018-11-24T18:17:06.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775514"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/124993759","artifacts":[{"file_type":"trace","size":1098,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124993758,"status":"failed","stage":"test","name":"ci-color","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:09:46.238Z","started_at":"2018-11-24T17:35:15.972Z","finished_at":"2018-11-24T17:35:25.147Z","duration":9.175168,"queued_duration":0.095597,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","short_id":"ce425cfb","created_at":"2018-11-24T18:04:37.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:04:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ce425cfbeef9a32f3c46aafe9f31fb054bb8a103"},"pipeline":{"id":37775514,"iid":5577,"project_id":6138686,"sha":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:09:45.795Z","updated_at":"2018-11-24T18:17:06.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775514"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/124993758","artifacts":[{"file_type":"trace","size":1111,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124993757,"status":"failed","stage":"test","name":"ci-bignums","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:09:46.221Z","started_at":"2018-11-24T17:36:05.167Z","finished_at":"2018-11-24T17:38:28.826Z","duration":143.659186,"queued_duration":49.21902,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","short_id":"ce425cfb","created_at":"2018-11-24T18:04:37.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:04:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ce425cfbeef9a32f3c46aafe9f31fb054bb8a103"},"pipeline":{"id":37775514,"iid":5577,"project_id":6138686,"sha":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:09:45.795Z","updated_at":"2018-11-24T18:17:06.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775514"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/124993757","artifacts":[{"file_type":"trace","size":1098,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124993756,"status":"failed","stage":"test","name":"ci-bedrock2","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":true,"created_at":"2018-11-24T17:09:46.206Z","started_at":"2018-11-24T17:36:04.855Z","finished_at":"2018-11-24T17:38:38.742Z","duration":153.886862,"queued_duration":48.87597,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","short_id":"ce425cfb","created_at":"2018-11-24T18:04:37.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:04:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ce425cfbeef9a32f3c46aafe9f31fb054bb8a103"},"pipeline":{"id":37775514,"iid":5577,"project_id":6138686,"sha":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:09:45.795Z","updated_at":"2018-11-24T18:17:06.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775514"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/124993756","artifacts":[{"file_type":"trace","size":1098,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124993755,"status":"failed","stage":"test","name":"ci-aac_tactics","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:09:46.190Z","started_at":"2018-11-24T17:36:04.212Z","finished_at":"2018-11-24T17:38:28.376Z","duration":144.163939,"queued_duration":48.201865,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","short_id":"ce425cfb","created_at":"2018-11-24T18:04:37.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:04:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ce425cfbeef9a32f3c46aafe9f31fb054bb8a103"},"pipeline":{"id":37775514,"iid":5577,"project_id":6138686,"sha":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:09:45.795Z","updated_at":"2018-11-24T18:17:06.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775514"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/124993755","artifacts":[{"file_type":"trace","size":1098,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124993754,"status":"failed","stage":"test","name":"validate:edge+flambda","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:09:46.142Z","started_at":"2018-11-24T17:36:03.771Z","finished_at":"2018-11-24T17:38:39.554Z","duration":155.782866,"queued_duration":47.726568,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","short_id":"ce425cfb","created_at":"2018-11-24T18:04:37.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:04:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ce425cfbeef9a32f3c46aafe9f31fb054bb8a103"},"pipeline":{"id":37775514,"iid":5577,"project_id":6138686,"sha":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:09:45.795Z","updated_at":"2018-11-24T18:17:06.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775514"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/124993754","artifacts":[{"file_type":"trace","size":1098,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124993753,"status":"failed","stage":"test","name":"validate:edge","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:09:46.124Z","started_at":"2018-11-24T17:36:03.237Z","finished_at":"2018-11-24T17:38:29.638Z","duration":146.400551,"queued_duration":47.161599,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","short_id":"ce425cfb","created_at":"2018-11-24T18:04:37.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:04:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ce425cfbeef9a32f3c46aafe9f31fb054bb8a103"},"pipeline":{"id":37775514,"iid":5577,"project_id":6138686,"sha":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:09:45.795Z","updated_at":"2018-11-24T18:17:06.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775514"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/124993753","artifacts":[{"file_type":"trace","size":1098,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124993752,"status":"failed","stage":"test","name":"validate:base+32bit","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:09:46.108Z","started_at":"2018-11-24T17:36:02.437Z","finished_at":"2018-11-24T17:38:26.832Z","duration":144.395578,"queued_duration":46.326644,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","short_id":"ce425cfb","created_at":"2018-11-24T18:04:37.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:04:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ce425cfbeef9a32f3c46aafe9f31fb054bb8a103"},"pipeline":{"id":37775514,"iid":5577,"project_id":6138686,"sha":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:09:45.795Z","updated_at":"2018-11-24T18:17:06.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775514"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/124993752","artifacts":[{"file_type":"trace","size":1098,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":124993751,"status":"failed","stage":"test","name":"validate:base","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:09:46.092Z","started_at":"2018-11-24T17:36:01.798Z","finished_at":"2018-11-24T17:36:12.675Z","duration":10.877221,"queued_duration":45.642958,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","short_id":"ce425cfb","created_at":"2018-11-24T18:04:37.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:04:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ce425cfbeef9a32f3c46aafe9f31fb054bb8a103"},"pipeline":{"id":37775514,"iid":5577,"project_id":6138686,"sha":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:09:45.795Z","updated_at":"2018-11-24T18:17:06.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775514"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/124993751","artifacts":[{"file_type":"trace","size":1110,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124993750,"status":"failed","stage":"test","name":"test-suite:egde:dune:dev","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:09:46.074Z","started_at":"2018-11-24T17:35:57.331Z","finished_at":"2018-11-24T17:36:08.469Z","duration":11.138009,"queued_duration":41.144197,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","short_id":"ce425cfb","created_at":"2018-11-24T18:04:37.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:04:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ce425cfbeef9a32f3c46aafe9f31fb054bb8a103"},"pipeline":{"id":37775514,"iid":5577,"project_id":6138686,"sha":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:09:45.795Z","updated_at":"2018-11-24T18:17:06.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775514"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/124993750","artifacts":[{"file_type":"trace","size":1282,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124993749,"status":"failed","stage":"test","name":"test-suite:edge+flambda","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:09:46.057Z","started_at":"2018-11-24T17:35:49.724Z","finished_at":"2018-11-24T17:36:01.573Z","duration":11.849039,"queued_duration":33.504902,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","short_id":"ce425cfb","created_at":"2018-11-24T18:04:37.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:04:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ce425cfbeef9a32f3c46aafe9f31fb054bb8a103"},"pipeline":{"id":37775514,"iid":5577,"project_id":6138686,"sha":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:09:45.795Z","updated_at":"2018-11-24T18:17:06.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775514"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/124993749","artifacts":[{"file_type":"trace","size":1273,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124993748,"status":"failed","stage":"test","name":"test-suite:edge","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:09:46.040Z","started_at":"2018-11-24T17:35:46.720Z","finished_at":"2018-11-24T17:35:57.105Z","duration":10.3853,"queued_duration":30.448617,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","short_id":"ce425cfb","created_at":"2018-11-24T18:04:37.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:04:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ce425cfbeef9a32f3c46aafe9f31fb054bb8a103"},"pipeline":{"id":37775514,"iid":5577,"project_id":6138686,"sha":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:09:45.795Z","updated_at":"2018-11-24T18:17:06.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775514"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/124993748","artifacts":[{"file_type":"trace","size":1274,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124993747,"status":"failed","stage":"test","name":"test-suite:base+32bit","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:09:46.023Z","started_at":"2018-11-24T17:35:16.355Z","finished_at":"2018-11-24T17:35:26.637Z","duration":10.281932,"queued_duration":0.052989,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","short_id":"ce425cfb","created_at":"2018-11-24T18:04:37.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:04:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ce425cfbeef9a32f3c46aafe9f31fb054bb8a103"},"pipeline":{"id":37775514,"iid":5577,"project_id":6138686,"sha":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:09:45.795Z","updated_at":"2018-11-24T18:17:06.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775514"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/124993747","artifacts":[{"file_type":"trace","size":1273,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124993746,"status":"failed","stage":"test","name":"test-suite:base","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:09:46.006Z","started_at":"2018-11-24T17:35:39.557Z","finished_at":"2018-11-24T17:35:48.636Z","duration":9.078589,"queued_duration":23.222676,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","short_id":"ce425cfb","created_at":"2018-11-24T18:04:37.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:04:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ce425cfbeef9a32f3c46aafe9f31fb054bb8a103"},"pipeline":{"id":37775514,"iid":5577,"project_id":6138686,"sha":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:09:45.795Z","updated_at":"2018-11-24T18:17:06.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775514"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/124993746","artifacts":[{"file_type":"trace","size":1273,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124993745,"status":"failed","stage":"test","name":"doc:ml-api:odoc","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:09:45.990Z","started_at":"2018-11-24T17:35:36.562Z","finished_at":"2018-11-24T17:35:46.477Z","duration":9.914266,"queued_duration":20.188034,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","short_id":"ce425cfb","created_at":"2018-11-24T18:04:37.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:04:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ce425cfbeef9a32f3c46aafe9f31fb054bb8a103"},"pipeline":{"id":37775514,"iid":5577,"project_id":6138686,"sha":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:09:45.795Z","updated_at":"2018-11-24T18:17:06.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775514"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/124993745","artifacts":[{"file_type":"trace","size":1111,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124993744,"status":"failed","stage":"test","name":"doc:refman","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:09:45.971Z","started_at":"2018-11-24T17:35:28.648Z","finished_at":"2018-11-24T17:35:38.459Z","duration":9.810498,"queued_duration":12.201187,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","short_id":"ce425cfb","created_at":"2018-11-24T18:04:37.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:04:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ce425cfbeef9a32f3c46aafe9f31fb054bb8a103"},"pipeline":{"id":37775514,"iid":5577,"project_id":6138686,"sha":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:09:45.795Z","updated_at":"2018-11-24T18:17:06.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775514"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/124993744","artifacts":[{"file_type":"trace","size":1110,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124993743,"status":"failed","stage":"test","name":"pkg:nix","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:09:45.952Z","started_at":"2018-11-24T17:35:28.389Z","finished_at":"2018-11-24T18:17:06.564Z","duration":2498.174887,"queued_duration":11.902986,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","short_id":"ce425cfb","created_at":"2018-11-24T18:04:37.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:04:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ce425cfbeef9a32f3c46aafe9f31fb054bb8a103"},"pipeline":{"id":37775514,"iid":5577,"project_id":6138686,"sha":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:09:45.795Z","updated_at":"2018-11-24T18:17:06.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775514"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/124993743","artifacts":[{"file_type":"trace","size":634233,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124993742,"status":"failed","stage":"test","name":"pkg:opam","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:09:45.936Z","started_at":"2018-11-24T17:35:25.395Z","finished_at":"2018-11-24T17:35:36.292Z","duration":10.897595,"queued_duration":8.873695,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","short_id":"ce425cfb","created_at":"2018-11-24T18:04:37.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:04:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ce425cfbeef9a32f3c46aafe9f31fb054bb8a103"},"pipeline":{"id":37775514,"iid":5577,"project_id":6138686,"sha":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:09:45.795Z","updated_at":"2018-11-24T18:17:06.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775514"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/124993742","artifacts":[{"file_type":"trace","size":1111,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":124993741,"status":"failed","stage":"test","name":"windows64","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:09:45.909Z","started_at":"2018-11-24T17:35:16.905Z","finished_at":"2018-11-24T17:35:22.391Z","duration":5.48591,"queued_duration":0.354001,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","short_id":"ce425cfb","created_at":"2018-11-24T18:04:37.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:04:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ce425cfbeef9a32f3c46aafe9f31fb054bb8a103"},"pipeline":{"id":37775514,"iid":5577,"project_id":6138686,"sha":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:09:45.795Z","updated_at":"2018-11-24T18:17:06.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775514"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/124993741","artifacts":[{"file_type":"trace","size":1064,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2018-12-01T17:35:21.797Z","tag_list":["windows"]}
{"id":124993740,"status":"success","stage":"build","name":"build:egde:dune:dev","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:09:45.884Z","started_at":"2018-11-24T17:09:47.709Z","finished_at":"2018-11-24T17:25:06.080Z","duration":918.370548,"queued_duration":0.891266,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","short_id":"ce425cfb","created_at":"2018-11-24T18:04:37.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:04:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ce425cfbeef9a32f3c46aafe9f31fb054bb8a103"},"pipeline":{"id":37775514,"iid":5577,"project_id":6138686,"sha":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:09:45.795Z","updated_at":"2018-11-24T18:17:06.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775514"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124993740","artifacts":[{"file_type":"trace","size":16831,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-12-01T17:24:59.764Z","tag_list":[]}
{"id":124993739,"status":"success","stage":"build","name":"build:edge+flambda","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:09:45.864Z","started_at":"2018-11-24T17:09:47.596Z","finished_at":"2018-11-24T17:35:14.759Z","duration":1527.163636,"queued_duration":0.755014,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","short_id":"ce425cfb","created_at":"2018-11-24T18:04:37.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:04:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ce425cfbeef9a32f3c46aafe9f31fb054bb8a103"},"pipeline":{"id":37775514,"iid":5577,"project_id":6138686,"sha":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:09:45.795Z","updated_at":"2018-11-24T18:17:06.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775514"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124993739","artifacts":[{"file_type":"trace","size":234363,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-12-01T17:35:06.217Z","tag_list":[]}
{"id":124993738,"status":"success","stage":"build","name":"build:edge","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:09:45.846Z","started_at":"2018-11-24T17:09:47.404Z","finished_at":"2018-11-24T17:26:27.711Z","duration":1000.306718,"queued_duration":0.542413,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","short_id":"ce425cfb","created_at":"2018-11-24T18:04:37.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:04:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ce425cfbeef9a32f3c46aafe9f31fb054bb8a103"},"pipeline":{"id":37775514,"iid":5577,"project_id":6138686,"sha":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:09:45.795Z","updated_at":"2018-11-24T18:17:06.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775514"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124993738","artifacts":[{"file_type":"trace","size":233017,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-12-01T17:26:23.242Z","tag_list":[]}
{"id":124993737,"status":"success","stage":"build","name":"build:base+32bit","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:09:45.827Z","started_at":"2018-11-24T17:09:47.328Z","finished_at":"2018-11-24T17:24:42.369Z","duration":895.041937,"queued_duration":0.44178,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","short_id":"ce425cfb","created_at":"2018-11-24T18:04:37.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:04:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ce425cfbeef9a32f3c46aafe9f31fb054bb8a103"},"pipeline":{"id":37775514,"iid":5577,"project_id":6138686,"sha":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:09:45.795Z","updated_at":"2018-11-24T18:17:06.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775514"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124993737","artifacts":[{"file_type":"trace","size":227997,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-12-01T17:24:36.279Z","tag_list":[]}
{"id":124993736,"status":"success","stage":"build","name":"build:base","ref":"pr-8690","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-11-24T17:09:45.806Z","started_at":"2018-11-24T17:09:47.073Z","finished_at":"2018-11-24T17:26:27.030Z","duration":999.957254,"queued_duration":0.161775,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","short_id":"ce425cfb","created_at":"2018-11-24T18:04:37.000+01:00","parent_ids":["90f15edf585f533cc47da545cd1fff011aca821f"],"title":"[toplevel] Split toplevel and compiler binaries.","message":"[toplevel] Split toplevel and compiler binaries.\n\nThanks to some factoring of code done in previous PRs, we can now make\n`coqc` a truly standalone binary. Thus, `coqtop -compile` becomes non\nsupported as `coqtop` does only support now the interactive mode.\n\nThis should solve problems related to `coqc` having its own argument\nparsing, and reduces the number of strange argument combinations a\nlot.\n\nFor now this PR is in the RFC stage, and depends on # , but we are not\nfar, IMHO, from having a mergeable version.\n\nSome things maybe to do before merge:\n\n- implement a compatibility mode for `coqtop -compile`, and the rest\n  of arguments which will emit a deprecation warning and call `coqc`,\n\n- refactor `Coqargs` as to clearly have a set of common arguments,\n  plus a set of compile-only, interactive only ones.\n\nHowever I think that 2 should only be done in this PR if we skip the\ndeprecation phase mentioned in 1.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-10-09T23:02:28.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-11-24T18:04:37.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/ce425cfbeef9a32f3c46aafe9f31fb054bb8a103"},"pipeline":{"id":37775514,"iid":5577,"project_id":6138686,"sha":"ce425cfbeef9a32f3c46aafe9f31fb054bb8a103","ref":"pr-8690","status":"failed","source":"push","created_at":"2018-11-24T17:09:45.795Z","updated_at":"2018-11-24T18:17:06.667Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/37775514"},"web_url":"https://gitlab.com/coq/coq/-/jobs/124993736","artifacts":[{"file_type":"trace","size":275451,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-12-01T17:26:21.616Z","tag_list":[]}
