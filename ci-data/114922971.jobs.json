{"id":425759651,"status":"success","stage":"stage-4","name":"library:ci-fiat-crypto","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T17:25:24.731Z","started_at":"2020-02-04T17:25:25.373Z","finished_at":"2020-02-04T19:16:03.208Z","duration":6637.835047,"queued_duration":0.513543,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425759651","artifacts":[{"file_type":"trace","size":279595,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":425736874,"status":"success","stage":"stage-2","name":"library:ci-bedrock2","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T17:10:19.552Z","started_at":"2020-02-04T17:10:19.930Z","finished_at":"2020-02-04T18:38:12.920Z","duration":5272.990463,"queued_duration":0.350816,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425736874","artifacts":[{"file_type":"trace","size":320378,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":425736497,"status":"success","stage":"stage-2","name":"plugin:ci-bignums","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T17:10:07.927Z","started_at":"2020-02-04T17:10:09.248Z","finished_at":"2020-02-04T17:15:12.049Z","duration":302.801792,"queued_duration":1.224378,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425736497","artifacts":[{"file_type":"trace","size":46978,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":425736495,"status":"success","stage":"stage-2","name":"library:ci-verdi-raft","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T17:10:07.636Z","started_at":"2020-02-04T17:10:08.833Z","finished_at":"2020-02-04T17:40:20.986Z","duration":1812.152552,"queued_duration":1.094469,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425736495","artifacts":[{"file_type":"trace","size":175534,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":425736483,"status":"success","stage":"stage-2","name":"library:ci-fiat-crypto-legacy","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T17:10:07.160Z","started_at":"2020-02-04T17:10:08.764Z","finished_at":"2020-02-04T18:15:45.768Z","duration":3937.003849,"queued_duration":1.523103,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425736483","artifacts":[{"file_type":"trace","size":537535,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":425718720,"status":"success","stage":"stage-2","name":"plugin:ci-coqhammer","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T16:57:59.117Z","started_at":"2020-02-04T16:57:59.467Z","finished_at":"2020-02-04T17:01:33.091Z","duration":213.624257,"queued_duration":0.321609,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425718720","artifacts":[{"file_type":"trace","size":40879,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":425718711,"status":"failed","stage":"stage-2","name":"library:ci-flocq","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T16:57:58.163Z","started_at":"2020-02-04T16:57:58.837Z","finished_at":"2020-02-04T17:04:21.153Z","duration":382.315845,"queued_duration":0.64458,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/425718711","artifacts":[{"file_type":"trace","size":35428,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":425718538,"status":"success","stage":"stage-2","name":"plugin:ci-coq_dpdgraph","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T16:57:48.211Z","started_at":"2020-02-04T16:57:48.613Z","finished_at":"2020-02-04T17:02:02.523Z","duration":253.910232,"queued_duration":0.365308,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425718538","artifacts":[{"file_type":"trace","size":46390,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":425718530,"status":"success","stage":"stage-2","name":"plugin:ci-aac_tactics","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T16:57:47.590Z","started_at":"2020-02-04T16:57:48.415Z","finished_at":"2020-02-04T17:01:28.987Z","duration":220.571979,"queued_duration":0.794259,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425718530","artifacts":[{"file_type":"trace","size":52017,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":425718516,"status":"success","stage":"stage-2","name":"validate:base","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T16:57:46.867Z","started_at":"2020-02-04T16:57:48.198Z","finished_at":"2020-02-04T17:02:49.434Z","duration":301.235824,"queued_duration":1.302317,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425718516","artifacts":[{"file_type":"trace","size":68808,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-04T17:02:47.438Z","tag_list":[]}
{"id":425718505,"status":"success","stage":"stage-2","name":"test-suite:base+async","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-02-04T16:57:46.303Z","started_at":"2020-02-04T16:57:47.230Z","finished_at":"2020-02-04T17:39:57.727Z","duration":2530.496996,"queued_duration":0.889332,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425718505","artifacts":[{"file_type":"trace","size":122602,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":425690412,"status":"success","stage":"stage-1","name":"build:base","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T16:36:34.104Z","started_at":"2020-02-04T16:36:35.159Z","finished_at":"2020-02-04T16:57:34.062Z","duration":1258.903158,"queued_duration":0.568359,"user":{"id":400418,"username":"ejgallego","name":"Emilio Jesús Gallego Arias","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/400418/avatar.png","web_url":"https://gitlab.com/ejgallego","created_at":"2016-02-07T00:36:59.511Z","bio":"“La perfection est atteinte, non pas lorsqu'il n'y a plus rien à ajouter, mais lorsqu'il n'y a plus rien à retirer.”","location":"","public_email":"e@x80.org","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425690412","artifacts":[{"file_type":"trace","size":321591,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-02-11T16:57:23.984Z","tag_list":[]}
{"id":425660679,"status":"success","stage":"stage-4","name":"library:ci-corn","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T16:16:19.869Z","started_at":"2020-02-04T17:24:13.424Z","finished_at":"2020-02-04T18:00:37.623Z","duration":2184.198296,"queued_duration":0.834734,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425660679","artifacts":[{"file_type":"trace","size":360564,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":425660676,"status":"success","stage":"stage-3","name":"library:ci-math-classes","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T16:16:19.827Z","started_at":"2020-02-04T17:15:13.331Z","finished_at":"2020-02-04T17:24:12.448Z","duration":539.11685,"queued_duration":0.993805,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425660676","artifacts":[{"file_type":"trace","size":173900,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":425660675,"status":"success","stage":"stage-3","name":"library:ci-coqprime","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T16:16:19.810Z","started_at":"2020-02-04T17:15:13.037Z","finished_at":"2020-02-04T17:21:30.952Z","duration":377.914881,"queued_duration":0.796237,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425660675","artifacts":[{"file_type":"trace","size":88573,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":425660673,"status":"success","stage":"stage-3","name":"library:ci-color","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T16:16:19.793Z","started_at":"2020-02-04T17:15:12.655Z","finished_at":"2020-02-04T17:38:12.931Z","duration":1380.275301,"queued_duration":0.485127,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425660673","artifacts":[{"file_type":"trace","size":239097,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":425660671,"status":"success","stage":"stage-2","name":"plugin:ci-rewriter","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T16:16:19.771Z","started_at":"2020-02-04T17:09:58.279Z","finished_at":"2020-02-04T17:25:13.356Z","duration":915.077072,"queued_duration":3.444883,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425660671","artifacts":[{"file_type":"trace","size":134877,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":425660670,"status":"success","stage":"stage-2","name":"plugin:ci-relation_algebra","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T16:16:19.752Z","started_at":"2020-02-04T16:57:39.033Z","finished_at":"2020-02-04T17:04:18.626Z","duration":399.593705,"queued_duration":1.389993,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425660670","artifacts":[{"file_type":"trace","size":57162,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":425660669,"status":"success","stage":"stage-2","name":"plugin:ci-reduction_effects","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T16:16:19.736Z","started_at":"2020-02-04T16:57:38.969Z","finished_at":"2020-02-04T17:01:05.520Z","duration":206.550936,"queued_duration":1.453057,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425660669","artifacts":[{"file_type":"trace","size":33585,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":425660668,"status":"success","stage":"stage-2","name":"plugin:ci-quickchick","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T16:16:19.718Z","started_at":"2020-02-04T17:09:58.221Z","finished_at":"2020-02-04T17:17:06.372Z","duration":428.151383,"queued_duration":3.443484,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425660668","artifacts":[{"file_type":"trace","size":269661,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":425660667,"status":"success","stage":"stage-2","name":"plugin:ci-perennial","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T16:16:19.698Z","started_at":"2020-02-04T17:09:58.160Z","finished_at":"2020-02-04T17:39:21.321Z","duration":1763.161285,"queued_duration":3.4353,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425660667","artifacts":[{"file_type":"trace","size":39278,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":425660666,"status":"success","stage":"stage-2","name":"plugin:ci-paramcoq","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T16:16:19.680Z","started_at":"2020-02-04T16:57:38.908Z","finished_at":"2020-02-04T17:01:24.646Z","duration":225.738202,"queued_duration":1.57377,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425660666","artifacts":[{"file_type":"trace","size":83255,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":425660665,"status":"success","stage":"stage-2","name":"plugin:ci-mtac2","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T16:16:19.663Z","started_at":"2020-02-04T16:57:38.852Z","finished_at":"2020-02-04T17:02:38.642Z","duration":299.789678,"queued_duration":1.644327,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425660665","artifacts":[{"file_type":"trace","size":145402,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":425660664,"status":"success","stage":"stage-2","name":"plugin:ci-fiat_parsers","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T16:16:19.645Z","started_at":"2020-02-04T16:57:38.793Z","finished_at":"2020-02-04T17:15:28.432Z","duration":1069.639369,"queued_duration":1.735157,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425660664","artifacts":[{"file_type":"trace","size":235736,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":425660663,"status":"success","stage":"stage-2","name":"plugin:ci-equations","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T16:16:19.624Z","started_at":"2020-02-04T16:57:38.737Z","finished_at":"2020-02-04T17:06:11.601Z","duration":512.864643,"queued_duration":1.785381,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425660663","artifacts":[{"file_type":"trace","size":88897,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":425660662,"status":"success","stage":"stage-2","name":"plugin:ci-elpi","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T16:16:19.603Z","started_at":"2020-02-04T16:57:38.683Z","finished_at":"2020-02-04T17:02:20.998Z","duration":282.314369,"queued_duration":1.866581,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425660662","artifacts":[{"file_type":"trace","size":379466,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":425660657,"status":"failed","stage":"stage-2","name":"library:ci-vst","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T16:16:19.477Z","started_at":"2020-02-04T17:09:57.458Z","finished_at":"2020-02-04T17:17:03.037Z","duration":425.579644,"queued_duration":2.844974,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/425660657","artifacts":[{"file_type":"trace","size":160301,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":425660653,"status":"success","stage":"stage-2","name":"library:ci-unimath","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T16:16:19.382Z","started_at":"2020-02-04T17:09:57.286Z","finished_at":"2020-02-04T18:24:35.157Z","duration":4477.870456,"queued_duration":2.777379,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425660653","artifacts":[{"file_type":"trace","size":200690,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":425660651,"status":"success","stage":"stage-2","name":"library:ci-tlc","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T16:16:19.341Z","started_at":"2020-02-04T16:57:37.536Z","finished_at":"2020-02-04T17:02:21.518Z","duration":283.981712,"queued_duration":1.132142,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425660651","artifacts":[{"file_type":"trace","size":35681,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":425660650,"status":"success","stage":"stage-2","name":"library:ci-stdlib2","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T16:16:19.312Z","started_at":"2020-02-04T17:09:57.177Z","finished_at":"2020-02-04T17:13:45.150Z","duration":227.973088,"queued_duration":2.724136,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425660650","artifacts":[{"file_type":"trace","size":38070,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":425660649,"status":"success","stage":"stage-2","name":"library:ci-sf","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T16:16:19.267Z","started_at":"2020-02-04T16:57:37.438Z","finished_at":"2020-02-04T17:02:43.847Z","duration":306.409056,"queued_duration":1.190068,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425660649","artifacts":[{"file_type":"trace","size":435497,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":425660648,"status":"success","stage":"stage-2","name":"library:ci-math-comp","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T16:16:19.245Z","started_at":"2020-02-04T17:09:57.116Z","finished_at":"2020-02-04T18:47:50.605Z","duration":5873.488897,"queued_duration":2.719572,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425660648","artifacts":[{"file_type":"trace","size":396057,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":425660647,"status":"success","stage":"stage-2","name":"library:ci-iris-lambda-rust","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T16:16:19.225Z","started_at":"2020-02-04T17:09:57.056Z","finished_at":"2020-02-04T18:02:15.059Z","duration":3138.002751,"queued_duration":2.715805,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425660647","artifacts":[{"file_type":"trace","size":302179,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":425660646,"status":"success","stage":"stage-2","name":"library:ci-hott","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T16:16:19.202Z","started_at":"2020-02-04T16:57:37.237Z","finished_at":"2020-02-04T17:18:35.575Z","duration":1258.33804,"queued_duration":1.146366,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425660646","artifacts":[{"file_type":"trace","size":124168,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":425660645,"status":"success","stage":"stage-2","name":"library:ci-geocoq","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T16:16:19.181Z","started_at":"2020-02-04T17:09:57.003Z","finished_at":"2020-02-04T17:50:06.660Z","duration":2409.65757,"queued_duration":2.717565,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425660645","artifacts":[{"file_type":"trace","size":476798,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":425660642,"status":"success","stage":"stage-2","name":"library:ci-fcsl-pcm","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T16:16:19.104Z","started_at":"2020-02-04T16:57:37.071Z","finished_at":"2020-02-04T17:02:35.615Z","duration":298.544307,"queued_duration":1.297049,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425660642","artifacts":[{"file_type":"trace","size":134256,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":425660641,"status":"success","stage":"stage-2","name":"library:ci-cross-crypto","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T16:16:19.082Z","started_at":"2020-02-04T16:57:37.018Z","finished_at":"2020-02-04T17:35:26.326Z","duration":2269.308837,"queued_duration":1.416791,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425660641","artifacts":[{"file_type":"trace","size":49597,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":425660640,"status":"success","stage":"stage-2","name":"library:ci-coquelicot","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T16:16:19.064Z","started_at":"2020-02-04T16:57:36.958Z","finished_at":"2020-02-04T17:03:40.636Z","duration":363.678516,"queued_duration":1.512946,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425660640","artifacts":[{"file_type":"trace","size":166824,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":425660638,"status":"success","stage":"stage-2","name":"library:ci-compcert","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T16:16:19.044Z","started_at":"2020-02-04T17:09:56.604Z","finished_at":"2020-02-04T17:33:27.682Z","duration":1411.078031,"queued_duration":2.427449,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425660638","artifacts":[{"file_type":"trace","size":4194361,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":425660636,"status":"success","stage":"stage-2","name":"library:ci-argosy","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T16:16:18.985Z","started_at":"2020-02-04T16:57:36.902Z","finished_at":"2020-02-04T17:02:08.423Z","duration":271.520915,"queued_duration":1.637719,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425660636","artifacts":[{"file_type":"trace","size":29986,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":425660634,"status":"success","stage":"stage-2","name":"validate:quick","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T16:16:18.958Z","started_at":"2020-02-04T16:57:36.324Z","finished_at":"2020-02-04T17:02:28.445Z","duration":292.121291,"queued_duration":1.51335,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425660634","artifacts":[{"file_type":"trace","size":68748,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-04T17:02:26.445Z","tag_list":[]}
{"id":425660631,"status":"success","stage":"stage-2","name":"validate:edge+flambda","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T16:16:18.930Z","started_at":"2020-02-04T17:09:56.414Z","finished_at":"2020-02-04T17:14:57.401Z","duration":300.986065,"queued_duration":2.350642,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425660631","artifacts":[{"file_type":"trace","size":69434,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-04T17:14:55.765Z","tag_list":[]}
{"id":425660629,"status":"success","stage":"stage-2","name":"validate:base+32bit","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T16:16:18.896Z","started_at":"2020-02-04T16:53:11.953Z","finished_at":"2020-02-04T16:58:19.149Z","duration":307.196406,"queued_duration":1.017133,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425660629","artifacts":[{"file_type":"trace","size":67503,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-04T16:58:17.389Z","tag_list":[]}
{"id":425660624,"status":"success","stage":"stage-2","name":"test-suite:edge:dune:dev","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T16:16:18.797Z","started_at":"2020-02-04T16:56:28.185Z","finished_at":"2020-02-04T17:18:49.547Z","duration":1341.361759,"queued_duration":0.974029,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425660624","artifacts":[{"file_type":"trace","size":93584,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":425660623,"status":"success","stage":"stage-2","name":"test-suite:edge+flambda","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T16:16:18.772Z","started_at":"2020-02-04T17:09:55.641Z","finished_at":"2020-02-04T17:35:21.515Z","duration":1525.873666,"queued_duration":1.640181,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425660623","artifacts":[{"file_type":"trace","size":93625,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":425660622,"status":"success","stage":"stage-2","name":"test-suite:base+32bit","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T16:16:18.737Z","started_at":"2020-02-04T16:53:11.787Z","finished_at":"2020-02-04T17:14:56.688Z","duration":1304.901831,"queued_duration":0.912563,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425660622","artifacts":[{"file_type":"trace","size":91693,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":425660621,"status":"success","stage":"stage-2","name":"test-suite:base","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T16:16:18.705Z","started_at":"2020-02-04T16:57:35.152Z","finished_at":"2020-02-04T17:19:35.992Z","duration":1320.840083,"queued_duration":0.688504,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425660621","artifacts":[{"file_type":"trace","size":121953,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":425660620,"status":"success","stage":"stage-2","name":"doc:ml-api:odoc","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T16:16:18.672Z","started_at":"2020-02-04T16:56:28.118Z","finished_at":"2020-02-04T17:01:41.446Z","duration":313.328398,"queued_duration":0.965261,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425660620","artifacts":[{"file_type":"trace","size":75945,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-04T17:01:39.738Z","tag_list":[]}
{"id":425660619,"status":"success","stage":"stage-2","name":"doc:stdlib:dune","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T16:16:18.634Z","started_at":"2020-02-04T16:56:27.930Z","finished_at":"2020-02-04T17:01:44.247Z","duration":316.317249,"queued_duration":0.838271,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425660619","artifacts":[{"file_type":"trace","size":25650,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-04T17:01:42.320Z","tag_list":[]}
{"id":425660618,"status":"success","stage":"stage-2","name":"doc:refman:dune","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T16:16:18.596Z","started_at":"2020-02-04T16:56:27.826Z","finished_at":"2020-02-04T17:02:56.117Z","duration":388.291395,"queued_duration":0.790055,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425660618","artifacts":[{"file_type":"trace","size":23544,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-04T17:02:54.543Z","tag_list":[]}
{"id":425660617,"status":"success","stage":"stage-2","name":"doc:refman","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T16:16:18.573Z","started_at":"2020-02-04T16:57:34.929Z","finished_at":"2020-02-04T17:06:21.309Z","duration":526.379729,"queued_duration":0.637157,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425660617","artifacts":[{"file_type":"trace","size":1337892,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-04-04T17:06:19.936Z","tag_list":[]}
{"id":425660616,"status":"success","stage":"stage-1","name":"plugin:plugin-tutorial","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T16:16:18.524Z","started_at":"2020-02-04T16:36:29.236Z","finished_at":"2020-02-04T16:41:06.677Z","duration":277.440811,"queued_duration":2.160815,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425660616","artifacts":[{"file_type":"trace","size":57461,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":425660615,"status":"success","stage":"stage-1","name":"pkg:nix","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T16:16:18.495Z","started_at":"2020-02-04T16:36:29.182Z","finished_at":"2020-02-04T17:19:38.589Z","duration":2589.406389,"queued_duration":2.13651,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425660615","artifacts":[{"file_type":"trace","size":579552,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":425660614,"status":"success","stage":"stage-1","name":"pkg:opam","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T16:16:18.472Z","started_at":"2020-02-04T16:36:29.126Z","finished_at":"2020-02-04T17:02:24.014Z","duration":1554.887539,"queued_duration":2.101183,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425660614","artifacts":[{"file_type":"trace","size":20180,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":425660613,"status":"success","stage":"stage-1","name":"lint","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T16:16:18.450Z","started_at":"2020-02-04T16:36:28.423Z","finished_at":"2020-02-04T16:43:02.973Z","duration":394.549829,"queued_duration":1.417773,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425660613","artifacts":[{"file_type":"trace","size":36417,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":425660612,"status":"success","stage":"stage-1","name":"windows64","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T16:16:18.419Z","started_at":"2020-02-04T16:36:27.372Z","finished_at":"2020-02-04T17:39:17.859Z","duration":3770.486556,"queued_duration":0.391286,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425660612","artifacts":[{"file_type":"trace","size":246311,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-02-11T17:39:15.838Z","tag_list":["windows-inria"]}
{"id":425660611,"status":"success","stage":"stage-1","name":"build:quick","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-02-04T16:16:18.398Z","started_at":"2020-02-04T16:36:28.283Z","finished_at":"2020-02-04T16:57:34.061Z","duration":1265.777897,"queued_duration":1.332647,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425660611","artifacts":[{"file_type":"trace","size":193177,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-02-11T16:57:23.190Z","tag_list":[]}
{"id":425660609,"status":"success","stage":"stage-1","name":"build:base+async","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-02-04T16:16:18.372Z","started_at":"2020-02-04T16:36:27.801Z","finished_at":"2020-02-04T17:51:43.676Z","duration":4515.875263,"queued_duration":0.873208,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425660609","artifacts":[{"file_type":"trace","size":273682,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-02-11T17:51:41.732Z","tag_list":[]}
{"id":425660607,"status":"success","stage":"stage-1","name":"build:edge+flambda:dune:dev","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T16:16:18.349Z","started_at":"2020-02-04T16:36:27.542Z","finished_at":"2020-02-04T16:56:26.920Z","duration":1199.378047,"queued_duration":0.635841,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425660607","artifacts":[{"file_type":"trace","size":20181,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-02-11T16:56:25.393Z","tag_list":[]}
{"id":425660606,"status":"success","stage":"stage-1","name":"build:edge+flambda","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T16:16:18.329Z","started_at":"2020-02-04T16:36:27.243Z","finished_at":"2020-02-04T17:09:53.844Z","duration":2006.601705,"queued_duration":0.359527,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425660606","artifacts":[{"file_type":"trace","size":275417,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-02-11T17:09:51.712Z","tag_list":[]}
{"id":425660604,"status":"success","stage":"stage-1","name":"build:base+32bit","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-02-04T16:16:18.307Z","started_at":"2020-02-04T16:36:27.145Z","finished_at":"2020-02-04T16:53:10.757Z","duration":1003.611428,"queued_duration":0.283435,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"620b07da91ef13411ed7cc2c6d368eecac4a3076","short_id":"620b07da","created_at":"2020-02-04T17:15:31.000+01:00","parent_ids":["d07b2862ec9a562f72c2f85e1b5f4529de200a07"],"title":"[zify] several efficiency improvements","message":"[zify] several efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-02-04T17:15:31.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/620b07da91ef13411ed7cc2c6d368eecac4a3076"},"pipeline":{"id":114922971,"iid":13438,"project_id":6138686,"sha":"620b07da91ef13411ed7cc2c6d368eecac4a3076","ref":"pr-11429","status":"failed","source":"push","created_at":"2020-02-04T16:16:18.202Z","updated_at":"2020-02-04T19:16:03.285Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/114922971"},"web_url":"https://gitlab.com/coq/coq/-/jobs/425660604","artifacts":[{"file_type":"trace","size":267833,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-02-11T16:53:08.978Z","tag_list":[]}
