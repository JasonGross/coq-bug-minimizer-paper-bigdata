{"id":138730226,"status":"success","stage":"test","name":"plugin:ci-relation-algebra","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-12-25T20:33:34.752Z","started_at":"2018-12-25T20:59:21.856Z","finished_at":"2018-12-25T21:05:15.581Z","duration":353.725516,"queued_duration":2.384508,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a44cd93212481ff96451fe9414fa7dd66dc6518","short_id":"7a44cd93","created_at":"2018-12-25T21:33:22.000+01:00","parent_ids":["599696d804eb7c40661615a49c5d729e7d6ff373"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-12-25T21:33:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a44cd93212481ff96451fe9414fa7dd66dc6518"},"pipeline":{"id":41293456,"iid":6367,"project_id":6138686,"sha":"7a44cd93212481ff96451fe9414fa7dd66dc6518","ref":"pr-9047","status":"success","source":"push","created_at":"2018-12-25T20:33:33.859Z","updated_at":"2018-12-25T22:21:34.312Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/41293456"},"web_url":"https://gitlab.com/coq/coq/-/jobs/138730226","artifacts":[{"file_type":"trace","size":51234,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":138730225,"status":"success","stage":"test","name":"plugin:ci-quickchick","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-12-25T20:33:34.736Z","started_at":"2018-12-25T20:59:21.805Z","finished_at":"2018-12-25T21:04:57.838Z","duration":336.032893,"queued_duration":2.278055,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a44cd93212481ff96451fe9414fa7dd66dc6518","short_id":"7a44cd93","created_at":"2018-12-25T21:33:22.000+01:00","parent_ids":["599696d804eb7c40661615a49c5d729e7d6ff373"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-12-25T21:33:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a44cd93212481ff96451fe9414fa7dd66dc6518"},"pipeline":{"id":41293456,"iid":6367,"project_id":6138686,"sha":"7a44cd93212481ff96451fe9414fa7dd66dc6518","ref":"pr-9047","status":"success","source":"push","created_at":"2018-12-25T20:33:33.859Z","updated_at":"2018-12-25T22:21:34.312Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/41293456"},"web_url":"https://gitlab.com/coq/coq/-/jobs/138730225","artifacts":[{"file_type":"trace","size":283769,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":138730224,"status":"success","stage":"test","name":"plugin:ci-plugin_tutorial","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-12-25T20:33:34.720Z","started_at":"2018-12-25T20:59:21.760Z","finished_at":"2018-12-25T21:02:19.557Z","duration":177.797161,"queued_duration":2.169836,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a44cd93212481ff96451fe9414fa7dd66dc6518","short_id":"7a44cd93","created_at":"2018-12-25T21:33:22.000+01:00","parent_ids":["599696d804eb7c40661615a49c5d729e7d6ff373"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-12-25T21:33:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a44cd93212481ff96451fe9414fa7dd66dc6518"},"pipeline":{"id":41293456,"iid":6367,"project_id":6138686,"sha":"7a44cd93212481ff96451fe9414fa7dd66dc6518","ref":"pr-9047","status":"success","source":"push","created_at":"2018-12-25T20:33:33.859Z","updated_at":"2018-12-25T22:21:34.312Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/41293456"},"web_url":"https://gitlab.com/coq/coq/-/jobs/138730224","artifacts":[{"file_type":"trace","size":30633,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":138730223,"status":"success","stage":"test","name":"plugin:ci-paramcoq","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-12-25T20:33:34.702Z","started_at":"2018-12-25T20:59:21.656Z","finished_at":"2018-12-25T21:02:28.846Z","duration":187.190002,"queued_duration":1.993836,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a44cd93212481ff96451fe9414fa7dd66dc6518","short_id":"7a44cd93","created_at":"2018-12-25T21:33:22.000+01:00","parent_ids":["599696d804eb7c40661615a49c5d729e7d6ff373"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-12-25T21:33:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a44cd93212481ff96451fe9414fa7dd66dc6518"},"pipeline":{"id":41293456,"iid":6367,"project_id":6138686,"sha":"7a44cd93212481ff96451fe9414fa7dd66dc6518","ref":"pr-9047","status":"success","source":"push","created_at":"2018-12-25T20:33:33.859Z","updated_at":"2018-12-25T22:21:34.312Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/41293456"},"web_url":"https://gitlab.com/coq/coq/-/jobs/138730223","artifacts":[{"file_type":"trace","size":54633,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":138730222,"status":"success","stage":"test","name":"plugin:ci-mtac2","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-12-25T20:33:34.686Z","started_at":"2018-12-25T20:59:21.610Z","finished_at":"2018-12-25T21:04:38.840Z","duration":317.230109,"queued_duration":1.904958,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a44cd93212481ff96451fe9414fa7dd66dc6518","short_id":"7a44cd93","created_at":"2018-12-25T21:33:22.000+01:00","parent_ids":["599696d804eb7c40661615a49c5d729e7d6ff373"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-12-25T21:33:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a44cd93212481ff96451fe9414fa7dd66dc6518"},"pipeline":{"id":41293456,"iid":6367,"project_id":6138686,"sha":"7a44cd93212481ff96451fe9414fa7dd66dc6518","ref":"pr-9047","status":"success","source":"push","created_at":"2018-12-25T20:33:33.859Z","updated_at":"2018-12-25T22:21:34.312Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/41293456"},"web_url":"https://gitlab.com/coq/coq/-/jobs/138730222","artifacts":[{"file_type":"trace","size":248985,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":138730221,"status":"success","stage":"test","name":"plugin:ci-ltac2","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-12-25T20:33:34.670Z","started_at":"2018-12-25T20:59:21.541Z","finished_at":"2018-12-25T21:02:19.936Z","duration":178.394876,"queued_duration":1.76323,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a44cd93212481ff96451fe9414fa7dd66dc6518","short_id":"7a44cd93","created_at":"2018-12-25T21:33:22.000+01:00","parent_ids":["599696d804eb7c40661615a49c5d729e7d6ff373"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-12-25T21:33:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a44cd93212481ff96451fe9414fa7dd66dc6518"},"pipeline":{"id":41293456,"iid":6367,"project_id":6138686,"sha":"7a44cd93212481ff96451fe9414fa7dd66dc6518","ref":"pr-9047","status":"success","source":"push","created_at":"2018-12-25T20:33:33.859Z","updated_at":"2018-12-25T22:21:34.312Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/41293456"},"web_url":"https://gitlab.com/coq/coq/-/jobs/138730221","artifacts":[{"file_type":"trace","size":40530,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":138730220,"status":"success","stage":"test","name":"plugin:ci-fiat-parsers","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-12-25T20:33:34.654Z","started_at":"2018-12-25T20:59:21.394Z","finished_at":"2018-12-25T21:18:49.038Z","duration":1167.644112,"queued_duration":1.576441,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a44cd93212481ff96451fe9414fa7dd66dc6518","short_id":"7a44cd93","created_at":"2018-12-25T21:33:22.000+01:00","parent_ids":["599696d804eb7c40661615a49c5d729e7d6ff373"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-12-25T21:33:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a44cd93212481ff96451fe9414fa7dd66dc6518"},"pipeline":{"id":41293456,"iid":6367,"project_id":6138686,"sha":"7a44cd93212481ff96451fe9414fa7dd66dc6518","ref":"pr-9047","status":"success","source":"push","created_at":"2018-12-25T20:33:33.859Z","updated_at":"2018-12-25T22:21:34.312Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/41293456"},"web_url":"https://gitlab.com/coq/coq/-/jobs/138730220","artifacts":[{"file_type":"trace","size":268971,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":138730219,"status":"success","stage":"test","name":"plugin:ci-equations","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-12-25T20:33:34.638Z","started_at":"2018-12-25T20:59:20.852Z","finished_at":"2018-12-25T21:06:32.324Z","duration":431.471924,"queued_duration":1.003962,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a44cd93212481ff96451fe9414fa7dd66dc6518","short_id":"7a44cd93","created_at":"2018-12-25T21:33:22.000+01:00","parent_ids":["599696d804eb7c40661615a49c5d729e7d6ff373"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-12-25T21:33:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a44cd93212481ff96451fe9414fa7dd66dc6518"},"pipeline":{"id":41293456,"iid":6367,"project_id":6138686,"sha":"7a44cd93212481ff96451fe9414fa7dd66dc6518","ref":"pr-9047","status":"success","source":"push","created_at":"2018-12-25T20:33:33.859Z","updated_at":"2018-12-25T22:21:34.312Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/41293456"},"web_url":"https://gitlab.com/coq/coq/-/jobs/138730219","artifacts":[{"file_type":"trace","size":88191,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":138730218,"status":"success","stage":"test","name":"plugin:ci-elpi","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-12-25T20:33:34.622Z","started_at":"2018-12-25T20:59:20.760Z","finished_at":"2018-12-25T21:03:14.996Z","duration":234.236154,"queued_duration":0.857562,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a44cd93212481ff96451fe9414fa7dd66dc6518","short_id":"7a44cd93","created_at":"2018-12-25T21:33:22.000+01:00","parent_ids":["599696d804eb7c40661615a49c5d729e7d6ff373"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-12-25T21:33:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a44cd93212481ff96451fe9414fa7dd66dc6518"},"pipeline":{"id":41293456,"iid":6367,"project_id":6138686,"sha":"7a44cd93212481ff96451fe9414fa7dd66dc6518","ref":"pr-9047","status":"success","source":"push","created_at":"2018-12-25T20:33:33.859Z","updated_at":"2018-12-25T22:21:34.312Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/41293456"},"web_url":"https://gitlab.com/coq/coq/-/jobs/138730218","artifacts":[{"file_type":"trace","size":418828,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":138730217,"status":"success","stage":"test","name":"plugin:ci-coqhammer","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-12-25T20:33:34.606Z","started_at":"2018-12-25T20:59:20.119Z","finished_at":"2018-12-25T21:02:28.345Z","duration":188.226243,"queued_duration":0.18729,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a44cd93212481ff96451fe9414fa7dd66dc6518","short_id":"7a44cd93","created_at":"2018-12-25T21:33:22.000+01:00","parent_ids":["599696d804eb7c40661615a49c5d729e7d6ff373"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-12-25T21:33:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a44cd93212481ff96451fe9414fa7dd66dc6518"},"pipeline":{"id":41293456,"iid":6367,"project_id":6138686,"sha":"7a44cd93212481ff96451fe9414fa7dd66dc6518","ref":"pr-9047","status":"success","source":"push","created_at":"2018-12-25T20:33:33.859Z","updated_at":"2018-12-25T22:21:34.312Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/41293456"},"web_url":"https://gitlab.com/coq/coq/-/jobs/138730217","artifacts":[{"file_type":"trace","size":28750,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":138730216,"status":"success","stage":"test","name":"plugin:ci-coq_dpdgraph","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-12-25T20:33:34.591Z","started_at":"2018-12-25T20:59:20.068Z","finished_at":"2018-12-25T21:02:02.681Z","duration":162.613188,"queued_duration":0.105861,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a44cd93212481ff96451fe9414fa7dd66dc6518","short_id":"7a44cd93","created_at":"2018-12-25T21:33:22.000+01:00","parent_ids":["599696d804eb7c40661615a49c5d729e7d6ff373"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-12-25T21:33:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a44cd93212481ff96451fe9414fa7dd66dc6518"},"pipeline":{"id":41293456,"iid":6367,"project_id":6138686,"sha":"7a44cd93212481ff96451fe9414fa7dd66dc6518","ref":"pr-9047","status":"success","source":"push","created_at":"2018-12-25T20:33:33.859Z","updated_at":"2018-12-25T22:21:34.312Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/41293456"},"web_url":"https://gitlab.com/coq/coq/-/jobs/138730216","artifacts":[{"file_type":"trace","size":38129,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":138730215,"status":"success","stage":"test","name":"plugin:ci-bignums","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-12-25T20:33:34.575Z","started_at":"2018-12-25T20:59:20.646Z","finished_at":"2018-12-25T21:03:19.108Z","duration":238.461922,"queued_duration":0.622109,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a44cd93212481ff96451fe9414fa7dd66dc6518","short_id":"7a44cd93","created_at":"2018-12-25T21:33:22.000+01:00","parent_ids":["599696d804eb7c40661615a49c5d729e7d6ff373"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-12-25T21:33:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a44cd93212481ff96451fe9414fa7dd66dc6518"},"pipeline":{"id":41293456,"iid":6367,"project_id":6138686,"sha":"7a44cd93212481ff96451fe9414fa7dd66dc6518","ref":"pr-9047","status":"success","source":"push","created_at":"2018-12-25T20:33:33.859Z","updated_at":"2018-12-25T22:21:34.312Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/41293456"},"web_url":"https://gitlab.com/coq/coq/-/jobs/138730215","artifacts":[{"file_type":"trace","size":50247,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":138730214,"status":"success","stage":"test","name":"plugin:ci-aac_tactics","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-12-25T20:33:34.558Z","started_at":"2018-12-25T20:59:20.601Z","finished_at":"2018-12-25T21:02:17.278Z","duration":176.677645,"queued_duration":0.533831,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a44cd93212481ff96451fe9414fa7dd66dc6518","short_id":"7a44cd93","created_at":"2018-12-25T21:33:22.000+01:00","parent_ids":["599696d804eb7c40661615a49c5d729e7d6ff373"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-12-25T21:33:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a44cd93212481ff96451fe9414fa7dd66dc6518"},"pipeline":{"id":41293456,"iid":6367,"project_id":6138686,"sha":"7a44cd93212481ff96451fe9414fa7dd66dc6518","ref":"pr-9047","status":"success","source":"push","created_at":"2018-12-25T20:33:33.859Z","updated_at":"2018-12-25T22:21:34.312Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/41293456"},"web_url":"https://gitlab.com/coq/coq/-/jobs/138730214","artifacts":[{"file_type":"trace","size":44560,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":138730213,"status":"success","stage":"test","name":"library:ci-vst","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-12-25T20:33:34.539Z","started_at":"2018-12-25T20:59:20.497Z","finished_at":"2018-12-25T22:09:09.598Z","duration":4189.100645,"queued_duration":0.374674,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a44cd93212481ff96451fe9414fa7dd66dc6518","short_id":"7a44cd93","created_at":"2018-12-25T21:33:22.000+01:00","parent_ids":["599696d804eb7c40661615a49c5d729e7d6ff373"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-12-25T21:33:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a44cd93212481ff96451fe9414fa7dd66dc6518"},"pipeline":{"id":41293456,"iid":6367,"project_id":6138686,"sha":"7a44cd93212481ff96451fe9414fa7dd66dc6518","ref":"pr-9047","status":"success","source":"push","created_at":"2018-12-25T20:33:33.859Z","updated_at":"2018-12-25T22:21:34.312Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/41293456"},"web_url":"https://gitlab.com/coq/coq/-/jobs/138730213","artifacts":[{"file_type":"trace","size":274744,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":138730212,"status":"success","stage":"test","name":"library:ci-unimath","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-12-25T20:33:34.524Z","started_at":"2018-12-25T20:59:20.457Z","finished_at":"2018-12-25T21:36:19.069Z","duration":2218.612155,"queued_duration":0.226223,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a44cd93212481ff96451fe9414fa7dd66dc6518","short_id":"7a44cd93","created_at":"2018-12-25T21:33:22.000+01:00","parent_ids":["599696d804eb7c40661615a49c5d729e7d6ff373"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-12-25T21:33:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a44cd93212481ff96451fe9414fa7dd66dc6518"},"pipeline":{"id":41293456,"iid":6367,"project_id":6138686,"sha":"7a44cd93212481ff96451fe9414fa7dd66dc6518","ref":"pr-9047","status":"success","source":"push","created_at":"2018-12-25T20:33:33.859Z","updated_at":"2018-12-25T22:21:34.312Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/41293456"},"web_url":"https://gitlab.com/coq/coq/-/jobs/138730212","artifacts":[{"file_type":"trace","size":186171,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":138730211,"status":"success","stage":"test","name":"library:ci-sf","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-12-25T20:33:34.508Z","started_at":"2018-12-25T20:59:20.486Z","finished_at":"2018-12-25T21:03:00.309Z","duration":219.82289,"queued_duration":0.073966,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a44cd93212481ff96451fe9414fa7dd66dc6518","short_id":"7a44cd93","created_at":"2018-12-25T21:33:22.000+01:00","parent_ids":["599696d804eb7c40661615a49c5d729e7d6ff373"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-12-25T21:33:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a44cd93212481ff96451fe9414fa7dd66dc6518"},"pipeline":{"id":41293456,"iid":6367,"project_id":6138686,"sha":"7a44cd93212481ff96451fe9414fa7dd66dc6518","ref":"pr-9047","status":"success","source":"push","created_at":"2018-12-25T20:33:33.859Z","updated_at":"2018-12-25T22:21:34.312Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/41293456"},"web_url":"https://gitlab.com/coq/coq/-/jobs/138730211","artifacts":[{"file_type":"trace","size":316371,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":138730210,"status":"success","stage":"test","name":"library:ci-math-comp","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-12-25T20:33:34.493Z","started_at":"2018-12-25T20:59:20.672Z","finished_at":"2018-12-25T22:21:34.233Z","duration":4933.560639,"queued_duration":0.159185,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a44cd93212481ff96451fe9414fa7dd66dc6518","short_id":"7a44cd93","created_at":"2018-12-25T21:33:22.000+01:00","parent_ids":["599696d804eb7c40661615a49c5d729e7d6ff373"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-12-25T21:33:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a44cd93212481ff96451fe9414fa7dd66dc6518"},"pipeline":{"id":41293456,"iid":6367,"project_id":6138686,"sha":"7a44cd93212481ff96451fe9414fa7dd66dc6518","ref":"pr-9047","status":"success","source":"push","created_at":"2018-12-25T20:33:33.859Z","updated_at":"2018-12-25T22:21:34.312Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/41293456"},"web_url":"https://gitlab.com/coq/coq/-/jobs/138730210","artifacts":[{"file_type":"trace","size":471821,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":138730209,"status":"success","stage":"test","name":"library:ci-iris-lambda-rust","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-12-25T20:33:34.477Z","started_at":"2018-12-25T20:59:20.741Z","finished_at":"2018-12-25T21:40:10.200Z","duration":2449.459012,"queued_duration":0.105275,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a44cd93212481ff96451fe9414fa7dd66dc6518","short_id":"7a44cd93","created_at":"2018-12-25T21:33:22.000+01:00","parent_ids":["599696d804eb7c40661615a49c5d729e7d6ff373"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-12-25T21:33:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a44cd93212481ff96451fe9414fa7dd66dc6518"},"pipeline":{"id":41293456,"iid":6367,"project_id":6138686,"sha":"7a44cd93212481ff96451fe9414fa7dd66dc6518","ref":"pr-9047","status":"success","source":"push","created_at":"2018-12-25T20:33:33.859Z","updated_at":"2018-12-25T22:21:34.312Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/41293456"},"web_url":"https://gitlab.com/coq/coq/-/jobs/138730209","artifacts":[{"file_type":"trace","size":372426,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":138730207,"status":"success","stage":"test","name":"library:ci-hott","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-12-25T20:33:34.461Z","started_at":"2018-12-25T20:59:20.913Z","finished_at":"2018-12-25T21:11:28.504Z","duration":727.591094,"queued_duration":0.119354,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a44cd93212481ff96451fe9414fa7dd66dc6518","short_id":"7a44cd93","created_at":"2018-12-25T21:33:22.000+01:00","parent_ids":["599696d804eb7c40661615a49c5d729e7d6ff373"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-12-25T21:33:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a44cd93212481ff96451fe9414fa7dd66dc6518"},"pipeline":{"id":41293456,"iid":6367,"project_id":6138686,"sha":"7a44cd93212481ff96451fe9414fa7dd66dc6518","ref":"pr-9047","status":"success","source":"push","created_at":"2018-12-25T20:33:33.859Z","updated_at":"2018-12-25T22:21:34.312Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/41293456"},"web_url":"https://gitlab.com/coq/coq/-/jobs/138730207","artifacts":[{"file_type":"trace","size":93501,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":138730206,"status":"success","stage":"test","name":"library:ci-geocoq","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-12-25T20:33:34.445Z","started_at":"2018-12-25T20:59:21.361Z","finished_at":"2018-12-25T21:40:53.306Z","duration":2491.944682,"queued_duration":0.490009,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a44cd93212481ff96451fe9414fa7dd66dc6518","short_id":"7a44cd93","created_at":"2018-12-25T21:33:22.000+01:00","parent_ids":["599696d804eb7c40661615a49c5d729e7d6ff373"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-12-25T21:33:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a44cd93212481ff96451fe9414fa7dd66dc6518"},"pipeline":{"id":41293456,"iid":6367,"project_id":6138686,"sha":"7a44cd93212481ff96451fe9414fa7dd66dc6518","ref":"pr-9047","status":"success","source":"push","created_at":"2018-12-25T20:33:33.859Z","updated_at":"2018-12-25T22:21:34.312Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/41293456"},"web_url":"https://gitlab.com/coq/coq/-/jobs/138730206","artifacts":[{"file_type":"trace","size":379729,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":138730205,"status":"success","stage":"test","name":"library:ci-formal-topology","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-12-25T20:33:34.429Z","started_at":"2018-12-25T20:59:21.000Z","finished_at":"2018-12-25T21:31:44.319Z","duration":1943.319166,"queued_duration":0.07782,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a44cd93212481ff96451fe9414fa7dd66dc6518","short_id":"7a44cd93","created_at":"2018-12-25T21:33:22.000+01:00","parent_ids":["599696d804eb7c40661615a49c5d729e7d6ff373"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-12-25T21:33:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a44cd93212481ff96451fe9414fa7dd66dc6518"},"pipeline":{"id":41293456,"iid":6367,"project_id":6138686,"sha":"7a44cd93212481ff96451fe9414fa7dd66dc6518","ref":"pr-9047","status":"success","source":"push","created_at":"2018-12-25T20:33:33.859Z","updated_at":"2018-12-25T22:21:34.312Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/41293456"},"web_url":"https://gitlab.com/coq/coq/-/jobs/138730205","artifacts":[{"file_type":"trace","size":639016,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":138730204,"status":"success","stage":"test","name":"library:ci-flocq","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-12-25T20:33:34.412Z","started_at":"2018-12-25T20:59:21.078Z","finished_at":"2018-12-25T21:13:50.449Z","duration":869.370285,"queued_duration":0.087815,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a44cd93212481ff96451fe9414fa7dd66dc6518","short_id":"7a44cd93","created_at":"2018-12-25T21:33:22.000+01:00","parent_ids":["599696d804eb7c40661615a49c5d729e7d6ff373"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-12-25T21:33:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a44cd93212481ff96451fe9414fa7dd66dc6518"},"pipeline":{"id":41293456,"iid":6367,"project_id":6138686,"sha":"7a44cd93212481ff96451fe9414fa7dd66dc6518","ref":"pr-9047","status":"success","source":"push","created_at":"2018-12-25T20:33:33.859Z","updated_at":"2018-12-25T22:21:34.312Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/41293456"},"web_url":"https://gitlab.com/coq/coq/-/jobs/138730204","artifacts":[{"file_type":"trace","size":28754,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":138730203,"status":"success","stage":"test","name":"library:ci-fiat-crypto-legacy","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-12-25T20:33:34.396Z","started_at":"2018-12-25T20:59:21.117Z","finished_at":"2018-12-25T22:07:49.294Z","duration":4108.176641,"queued_duration":0.079504,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a44cd93212481ff96451fe9414fa7dd66dc6518","short_id":"7a44cd93","created_at":"2018-12-25T21:33:22.000+01:00","parent_ids":["599696d804eb7c40661615a49c5d729e7d6ff373"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-12-25T21:33:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a44cd93212481ff96451fe9414fa7dd66dc6518"},"pipeline":{"id":41293456,"iid":6367,"project_id":6138686,"sha":"7a44cd93212481ff96451fe9414fa7dd66dc6518","ref":"pr-9047","status":"success","source":"push","created_at":"2018-12-25T20:33:33.859Z","updated_at":"2018-12-25T22:21:34.312Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/41293456"},"web_url":"https://gitlab.com/coq/coq/-/jobs/138730203","artifacts":[{"file_type":"trace","size":702518,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":138730202,"status":"success","stage":"test","name":"library:ci-fiat-crypto","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-12-25T20:33:34.377Z","started_at":"2018-12-25T20:59:21.168Z","finished_at":"2018-12-25T21:49:06.227Z","duration":2985.058585,"queued_duration":0.098493,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a44cd93212481ff96451fe9414fa7dd66dc6518","short_id":"7a44cd93","created_at":"2018-12-25T21:33:22.000+01:00","parent_ids":["599696d804eb7c40661615a49c5d729e7d6ff373"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-12-25T21:33:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a44cd93212481ff96451fe9414fa7dd66dc6518"},"pipeline":{"id":41293456,"iid":6367,"project_id":6138686,"sha":"7a44cd93212481ff96451fe9414fa7dd66dc6518","ref":"pr-9047","status":"success","source":"push","created_at":"2018-12-25T20:33:33.859Z","updated_at":"2018-12-25T22:21:34.312Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/41293456"},"web_url":"https://gitlab.com/coq/coq/-/jobs/138730202","artifacts":[{"file_type":"trace","size":804870,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":138730201,"status":"success","stage":"test","name":"library:ci-fcsl-pcm","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-12-25T20:33:34.361Z","started_at":"2018-12-25T20:59:21.298Z","finished_at":"2018-12-25T21:03:21.882Z","duration":240.583374,"queued_duration":0.17769,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a44cd93212481ff96451fe9414fa7dd66dc6518","short_id":"7a44cd93","created_at":"2018-12-25T21:33:22.000+01:00","parent_ids":["599696d804eb7c40661615a49c5d729e7d6ff373"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-12-25T21:33:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a44cd93212481ff96451fe9414fa7dd66dc6518"},"pipeline":{"id":41293456,"iid":6367,"project_id":6138686,"sha":"7a44cd93212481ff96451fe9414fa7dd66dc6518","ref":"pr-9047","status":"success","source":"push","created_at":"2018-12-25T20:33:33.859Z","updated_at":"2018-12-25T22:21:34.312Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/41293456"},"web_url":"https://gitlab.com/coq/coq/-/jobs/138730201","artifacts":[{"file_type":"trace","size":148126,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":138730200,"status":"success","stage":"test","name":"library:ci-cross-crypto","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-12-25T20:33:34.345Z","started_at":"2018-12-25T20:59:21.262Z","finished_at":"2018-12-25T21:37:32.484Z","duration":2291.222652,"queued_duration":0.075822,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a44cd93212481ff96451fe9414fa7dd66dc6518","short_id":"7a44cd93","created_at":"2018-12-25T21:33:22.000+01:00","parent_ids":["599696d804eb7c40661615a49c5d729e7d6ff373"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-12-25T21:33:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a44cd93212481ff96451fe9414fa7dd66dc6518"},"pipeline":{"id":41293456,"iid":6367,"project_id":6138686,"sha":"7a44cd93212481ff96451fe9414fa7dd66dc6518","ref":"pr-9047","status":"success","source":"push","created_at":"2018-12-25T20:33:33.859Z","updated_at":"2018-12-25T22:21:34.312Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/41293456"},"web_url":"https://gitlab.com/coq/coq/-/jobs/138730200","artifacts":[{"file_type":"trace","size":75379,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":138730199,"status":"success","stage":"test","name":"library:ci-coquelicot","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-12-25T20:33:34.329Z","started_at":"2018-12-25T20:59:21.475Z","finished_at":"2018-12-25T21:04:53.367Z","duration":331.891609,"queued_duration":0.200286,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a44cd93212481ff96451fe9414fa7dd66dc6518","short_id":"7a44cd93","created_at":"2018-12-25T21:33:22.000+01:00","parent_ids":["599696d804eb7c40661615a49c5d729e7d6ff373"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-12-25T21:33:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a44cd93212481ff96451fe9414fa7dd66dc6518"},"pipeline":{"id":41293456,"iid":6367,"project_id":6138686,"sha":"7a44cd93212481ff96451fe9414fa7dd66dc6518","ref":"pr-9047","status":"success","source":"push","created_at":"2018-12-25T20:33:33.859Z","updated_at":"2018-12-25T22:21:34.312Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/41293456"},"web_url":"https://gitlab.com/coq/coq/-/jobs/138730199","artifacts":[{"file_type":"trace","size":146856,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":138730198,"status":"success","stage":"test","name":"library:ci-compcert","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-12-25T20:33:34.313Z","started_at":"2018-12-25T20:59:21.434Z","finished_at":"2018-12-25T21:22:37.048Z","duration":1395.614131,"queued_duration":0.089355,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a44cd93212481ff96451fe9414fa7dd66dc6518","short_id":"7a44cd93","created_at":"2018-12-25T21:33:22.000+01:00","parent_ids":["599696d804eb7c40661615a49c5d729e7d6ff373"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-12-25T21:33:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a44cd93212481ff96451fe9414fa7dd66dc6518"},"pipeline":{"id":41293456,"iid":6367,"project_id":6138686,"sha":"7a44cd93212481ff96451fe9414fa7dd66dc6518","ref":"pr-9047","status":"success","source":"push","created_at":"2018-12-25T20:33:33.859Z","updated_at":"2018-12-25T22:21:34.312Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/41293456"},"web_url":"https://gitlab.com/coq/coq/-/jobs/138730198","artifacts":[{"file_type":"trace","size":2083760,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":138730197,"status":"success","stage":"test","name":"library:ci-color","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-12-25T20:33:34.297Z","started_at":"2018-12-25T20:59:21.536Z","finished_at":"2018-12-25T21:18:03.006Z","duration":1121.470436,"queued_duration":0.111972,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a44cd93212481ff96451fe9414fa7dd66dc6518","short_id":"7a44cd93","created_at":"2018-12-25T21:33:22.000+01:00","parent_ids":["599696d804eb7c40661615a49c5d729e7d6ff373"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-12-25T21:33:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a44cd93212481ff96451fe9414fa7dd66dc6518"},"pipeline":{"id":41293456,"iid":6367,"project_id":6138686,"sha":"7a44cd93212481ff96451fe9414fa7dd66dc6518","ref":"pr-9047","status":"success","source":"push","created_at":"2018-12-25T20:33:33.859Z","updated_at":"2018-12-25T22:21:34.312Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/41293456"},"web_url":"https://gitlab.com/coq/coq/-/jobs/138730197","artifacts":[{"file_type":"trace","size":238896,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":138730196,"status":"success","stage":"test","name":"library:ci-bedrock2","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":true,"created_at":"2018-12-25T20:33:34.279Z","started_at":"2018-12-25T20:59:21.617Z","finished_at":"2018-12-25T21:15:41.878Z","duration":980.261713,"queued_duration":0.109941,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a44cd93212481ff96451fe9414fa7dd66dc6518","short_id":"7a44cd93","created_at":"2018-12-25T21:33:22.000+01:00","parent_ids":["599696d804eb7c40661615a49c5d729e7d6ff373"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-12-25T21:33:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a44cd93212481ff96451fe9414fa7dd66dc6518"},"pipeline":{"id":41293456,"iid":6367,"project_id":6138686,"sha":"7a44cd93212481ff96451fe9414fa7dd66dc6518","ref":"pr-9047","status":"success","source":"push","created_at":"2018-12-25T20:33:33.859Z","updated_at":"2018-12-25T22:21:34.312Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/41293456"},"web_url":"https://gitlab.com/coq/coq/-/jobs/138730196","artifacts":[{"file_type":"trace","size":78315,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":138730195,"status":"success","stage":"test","name":"validate:edge+flambda","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-12-25T20:33:34.263Z","started_at":"2018-12-25T20:59:21.779Z","finished_at":"2018-12-25T21:03:25.841Z","duration":244.061761,"queued_duration":0.16958,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a44cd93212481ff96451fe9414fa7dd66dc6518","short_id":"7a44cd93","created_at":"2018-12-25T21:33:22.000+01:00","parent_ids":["599696d804eb7c40661615a49c5d729e7d6ff373"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-12-25T21:33:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a44cd93212481ff96451fe9414fa7dd66dc6518"},"pipeline":{"id":41293456,"iid":6367,"project_id":6138686,"sha":"7a44cd93212481ff96451fe9414fa7dd66dc6518","ref":"pr-9047","status":"success","source":"push","created_at":"2018-12-25T20:33:33.859Z","updated_at":"2018-12-25T22:21:34.312Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/41293456"},"web_url":"https://gitlab.com/coq/coq/-/jobs/138730195","artifacts":[{"file_type":"trace","size":21024,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":138730194,"status":"success","stage":"test","name":"validate:edge","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-12-25T20:33:34.247Z","started_at":"2018-12-25T20:59:21.943Z","finished_at":"2018-12-25T21:03:32.714Z","duration":250.77033,"queued_duration":0.189473,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a44cd93212481ff96451fe9414fa7dd66dc6518","short_id":"7a44cd93","created_at":"2018-12-25T21:33:22.000+01:00","parent_ids":["599696d804eb7c40661615a49c5d729e7d6ff373"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-12-25T21:33:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a44cd93212481ff96451fe9414fa7dd66dc6518"},"pipeline":{"id":41293456,"iid":6367,"project_id":6138686,"sha":"7a44cd93212481ff96451fe9414fa7dd66dc6518","ref":"pr-9047","status":"success","source":"push","created_at":"2018-12-25T20:33:33.859Z","updated_at":"2018-12-25T22:21:34.312Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/41293456"},"web_url":"https://gitlab.com/coq/coq/-/jobs/138730194","artifacts":[{"file_type":"trace","size":19730,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":138730193,"status":"success","stage":"test","name":"validate:base+32bit","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-12-25T20:33:34.231Z","started_at":"2018-12-25T20:59:23.096Z","finished_at":"2018-12-25T21:03:18.138Z","duration":235.042564,"queued_duration":1.168317,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a44cd93212481ff96451fe9414fa7dd66dc6518","short_id":"7a44cd93","created_at":"2018-12-25T21:33:22.000+01:00","parent_ids":["599696d804eb7c40661615a49c5d729e7d6ff373"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-12-25T21:33:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a44cd93212481ff96451fe9414fa7dd66dc6518"},"pipeline":{"id":41293456,"iid":6367,"project_id":6138686,"sha":"7a44cd93212481ff96451fe9414fa7dd66dc6518","ref":"pr-9047","status":"success","source":"push","created_at":"2018-12-25T20:33:33.859Z","updated_at":"2018-12-25T22:21:34.312Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/41293456"},"web_url":"https://gitlab.com/coq/coq/-/jobs/138730193","artifacts":[{"file_type":"trace","size":19322,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":138730192,"status":"success","stage":"test","name":"validate:base","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-12-25T20:33:34.214Z","started_at":"2018-12-25T20:59:22.118Z","finished_at":"2018-12-25T21:03:39.243Z","duration":257.124916,"queued_duration":0.093829,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a44cd93212481ff96451fe9414fa7dd66dc6518","short_id":"7a44cd93","created_at":"2018-12-25T21:33:22.000+01:00","parent_ids":["599696d804eb7c40661615a49c5d729e7d6ff373"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-12-25T21:33:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a44cd93212481ff96451fe9414fa7dd66dc6518"},"pipeline":{"id":41293456,"iid":6367,"project_id":6138686,"sha":"7a44cd93212481ff96451fe9414fa7dd66dc6518","ref":"pr-9047","status":"success","source":"push","created_at":"2018-12-25T20:33:33.859Z","updated_at":"2018-12-25T22:21:34.312Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/41293456"},"web_url":"https://gitlab.com/coq/coq/-/jobs/138730192","artifacts":[{"file_type":"trace","size":20693,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":138730191,"status":"success","stage":"test","name":"test-suite:edge+trunk+dune","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":true,"created_at":"2018-12-25T20:33:34.198Z","started_at":"2018-12-25T20:59:23.052Z","finished_at":"2018-12-25T21:40:31.615Z","duration":2468.562813,"queued_duration":0.929249,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a44cd93212481ff96451fe9414fa7dd66dc6518","short_id":"7a44cd93","created_at":"2018-12-25T21:33:22.000+01:00","parent_ids":["599696d804eb7c40661615a49c5d729e7d6ff373"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-12-25T21:33:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a44cd93212481ff96451fe9414fa7dd66dc6518"},"pipeline":{"id":41293456,"iid":6367,"project_id":6138686,"sha":"7a44cd93212481ff96451fe9414fa7dd66dc6518","ref":"pr-9047","status":"success","source":"push","created_at":"2018-12-25T20:33:33.859Z","updated_at":"2018-12-25T22:21:34.312Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/41293456"},"web_url":"https://gitlab.com/coq/coq/-/jobs/138730191","artifacts":[{"file_type":"trace","size":236108,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-01-01T21:40:30.450Z","tag_list":[]}
{"id":138730190,"status":"success","stage":"test","name":"test-suite:edge+trunk+make","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":true,"created_at":"2018-12-25T20:33:34.181Z","started_at":"2018-12-25T20:59:22.333Z","finished_at":"2018-12-25T21:44:41.735Z","duration":2719.402414,"queued_duration":0.11596,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a44cd93212481ff96451fe9414fa7dd66dc6518","short_id":"7a44cd93","created_at":"2018-12-25T21:33:22.000+01:00","parent_ids":["599696d804eb7c40661615a49c5d729e7d6ff373"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-12-25T21:33:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a44cd93212481ff96451fe9414fa7dd66dc6518"},"pipeline":{"id":41293456,"iid":6367,"project_id":6138686,"sha":"7a44cd93212481ff96451fe9414fa7dd66dc6518","ref":"pr-9047","status":"success","source":"push","created_at":"2018-12-25T20:33:33.859Z","updated_at":"2018-12-25T22:21:34.312Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/41293456"},"web_url":"https://gitlab.com/coq/coq/-/jobs/138730190","artifacts":[{"file_type":"trace","size":201788,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-01-01T21:44:40.579Z","tag_list":[]}
{"id":138730189,"status":"success","stage":"test","name":"test-suite:egde:dune:dev","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-12-25T20:33:34.165Z","started_at":"2018-12-25T20:59:23.006Z","finished_at":"2018-12-25T21:34:06.704Z","duration":2083.69826,"queued_duration":0.687335,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a44cd93212481ff96451fe9414fa7dd66dc6518","short_id":"7a44cd93","created_at":"2018-12-25T21:33:22.000+01:00","parent_ids":["599696d804eb7c40661615a49c5d729e7d6ff373"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-12-25T21:33:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a44cd93212481ff96451fe9414fa7dd66dc6518"},"pipeline":{"id":41293456,"iid":6367,"project_id":6138686,"sha":"7a44cd93212481ff96451fe9414fa7dd66dc6518","ref":"pr-9047","status":"success","source":"push","created_at":"2018-12-25T20:33:33.859Z","updated_at":"2018-12-25T22:21:34.312Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/41293456"},"web_url":"https://gitlab.com/coq/coq/-/jobs/138730189","artifacts":[{"file_type":"trace","size":175793,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":138730188,"status":"success","stage":"test","name":"test-suite:edge+flambda","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-12-25T20:33:34.146Z","started_at":"2018-12-25T20:59:22.719Z","finished_at":"2018-12-25T21:21:21.725Z","duration":1319.006412,"queued_duration":0.275066,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a44cd93212481ff96451fe9414fa7dd66dc6518","short_id":"7a44cd93","created_at":"2018-12-25T21:33:22.000+01:00","parent_ids":["599696d804eb7c40661615a49c5d729e7d6ff373"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-12-25T21:33:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a44cd93212481ff96451fe9414fa7dd66dc6518"},"pipeline":{"id":41293456,"iid":6367,"project_id":6138686,"sha":"7a44cd93212481ff96451fe9414fa7dd66dc6518","ref":"pr-9047","status":"success","source":"push","created_at":"2018-12-25T20:33:33.859Z","updated_at":"2018-12-25T22:21:34.312Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/41293456"},"web_url":"https://gitlab.com/coq/coq/-/jobs/138730188","artifacts":[{"file_type":"trace","size":77372,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":138730187,"status":"success","stage":"test","name":"test-suite:edge","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-12-25T20:33:34.129Z","started_at":"2018-12-25T20:59:22.962Z","finished_at":"2018-12-25T21:22:14.903Z","duration":1371.941268,"queued_duration":0.286441,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a44cd93212481ff96451fe9414fa7dd66dc6518","short_id":"7a44cd93","created_at":"2018-12-25T21:33:22.000+01:00","parent_ids":["599696d804eb7c40661615a49c5d729e7d6ff373"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-12-25T21:33:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a44cd93212481ff96451fe9414fa7dd66dc6518"},"pipeline":{"id":41293456,"iid":6367,"project_id":6138686,"sha":"7a44cd93212481ff96451fe9414fa7dd66dc6518","ref":"pr-9047","status":"success","source":"push","created_at":"2018-12-25T20:33:33.859Z","updated_at":"2018-12-25T22:21:34.312Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/41293456"},"web_url":"https://gitlab.com/coq/coq/-/jobs/138730187","artifacts":[{"file_type":"trace","size":76204,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":138730186,"status":"success","stage":"test","name":"test-suite:base+32bit","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-12-25T20:33:34.113Z","started_at":"2018-12-25T20:59:22.914Z","finished_at":"2018-12-25T21:21:12.715Z","duration":1309.800913,"queued_duration":0.12755,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a44cd93212481ff96451fe9414fa7dd66dc6518","short_id":"7a44cd93","created_at":"2018-12-25T21:33:22.000+01:00","parent_ids":["599696d804eb7c40661615a49c5d729e7d6ff373"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-12-25T21:33:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a44cd93212481ff96451fe9414fa7dd66dc6518"},"pipeline":{"id":41293456,"iid":6367,"project_id":6138686,"sha":"7a44cd93212481ff96451fe9414fa7dd66dc6518","ref":"pr-9047","status":"success","source":"push","created_at":"2018-12-25T20:33:33.859Z","updated_at":"2018-12-25T22:21:34.312Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/41293456"},"web_url":"https://gitlab.com/coq/coq/-/jobs/138730186","artifacts":[{"file_type":"trace","size":75670,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":138730185,"status":"success","stage":"test","name":"test-suite:base","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-12-25T20:33:34.096Z","started_at":"2018-12-25T20:59:23.002Z","finished_at":"2018-12-25T21:22:39.704Z","duration":1396.701609,"queued_duration":0.121832,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a44cd93212481ff96451fe9414fa7dd66dc6518","short_id":"7a44cd93","created_at":"2018-12-25T21:33:22.000+01:00","parent_ids":["599696d804eb7c40661615a49c5d729e7d6ff373"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-12-25T21:33:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a44cd93212481ff96451fe9414fa7dd66dc6518"},"pipeline":{"id":41293456,"iid":6367,"project_id":6138686,"sha":"7a44cd93212481ff96451fe9414fa7dd66dc6518","ref":"pr-9047","status":"success","source":"push","created_at":"2018-12-25T20:33:33.859Z","updated_at":"2018-12-25T22:21:34.312Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/41293456"},"web_url":"https://gitlab.com/coq/coq/-/jobs/138730185","artifacts":[{"file_type":"trace","size":77041,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":138730184,"status":"success","stage":"test","name":"doc:ml-api:odoc","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-12-25T20:33:34.080Z","started_at":"2018-12-25T20:59:23.955Z","finished_at":"2018-12-25T21:02:51.106Z","duration":207.150573,"queued_duration":0.937916,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a44cd93212481ff96451fe9414fa7dd66dc6518","short_id":"7a44cd93","created_at":"2018-12-25T21:33:22.000+01:00","parent_ids":["599696d804eb7c40661615a49c5d729e7d6ff373"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-12-25T21:33:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a44cd93212481ff96451fe9414fa7dd66dc6518"},"pipeline":{"id":41293456,"iid":6367,"project_id":6138686,"sha":"7a44cd93212481ff96451fe9414fa7dd66dc6518","ref":"pr-9047","status":"success","source":"push","created_at":"2018-12-25T20:33:33.859Z","updated_at":"2018-12-25T22:21:34.312Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/41293456"},"web_url":"https://gitlab.com/coq/coq/-/jobs/138730184","artifacts":[{"file_type":"trace","size":78464,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-01-24T21:02:50.034Z","tag_list":[]}
{"id":138730183,"status":"success","stage":"test","name":"doc:refman:dune","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-12-25T20:33:34.063Z","started_at":"2018-12-25T20:59:23.867Z","finished_at":"2018-12-25T21:13:28.962Z","duration":845.095296,"queued_duration":0.794319,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a44cd93212481ff96451fe9414fa7dd66dc6518","short_id":"7a44cd93","created_at":"2018-12-25T21:33:22.000+01:00","parent_ids":["599696d804eb7c40661615a49c5d729e7d6ff373"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-12-25T21:33:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a44cd93212481ff96451fe9414fa7dd66dc6518"},"pipeline":{"id":41293456,"iid":6367,"project_id":6138686,"sha":"7a44cd93212481ff96451fe9414fa7dd66dc6518","ref":"pr-9047","status":"success","source":"push","created_at":"2018-12-25T20:33:33.859Z","updated_at":"2018-12-25T22:21:34.312Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/41293456"},"web_url":"https://gitlab.com/coq/coq/-/jobs/138730183","artifacts":[{"file_type":"trace","size":21317,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-01-24T21:13:27.739Z","tag_list":[]}
{"id":138730182,"status":"success","stage":"test","name":"doc:refman","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-12-25T20:33:34.047Z","started_at":"2018-12-25T20:59:23.785Z","finished_at":"2018-12-25T21:06:24.054Z","duration":420.268908,"queued_duration":0.676624,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a44cd93212481ff96451fe9414fa7dd66dc6518","short_id":"7a44cd93","created_at":"2018-12-25T21:33:22.000+01:00","parent_ids":["599696d804eb7c40661615a49c5d729e7d6ff373"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-12-25T21:33:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a44cd93212481ff96451fe9414fa7dd66dc6518"},"pipeline":{"id":41293456,"iid":6367,"project_id":6138686,"sha":"7a44cd93212481ff96451fe9414fa7dd66dc6518","ref":"pr-9047","status":"success","source":"push","created_at":"2018-12-25T20:33:33.859Z","updated_at":"2018-12-25T22:21:34.312Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/41293456"},"web_url":"https://gitlab.com/coq/coq/-/jobs/138730182","artifacts":[{"file_type":"trace","size":1058806,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":138730181,"status":"success","stage":"test","name":"pkg:nix","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-12-25T20:33:34.029Z","started_at":"2018-12-25T20:59:23.320Z","finished_at":"2018-12-25T21:38:49.010Z","duration":2365.689678,"queued_duration":0.14,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a44cd93212481ff96451fe9414fa7dd66dc6518","short_id":"7a44cd93","created_at":"2018-12-25T21:33:22.000+01:00","parent_ids":["599696d804eb7c40661615a49c5d729e7d6ff373"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-12-25T21:33:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a44cd93212481ff96451fe9414fa7dd66dc6518"},"pipeline":{"id":41293456,"iid":6367,"project_id":6138686,"sha":"7a44cd93212481ff96451fe9414fa7dd66dc6518","ref":"pr-9047","status":"success","source":"push","created_at":"2018-12-25T20:33:33.859Z","updated_at":"2018-12-25T22:21:34.312Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/41293456"},"web_url":"https://gitlab.com/coq/coq/-/jobs/138730181","artifacts":[{"file_type":"trace","size":653731,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":138730180,"status":"success","stage":"test","name":"pkg:opam","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-12-25T20:33:34.012Z","started_at":"2018-12-25T20:59:23.733Z","finished_at":"2018-12-25T21:13:34.730Z","duration":850.997508,"queued_duration":0.488673,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a44cd93212481ff96451fe9414fa7dd66dc6518","short_id":"7a44cd93","created_at":"2018-12-25T21:33:22.000+01:00","parent_ids":["599696d804eb7c40661615a49c5d729e7d6ff373"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-12-25T21:33:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a44cd93212481ff96451fe9414fa7dd66dc6518"},"pipeline":{"id":41293456,"iid":6367,"project_id":6138686,"sha":"7a44cd93212481ff96451fe9414fa7dd66dc6518","ref":"pr-9047","status":"success","source":"push","created_at":"2018-12-25T20:33:33.859Z","updated_at":"2018-12-25T22:21:34.312Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/41293456"},"web_url":"https://gitlab.com/coq/coq/-/jobs/138730180","artifacts":[{"file_type":"trace","size":18404,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":138730179,"status":"success","stage":"test","name":"windows64","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-12-25T20:33:33.989Z","started_at":"2018-12-25T20:59:23.640Z","finished_at":"2018-12-25T21:44:20.815Z","duration":2697.175303,"queued_duration":0.329135,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a44cd93212481ff96451fe9414fa7dd66dc6518","short_id":"7a44cd93","created_at":"2018-12-25T21:33:22.000+01:00","parent_ids":["599696d804eb7c40661615a49c5d729e7d6ff373"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-12-25T21:33:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a44cd93212481ff96451fe9414fa7dd66dc6518"},"pipeline":{"id":41293456,"iid":6367,"project_id":6138686,"sha":"7a44cd93212481ff96451fe9414fa7dd66dc6518","ref":"pr-9047","status":"success","source":"push","created_at":"2018-12-25T20:33:33.859Z","updated_at":"2018-12-25T22:21:34.312Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/41293456"},"web_url":"https://gitlab.com/coq/coq/-/jobs/138730179","artifacts":[{"file_type":"trace","size":274520,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-01-01T21:44:17.032Z","tag_list":["windows"]}
{"id":138730178,"status":"success","stage":"test","name":"build:base+async","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-12-25T20:33:33.971Z","started_at":"2018-12-25T20:59:23.487Z","finished_at":"2018-12-25T22:09:52.508Z","duration":4229.021733,"queued_duration":0.120198,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a44cd93212481ff96451fe9414fa7dd66dc6518","short_id":"7a44cd93","created_at":"2018-12-25T21:33:22.000+01:00","parent_ids":["599696d804eb7c40661615a49c5d729e7d6ff373"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-12-25T21:33:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a44cd93212481ff96451fe9414fa7dd66dc6518"},"pipeline":{"id":41293456,"iid":6367,"project_id":6138686,"sha":"7a44cd93212481ff96451fe9414fa7dd66dc6518","ref":"pr-9047","status":"success","source":"push","created_at":"2018-12-25T20:33:33.859Z","updated_at":"2018-12-25T22:21:34.312Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/41293456"},"web_url":"https://gitlab.com/coq/coq/-/jobs/138730178","artifacts":[{"file_type":"trace","size":265250,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2019-01-01T22:09:46.271Z","tag_list":[]}
{"id":138730177,"status":"success","stage":"build","name":"build:egde:dune:dev","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-12-25T20:33:33.944Z","started_at":"2018-12-25T20:33:35.190Z","finished_at":"2018-12-25T20:49:42.046Z","duration":966.856104,"queued_duration":0.269705,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a44cd93212481ff96451fe9414fa7dd66dc6518","short_id":"7a44cd93","created_at":"2018-12-25T21:33:22.000+01:00","parent_ids":["599696d804eb7c40661615a49c5d729e7d6ff373"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-12-25T21:33:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a44cd93212481ff96451fe9414fa7dd66dc6518"},"pipeline":{"id":41293456,"iid":6367,"project_id":6138686,"sha":"7a44cd93212481ff96451fe9414fa7dd66dc6518","ref":"pr-9047","status":"success","source":"push","created_at":"2018-12-25T20:33:33.859Z","updated_at":"2018-12-25T22:21:34.312Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/41293456"},"web_url":"https://gitlab.com/coq/coq/-/jobs/138730177","artifacts":[{"file_type":"trace","size":17109,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-01-01T20:49:37.407Z","tag_list":[]}
{"id":138730176,"status":"success","stage":"build","name":"build:edge+flambda","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-12-25T20:33:33.924Z","started_at":"2018-12-25T20:33:35.751Z","finished_at":"2018-12-25T20:59:19.392Z","duration":1543.641115,"queued_duration":0.640347,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a44cd93212481ff96451fe9414fa7dd66dc6518","short_id":"7a44cd93","created_at":"2018-12-25T21:33:22.000+01:00","parent_ids":["599696d804eb7c40661615a49c5d729e7d6ff373"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-12-25T21:33:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a44cd93212481ff96451fe9414fa7dd66dc6518"},"pipeline":{"id":41293456,"iid":6367,"project_id":6138686,"sha":"7a44cd93212481ff96451fe9414fa7dd66dc6518","ref":"pr-9047","status":"success","source":"push","created_at":"2018-12-25T20:33:33.859Z","updated_at":"2018-12-25T22:21:34.312Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/41293456"},"web_url":"https://gitlab.com/coq/coq/-/jobs/138730176","artifacts":[{"file_type":"trace","size":234823,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-01-01T20:59:12.868Z","tag_list":[]}
{"id":138730175,"status":"success","stage":"build","name":"build:edge","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-12-25T20:33:33.907Z","started_at":"2018-12-25T20:33:35.701Z","finished_at":"2018-12-25T20:49:00.493Z","duration":924.791752,"queued_duration":0.449415,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a44cd93212481ff96451fe9414fa7dd66dc6518","short_id":"7a44cd93","created_at":"2018-12-25T21:33:22.000+01:00","parent_ids":["599696d804eb7c40661615a49c5d729e7d6ff373"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-12-25T21:33:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a44cd93212481ff96451fe9414fa7dd66dc6518"},"pipeline":{"id":41293456,"iid":6367,"project_id":6138686,"sha":"7a44cd93212481ff96451fe9414fa7dd66dc6518","ref":"pr-9047","status":"success","source":"push","created_at":"2018-12-25T20:33:33.859Z","updated_at":"2018-12-25T22:21:34.312Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/41293456"},"web_url":"https://gitlab.com/coq/coq/-/jobs/138730175","artifacts":[{"file_type":"trace","size":233540,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-01-01T20:48:55.363Z","tag_list":[]}
{"id":138730174,"status":"success","stage":"build","name":"build:base+32bit","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-12-25T20:33:33.889Z","started_at":"2018-12-25T20:33:35.495Z","finished_at":"2018-12-25T20:48:33.975Z","duration":898.479772,"queued_duration":0.217816,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a44cd93212481ff96451fe9414fa7dd66dc6518","short_id":"7a44cd93","created_at":"2018-12-25T21:33:22.000+01:00","parent_ids":["599696d804eb7c40661615a49c5d729e7d6ff373"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-12-25T21:33:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a44cd93212481ff96451fe9414fa7dd66dc6518"},"pipeline":{"id":41293456,"iid":6367,"project_id":6138686,"sha":"7a44cd93212481ff96451fe9414fa7dd66dc6518","ref":"pr-9047","status":"success","source":"push","created_at":"2018-12-25T20:33:33.859Z","updated_at":"2018-12-25T22:21:34.312Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/41293456"},"web_url":"https://gitlab.com/coq/coq/-/jobs/138730174","artifacts":[{"file_type":"trace","size":228562,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-01-01T20:48:29.141Z","tag_list":[]}
{"id":138730173,"status":"success","stage":"build","name":"build:base","ref":"pr-9047","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-12-25T20:33:33.870Z","started_at":"2018-12-25T20:33:35.425Z","finished_at":"2018-12-25T20:50:53.102Z","duration":1037.676175,"queued_duration":0.121858,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"7a44cd93212481ff96451fe9414fa7dd66dc6518","short_id":"7a44cd93","created_at":"2018-12-25T21:33:22.000+01:00","parent_ids":["599696d804eb7c40661615a49c5d729e7d6ff373"],"title":"[dune] Shim for calling `coqtop` with the standard library in scope.","message":"[dune] Shim for calling `coqtop` with the standard library in scope.\n\nAs requested by @Skyskimmer, we add a shim `dev/shim/coqtop-prelude`\nthat will start `coqtop` with the standard library loaded properly.\n\n`dune exec dev/shim/coqtop-prelude` will build and execute this shim,\nwhich is equivalent to doing `make states && bin/coqtop` under the old\nmodel.\n\nNote that this PR is just a bit of a hack until proper support for Coq\nlibraries arrives to Dune.\n\nOnce that is done, similarly to `dune utop $dir`, we should be able to\ndo `dune coqtop $dir` and get a proper Coq shell with the\ncorresponding loaded libraries. This will work for\n`dir=stdlib/Prelude` for example, or for any other combination.\n\nIn general we need this kind of support in Dune for properly loading\n`utop`, installing printers, `ocamldebug`, etc...\n\nNote that the current implementation is a bit hacky so I am sure it\ncan be improved, it also breaks when the stdlib is not present, but I\nwasn't able to cook an `(enabled_if ...)` field for it to work.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-11-21T20:16:49.000+01:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-12-25T21:33:22.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/7a44cd93212481ff96451fe9414fa7dd66dc6518"},"pipeline":{"id":41293456,"iid":6367,"project_id":6138686,"sha":"7a44cd93212481ff96451fe9414fa7dd66dc6518","ref":"pr-9047","status":"success","source":"push","created_at":"2018-12-25T20:33:33.859Z","updated_at":"2018-12-25T22:21:34.312Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/41293456"},"web_url":"https://gitlab.com/coq/coq/-/jobs/138730173","artifacts":[{"file_type":"trace","size":269544,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2019-01-01T20:50:47.684Z","tag_list":[]}
