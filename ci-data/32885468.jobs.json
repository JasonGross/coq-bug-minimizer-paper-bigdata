{"id":107820099,"status":"success","stage":"test","name":"ci-vst","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-13T22:43:57.759Z","started_at":"2018-10-13T23:09:24.702Z","finished_at":"2018-10-14T00:08:10.579Z","duration":3525.876475,"queued_duration":2.763779,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","short_id":"c6aa59ea","created_at":"2018-10-14T00:43:45.000+02:00","parent_ids":["235cb6e6c243863b7270d273ceeef681eb350247"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T00:43:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c6aa59ea5e010240320ea887aa7ff799a4b18c99"},"pipeline":{"id":32885468,"iid":4311,"project_id":6138686,"sha":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-13T22:43:56.692Z","updated_at":"2018-10-14T01:17:50.992Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32885468"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107820099","artifacts":[{"file_type":"trace","size":223986,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107820098,"status":"success","stage":"test","name":"ci-unimath","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-13T22:43:57.737Z","started_at":"2018-10-13T23:09:24.660Z","finished_at":"2018-10-13T23:51:33.635Z","duration":2528.974464,"queued_duration":2.688552,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","short_id":"c6aa59ea","created_at":"2018-10-14T00:43:45.000+02:00","parent_ids":["235cb6e6c243863b7270d273ceeef681eb350247"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T00:43:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c6aa59ea5e010240320ea887aa7ff799a4b18c99"},"pipeline":{"id":32885468,"iid":4311,"project_id":6138686,"sha":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-13T22:43:56.692Z","updated_at":"2018-10-14T01:17:50.992Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32885468"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107820098","artifacts":[{"file_type":"trace","size":160215,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107820097,"status":"success","stage":"test","name":"ci-sf","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-13T22:43:57.715Z","started_at":"2018-10-13T23:09:24.616Z","finished_at":"2018-10-13T23:39:47.844Z","duration":1823.227806,"queued_duration":2.614715,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","short_id":"c6aa59ea","created_at":"2018-10-14T00:43:45.000+02:00","parent_ids":["235cb6e6c243863b7270d273ceeef681eb350247"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T00:43:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c6aa59ea5e010240320ea887aa7ff799a4b18c99"},"pipeline":{"id":32885468,"iid":4311,"project_id":6138686,"sha":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-13T22:43:56.692Z","updated_at":"2018-10-14T01:17:50.992Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32885468"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107820097","artifacts":[{"file_type":"trace","size":269569,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107820096,"status":"success","stage":"test","name":"ci-quickchick","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-13T22:43:57.695Z","started_at":"2018-10-13T23:09:24.572Z","finished_at":"2018-10-13T23:15:48.513Z","duration":383.941811,"queued_duration":2.517767,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","short_id":"c6aa59ea","created_at":"2018-10-14T00:43:45.000+02:00","parent_ids":["235cb6e6c243863b7270d273ceeef681eb350247"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T00:43:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c6aa59ea5e010240320ea887aa7ff799a4b18c99"},"pipeline":{"id":32885468,"iid":4311,"project_id":6138686,"sha":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-13T22:43:56.692Z","updated_at":"2018-10-14T01:17:50.992Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32885468"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107820096","artifacts":[{"file_type":"trace","size":265883,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107820095,"status":"success","stage":"test","name":"ci-plugin-tutorial","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-13T22:43:57.674Z","started_at":"2018-10-13T23:09:24.508Z","finished_at":"2018-10-13T23:13:44.606Z","duration":260.0984,"queued_duration":2.423537,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","short_id":"c6aa59ea","created_at":"2018-10-14T00:43:45.000+02:00","parent_ids":["235cb6e6c243863b7270d273ceeef681eb350247"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T00:43:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c6aa59ea5e010240320ea887aa7ff799a4b18c99"},"pipeline":{"id":32885468,"iid":4311,"project_id":6138686,"sha":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-13T22:43:56.692Z","updated_at":"2018-10-14T01:17:50.992Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32885468"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107820095","artifacts":[{"file_type":"trace","size":35906,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107820094,"status":"success","stage":"test","name":"ci-pidetop","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-13T22:43:57.653Z","started_at":"2018-10-13T23:09:24.463Z","finished_at":"2018-10-13T23:12:47.356Z","duration":202.892963,"queued_duration":2.348156,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","short_id":"c6aa59ea","created_at":"2018-10-14T00:43:45.000+02:00","parent_ids":["235cb6e6c243863b7270d273ceeef681eb350247"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T00:43:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c6aa59ea5e010240320ea887aa7ff799a4b18c99"},"pipeline":{"id":32885468,"iid":4311,"project_id":6138686,"sha":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-13T22:43:56.692Z","updated_at":"2018-10-14T01:17:50.992Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32885468"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107820094","artifacts":[{"file_type":"trace","size":28299,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107820093,"status":"success","stage":"test","name":"ci-mtac2","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-13T22:43:57.633Z","started_at":"2018-10-13T23:09:24.418Z","finished_at":"2018-10-13T23:13:03.350Z","duration":218.932893,"queued_duration":2.266433,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","short_id":"c6aa59ea","created_at":"2018-10-14T00:43:45.000+02:00","parent_ids":["235cb6e6c243863b7270d273ceeef681eb350247"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T00:43:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c6aa59ea5e010240320ea887aa7ff799a4b18c99"},"pipeline":{"id":32885468,"iid":4311,"project_id":6138686,"sha":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-13T22:43:56.692Z","updated_at":"2018-10-14T01:17:50.992Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32885468"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107820093","artifacts":[{"file_type":"trace","size":165935,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107820092,"status":"success","stage":"test","name":"ci-math-comp","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-13T22:43:57.613Z","started_at":"2018-10-13T23:09:24.379Z","finished_at":"2018-10-13T23:49:55.874Z","duration":2431.495485,"queued_duration":2.198876,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","short_id":"c6aa59ea","created_at":"2018-10-14T00:43:45.000+02:00","parent_ids":["235cb6e6c243863b7270d273ceeef681eb350247"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T00:43:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c6aa59ea5e010240320ea887aa7ff799a4b18c99"},"pipeline":{"id":32885468,"iid":4311,"project_id":6138686,"sha":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-13T22:43:56.692Z","updated_at":"2018-10-14T01:17:50.992Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32885468"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107820092","artifacts":[{"file_type":"trace","size":361987,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107820091,"status":"success","stage":"test","name":"ci-ltac2","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-13T22:43:57.593Z","started_at":"2018-10-13T23:09:24.330Z","finished_at":"2018-10-13T23:13:36.769Z","duration":252.438829,"queued_duration":2.122517,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","short_id":"c6aa59ea","created_at":"2018-10-14T00:43:45.000+02:00","parent_ids":["235cb6e6c243863b7270d273ceeef681eb350247"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T00:43:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c6aa59ea5e010240320ea887aa7ff799a4b18c99"},"pipeline":{"id":32885468,"iid":4311,"project_id":6138686,"sha":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-13T22:43:56.692Z","updated_at":"2018-10-14T01:17:50.992Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32885468"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107820091","artifacts":[{"file_type":"trace","size":42091,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107820090,"status":"success","stage":"test","name":"ci-iris-lambda-rust","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-13T22:43:57.570Z","started_at":"2018-10-13T23:09:24.288Z","finished_at":"2018-10-14T00:32:27.795Z","duration":4983.506267,"queued_duration":2.048621,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","short_id":"c6aa59ea","created_at":"2018-10-14T00:43:45.000+02:00","parent_ids":["235cb6e6c243863b7270d273ceeef681eb350247"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T00:43:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c6aa59ea5e010240320ea887aa7ff799a4b18c99"},"pipeline":{"id":32885468,"iid":4311,"project_id":6138686,"sha":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-13T22:43:56.692Z","updated_at":"2018-10-14T01:17:50.992Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32885468"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107820090","artifacts":[{"file_type":"trace","size":290460,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107820089,"status":"success","stage":"test","name":"ci-hott","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-13T22:43:57.546Z","started_at":"2018-10-13T23:09:24.215Z","finished_at":"2018-10-13T23:19:56.213Z","duration":631.99731,"queued_duration":1.946787,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","short_id":"c6aa59ea","created_at":"2018-10-14T00:43:45.000+02:00","parent_ids":["235cb6e6c243863b7270d273ceeef681eb350247"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T00:43:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c6aa59ea5e010240320ea887aa7ff799a4b18c99"},"pipeline":{"id":32885468,"iid":4311,"project_id":6138686,"sha":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-13T22:43:56.692Z","updated_at":"2018-10-14T01:17:50.992Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32885468"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107820089","artifacts":[{"file_type":"trace","size":151160,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107820088,"status":"success","stage":"test","name":"ci-geocoq","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-13T22:43:57.525Z","started_at":"2018-10-13T23:09:24.166Z","finished_at":"2018-10-14T00:27:51.440Z","duration":4707.273873,"queued_duration":1.868437,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","short_id":"c6aa59ea","created_at":"2018-10-14T00:43:45.000+02:00","parent_ids":["235cb6e6c243863b7270d273ceeef681eb350247"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T00:43:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c6aa59ea5e010240320ea887aa7ff799a4b18c99"},"pipeline":{"id":32885468,"iid":4311,"project_id":6138686,"sha":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-13T22:43:56.692Z","updated_at":"2018-10-14T01:17:50.992Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32885468"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107820088","artifacts":[{"file_type":"trace","size":337391,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107820087,"status":"success","stage":"test","name":"ci-formal-topology","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-13T22:43:57.505Z","started_at":"2018-10-13T23:09:24.122Z","finished_at":"2018-10-13T23:50:15.347Z","duration":2451.224984,"queued_duration":1.796495,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","short_id":"c6aa59ea","created_at":"2018-10-14T00:43:45.000+02:00","parent_ids":["235cb6e6c243863b7270d273ceeef681eb350247"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T00:43:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c6aa59ea5e010240320ea887aa7ff799a4b18c99"},"pipeline":{"id":32885468,"iid":4311,"project_id":6138686,"sha":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-13T22:43:56.692Z","updated_at":"2018-10-14T01:17:50.992Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32885468"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107820087","artifacts":[{"file_type":"trace","size":577055,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107820086,"status":"success","stage":"test","name":"ci-flocq","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-13T22:43:57.485Z","started_at":"2018-10-13T23:09:24.084Z","finished_at":"2018-10-13T23:24:45.508Z","duration":921.42394,"queued_duration":1.728969,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","short_id":"c6aa59ea","created_at":"2018-10-14T00:43:45.000+02:00","parent_ids":["235cb6e6c243863b7270d273ceeef681eb350247"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T00:43:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c6aa59ea5e010240320ea887aa7ff799a4b18c99"},"pipeline":{"id":32885468,"iid":4311,"project_id":6138686,"sha":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-13T22:43:56.692Z","updated_at":"2018-10-14T01:17:50.992Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32885468"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107820086","artifacts":[{"file_type":"trace","size":33116,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107820085,"status":"success","stage":"test","name":"ci-fiat-parsers","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-13T22:43:57.465Z","started_at":"2018-10-13T23:09:24.038Z","finished_at":"2018-10-13T23:24:58.760Z","duration":934.721939,"queued_duration":1.652624,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","short_id":"c6aa59ea","created_at":"2018-10-14T00:43:45.000+02:00","parent_ids":["235cb6e6c243863b7270d273ceeef681eb350247"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T00:43:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c6aa59ea5e010240320ea887aa7ff799a4b18c99"},"pipeline":{"id":32885468,"iid":4311,"project_id":6138686,"sha":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-13T22:43:56.692Z","updated_at":"2018-10-14T01:17:50.992Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32885468"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107820085","artifacts":[{"file_type":"trace","size":237842,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107820084,"status":"success","stage":"test","name":"ci-fiat-crypto-legacy","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-13T22:43:57.445Z","started_at":"2018-10-13T23:09:23.997Z","finished_at":"2018-10-14T01:17:50.905Z","duration":7706.907441,"queued_duration":1.580645,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","short_id":"c6aa59ea","created_at":"2018-10-14T00:43:45.000+02:00","parent_ids":["235cb6e6c243863b7270d273ceeef681eb350247"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T00:43:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c6aa59ea5e010240320ea887aa7ff799a4b18c99"},"pipeline":{"id":32885468,"iid":4311,"project_id":6138686,"sha":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-13T22:43:56.692Z","updated_at":"2018-10-14T01:17:50.992Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32885468"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107820084","artifacts":[{"file_type":"trace","size":650346,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107820083,"status":"success","stage":"test","name":"ci-fiat-crypto","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-13T22:43:57.424Z","started_at":"2018-10-13T23:09:23.950Z","finished_at":"2018-10-14T00:00:56.908Z","duration":3092.958659,"queued_duration":1.497605,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","short_id":"c6aa59ea","created_at":"2018-10-14T00:43:45.000+02:00","parent_ids":["235cb6e6c243863b7270d273ceeef681eb350247"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T00:43:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c6aa59ea5e010240320ea887aa7ff799a4b18c99"},"pipeline":{"id":32885468,"iid":4311,"project_id":6138686,"sha":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-13T22:43:56.692Z","updated_at":"2018-10-14T01:17:50.992Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32885468"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107820083","artifacts":[{"file_type":"trace","size":862342,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107820082,"status":"success","stage":"test","name":"ci-fcsl-pcm","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-13T22:43:57.402Z","started_at":"2018-10-13T23:09:23.910Z","finished_at":"2018-10-13T23:12:59.344Z","duration":215.433364,"queued_duration":1.425568,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","short_id":"c6aa59ea","created_at":"2018-10-14T00:43:45.000+02:00","parent_ids":["235cb6e6c243863b7270d273ceeef681eb350247"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T00:43:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c6aa59ea5e010240320ea887aa7ff799a4b18c99"},"pipeline":{"id":32885468,"iid":4311,"project_id":6138686,"sha":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-13T22:43:56.692Z","updated_at":"2018-10-14T01:17:50.992Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32885468"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107820082","artifacts":[{"file_type":"trace","size":160397,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107820081,"status":"success","stage":"test","name":"ci-equations","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-13T22:43:57.381Z","started_at":"2018-10-13T23:09:22.564Z","finished_at":"2018-10-13T23:15:15.488Z","duration":352.923697,"queued_duration":0.047629,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","short_id":"c6aa59ea","created_at":"2018-10-14T00:43:45.000+02:00","parent_ids":["235cb6e6c243863b7270d273ceeef681eb350247"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T00:43:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c6aa59ea5e010240320ea887aa7ff799a4b18c99"},"pipeline":{"id":32885468,"iid":4311,"project_id":6138686,"sha":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-13T22:43:56.692Z","updated_at":"2018-10-14T01:17:50.992Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32885468"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107820081","artifacts":[{"file_type":"trace","size":80055,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107820080,"status":"success","stage":"test","name":"ci-elpi","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-13T22:43:57.358Z","started_at":"2018-10-13T23:09:22.624Z","finished_at":"2018-10-13T23:13:58.620Z","duration":275.995919,"queued_duration":0.078756,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","short_id":"c6aa59ea","created_at":"2018-10-14T00:43:45.000+02:00","parent_ids":["235cb6e6c243863b7270d273ceeef681eb350247"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T00:43:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c6aa59ea5e010240320ea887aa7ff799a4b18c99"},"pipeline":{"id":32885468,"iid":4311,"project_id":6138686,"sha":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-13T22:43:56.692Z","updated_at":"2018-10-14T01:17:50.992Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32885468"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107820080","artifacts":[{"file_type":"trace","size":469913,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107820079,"status":"success","stage":"test","name":"ci-cross-crypto","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-13T22:43:57.330Z","started_at":"2018-10-13T23:09:23.807Z","finished_at":"2018-10-14T00:02:09.607Z","duration":3165.799993,"queued_duration":1.219829,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","short_id":"c6aa59ea","created_at":"2018-10-14T00:43:45.000+02:00","parent_ids":["235cb6e6c243863b7270d273ceeef681eb350247"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T00:43:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c6aa59ea5e010240320ea887aa7ff799a4b18c99"},"pipeline":{"id":32885468,"iid":4311,"project_id":6138686,"sha":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-13T22:43:56.692Z","updated_at":"2018-10-14T01:17:50.992Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32885468"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107820079","artifacts":[{"file_type":"trace","size":43758,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107820078,"status":"success","stage":"test","name":"ci-coquelicot","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-13T22:43:57.301Z","started_at":"2018-10-13T23:09:23.756Z","finished_at":"2018-10-13T23:15:53.247Z","duration":389.490785,"queued_duration":1.142687,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","short_id":"c6aa59ea","created_at":"2018-10-14T00:43:45.000+02:00","parent_ids":["235cb6e6c243863b7270d273ceeef681eb350247"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T00:43:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c6aa59ea5e010240320ea887aa7ff799a4b18c99"},"pipeline":{"id":32885468,"iid":4311,"project_id":6138686,"sha":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-13T22:43:56.692Z","updated_at":"2018-10-14T01:17:50.992Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32885468"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107820078","artifacts":[{"file_type":"trace","size":132988,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107820077,"status":"success","stage":"test","name":"ci-coq-dpdgraph","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-13T22:43:57.279Z","started_at":"2018-10-13T23:09:23.713Z","finished_at":"2018-10-13T23:26:06.988Z","duration":1003.275414,"queued_duration":1.072921,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","short_id":"c6aa59ea","created_at":"2018-10-14T00:43:45.000+02:00","parent_ids":["235cb6e6c243863b7270d273ceeef681eb350247"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T00:43:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c6aa59ea5e010240320ea887aa7ff799a4b18c99"},"pipeline":{"id":32885468,"iid":4311,"project_id":6138686,"sha":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-13T22:43:56.692Z","updated_at":"2018-10-14T01:17:50.992Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32885468"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107820077","artifacts":[{"file_type":"trace","size":40830,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107820076,"status":"success","stage":"test","name":"ci-compcert","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-13T22:43:57.255Z","started_at":"2018-10-13T23:09:22.716Z","finished_at":"2018-10-13T23:55:13.283Z","duration":2750.566919,"queued_duration":0.047818,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","short_id":"c6aa59ea","created_at":"2018-10-14T00:43:45.000+02:00","parent_ids":["235cb6e6c243863b7270d273ceeef681eb350247"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T00:43:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c6aa59ea5e010240320ea887aa7ff799a4b18c99"},"pipeline":{"id":32885468,"iid":4311,"project_id":6138686,"sha":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-13T22:43:56.692Z","updated_at":"2018-10-14T01:17:50.992Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32885468"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107820076","artifacts":[{"file_type":"trace","size":2045547,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107820075,"status":"success","stage":"test","name":"ci-color","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-13T22:43:57.234Z","started_at":"2018-10-13T23:09:23.673Z","finished_at":"2018-10-13T23:23:56.951Z","duration":873.277474,"queued_duration":0.976622,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","short_id":"c6aa59ea","created_at":"2018-10-14T00:43:45.000+02:00","parent_ids":["235cb6e6c243863b7270d273ceeef681eb350247"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T00:43:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c6aa59ea5e010240320ea887aa7ff799a4b18c99"},"pipeline":{"id":32885468,"iid":4311,"project_id":6138686,"sha":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-13T22:43:56.692Z","updated_at":"2018-10-14T01:17:50.992Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32885468"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107820075","artifacts":[{"file_type":"trace","size":226369,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107820074,"status":"success","stage":"test","name":"ci-bignums","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-13T22:43:57.212Z","started_at":"2018-10-13T23:09:23.625Z","finished_at":"2018-10-13T23:14:04.257Z","duration":280.631989,"queued_duration":0.89874,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","short_id":"c6aa59ea","created_at":"2018-10-14T00:43:45.000+02:00","parent_ids":["235cb6e6c243863b7270d273ceeef681eb350247"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T00:43:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c6aa59ea5e010240320ea887aa7ff799a4b18c99"},"pipeline":{"id":32885468,"iid":4311,"project_id":6138686,"sha":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-13T22:43:56.692Z","updated_at":"2018-10-14T01:17:50.992Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32885468"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107820074","artifacts":[{"file_type":"trace","size":53313,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107820073,"status":"failed","stage":"test","name":"ci-bedrock2","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-13T22:43:57.191Z","started_at":"2018-10-13T23:09:22.825Z","finished_at":"2018-10-13T23:20:06.076Z","duration":643.251771,"queued_duration":0.069762,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","short_id":"c6aa59ea","created_at":"2018-10-14T00:43:45.000+02:00","parent_ids":["235cb6e6c243863b7270d273ceeef681eb350247"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T00:43:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c6aa59ea5e010240320ea887aa7ff799a4b18c99"},"pipeline":{"id":32885468,"iid":4311,"project_id":6138686,"sha":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-13T22:43:56.692Z","updated_at":"2018-10-14T01:17:50.992Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32885468"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/107820073","artifacts":[{"file_type":"trace","size":52779,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107820072,"status":"success","stage":"test","name":"ci-aac-tactics","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-13T22:43:57.171Z","started_at":"2018-10-13T23:09:22.849Z","finished_at":"2018-10-13T23:12:53.058Z","duration":210.209013,"queued_duration":0.066013,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","short_id":"c6aa59ea","created_at":"2018-10-14T00:43:45.000+02:00","parent_ids":["235cb6e6c243863b7270d273ceeef681eb350247"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T00:43:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c6aa59ea5e010240320ea887aa7ff799a4b18c99"},"pipeline":{"id":32885468,"iid":4311,"project_id":6138686,"sha":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-13T22:43:56.692Z","updated_at":"2018-10-14T01:17:50.992Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32885468"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107820072","artifacts":[{"file_type":"trace","size":50405,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107820071,"status":"success","stage":"test","name":"validate:edge+flambda","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-13T22:43:57.151Z","started_at":"2018-10-13T23:09:23.192Z","finished_at":"2018-10-13T23:19:43.968Z","duration":620.775698,"queued_duration":0.383043,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","short_id":"c6aa59ea","created_at":"2018-10-14T00:43:45.000+02:00","parent_ids":["235cb6e6c243863b7270d273ceeef681eb350247"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T00:43:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c6aa59ea5e010240320ea887aa7ff799a4b18c99"},"pipeline":{"id":32885468,"iid":4311,"project_id":6138686,"sha":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-13T22:43:56.692Z","updated_at":"2018-10-14T01:17:50.992Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32885468"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107820071","artifacts":[{"file_type":"trace","size":53080,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107820070,"status":"success","stage":"test","name":"validate:edge","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-13T22:43:57.130Z","started_at":"2018-10-13T23:09:22.971Z","finished_at":"2018-10-13T23:17:24.970Z","duration":481.999286,"queued_duration":0.132645,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","short_id":"c6aa59ea","created_at":"2018-10-14T00:43:45.000+02:00","parent_ids":["235cb6e6c243863b7270d273ceeef681eb350247"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T00:43:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c6aa59ea5e010240320ea887aa7ff799a4b18c99"},"pipeline":{"id":32885468,"iid":4311,"project_id":6138686,"sha":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-13T22:43:56.692Z","updated_at":"2018-10-14T01:17:50.992Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32885468"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107820070","artifacts":[{"file_type":"trace","size":19575,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107820069,"status":"success","stage":"test","name":"validate:base+32bit","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-13T22:43:57.109Z","started_at":"2018-10-13T23:09:22.930Z","finished_at":"2018-10-13T23:16:59.208Z","duration":456.27721,"queued_duration":0.065836,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","short_id":"c6aa59ea","created_at":"2018-10-14T00:43:45.000+02:00","parent_ids":["235cb6e6c243863b7270d273ceeef681eb350247"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T00:43:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c6aa59ea5e010240320ea887aa7ff799a4b18c99"},"pipeline":{"id":32885468,"iid":4311,"project_id":6138686,"sha":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-13T22:43:56.692Z","updated_at":"2018-10-14T01:17:50.992Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32885468"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107820069","artifacts":[{"file_type":"trace","size":18953,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107820068,"status":"success","stage":"test","name":"validate:base","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-13T22:43:57.087Z","started_at":"2018-10-13T23:09:23.151Z","finished_at":"2018-10-13T23:17:33.559Z","duration":490.407318,"queued_duration":0.254364,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","short_id":"c6aa59ea","created_at":"2018-10-14T00:43:45.000+02:00","parent_ids":["235cb6e6c243863b7270d273ceeef681eb350247"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T00:43:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c6aa59ea5e010240320ea887aa7ff799a4b18c99"},"pipeline":{"id":32885468,"iid":4311,"project_id":6138686,"sha":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-13T22:43:56.692Z","updated_at":"2018-10-14T01:17:50.992Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32885468"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107820068","artifacts":[{"file_type":"trace","size":20049,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107820067,"status":"success","stage":"test","name":"test-suite:egde:dune:dev","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-13T22:43:57.066Z","started_at":"2018-10-13T23:09:22.990Z","finished_at":"2018-10-13T23:24:02.047Z","duration":879.056851,"queued_duration":0.056634,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","short_id":"c6aa59ea","created_at":"2018-10-14T00:43:45.000+02:00","parent_ids":["235cb6e6c243863b7270d273ceeef681eb350247"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T00:43:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c6aa59ea5e010240320ea887aa7ff799a4b18c99"},"pipeline":{"id":32885468,"iid":4311,"project_id":6138686,"sha":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-13T22:43:56.692Z","updated_at":"2018-10-14T01:17:50.992Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32885468"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107820067","artifacts":[{"file_type":"trace","size":69532,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107820066,"status":"success","stage":"test","name":"test-suite:edge+flambda","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-13T22:43:57.045Z","started_at":"2018-10-13T23:09:23.114Z","finished_at":"2018-10-13T23:44:00.576Z","duration":2077.462497,"queued_duration":0.109615,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","short_id":"c6aa59ea","created_at":"2018-10-14T00:43:45.000+02:00","parent_ids":["235cb6e6c243863b7270d273ceeef681eb350247"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T00:43:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c6aa59ea5e010240320ea887aa7ff799a4b18c99"},"pipeline":{"id":32885468,"iid":4311,"project_id":6138686,"sha":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-13T22:43:56.692Z","updated_at":"2018-10-14T01:17:50.992Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32885468"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107820066","artifacts":[{"file_type":"trace","size":70563,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107820065,"status":"success","stage":"test","name":"test-suite:edge","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-13T22:43:57.026Z","started_at":"2018-10-13T23:09:23.182Z","finished_at":"2018-10-13T23:20:12.280Z","duration":649.09818,"queued_duration":0.061406,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","short_id":"c6aa59ea","created_at":"2018-10-14T00:43:45.000+02:00","parent_ids":["235cb6e6c243863b7270d273ceeef681eb350247"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T00:43:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c6aa59ea5e010240320ea887aa7ff799a4b18c99"},"pipeline":{"id":32885468,"iid":4311,"project_id":6138686,"sha":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-13T22:43:56.692Z","updated_at":"2018-10-14T01:17:50.992Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32885468"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107820065","artifacts":[{"file_type":"trace","size":68470,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107820064,"status":"success","stage":"test","name":"test-suite:base+32bit","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-13T22:43:57.005Z","started_at":"2018-10-13T23:09:23.279Z","finished_at":"2018-10-13T23:17:22.252Z","duration":478.972983,"queued_duration":0.10294,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","short_id":"c6aa59ea","created_at":"2018-10-14T00:43:45.000+02:00","parent_ids":["235cb6e6c243863b7270d273ceeef681eb350247"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T00:43:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c6aa59ea5e010240320ea887aa7ff799a4b18c99"},"pipeline":{"id":32885468,"iid":4311,"project_id":6138686,"sha":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-13T22:43:56.692Z","updated_at":"2018-10-14T01:17:50.992Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32885468"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107820064","artifacts":[{"file_type":"trace","size":69009,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107820063,"status":"success","stage":"test","name":"test-suite:base","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-13T22:43:56.982Z","started_at":"2018-10-13T23:09:23.588Z","finished_at":"2018-10-13T23:18:03.144Z","duration":519.555634,"queued_duration":0.360324,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","short_id":"c6aa59ea","created_at":"2018-10-14T00:43:45.000+02:00","parent_ids":["235cb6e6c243863b7270d273ceeef681eb350247"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T00:43:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c6aa59ea5e010240320ea887aa7ff799a4b18c99"},"pipeline":{"id":32885468,"iid":4311,"project_id":6138686,"sha":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-13T22:43:56.692Z","updated_at":"2018-10-14T01:17:50.992Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32885468"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107820063","artifacts":[{"file_type":"trace","size":70042,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107820062,"status":"success","stage":"test","name":"doc:ml-api:odoc","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-13T22:43:56.959Z","started_at":"2018-10-13T23:09:23.544Z","finished_at":"2018-10-13T23:12:04.998Z","duration":161.453974,"queued_duration":0.273118,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","short_id":"c6aa59ea","created_at":"2018-10-14T00:43:45.000+02:00","parent_ids":["235cb6e6c243863b7270d273ceeef681eb350247"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T00:43:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c6aa59ea5e010240320ea887aa7ff799a4b18c99"},"pipeline":{"id":32885468,"iid":4311,"project_id":6138686,"sha":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-13T22:43:56.692Z","updated_at":"2018-10-14T01:17:50.992Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32885468"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107820062","artifacts":[{"file_type":"trace","size":71502,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107820061,"status":"success","stage":"test","name":"doc:refman","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-13T22:43:56.934Z","started_at":"2018-10-13T23:09:23.498Z","finished_at":"2018-10-13T23:16:18.867Z","duration":415.369662,"queued_duration":0.195953,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","short_id":"c6aa59ea","created_at":"2018-10-14T00:43:45.000+02:00","parent_ids":["235cb6e6c243863b7270d273ceeef681eb350247"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T00:43:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c6aa59ea5e010240320ea887aa7ff799a4b18c99"},"pipeline":{"id":32885468,"iid":4311,"project_id":6138686,"sha":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-13T22:43:56.692Z","updated_at":"2018-10-14T01:17:50.992Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32885468"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107820061","artifacts":[{"file_type":"trace","size":946191,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107820060,"status":"success","stage":"test","name":"pkg:nix","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-13T22:43:56.903Z","started_at":"2018-10-13T23:09:23.383Z","finished_at":"2018-10-13T23:43:42.610Z","duration":2059.227654,"queued_duration":0.055262,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","short_id":"c6aa59ea","created_at":"2018-10-14T00:43:45.000+02:00","parent_ids":["235cb6e6c243863b7270d273ceeef681eb350247"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T00:43:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c6aa59ea5e010240320ea887aa7ff799a4b18c99"},"pipeline":{"id":32885468,"iid":4311,"project_id":6138686,"sha":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-13T22:43:56.692Z","updated_at":"2018-10-14T01:17:50.992Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32885468"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107820060","artifacts":[{"file_type":"trace","size":656728,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107820059,"status":"success","stage":"test","name":"pkg:opam","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-13T22:43:56.878Z","started_at":"2018-10-13T23:09:23.435Z","finished_at":"2018-10-13T23:24:09.911Z","duration":886.475989,"queued_duration":0.083305,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","short_id":"c6aa59ea","created_at":"2018-10-14T00:43:45.000+02:00","parent_ids":["235cb6e6c243863b7270d273ceeef681eb350247"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T00:43:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c6aa59ea5e010240320ea887aa7ff799a4b18c99"},"pipeline":{"id":32885468,"iid":4311,"project_id":6138686,"sha":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-13T22:43:56.692Z","updated_at":"2018-10-14T01:17:50.992Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32885468"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107820059","artifacts":[{"file_type":"trace","size":18186,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107820058,"status":"failed","stage":"test","name":"windows64","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-13T22:43:56.846Z","started_at":"2018-10-13T23:09:23.955Z","finished_at":"2018-10-13T23:33:06.313Z","duration":1422.358319,"queued_duration":0.578092,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","short_id":"c6aa59ea","created_at":"2018-10-14T00:43:45.000+02:00","parent_ids":["235cb6e6c243863b7270d273ceeef681eb350247"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T00:43:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c6aa59ea5e010240320ea887aa7ff799a4b18c99"},"pipeline":{"id":32885468,"iid":4311,"project_id":6138686,"sha":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-13T22:43:56.692Z","updated_at":"2018-10-14T01:17:50.992Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32885468"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/107820058","artifacts":[{"file_type":"trace","size":224160,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2018-10-20T23:33:04.136Z","tag_list":["windows"]}
{"id":107820057,"status":"success","stage":"build","name":"build:egde:dune:dev","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-13T22:43:56.812Z","started_at":"2018-10-13T22:43:58.472Z","finished_at":"2018-10-13T22:59:56.647Z","duration":958.174353,"queued_duration":0.543539,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","short_id":"c6aa59ea","created_at":"2018-10-14T00:43:45.000+02:00","parent_ids":["235cb6e6c243863b7270d273ceeef681eb350247"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T00:43:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c6aa59ea5e010240320ea887aa7ff799a4b18c99"},"pipeline":{"id":32885468,"iid":4311,"project_id":6138686,"sha":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-13T22:43:56.692Z","updated_at":"2018-10-14T01:17:50.992Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32885468"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107820057","artifacts":[{"file_type":"trace","size":16930,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-10-20T22:59:51.753Z","tag_list":[]}
{"id":107820056,"status":"success","stage":"build","name":"build:edge+flambda","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-13T22:43:56.788Z","started_at":"2018-10-13T22:43:58.403Z","finished_at":"2018-10-13T23:09:21.846Z","duration":1523.442243,"queued_duration":0.448188,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","short_id":"c6aa59ea","created_at":"2018-10-14T00:43:45.000+02:00","parent_ids":["235cb6e6c243863b7270d273ceeef681eb350247"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T00:43:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c6aa59ea5e010240320ea887aa7ff799a4b18c99"},"pipeline":{"id":32885468,"iid":4311,"project_id":6138686,"sha":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-13T22:43:56.692Z","updated_at":"2018-10-14T01:17:50.992Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32885468"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107820056","artifacts":[{"file_type":"trace","size":230715,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-10-20T23:09:13.378Z","tag_list":[]}
{"id":107820055,"status":"success","stage":"build","name":"build:edge","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-13T22:43:56.761Z","started_at":"2018-10-13T22:43:58.330Z","finished_at":"2018-10-13T23:01:29.953Z","duration":1051.623755,"queued_duration":0.33612,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","short_id":"c6aa59ea","created_at":"2018-10-14T00:43:45.000+02:00","parent_ids":["235cb6e6c243863b7270d273ceeef681eb350247"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T00:43:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c6aa59ea5e010240320ea887aa7ff799a4b18c99"},"pipeline":{"id":32885468,"iid":4311,"project_id":6138686,"sha":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-13T22:43:56.692Z","updated_at":"2018-10-14T01:17:50.992Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32885468"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107820055","artifacts":[{"file_type":"trace","size":229641,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-10-20T23:01:26.273Z","tag_list":[]}
{"id":107820053,"status":"success","stage":"build","name":"build:base+32bit","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-13T22:43:56.734Z","started_at":"2018-10-13T22:43:58.067Z","finished_at":"2018-10-13T22:58:49.002Z","duration":890.935572,"queued_duration":0.046427,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","short_id":"c6aa59ea","created_at":"2018-10-14T00:43:45.000+02:00","parent_ids":["235cb6e6c243863b7270d273ceeef681eb350247"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T00:43:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c6aa59ea5e010240320ea887aa7ff799a4b18c99"},"pipeline":{"id":32885468,"iid":4311,"project_id":6138686,"sha":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-13T22:43:56.692Z","updated_at":"2018-10-14T01:17:50.992Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32885468"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107820053","artifacts":[{"file_type":"trace","size":224745,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-10-20T22:58:44.372Z","tag_list":[]}
{"id":107820052,"status":"success","stage":"build","name":"build:base","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-13T22:43:56.707Z","started_at":"2018-10-13T22:43:58.246Z","finished_at":"2018-10-13T23:01:18.243Z","duration":1039.997023,"queued_duration":0.199321,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","short_id":"c6aa59ea","created_at":"2018-10-14T00:43:45.000+02:00","parent_ids":["235cb6e6c243863b7270d273ceeef681eb350247"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-14T00:43:45.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c6aa59ea5e010240320ea887aa7ff799a4b18c99"},"pipeline":{"id":32885468,"iid":4311,"project_id":6138686,"sha":"c6aa59ea5e010240320ea887aa7ff799a4b18c99","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-13T22:43:56.692Z","updated_at":"2018-10-14T01:17:50.992Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32885468"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107820052","artifacts":[{"file_type":"trace","size":272806,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-10-20T23:01:13.138Z","tag_list":[]}
