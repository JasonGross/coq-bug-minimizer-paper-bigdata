{"id":604581781,"status":"success","stage":"stage-5","name":"library:ci-fiat_crypto_ocaml","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:24.811Z","started_at":"2020-06-21T06:49:43.441Z","finished_at":"2020-06-21T07:09:36.789Z","duration":1193.348288,"queued_duration":0.804698,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581781","artifacts":[{"file_type":"trace","size":130259,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":604581780,"status":"success","stage":"stage-4","name":"library:ci-corn","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:24.791Z","started_at":"2020-06-21T05:07:44.851Z","finished_at":"2020-06-21T05:43:59.383Z","duration":2174.531832,"queued_duration":0.666086,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581780","artifacts":[{"file_type":"trace","size":449937,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":604581779,"status":"success","stage":"stage-4","name":"library:ci-fiat_crypto","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:24.774Z","started_at":"2020-06-21T05:09:12.854Z","finished_at":"2020-06-21T06:49:42.553Z","duration":6029.699185,"queued_duration":0.88363,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581779","artifacts":[{"file_type":"trace","size":2245484,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":604581778,"status":"success","stage":"stage-3","name":"plugin:ci-metacoq","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:24.755Z","started_at":"2020-06-21T04:52:20.421Z","finished_at":"2020-06-21T05:19:03.275Z","duration":1602.854555,"queued_duration":0.611947,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581778","artifacts":[{"file_type":"trace","size":301369,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":604581777,"status":"success","stage":"stage-3","name":"library:ci-vst","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:24.740Z","started_at":"2020-06-21T05:02:39.089Z","finished_at":"2020-06-21T06:13:03.802Z","duration":4224.712898,"queued_duration":0.670505,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581777","artifacts":[{"file_type":"trace","size":556695,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":604581776,"status":"success","stage":"stage-3","name":"library:ci-math_classes","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:24.724Z","started_at":"2020-06-21T04:59:47.761Z","finished_at":"2020-06-21T05:07:44.100Z","duration":476.338573,"queued_duration":1.192662,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581776","artifacts":[{"file_type":"trace","size":180120,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":604581775,"status":"success","stage":"stage-3","name":"library:ci-coqprime","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:24.709Z","started_at":"2020-06-21T04:59:47.666Z","finished_at":"2020-06-21T05:05:07.851Z","duration":320.184466,"queued_duration":1.075345,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581775","artifacts":[{"file_type":"trace","size":105039,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":604581774,"status":"success","stage":"stage-3","name":"library:ci-color","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:24.692Z","started_at":"2020-06-21T04:59:46.945Z","finished_at":"2020-06-21T05:13:44.138Z","duration":837.192807,"queued_duration":0.331663,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581774","artifacts":[{"file_type":"trace","size":620573,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":604581772,"status":"success","stage":"stage-2","name":"plugin:ci-rewriter","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:24.668Z","started_at":"2020-06-21T04:55:51.973Z","finished_at":"2020-06-21T05:09:11.901Z","duration":799.928409,"queued_duration":2.277792,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581772","artifacts":[{"file_type":"trace","size":213691,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":604581771,"status":"success","stage":"stage-2","name":"plugin:ci-relation_algebra","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:24.646Z","started_at":"2020-06-21T04:44:41.617Z","finished_at":"2020-06-21T04:51:04.287Z","duration":382.670746,"queued_duration":1.939704,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581771","artifacts":[{"file_type":"trace","size":55668,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":604581770,"status":"success","stage":"stage-2","name":"plugin:ci-reduction_effects","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:24.628Z","started_at":"2020-06-21T04:44:41.580Z","finished_at":"2020-06-21T04:48:43.021Z","duration":241.441285,"queued_duration":1.923733,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581770","artifacts":[{"file_type":"trace","size":54814,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":604581769,"status":"success","stage":"stage-2","name":"plugin:ci-quickchick","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:24.610Z","started_at":"2020-06-21T04:55:51.883Z","finished_at":"2020-06-21T05:02:30.033Z","duration":398.149157,"queued_duration":2.167517,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581769","artifacts":[{"file_type":"trace","size":230803,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":604581768,"status":"success","stage":"stage-2","name":"plugin:ci-perennial","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:24.592Z","started_at":"2020-06-21T04:55:51.844Z","finished_at":"2020-06-21T06:02:03.134Z","duration":3971.290106,"queued_duration":2.110625,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581768","artifacts":[{"file_type":"trace","size":38295,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":604581767,"status":"success","stage":"stage-2","name":"plugin:ci-paramcoq","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:24.576Z","started_at":"2020-06-21T04:44:41.498Z","finished_at":"2020-06-21T04:48:02.144Z","duration":200.646668,"queued_duration":2.108986,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581767","artifacts":[{"file_type":"trace","size":81493,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":604581766,"status":"success","stage":"stage-2","name":"plugin:ci-mtac2","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:24.562Z","started_at":"2020-06-21T04:44:41.440Z","finished_at":"2020-06-21T04:49:12.749Z","duration":271.309067,"queued_duration":2.027275,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581766","artifacts":[{"file_type":"trace","size":154572,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":604581765,"status":"success","stage":"stage-2","name":"plugin:ci-fiat_parsers","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:24.549Z","started_at":"2020-06-21T04:44:41.399Z","finished_at":"2020-06-21T05:04:46.262Z","duration":1204.863123,"queued_duration":1.963995,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581765","artifacts":[{"file_type":"trace","size":822152,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":604581764,"status":"success","stage":"stage-2","name":"plugin:ci-equations","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:24.532Z","started_at":"2020-06-21T04:44:41.351Z","finished_at":"2020-06-21T04:52:19.719Z","duration":458.367702,"queued_duration":1.894433,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581764","artifacts":[{"file_type":"trace","size":101120,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":604581763,"status":"success","stage":"stage-2","name":"plugin:ci-elpi","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:24.517Z","started_at":"2020-06-21T04:44:41.220Z","finished_at":"2020-06-21T04:50:35.075Z","duration":353.855571,"queued_duration":1.741057,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581763","artifacts":[{"file_type":"trace","size":336066,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":604581762,"status":"success","stage":"stage-2","name":"plugin:ci-coqhammer","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:24.502Z","started_at":"2020-06-21T04:44:41.181Z","finished_at":"2020-06-21T04:47:49.107Z","duration":187.925933,"queued_duration":1.681454,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581762","artifacts":[{"file_type":"trace","size":43428,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":604581761,"status":"success","stage":"stage-2","name":"plugin:ci-coq_dpdgraph","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:24.487Z","started_at":"2020-06-21T04:44:41.098Z","finished_at":"2020-06-21T04:47:51.226Z","duration":190.128071,"queued_duration":1.577865,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581761","artifacts":[{"file_type":"trace","size":42464,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":604581760,"status":"success","stage":"stage-2","name":"plugin:ci-bignums","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:24.461Z","started_at":"2020-06-21T04:55:51.737Z","finished_at":"2020-06-21T04:59:46.492Z","duration":234.755081,"queued_duration":1.977832,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581760","artifacts":[{"file_type":"trace","size":97069,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":604581758,"status":"success","stage":"stage-2","name":"plugin:ci-aac_tactics","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:24.447Z","started_at":"2020-06-21T04:44:40.902Z","finished_at":"2020-06-21T04:47:41.215Z","duration":180.312723,"queued_duration":1.361653,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581758","artifacts":[{"file_type":"trace","size":48872,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":604581757,"status":"success","stage":"stage-2","name":"library:ci-verdi_raft","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:24.432Z","started_at":"2020-06-21T04:55:51.697Z","finished_at":"2020-06-21T05:25:37.719Z","duration":1786.021497,"queued_duration":1.921167,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581757","artifacts":[{"file_type":"trace","size":314939,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":604581756,"status":"success","stage":"stage-2","name":"library:ci-unimath","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:24.417Z","started_at":"2020-06-21T04:55:51.583Z","finished_at":"2020-06-21T06:05:16.873Z","duration":4165.289877,"queued_duration":1.790317,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581756","artifacts":[{"file_type":"trace","size":221891,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":604581755,"status":"success","stage":"stage-2","name":"library:ci-tlc","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:24.401Z","started_at":"2020-06-21T04:44:40.864Z","finished_at":"2020-06-21T04:49:52.616Z","duration":311.751513,"queued_duration":1.301568,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581755","artifacts":[{"file_type":"trace","size":152139,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":604581754,"status":"success","stage":"stage-2","name":"library:ci-stdlib2","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:24.385Z","started_at":"2020-06-21T04:55:51.489Z","finished_at":"2020-06-21T04:59:15.758Z","duration":204.268079,"queued_duration":1.676334,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581754","artifacts":[{"file_type":"trace","size":35649,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":604581753,"status":"success","stage":"stage-2","name":"library:ci-sf","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:24.252Z","started_at":"2020-06-21T04:44:40.804Z","finished_at":"2020-06-21T04:50:00.876Z","duration":320.072617,"queued_duration":1.221109,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581753","artifacts":[{"file_type":"trace","size":537781,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":604581752,"status":"success","stage":"stage-2","name":"library:ci-mathcomp","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:24.236Z","started_at":"2020-06-21T04:55:51.393Z","finished_at":"2020-06-21T06:02:50.883Z","duration":4019.490748,"queued_duration":1.561909,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581752","artifacts":[{"file_type":"trace","size":431482,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":604581751,"status":"success","stage":"stage-2","name":"library:ci-lambda_rust","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:24.223Z","started_at":"2020-06-21T04:55:51.050Z","finished_at":"2020-06-21T05:33:14.719Z","duration":2243.668651,"queued_duration":1.202793,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581751","artifacts":[{"file_type":"trace","size":269798,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":604581750,"status":"success","stage":"stage-2","name":"library:ci-hott","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:24.209Z","started_at":"2020-06-21T04:44:40.650Z","finished_at":"2020-06-21T04:55:52.996Z","duration":672.34542,"queued_duration":1.048089,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581750","artifacts":[{"file_type":"trace","size":131387,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":604581749,"status":"success","stage":"stage-2","name":"library:ci-geocoq","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:24.195Z","started_at":"2020-06-21T04:55:50.938Z","finished_at":"2020-06-21T05:32:37.068Z","duration":2206.130149,"queued_duration":1.067661,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581749","artifacts":[{"file_type":"trace","size":235375,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":604581748,"status":"success","stage":"stage-2","name":"library:ci-flocq","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:24.182Z","started_at":"2020-06-21T04:55:50.786Z","finished_at":"2020-06-21T05:02:38.337Z","duration":407.55039,"queued_duration":0.897381,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581748","artifacts":[{"file_type":"trace","size":122883,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":604581747,"status":"success","stage":"stage-2","name":"library:ci-fcsl_pcm","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:24.170Z","started_at":"2020-06-21T04:44:40.611Z","finished_at":"2020-06-21T04:49:54.280Z","duration":313.668842,"queued_duration":0.986475,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581747","artifacts":[{"file_type":"trace","size":54957,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":604581746,"status":"success","stage":"stage-2","name":"library:ci-engine_bench","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:24.156Z","started_at":"2020-06-21T04:44:40.572Z","finished_at":"2020-06-21T05:06:23.002Z","duration":1302.429595,"queued_duration":1.415905,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581746","artifacts":[{"file_type":"trace","size":166724,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":604581745,"status":"success","stage":"stage-2","name":"library:ci-cross_crypto","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:24.143Z","started_at":"2020-06-21T04:44:40.496Z","finished_at":"2020-06-21T05:17:47.564Z","duration":1987.068647,"queued_duration":1.317497,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581745","artifacts":[{"file_type":"trace","size":175202,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":604581744,"status":"success","stage":"stage-2","name":"library:ci-coquelicot","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:24.129Z","started_at":"2020-06-21T04:44:40.402Z","finished_at":"2020-06-21T04:50:12.335Z","duration":331.9333,"queued_duration":1.201534,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581744","artifacts":[{"file_type":"trace","size":92821,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":604581743,"status":"success","stage":"stage-2","name":"library:ci-coq_tools","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:24.114Z","started_at":"2020-06-21T04:44:40.311Z","finished_at":"2020-06-21T04:52:28.380Z","duration":468.069939,"queued_duration":1.088182,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581743","artifacts":[{"file_type":"trace","size":66784,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":604581742,"status":"success","stage":"stage-2","name":"library:ci-compcert","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:24.101Z","started_at":"2020-06-21T04:55:50.679Z","finished_at":"2020-06-21T05:18:02.140Z","duration":1331.460744,"queued_duration":0.768793,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581742","artifacts":[{"file_type":"trace","size":4194361,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":604581741,"status":"success","stage":"stage-2","name":"library:ci-bedrock2","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:24.087Z","started_at":"2020-06-21T04:55:50.577Z","finished_at":"2020-06-21T06:19:30.045Z","duration":5019.46829,"queued_duration":0.649311,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581741","artifacts":[{"file_type":"trace","size":476437,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":604581740,"status":"success","stage":"stage-2","name":"library:ci-bbv","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:24.071Z","started_at":"2020-06-21T04:44:40.256Z","finished_at":"2020-06-21T04:48:15.153Z","duration":214.896485,"queued_duration":1.012706,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581740","artifacts":[{"file_type":"trace","size":114783,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":604581739,"status":"success","stage":"stage-2","name":"library:ci-argosy","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:24.058Z","started_at":"2020-06-21T04:44:39.781Z","finished_at":"2020-06-21T04:48:51.845Z","duration":252.064152,"queued_duration":0.515436,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581739","artifacts":[{"file_type":"trace","size":25840,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":604581738,"status":"success","stage":"stage-2","name":"validate:quick","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:24.045Z","started_at":"2020-06-21T04:46:03.318Z","finished_at":"2020-06-21T04:50:50.151Z","duration":286.833587,"queued_duration":0.533074,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581738","artifacts":[{"file_type":"trace","size":69999,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-08-20T04:50:48.686Z","tag_list":[]}
{"id":604581737,"status":"success","stage":"stage-2","name":"validate:edge+flambda","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:24.031Z","started_at":"2020-06-21T04:55:50.511Z","finished_at":"2020-06-21T05:00:43.644Z","duration":293.132496,"queued_duration":0.566919,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581737","artifacts":[{"file_type":"trace","size":310823,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-08-20T05:00:41.770Z","tag_list":[]}
{"id":604581736,"status":"success","stage":"stage-2","name":"validate:base+32bit","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:24.018Z","started_at":"2020-06-21T04:42:31.157Z","finished_at":"2020-06-21T04:47:05.544Z","duration":274.386888,"queued_duration":0.763732,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581736","artifacts":[{"file_type":"trace","size":68374,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-08-20T04:47:04.454Z","tag_list":[]}
{"id":604581735,"status":"success","stage":"stage-2","name":"validate:base","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:24.003Z","started_at":"2020-06-21T04:44:40.039Z","finished_at":"2020-06-21T04:49:18.157Z","duration":278.118196,"queued_duration":0.751878,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581735","artifacts":[{"file_type":"trace","size":69996,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-08-20T04:49:16.550Z","tag_list":[]}
{"id":604581734,"status":"success","stage":"stage-2","name":"test-suite:base+async","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-06-21T04:25:23.989Z","started_at":"2020-06-21T04:44:39.920Z","finished_at":"2020-06-21T05:11:58.501Z","duration":1638.580502,"queued_duration":0.611838,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581734","artifacts":[{"file_type":"trace","size":123326,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":604581733,"status":"success","stage":"stage-2","name":"test-suite:edge:dune:dev","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:23.975Z","started_at":"2020-06-21T04:46:23.050Z","finished_at":"2020-06-21T05:09:48.697Z","duration":1405.647396,"queued_duration":1.60204,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581733","artifacts":[{"file_type":"trace","size":98084,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":604581732,"status":"success","stage":"stage-2","name":"test-suite:edge+flambda","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:23.962Z","started_at":"2020-06-21T04:55:50.080Z","finished_at":"2020-06-21T05:14:35.687Z","duration":1125.607163,"queued_duration":0.117404,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581732","artifacts":[{"file_type":"trace","size":123062,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":604581731,"status":"success","stage":"stage-2","name":"test-suite:base+32bit","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:23.949Z","started_at":"2020-06-21T04:42:30.755Z","finished_at":"2020-06-21T05:01:02.052Z","duration":1111.29681,"queued_duration":0.336882,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581731","artifacts":[{"file_type":"trace","size":127136,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":604581730,"status":"success","stage":"stage-2","name":"test-suite:base","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:23.935Z","started_at":"2020-06-21T04:44:39.551Z","finished_at":"2020-06-21T05:01:46.451Z","duration":1026.899641,"queued_duration":0.220315,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581730","artifacts":[{"file_type":"trace","size":122846,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":604581729,"status":"success","stage":"stage-2","name":"doc:ml-api:odoc","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:23.921Z","started_at":"2020-06-21T04:46:22.770Z","finished_at":"2020-06-21T04:50:35.982Z","duration":253.21164,"queued_duration":1.299712,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581729","artifacts":[{"file_type":"trace","size":77478,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-08-20T04:50:33.991Z","tag_list":[]}
{"id":604581728,"status":"success","stage":"stage-2","name":"doc:stdlib:dune","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:23.905Z","started_at":"2020-06-21T04:46:22.549Z","finished_at":"2020-06-21T04:50:36.386Z","duration":253.83688,"queued_duration":1.055376,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581728","artifacts":[{"file_type":"trace","size":80984,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-08-20T04:50:35.089Z","tag_list":[]}
{"id":604581727,"status":"success","stage":"stage-2","name":"doc:refman-pdf:dune","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:23.891Z","started_at":"2020-06-21T04:46:22.510Z","finished_at":"2020-06-21T04:54:49.114Z","duration":506.603773,"queued_duration":0.994905,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581727","artifacts":[{"file_type":"trace","size":21286,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-08-20T04:54:47.939Z","tag_list":[]}
{"id":604581726,"status":"success","stage":"stage-2","name":"doc:refman:dune","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:23.876Z","started_at":"2020-06-21T04:46:22.331Z","finished_at":"2020-06-21T04:53:34.607Z","duration":432.276015,"queued_duration":0.794385,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581726","artifacts":[{"file_type":"trace","size":20418,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-08-20T04:53:33.403Z","tag_list":[]}
{"id":604581725,"status":"success","stage":"stage-2","name":"doc:refman","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:23.855Z","started_at":"2020-06-21T04:44:39.489Z","finished_at":"2020-06-21T04:54:39.679Z","duration":600.189259,"queued_duration":0.137036,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581725","artifacts":[{"file_type":"trace","size":71427,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-08-20T04:54:37.420Z","tag_list":[]}
{"id":604581724,"status":"success","stage":"stage-1","name":"plugin:plugin-tutorial","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:23.829Z","started_at":"2020-06-21T04:25:27.399Z","finished_at":"2020-06-21T04:29:51.771Z","duration":264.372833,"queued_duration":2.418211,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581724","artifacts":[{"file_type":"trace","size":58815,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":604581723,"status":"success","stage":"stage-1","name":"test-suite:edge+4.11+trunk+dune","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-06-21T04:25:23.816Z","started_at":"2020-06-21T04:25:27.299Z","finished_at":"2020-06-21T05:11:34.216Z","duration":2766.91699,"queued_duration":2.301942,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581723","artifacts":[{"file_type":"trace","size":100275,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-07-05T05:11:33.121Z","tag_list":[]}
{"id":604581722,"status":"success","stage":"stage-1","name":"pkg:nix","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:23.802Z","started_at":"2020-06-21T04:25:27.255Z","finished_at":"2020-06-21T05:10:47.984Z","duration":2720.728325,"queued_duration":2.239916,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581722","artifacts":[{"file_type":"trace","size":594650,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":604581721,"status":"success","stage":"stage-1","name":"pkg:opam","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:23.789Z","started_at":"2020-06-21T04:25:27.216Z","finished_at":"2020-06-21T04:53:29.135Z","duration":1681.91877,"queued_duration":2.183309,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581721","artifacts":[{"file_type":"trace","size":20331,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":604581720,"status":"success","stage":"stage-1","name":"lint","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:23.775Z","started_at":"2020-06-21T04:25:27.108Z","finished_at":"2020-06-21T04:30:38.873Z","duration":311.764947,"queued_duration":2.057615,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581720","artifacts":[{"file_type":"trace","size":19270,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":604581719,"status":"success","stage":"stage-1","name":"windows64","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:23.757Z","started_at":"2020-06-21T04:25:25.456Z","finished_at":"2020-06-21T05:29:05.179Z","duration":3819.722555,"queued_duration":0.389243,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581719","artifacts":[{"file_type":"trace","size":240364,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-06-28T05:29:04.020Z","tag_list":["windows-inria"]}
{"id":604581718,"status":"success","stage":"stage-1","name":"build:quick","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-06-21T04:25:23.742Z","started_at":"2020-06-21T04:25:27.058Z","finished_at":"2020-06-21T04:46:02.696Z","duration":1235.638871,"queued_duration":1.960268,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581718","artifacts":[{"file_type":"trace","size":201910,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-06-28T04:46:01.356Z","tag_list":[]}
{"id":604581717,"status":"success","stage":"stage-1","name":"build:base+async","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-06-21T04:25:23.727Z","started_at":"2020-06-21T04:25:26.956Z","finished_at":"2020-06-21T05:56:36.937Z","duration":5469.98004,"queued_duration":1.839331,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581717","artifacts":[{"file_type":"trace","size":287401,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-06-28T05:56:35.727Z","tag_list":[]}
{"id":604581716,"status":"success","stage":"stage-1","name":"build:edge+flambda:dune:dev","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:23.715Z","started_at":"2020-06-21T04:25:26.743Z","finished_at":"2020-06-21T04:46:21.369Z","duration":1254.625988,"queued_duration":1.604099,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581716","artifacts":[{"file_type":"trace","size":20004,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-06-28T04:46:20.135Z","tag_list":[]}
{"id":604581715,"status":"success","stage":"stage-1","name":"build:edge+flambda","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:23.702Z","started_at":"2020-06-21T04:25:26.440Z","finished_at":"2020-06-21T04:55:49.629Z","duration":1823.189145,"queued_duration":1.280212,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581715","artifacts":[{"file_type":"trace","size":287946,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-06-28T04:55:48.101Z","tag_list":[]}
{"id":604581714,"status":"success","stage":"stage-1","name":"build:base+32bit","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:23.688Z","started_at":"2020-06-21T04:25:26.260Z","finished_at":"2020-06-21T04:42:30.303Z","duration":1024.042338,"queued_duration":1.055652,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581714","artifacts":[{"file_type":"trace","size":280250,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-06-28T04:42:29.048Z","tag_list":[]}
{"id":604581713,"status":"success","stage":"stage-1","name":"build:base","ref":"pr-12479","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-06-21T04:25:23.662Z","started_at":"2020-06-21T04:25:26.213Z","finished_at":"2020-06-21T04:44:39.080Z","duration":1152.866919,"queued_duration":0.986139,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","short_id":"60cc51d9","created_at":"2020-06-21T00:25:09.000-04:00","parent_ids":["43dba0d74b6cc39eea149c2908291e9108d21e71"],"title":"Bring Int63 notations into line with stdlib","message":"Bring Int63 notations into line with stdlib\n\nWe also put them in a module, so users can `Require Int63. Import\nInt63.Int63Notations` without needing to unqualify the primitives.\n\nIn particular, we change\n- `a \\% m` into `a mod m` to correspond with the notation in ZArith\n- `m == n` into `m =? n` to correspond with the eqb notations elsewhere\n- `m < n` into `m <? n` to correspond with the ltb notations elsewhere\n- `m <= n` into `m <=? n` to correspond with the leb notations elsewhere\n- `m ≤ n` into `m ≤? n` for consistency with the non-unicode notation\n\nThe old notations are still accessible as deprecated notations.\n\nFixes #12454\n","author_name":"Jason Gross","author_email":"jgross@mit.edu","authored_date":"2020-06-07T16:20:08.000-04:00","committer_name":"Jason Gross","committer_email":"jgross@mit.edu","committed_date":"2020-06-21T00:25:09.000-04:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/60cc51d96f3fb77746476f2a722c1286fdc2a24f"},"pipeline":{"id":158436537,"iid":16891,"project_id":6138686,"sha":"60cc51d96f3fb77746476f2a722c1286fdc2a24f","ref":"pr-12479","status":"success","source":"push","created_at":"2020-06-21T04:25:23.646Z","updated_at":"2020-06-21T07:09:37.005Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/158436537"},"web_url":"https://gitlab.com/coq/coq/-/jobs/604581713","artifacts":[{"file_type":"trace","size":313298,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-06-28T04:44:37.938Z","tag_list":[]}
