{"id":103799879,"status":"skipped","stage":"test","name":"ci-vst","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T13:25:10.244Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"faa6e09268d33100fb248b1484526b3f21eac8a5","short_id":"faa6e092","created_at":"2018-10-02T15:24:36.000+02:00","parent_ids":["5424ad236574e22a7ef2dce0d1d9468a9b768a16"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T15:24:36.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/faa6e09268d33100fb248b1484526b3f21eac8a5"},"pipeline":{"id":31787510,"iid":3868,"project_id":6138686,"sha":"faa6e09268d33100fb248b1484526b3f21eac8a5","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T13:25:09.315Z","updated_at":"2018-10-02T13:53:30.169Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31787510"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103799879","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103799878,"status":"skipped","stage":"test","name":"ci-unimath","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T13:25:10.224Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"faa6e09268d33100fb248b1484526b3f21eac8a5","short_id":"faa6e092","created_at":"2018-10-02T15:24:36.000+02:00","parent_ids":["5424ad236574e22a7ef2dce0d1d9468a9b768a16"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T15:24:36.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/faa6e09268d33100fb248b1484526b3f21eac8a5"},"pipeline":{"id":31787510,"iid":3868,"project_id":6138686,"sha":"faa6e09268d33100fb248b1484526b3f21eac8a5","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T13:25:09.315Z","updated_at":"2018-10-02T13:53:30.169Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31787510"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103799878","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103799877,"status":"skipped","stage":"test","name":"ci-sf","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T13:25:10.204Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"faa6e09268d33100fb248b1484526b3f21eac8a5","short_id":"faa6e092","created_at":"2018-10-02T15:24:36.000+02:00","parent_ids":["5424ad236574e22a7ef2dce0d1d9468a9b768a16"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T15:24:36.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/faa6e09268d33100fb248b1484526b3f21eac8a5"},"pipeline":{"id":31787510,"iid":3868,"project_id":6138686,"sha":"faa6e09268d33100fb248b1484526b3f21eac8a5","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T13:25:09.315Z","updated_at":"2018-10-02T13:53:30.169Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31787510"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103799877","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103799876,"status":"skipped","stage":"test","name":"ci-quickchick","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T13:25:10.184Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"faa6e09268d33100fb248b1484526b3f21eac8a5","short_id":"faa6e092","created_at":"2018-10-02T15:24:36.000+02:00","parent_ids":["5424ad236574e22a7ef2dce0d1d9468a9b768a16"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T15:24:36.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/faa6e09268d33100fb248b1484526b3f21eac8a5"},"pipeline":{"id":31787510,"iid":3868,"project_id":6138686,"sha":"faa6e09268d33100fb248b1484526b3f21eac8a5","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T13:25:09.315Z","updated_at":"2018-10-02T13:53:30.169Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31787510"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103799876","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103799875,"status":"skipped","stage":"test","name":"ci-plugin-tutorial","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T13:25:10.163Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"faa6e09268d33100fb248b1484526b3f21eac8a5","short_id":"faa6e092","created_at":"2018-10-02T15:24:36.000+02:00","parent_ids":["5424ad236574e22a7ef2dce0d1d9468a9b768a16"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T15:24:36.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/faa6e09268d33100fb248b1484526b3f21eac8a5"},"pipeline":{"id":31787510,"iid":3868,"project_id":6138686,"sha":"faa6e09268d33100fb248b1484526b3f21eac8a5","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T13:25:09.315Z","updated_at":"2018-10-02T13:53:30.169Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31787510"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103799875","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103799874,"status":"skipped","stage":"test","name":"ci-pidetop","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T13:25:10.144Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"faa6e09268d33100fb248b1484526b3f21eac8a5","short_id":"faa6e092","created_at":"2018-10-02T15:24:36.000+02:00","parent_ids":["5424ad236574e22a7ef2dce0d1d9468a9b768a16"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T15:24:36.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/faa6e09268d33100fb248b1484526b3f21eac8a5"},"pipeline":{"id":31787510,"iid":3868,"project_id":6138686,"sha":"faa6e09268d33100fb248b1484526b3f21eac8a5","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T13:25:09.315Z","updated_at":"2018-10-02T13:53:30.169Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31787510"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103799874","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103799873,"status":"skipped","stage":"test","name":"ci-mtac2","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T13:25:10.125Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"faa6e09268d33100fb248b1484526b3f21eac8a5","short_id":"faa6e092","created_at":"2018-10-02T15:24:36.000+02:00","parent_ids":["5424ad236574e22a7ef2dce0d1d9468a9b768a16"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T15:24:36.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/faa6e09268d33100fb248b1484526b3f21eac8a5"},"pipeline":{"id":31787510,"iid":3868,"project_id":6138686,"sha":"faa6e09268d33100fb248b1484526b3f21eac8a5","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T13:25:09.315Z","updated_at":"2018-10-02T13:53:30.169Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31787510"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103799873","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103799872,"status":"skipped","stage":"test","name":"ci-math-comp","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T13:25:10.106Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"faa6e09268d33100fb248b1484526b3f21eac8a5","short_id":"faa6e092","created_at":"2018-10-02T15:24:36.000+02:00","parent_ids":["5424ad236574e22a7ef2dce0d1d9468a9b768a16"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T15:24:36.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/faa6e09268d33100fb248b1484526b3f21eac8a5"},"pipeline":{"id":31787510,"iid":3868,"project_id":6138686,"sha":"faa6e09268d33100fb248b1484526b3f21eac8a5","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T13:25:09.315Z","updated_at":"2018-10-02T13:53:30.169Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31787510"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103799872","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103799871,"status":"skipped","stage":"test","name":"ci-ltac2","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T13:25:10.087Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"faa6e09268d33100fb248b1484526b3f21eac8a5","short_id":"faa6e092","created_at":"2018-10-02T15:24:36.000+02:00","parent_ids":["5424ad236574e22a7ef2dce0d1d9468a9b768a16"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T15:24:36.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/faa6e09268d33100fb248b1484526b3f21eac8a5"},"pipeline":{"id":31787510,"iid":3868,"project_id":6138686,"sha":"faa6e09268d33100fb248b1484526b3f21eac8a5","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T13:25:09.315Z","updated_at":"2018-10-02T13:53:30.169Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31787510"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103799871","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103799870,"status":"skipped","stage":"test","name":"ci-iris-lambda-rust","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T13:25:10.068Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"faa6e09268d33100fb248b1484526b3f21eac8a5","short_id":"faa6e092","created_at":"2018-10-02T15:24:36.000+02:00","parent_ids":["5424ad236574e22a7ef2dce0d1d9468a9b768a16"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T15:24:36.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/faa6e09268d33100fb248b1484526b3f21eac8a5"},"pipeline":{"id":31787510,"iid":3868,"project_id":6138686,"sha":"faa6e09268d33100fb248b1484526b3f21eac8a5","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T13:25:09.315Z","updated_at":"2018-10-02T13:53:30.169Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31787510"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103799870","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103799869,"status":"skipped","stage":"test","name":"ci-hott","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T13:25:10.048Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"faa6e09268d33100fb248b1484526b3f21eac8a5","short_id":"faa6e092","created_at":"2018-10-02T15:24:36.000+02:00","parent_ids":["5424ad236574e22a7ef2dce0d1d9468a9b768a16"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T15:24:36.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/faa6e09268d33100fb248b1484526b3f21eac8a5"},"pipeline":{"id":31787510,"iid":3868,"project_id":6138686,"sha":"faa6e09268d33100fb248b1484526b3f21eac8a5","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T13:25:09.315Z","updated_at":"2018-10-02T13:53:30.169Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31787510"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103799869","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103799868,"status":"skipped","stage":"test","name":"ci-geocoq","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T13:25:10.031Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"faa6e09268d33100fb248b1484526b3f21eac8a5","short_id":"faa6e092","created_at":"2018-10-02T15:24:36.000+02:00","parent_ids":["5424ad236574e22a7ef2dce0d1d9468a9b768a16"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T15:24:36.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/faa6e09268d33100fb248b1484526b3f21eac8a5"},"pipeline":{"id":31787510,"iid":3868,"project_id":6138686,"sha":"faa6e09268d33100fb248b1484526b3f21eac8a5","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T13:25:09.315Z","updated_at":"2018-10-02T13:53:30.169Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31787510"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103799868","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103799867,"status":"skipped","stage":"test","name":"ci-formal-topology","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T13:25:10.014Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"faa6e09268d33100fb248b1484526b3f21eac8a5","short_id":"faa6e092","created_at":"2018-10-02T15:24:36.000+02:00","parent_ids":["5424ad236574e22a7ef2dce0d1d9468a9b768a16"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T15:24:36.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/faa6e09268d33100fb248b1484526b3f21eac8a5"},"pipeline":{"id":31787510,"iid":3868,"project_id":6138686,"sha":"faa6e09268d33100fb248b1484526b3f21eac8a5","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T13:25:09.315Z","updated_at":"2018-10-02T13:53:30.169Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31787510"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103799867","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103799866,"status":"skipped","stage":"test","name":"ci-flocq","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T13:25:09.995Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"faa6e09268d33100fb248b1484526b3f21eac8a5","short_id":"faa6e092","created_at":"2018-10-02T15:24:36.000+02:00","parent_ids":["5424ad236574e22a7ef2dce0d1d9468a9b768a16"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T15:24:36.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/faa6e09268d33100fb248b1484526b3f21eac8a5"},"pipeline":{"id":31787510,"iid":3868,"project_id":6138686,"sha":"faa6e09268d33100fb248b1484526b3f21eac8a5","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T13:25:09.315Z","updated_at":"2018-10-02T13:53:30.169Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31787510"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103799866","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103799865,"status":"skipped","stage":"test","name":"ci-fiat-parsers","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T13:25:09.977Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"faa6e09268d33100fb248b1484526b3f21eac8a5","short_id":"faa6e092","created_at":"2018-10-02T15:24:36.000+02:00","parent_ids":["5424ad236574e22a7ef2dce0d1d9468a9b768a16"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T15:24:36.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/faa6e09268d33100fb248b1484526b3f21eac8a5"},"pipeline":{"id":31787510,"iid":3868,"project_id":6138686,"sha":"faa6e09268d33100fb248b1484526b3f21eac8a5","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T13:25:09.315Z","updated_at":"2018-10-02T13:53:30.169Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31787510"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103799865","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103799863,"status":"skipped","stage":"test","name":"ci-fiat-crypto-legacy","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T13:25:09.958Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"faa6e09268d33100fb248b1484526b3f21eac8a5","short_id":"faa6e092","created_at":"2018-10-02T15:24:36.000+02:00","parent_ids":["5424ad236574e22a7ef2dce0d1d9468a9b768a16"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T15:24:36.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/faa6e09268d33100fb248b1484526b3f21eac8a5"},"pipeline":{"id":31787510,"iid":3868,"project_id":6138686,"sha":"faa6e09268d33100fb248b1484526b3f21eac8a5","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T13:25:09.315Z","updated_at":"2018-10-02T13:53:30.169Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31787510"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103799863","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103799862,"status":"skipped","stage":"test","name":"ci-fiat-crypto","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T13:25:09.938Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"faa6e09268d33100fb248b1484526b3f21eac8a5","short_id":"faa6e092","created_at":"2018-10-02T15:24:36.000+02:00","parent_ids":["5424ad236574e22a7ef2dce0d1d9468a9b768a16"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T15:24:36.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/faa6e09268d33100fb248b1484526b3f21eac8a5"},"pipeline":{"id":31787510,"iid":3868,"project_id":6138686,"sha":"faa6e09268d33100fb248b1484526b3f21eac8a5","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T13:25:09.315Z","updated_at":"2018-10-02T13:53:30.169Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31787510"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103799862","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103799861,"status":"skipped","stage":"test","name":"ci-fcsl-pcm","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T13:25:09.918Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"faa6e09268d33100fb248b1484526b3f21eac8a5","short_id":"faa6e092","created_at":"2018-10-02T15:24:36.000+02:00","parent_ids":["5424ad236574e22a7ef2dce0d1d9468a9b768a16"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T15:24:36.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/faa6e09268d33100fb248b1484526b3f21eac8a5"},"pipeline":{"id":31787510,"iid":3868,"project_id":6138686,"sha":"faa6e09268d33100fb248b1484526b3f21eac8a5","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T13:25:09.315Z","updated_at":"2018-10-02T13:53:30.169Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31787510"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103799861","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103799860,"status":"skipped","stage":"test","name":"ci-equations","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T13:25:09.898Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"faa6e09268d33100fb248b1484526b3f21eac8a5","short_id":"faa6e092","created_at":"2018-10-02T15:24:36.000+02:00","parent_ids":["5424ad236574e22a7ef2dce0d1d9468a9b768a16"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T15:24:36.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/faa6e09268d33100fb248b1484526b3f21eac8a5"},"pipeline":{"id":31787510,"iid":3868,"project_id":6138686,"sha":"faa6e09268d33100fb248b1484526b3f21eac8a5","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T13:25:09.315Z","updated_at":"2018-10-02T13:53:30.169Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31787510"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103799860","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103799859,"status":"skipped","stage":"test","name":"ci-elpi","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T13:25:09.877Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"faa6e09268d33100fb248b1484526b3f21eac8a5","short_id":"faa6e092","created_at":"2018-10-02T15:24:36.000+02:00","parent_ids":["5424ad236574e22a7ef2dce0d1d9468a9b768a16"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T15:24:36.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/faa6e09268d33100fb248b1484526b3f21eac8a5"},"pipeline":{"id":31787510,"iid":3868,"project_id":6138686,"sha":"faa6e09268d33100fb248b1484526b3f21eac8a5","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T13:25:09.315Z","updated_at":"2018-10-02T13:53:30.169Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31787510"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103799859","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103799858,"status":"skipped","stage":"test","name":"ci-cross-crypto","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T13:25:09.856Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"faa6e09268d33100fb248b1484526b3f21eac8a5","short_id":"faa6e092","created_at":"2018-10-02T15:24:36.000+02:00","parent_ids":["5424ad236574e22a7ef2dce0d1d9468a9b768a16"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T15:24:36.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/faa6e09268d33100fb248b1484526b3f21eac8a5"},"pipeline":{"id":31787510,"iid":3868,"project_id":6138686,"sha":"faa6e09268d33100fb248b1484526b3f21eac8a5","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T13:25:09.315Z","updated_at":"2018-10-02T13:53:30.169Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31787510"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103799858","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103799857,"status":"skipped","stage":"test","name":"ci-coquelicot","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T13:25:09.834Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"faa6e09268d33100fb248b1484526b3f21eac8a5","short_id":"faa6e092","created_at":"2018-10-02T15:24:36.000+02:00","parent_ids":["5424ad236574e22a7ef2dce0d1d9468a9b768a16"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T15:24:36.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/faa6e09268d33100fb248b1484526b3f21eac8a5"},"pipeline":{"id":31787510,"iid":3868,"project_id":6138686,"sha":"faa6e09268d33100fb248b1484526b3f21eac8a5","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T13:25:09.315Z","updated_at":"2018-10-02T13:53:30.169Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31787510"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103799857","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103799856,"status":"skipped","stage":"test","name":"ci-coq-dpdgraph","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T13:25:09.812Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"faa6e09268d33100fb248b1484526b3f21eac8a5","short_id":"faa6e092","created_at":"2018-10-02T15:24:36.000+02:00","parent_ids":["5424ad236574e22a7ef2dce0d1d9468a9b768a16"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T15:24:36.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/faa6e09268d33100fb248b1484526b3f21eac8a5"},"pipeline":{"id":31787510,"iid":3868,"project_id":6138686,"sha":"faa6e09268d33100fb248b1484526b3f21eac8a5","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T13:25:09.315Z","updated_at":"2018-10-02T13:53:30.169Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31787510"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103799856","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103799855,"status":"skipped","stage":"test","name":"ci-compcert","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T13:25:09.794Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"faa6e09268d33100fb248b1484526b3f21eac8a5","short_id":"faa6e092","created_at":"2018-10-02T15:24:36.000+02:00","parent_ids":["5424ad236574e22a7ef2dce0d1d9468a9b768a16"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T15:24:36.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/faa6e09268d33100fb248b1484526b3f21eac8a5"},"pipeline":{"id":31787510,"iid":3868,"project_id":6138686,"sha":"faa6e09268d33100fb248b1484526b3f21eac8a5","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T13:25:09.315Z","updated_at":"2018-10-02T13:53:30.169Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31787510"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103799855","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103799854,"status":"skipped","stage":"test","name":"ci-color","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T13:25:09.773Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"faa6e09268d33100fb248b1484526b3f21eac8a5","short_id":"faa6e092","created_at":"2018-10-02T15:24:36.000+02:00","parent_ids":["5424ad236574e22a7ef2dce0d1d9468a9b768a16"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T15:24:36.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/faa6e09268d33100fb248b1484526b3f21eac8a5"},"pipeline":{"id":31787510,"iid":3868,"project_id":6138686,"sha":"faa6e09268d33100fb248b1484526b3f21eac8a5","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T13:25:09.315Z","updated_at":"2018-10-02T13:53:30.169Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31787510"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103799854","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103799853,"status":"skipped","stage":"test","name":"ci-bignums","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T13:25:09.755Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"faa6e09268d33100fb248b1484526b3f21eac8a5","short_id":"faa6e092","created_at":"2018-10-02T15:24:36.000+02:00","parent_ids":["5424ad236574e22a7ef2dce0d1d9468a9b768a16"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T15:24:36.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/faa6e09268d33100fb248b1484526b3f21eac8a5"},"pipeline":{"id":31787510,"iid":3868,"project_id":6138686,"sha":"faa6e09268d33100fb248b1484526b3f21eac8a5","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T13:25:09.315Z","updated_at":"2018-10-02T13:53:30.169Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31787510"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103799853","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103799852,"status":"skipped","stage":"test","name":"ci-bedrock2","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T13:25:09.736Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"faa6e09268d33100fb248b1484526b3f21eac8a5","short_id":"faa6e092","created_at":"2018-10-02T15:24:36.000+02:00","parent_ids":["5424ad236574e22a7ef2dce0d1d9468a9b768a16"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T15:24:36.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/faa6e09268d33100fb248b1484526b3f21eac8a5"},"pipeline":{"id":31787510,"iid":3868,"project_id":6138686,"sha":"faa6e09268d33100fb248b1484526b3f21eac8a5","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T13:25:09.315Z","updated_at":"2018-10-02T13:53:30.169Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31787510"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103799852","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103799851,"status":"skipped","stage":"test","name":"validate:edge+flambda","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T13:25:09.718Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"faa6e09268d33100fb248b1484526b3f21eac8a5","short_id":"faa6e092","created_at":"2018-10-02T15:24:36.000+02:00","parent_ids":["5424ad236574e22a7ef2dce0d1d9468a9b768a16"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T15:24:36.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/faa6e09268d33100fb248b1484526b3f21eac8a5"},"pipeline":{"id":31787510,"iid":3868,"project_id":6138686,"sha":"faa6e09268d33100fb248b1484526b3f21eac8a5","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T13:25:09.315Z","updated_at":"2018-10-02T13:53:30.169Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31787510"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103799851","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103799850,"status":"skipped","stage":"test","name":"validate:edge","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T13:25:09.698Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"faa6e09268d33100fb248b1484526b3f21eac8a5","short_id":"faa6e092","created_at":"2018-10-02T15:24:36.000+02:00","parent_ids":["5424ad236574e22a7ef2dce0d1d9468a9b768a16"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T15:24:36.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/faa6e09268d33100fb248b1484526b3f21eac8a5"},"pipeline":{"id":31787510,"iid":3868,"project_id":6138686,"sha":"faa6e09268d33100fb248b1484526b3f21eac8a5","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T13:25:09.315Z","updated_at":"2018-10-02T13:53:30.169Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31787510"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103799850","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103799849,"status":"skipped","stage":"test","name":"validate:base+32bit","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T13:25:09.679Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"faa6e09268d33100fb248b1484526b3f21eac8a5","short_id":"faa6e092","created_at":"2018-10-02T15:24:36.000+02:00","parent_ids":["5424ad236574e22a7ef2dce0d1d9468a9b768a16"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T15:24:36.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/faa6e09268d33100fb248b1484526b3f21eac8a5"},"pipeline":{"id":31787510,"iid":3868,"project_id":6138686,"sha":"faa6e09268d33100fb248b1484526b3f21eac8a5","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T13:25:09.315Z","updated_at":"2018-10-02T13:53:30.169Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31787510"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103799849","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103799848,"status":"skipped","stage":"test","name":"validate:base","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T13:25:09.660Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"faa6e09268d33100fb248b1484526b3f21eac8a5","short_id":"faa6e092","created_at":"2018-10-02T15:24:36.000+02:00","parent_ids":["5424ad236574e22a7ef2dce0d1d9468a9b768a16"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T15:24:36.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/faa6e09268d33100fb248b1484526b3f21eac8a5"},"pipeline":{"id":31787510,"iid":3868,"project_id":6138686,"sha":"faa6e09268d33100fb248b1484526b3f21eac8a5","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T13:25:09.315Z","updated_at":"2018-10-02T13:53:30.169Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31787510"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103799848","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103799847,"status":"skipped","stage":"test","name":"test-suite:edge+flambda","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T13:25:09.641Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"faa6e09268d33100fb248b1484526b3f21eac8a5","short_id":"faa6e092","created_at":"2018-10-02T15:24:36.000+02:00","parent_ids":["5424ad236574e22a7ef2dce0d1d9468a9b768a16"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T15:24:36.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/faa6e09268d33100fb248b1484526b3f21eac8a5"},"pipeline":{"id":31787510,"iid":3868,"project_id":6138686,"sha":"faa6e09268d33100fb248b1484526b3f21eac8a5","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T13:25:09.315Z","updated_at":"2018-10-02T13:53:30.169Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31787510"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103799847","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103799846,"status":"skipped","stage":"test","name":"test-suite:edge","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T13:25:09.621Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"faa6e09268d33100fb248b1484526b3f21eac8a5","short_id":"faa6e092","created_at":"2018-10-02T15:24:36.000+02:00","parent_ids":["5424ad236574e22a7ef2dce0d1d9468a9b768a16"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T15:24:36.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/faa6e09268d33100fb248b1484526b3f21eac8a5"},"pipeline":{"id":31787510,"iid":3868,"project_id":6138686,"sha":"faa6e09268d33100fb248b1484526b3f21eac8a5","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T13:25:09.315Z","updated_at":"2018-10-02T13:53:30.169Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31787510"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103799846","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103799845,"status":"skipped","stage":"test","name":"test-suite:base+32bit","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T13:25:09.600Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"faa6e09268d33100fb248b1484526b3f21eac8a5","short_id":"faa6e092","created_at":"2018-10-02T15:24:36.000+02:00","parent_ids":["5424ad236574e22a7ef2dce0d1d9468a9b768a16"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T15:24:36.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/faa6e09268d33100fb248b1484526b3f21eac8a5"},"pipeline":{"id":31787510,"iid":3868,"project_id":6138686,"sha":"faa6e09268d33100fb248b1484526b3f21eac8a5","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T13:25:09.315Z","updated_at":"2018-10-02T13:53:30.169Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31787510"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103799845","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103799844,"status":"skipped","stage":"test","name":"test-suite:base","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T13:25:09.579Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"faa6e09268d33100fb248b1484526b3f21eac8a5","short_id":"faa6e092","created_at":"2018-10-02T15:24:36.000+02:00","parent_ids":["5424ad236574e22a7ef2dce0d1d9468a9b768a16"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T15:24:36.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/faa6e09268d33100fb248b1484526b3f21eac8a5"},"pipeline":{"id":31787510,"iid":3868,"project_id":6138686,"sha":"faa6e09268d33100fb248b1484526b3f21eac8a5","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T13:25:09.315Z","updated_at":"2018-10-02T13:53:30.169Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31787510"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103799844","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103799842,"status":"skipped","stage":"test","name":"doc:ml-api:odoc","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T13:25:09.561Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"faa6e09268d33100fb248b1484526b3f21eac8a5","short_id":"faa6e092","created_at":"2018-10-02T15:24:36.000+02:00","parent_ids":["5424ad236574e22a7ef2dce0d1d9468a9b768a16"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T15:24:36.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/faa6e09268d33100fb248b1484526b3f21eac8a5"},"pipeline":{"id":31787510,"iid":3868,"project_id":6138686,"sha":"faa6e09268d33100fb248b1484526b3f21eac8a5","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T13:25:09.315Z","updated_at":"2018-10-02T13:53:30.169Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31787510"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103799842","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103799841,"status":"skipped","stage":"test","name":"doc:ml-api:ocamldoc","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T13:25:09.539Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"faa6e09268d33100fb248b1484526b3f21eac8a5","short_id":"faa6e092","created_at":"2018-10-02T15:24:36.000+02:00","parent_ids":["5424ad236574e22a7ef2dce0d1d9468a9b768a16"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T15:24:36.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/faa6e09268d33100fb248b1484526b3f21eac8a5"},"pipeline":{"id":31787510,"iid":3868,"project_id":6138686,"sha":"faa6e09268d33100fb248b1484526b3f21eac8a5","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T13:25:09.315Z","updated_at":"2018-10-02T13:53:30.169Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31787510"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103799841","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103799840,"status":"skipped","stage":"test","name":"doc:refman","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T13:25:09.521Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"faa6e09268d33100fb248b1484526b3f21eac8a5","short_id":"faa6e092","created_at":"2018-10-02T15:24:36.000+02:00","parent_ids":["5424ad236574e22a7ef2dce0d1d9468a9b768a16"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T15:24:36.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/faa6e09268d33100fb248b1484526b3f21eac8a5"},"pipeline":{"id":31787510,"iid":3868,"project_id":6138686,"sha":"faa6e09268d33100fb248b1484526b3f21eac8a5","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T13:25:09.315Z","updated_at":"2018-10-02T13:53:30.169Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31787510"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103799840","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103799839,"status":"skipped","stage":"test","name":"pkg:nix","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T13:25:09.498Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"faa6e09268d33100fb248b1484526b3f21eac8a5","short_id":"faa6e092","created_at":"2018-10-02T15:24:36.000+02:00","parent_ids":["5424ad236574e22a7ef2dce0d1d9468a9b768a16"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T15:24:36.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/faa6e09268d33100fb248b1484526b3f21eac8a5"},"pipeline":{"id":31787510,"iid":3868,"project_id":6138686,"sha":"faa6e09268d33100fb248b1484526b3f21eac8a5","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T13:25:09.315Z","updated_at":"2018-10-02T13:53:30.169Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31787510"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103799839","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103799837,"status":"skipped","stage":"test","name":"pkg:dune-release","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T13:25:09.475Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"faa6e09268d33100fb248b1484526b3f21eac8a5","short_id":"faa6e092","created_at":"2018-10-02T15:24:36.000+02:00","parent_ids":["5424ad236574e22a7ef2dce0d1d9468a9b768a16"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T15:24:36.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/faa6e09268d33100fb248b1484526b3f21eac8a5"},"pipeline":{"id":31787510,"iid":3868,"project_id":6138686,"sha":"faa6e09268d33100fb248b1484526b3f21eac8a5","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T13:25:09.315Z","updated_at":"2018-10-02T13:53:30.169Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31787510"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103799837","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":103799836,"status":"skipped","stage":"test","name":"windows64","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T13:25:09.445Z","started_at":null,"finished_at":null,"duration":null,"queued_duration":null,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"faa6e09268d33100fb248b1484526b3f21eac8a5","short_id":"faa6e092","created_at":"2018-10-02T15:24:36.000+02:00","parent_ids":["5424ad236574e22a7ef2dce0d1d9468a9b768a16"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T15:24:36.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/faa6e09268d33100fb248b1484526b3f21eac8a5"},"pipeline":{"id":31787510,"iid":3868,"project_id":6138686,"sha":"faa6e09268d33100fb248b1484526b3f21eac8a5","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T13:25:09.315Z","updated_at":"2018-10-02T13:53:30.169Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31787510"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103799836","artifacts":[],"runner":null,"artifacts_expire_at":null,"tag_list":["windows"]}
{"id":103799835,"status":"failed","stage":"build","name":"build:egde:dune:dev","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T13:25:09.411Z","started_at":"2018-10-02T13:25:10.992Z","finished_at":"2018-10-02T13:28:22.489Z","duration":191.497606,"queued_duration":0.448984,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"faa6e09268d33100fb248b1484526b3f21eac8a5","short_id":"faa6e092","created_at":"2018-10-02T15:24:36.000+02:00","parent_ids":["5424ad236574e22a7ef2dce0d1d9468a9b768a16"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T15:24:36.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/faa6e09268d33100fb248b1484526b3f21eac8a5"},"pipeline":{"id":31787510,"iid":3868,"project_id":6138686,"sha":"faa6e09268d33100fb248b1484526b3f21eac8a5","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T13:25:09.315Z","updated_at":"2018-10-02T13:53:30.169Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31787510"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/103799835","artifacts":[{"file_type":"trace","size":16542,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":103799834,"status":"success","stage":"build","name":"build:edge+flambda","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T13:25:09.390Z","started_at":"2018-10-02T13:25:10.938Z","finished_at":"2018-10-02T13:53:29.038Z","duration":1698.100882,"queued_duration":0.3627,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"faa6e09268d33100fb248b1484526b3f21eac8a5","short_id":"faa6e092","created_at":"2018-10-02T15:24:36.000+02:00","parent_ids":["5424ad236574e22a7ef2dce0d1d9468a9b768a16"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T15:24:36.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/faa6e09268d33100fb248b1484526b3f21eac8a5"},"pipeline":{"id":31787510,"iid":3868,"project_id":6138686,"sha":"faa6e09268d33100fb248b1484526b3f21eac8a5","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T13:25:09.315Z","updated_at":"2018-10-02T13:53:30.169Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31787510"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103799834","artifacts":[{"file_type":"trace","size":230140,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-10-09T13:53:20.462Z","tag_list":[]}
{"id":103799833,"status":"success","stage":"build","name":"build:edge","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T13:25:09.368Z","started_at":"2018-10-02T13:25:10.892Z","finished_at":"2018-10-02T13:43:24.964Z","duration":1094.072288,"queued_duration":0.287836,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"faa6e09268d33100fb248b1484526b3f21eac8a5","short_id":"faa6e092","created_at":"2018-10-02T15:24:36.000+02:00","parent_ids":["5424ad236574e22a7ef2dce0d1d9468a9b768a16"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T15:24:36.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/faa6e09268d33100fb248b1484526b3f21eac8a5"},"pipeline":{"id":31787510,"iid":3868,"project_id":6138686,"sha":"faa6e09268d33100fb248b1484526b3f21eac8a5","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T13:25:09.315Z","updated_at":"2018-10-02T13:53:30.169Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31787510"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103799833","artifacts":[{"file_type":"trace","size":228870,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-10-09T13:43:18.728Z","tag_list":[]}
{"id":103799832,"status":"success","stage":"build","name":"build:base+32bit","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T13:25:09.347Z","started_at":"2018-10-02T13:25:10.733Z","finished_at":"2018-10-02T13:40:30.486Z","duration":919.753378,"queued_duration":0.102349,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"faa6e09268d33100fb248b1484526b3f21eac8a5","short_id":"faa6e092","created_at":"2018-10-02T15:24:36.000+02:00","parent_ids":["5424ad236574e22a7ef2dce0d1d9468a9b768a16"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T15:24:36.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/faa6e09268d33100fb248b1484526b3f21eac8a5"},"pipeline":{"id":31787510,"iid":3868,"project_id":6138686,"sha":"faa6e09268d33100fb248b1484526b3f21eac8a5","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T13:25:09.315Z","updated_at":"2018-10-02T13:53:30.169Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31787510"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103799832","artifacts":[{"file_type":"trace","size":224101,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-10-09T13:40:26.279Z","tag_list":[]}
{"id":103799831,"status":"success","stage":"build","name":"build:base","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-02T13:25:09.326Z","started_at":"2018-10-02T13:25:10.827Z","finished_at":"2018-10-02T13:41:04.668Z","duration":953.840719,"queued_duration":0.153185,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"faa6e09268d33100fb248b1484526b3f21eac8a5","short_id":"faa6e092","created_at":"2018-10-02T15:24:36.000+02:00","parent_ids":["5424ad236574e22a7ef2dce0d1d9468a9b768a16"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-02T15:24:36.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/faa6e09268d33100fb248b1484526b3f21eac8a5"},"pipeline":{"id":31787510,"iid":3868,"project_id":6138686,"sha":"faa6e09268d33100fb248b1484526b3f21eac8a5","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-02T13:25:09.315Z","updated_at":"2018-10-02T13:53:30.169Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/31787510"},"web_url":"https://gitlab.com/coq/coq/-/jobs/103799831","artifacts":[{"file_type":"trace","size":275342,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-10-09T13:40:59.459Z","tag_list":[]}
