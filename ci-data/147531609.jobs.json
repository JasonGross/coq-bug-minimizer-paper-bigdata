{"id":558879516,"status":"success","stage":"stage-4","name":"library:ci-corn","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:18.421Z","started_at":"2020-05-19T13:14:37.527Z","finished_at":"2020-05-19T13:38:35.134Z","duration":1437.606657,"queued_duration":1.382129,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879516","artifacts":[{"file_type":"trace","size":476148,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":558879514,"status":"failed","stage":"stage-4","name":"library:ci-fiat_crypto","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:18.382Z","started_at":"2020-05-19T13:18:13.792Z","finished_at":"2020-05-19T15:31:45.910Z","duration":8012.117197,"queued_duration":1.048798,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/558879514","artifacts":[{"file_type":"trace","size":2239758,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":558879513,"status":"success","stage":"stage-3","name":"plugin:ci-metacoq","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:18.358Z","started_at":"2020-05-19T13:00:20.596Z","finished_at":"2020-05-19T13:27:16.150Z","duration":1615.553995,"queued_duration":0.339858,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879513","artifacts":[{"file_type":"trace","size":327309,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":558879512,"status":"success","stage":"stage-3","name":"library:ci-vst","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:18.282Z","started_at":"2020-05-19T13:09:36.313Z","finished_at":"2020-05-19T14:01:41.306Z","duration":3124.992556,"queued_duration":0.365245,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879512","artifacts":[{"file_type":"trace","size":521332,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":558879511,"status":"success","stage":"stage-3","name":"library:ci-math_classes","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:18.266Z","started_at":"2020-05-19T13:06:18.487Z","finished_at":"2020-05-19T13:14:36.006Z","duration":497.519482,"queued_duration":2.751619,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879511","artifacts":[{"file_type":"trace","size":180553,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":558879510,"status":"success","stage":"stage-3","name":"library:ci-coqprime","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:18.247Z","started_at":"2020-05-19T13:06:18.362Z","finished_at":"2020-05-19T13:12:38.739Z","duration":380.376552,"queued_duration":2.697814,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879510","artifacts":[{"file_type":"trace","size":636594,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":558879508,"status":"success","stage":"stage-3","name":"library:ci-color","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:18.228Z","started_at":"2020-05-19T13:06:17.938Z","finished_at":"2020-05-19T13:21:21.329Z","duration":903.391093,"queued_duration":2.396632,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879508","artifacts":[{"file_type":"trace","size":1128087,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":558879507,"status":"success","stage":"stage-2","name":"plugin:ci-rewriter","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:18.208Z","started_at":"2020-05-19T13:02:31.098Z","finished_at":"2020-05-19T13:18:12.588Z","duration":941.490424,"queued_duration":1.897538,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879507","artifacts":[{"file_type":"trace","size":220507,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":558879506,"status":"success","stage":"stage-2","name":"plugin:ci-relation_algebra","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:18.191Z","started_at":"2020-05-19T12:52:19.079Z","finished_at":"2020-05-19T12:58:42.421Z","duration":383.341898,"queued_duration":2.732862,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879506","artifacts":[{"file_type":"trace","size":56308,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":558879505,"status":"success","stage":"stage-2","name":"plugin:ci-reduction_effects","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:18.175Z","started_at":"2020-05-19T12:52:19.027Z","finished_at":"2020-05-19T12:55:28.352Z","duration":189.325318,"queued_duration":2.781687,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879505","artifacts":[{"file_type":"trace","size":30580,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":558879504,"status":"success","stage":"stage-2","name":"plugin:ci-quickchick","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:18.160Z","started_at":"2020-05-19T13:02:31.051Z","finished_at":"2020-05-19T13:09:42.953Z","duration":431.901835,"queued_duration":1.902907,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879504","artifacts":[{"file_type":"trace","size":286328,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":558879503,"status":"success","stage":"stage-2","name":"plugin:ci-perennial","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:18.143Z","started_at":"2020-05-19T13:02:31.008Z","finished_at":"2020-05-19T14:12:44.455Z","duration":4213.446938,"queued_duration":1.921339,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879503","artifacts":[{"file_type":"trace","size":38307,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":558879502,"status":"success","stage":"stage-2","name":"plugin:ci-paramcoq","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:18.127Z","started_at":"2020-05-19T12:52:18.980Z","finished_at":"2020-05-19T12:55:55.944Z","duration":216.964327,"queued_duration":2.837401,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879502","artifacts":[{"file_type":"trace","size":82132,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":558879501,"status":"success","stage":"stage-2","name":"plugin:ci-mtac2","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:18.109Z","started_at":"2020-05-19T12:52:18.935Z","finished_at":"2020-05-19T12:57:12.271Z","duration":293.335777,"queued_duration":2.88739,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879501","artifacts":[{"file_type":"trace","size":154720,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":558879500,"status":"success","stage":"stage-2","name":"plugin:ci-fiat_parsers","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:18.093Z","started_at":"2020-05-19T12:52:18.845Z","finished_at":"2020-05-19T13:12:12.951Z","duration":1194.106279,"queued_duration":2.881187,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879500","artifacts":[{"file_type":"trace","size":822789,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":558879499,"status":"success","stage":"stage-2","name":"plugin:ci-equations","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:18.075Z","started_at":"2020-05-19T12:52:18.784Z","finished_at":"2020-05-19T13:00:20.094Z","duration":481.310397,"queued_duration":2.907052,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879499","artifacts":[{"file_type":"trace","size":133957,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":558879498,"status":"success","stage":"stage-2","name":"plugin:ci-elpi","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:18.057Z","started_at":"2020-05-19T12:52:18.736Z","finished_at":"2020-05-19T12:59:50.526Z","duration":451.789669,"queued_duration":2.962215,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879498","artifacts":[{"file_type":"trace","size":324604,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":558879497,"status":"success","stage":"stage-2","name":"plugin:ci-coqhammer","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:18.040Z","started_at":"2020-05-19T12:52:18.619Z","finished_at":"2020-05-19T12:55:40.855Z","duration":202.236662,"queued_duration":2.930904,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879497","artifacts":[{"file_type":"trace","size":44004,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":558879496,"status":"success","stage":"stage-2","name":"plugin:ci-coq_dpdgraph","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:18.023Z","started_at":"2020-05-19T12:52:18.527Z","finished_at":"2020-05-19T12:55:41.528Z","duration":203.001191,"queued_duration":2.933952,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879496","artifacts":[{"file_type":"trace","size":43102,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":558879495,"status":"success","stage":"stage-2","name":"plugin:ci-bignums","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:18.008Z","started_at":"2020-05-19T13:02:30.910Z","finished_at":"2020-05-19T13:06:15.305Z","duration":224.39463,"queued_duration":1.878137,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879495","artifacts":[{"file_type":"trace","size":93221,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":558879494,"status":"success","stage":"stage-2","name":"plugin:ci-aac_tactics","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:17.990Z","started_at":"2020-05-19T12:52:18.432Z","finished_at":"2020-05-19T12:55:44.891Z","duration":206.459057,"queued_duration":2.926909,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879494","artifacts":[{"file_type":"trace","size":51369,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":558879493,"status":"success","stage":"stage-2","name":"library:ci-verdi_raft","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:17.974Z","started_at":"2020-05-19T13:02:30.716Z","finished_at":"2020-05-19T13:35:51.631Z","duration":2000.914684,"queued_duration":1.74277,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879493","artifacts":[{"file_type":"trace","size":313557,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":558879492,"status":"success","stage":"stage-2","name":"library:ci-unimath","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:17.958Z","started_at":"2020-05-19T13:02:30.537Z","finished_at":"2020-05-19T14:15:06.481Z","duration":4355.943942,"queued_duration":1.613533,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879492","artifacts":[{"file_type":"trace","size":222607,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":558879491,"status":"success","stage":"stage-2","name":"library:ci-tlc","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:17.943Z","started_at":"2020-05-19T12:52:18.090Z","finished_at":"2020-05-19T12:56:57.172Z","duration":279.081785,"queued_duration":2.659662,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879491","artifacts":[{"file_type":"trace","size":152782,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":558879490,"status":"success","stage":"stage-2","name":"library:ci-stdlib2","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:17.925Z","started_at":"2020-05-19T13:02:30.482Z","finished_at":"2020-05-19T13:06:05.113Z","duration":214.631339,"queued_duration":1.610555,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879490","artifacts":[{"file_type":"trace","size":36225,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":558879489,"status":"success","stage":"stage-2","name":"library:ci-sf","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:17.909Z","started_at":"2020-05-19T12:52:17.620Z","finished_at":"2020-05-19T12:57:20.479Z","duration":302.858679,"queued_duration":2.260879,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879489","artifacts":[{"file_type":"trace","size":511941,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":558879488,"status":"success","stage":"stage-2","name":"library:ci-mathcomp","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:17.894Z","started_at":"2020-05-19T13:02:30.390Z","finished_at":"2020-05-19T14:22:54.124Z","duration":4823.733731,"queued_duration":1.56617,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879488","artifacts":[{"file_type":"trace","size":417588,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":558879485,"status":"success","stage":"stage-2","name":"library:ci-lambda_rust","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:17.880Z","started_at":"2020-05-19T13:02:30.154Z","finished_at":"2020-05-19T13:54:05.780Z","duration":3095.62618,"queued_duration":1.388989,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879485","artifacts":[{"file_type":"trace","size":328445,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":558879482,"status":"success","stage":"stage-2","name":"library:ci-hott","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:17.864Z","started_at":"2020-05-19T12:52:17.251Z","finished_at":"2020-05-19T13:02:59.681Z","duration":642.430002,"queued_duration":1.962803,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879482","artifacts":[{"file_type":"trace","size":130978,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":558879479,"status":"success","stage":"stage-2","name":"library:ci-geocoq","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:17.847Z","started_at":"2020-05-19T13:02:30.096Z","finished_at":"2020-05-19T13:39:51.591Z","duration":2241.495267,"queued_duration":1.382259,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879479","artifacts":[{"file_type":"trace","size":499805,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":558879476,"status":"success","stage":"stage-2","name":"library:ci-flocq","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:17.832Z","started_at":"2020-05-19T13:02:30.045Z","finished_at":"2020-05-19T13:09:35.800Z","duration":425.755421,"queued_duration":1.389929,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879476","artifacts":[{"file_type":"trace","size":122635,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":558879474,"status":"success","stage":"stage-2","name":"library:ci-fcsl_pcm","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:17.815Z","started_at":"2020-05-19T12:52:17.199Z","finished_at":"2020-05-19T12:56:55.860Z","duration":278.66177,"queued_duration":1.969863,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879474","artifacts":[{"file_type":"trace","size":146245,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":558879473,"status":"success","stage":"stage-2","name":"library:ci-cross_crypto","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:17.800Z","started_at":"2020-05-19T12:52:17.153Z","finished_at":"2020-05-19T13:26:43.211Z","duration":2066.057646,"queued_duration":1.987187,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879473","artifacts":[{"file_type":"trace","size":175844,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":558879472,"status":"success","stage":"stage-2","name":"library:ci-coquelicot","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:17.784Z","started_at":"2020-05-19T12:52:17.108Z","finished_at":"2020-05-19T12:57:59.088Z","duration":341.979886,"queued_duration":2.000931,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879472","artifacts":[{"file_type":"trace","size":183866,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":558879471,"status":"success","stage":"stage-2","name":"library:ci-coq_tools","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:17.769Z","started_at":"2020-05-19T12:52:16.726Z","finished_at":"2020-05-19T13:00:15.200Z","duration":478.473904,"queued_duration":1.675278,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879471","artifacts":[{"file_type":"trace","size":42491,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":558879470,"status":"success","stage":"stage-2","name":"library:ci-compcert","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:17.753Z","started_at":"2020-05-19T13:02:29.972Z","finished_at":"2020-05-19T13:25:40.321Z","duration":1390.34927,"queued_duration":1.381285,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879470","artifacts":[{"file_type":"trace","size":4194362,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":558879469,"status":"success","stage":"stage-2","name":"library:ci-bedrock2","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:17.737Z","started_at":"2020-05-19T13:02:29.919Z","finished_at":"2020-05-19T15:15:31.103Z","duration":7981.183651,"queued_duration":1.373635,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879469","artifacts":[{"file_type":"trace","size":515181,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":558879468,"status":"success","stage":"stage-2","name":"library:ci-bbv","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:17.721Z","started_at":"2020-05-19T12:52:16.679Z","finished_at":"2020-05-19T12:55:56.591Z","duration":219.912045,"queued_duration":1.699643,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879468","artifacts":[{"file_type":"trace","size":115363,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":558879467,"status":"success","stage":"stage-2","name":"library:ci-argosy","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:17.707Z","started_at":"2020-05-19T12:52:16.481Z","finished_at":"2020-05-19T12:56:42.620Z","duration":266.139436,"queued_duration":1.563134,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879467","artifacts":[{"file_type":"trace","size":140099,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":558879466,"status":"success","stage":"stage-2","name":"validate:quick","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:17.692Z","started_at":"2020-05-19T12:53:29.558Z","finished_at":"2020-05-19T12:58:25.658Z","duration":296.100289,"queued_duration":3.807003,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879466","artifacts":[{"file_type":"trace","size":32518,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-07-18T12:58:23.956Z","tag_list":[]}
{"id":558879465,"status":"success","stage":"stage-2","name":"validate:edge+flambda","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:17.674Z","started_at":"2020-05-19T13:02:29.868Z","finished_at":"2020-05-19T13:07:24.903Z","duration":295.034844,"queued_duration":1.379739,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879465","artifacts":[{"file_type":"trace","size":41066,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-07-18T13:07:23.573Z","tag_list":[]}
{"id":558879464,"status":"success","stage":"stage-2","name":"validate:base+32bit","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:17.657Z","started_at":"2020-05-19T12:49:24.717Z","finished_at":"2020-05-19T12:54:12.570Z","duration":287.852497,"queued_duration":1.014086,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879464","artifacts":[{"file_type":"trace","size":68524,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-07-18T12:54:11.282Z","tag_list":[]}
{"id":558879462,"status":"success","stage":"stage-2","name":"validate:base","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:17.641Z","started_at":"2020-05-19T12:52:16.418Z","finished_at":"2020-05-19T12:57:06.820Z","duration":290.401762,"queued_duration":1.564202,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879462","artifacts":[{"file_type":"trace","size":70209,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-07-18T12:57:05.508Z","tag_list":[]}
{"id":558879461,"status":"failed","stage":"stage-2","name":"test-suite:base+async","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-05-19T12:32:17.626Z","started_at":"2020-05-19T12:52:16.195Z","finished_at":"2020-05-19T13:28:11.160Z","duration":2154.965432,"queued_duration":1.395119,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/558879461","artifacts":[{"file_type":"trace","size":99109,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":558879460,"status":"success","stage":"stage-2","name":"test-suite:edge:dune:dev","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:17.610Z","started_at":"2020-05-19T12:53:45.270Z","finished_at":"2020-05-19T13:17:57.024Z","duration":1451.753272,"queued_duration":3.002432,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879460","artifacts":[{"file_type":"trace","size":98249,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":558879459,"status":"success","stage":"stage-2","name":"test-suite:edge+flambda","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:17.592Z","started_at":"2020-05-19T13:02:29.500Z","finished_at":"2020-05-19T13:26:54.783Z","duration":1465.283321,"queued_duration":1.070074,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879459","artifacts":[{"file_type":"trace","size":132744,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":558879458,"status":"success","stage":"stage-2","name":"test-suite:base+32bit","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:17.574Z","started_at":"2020-05-19T12:49:23.961Z","finished_at":"2020-05-19T13:02:56.561Z","duration":812.599476,"queued_duration":0.315511,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879458","artifacts":[{"file_type":"trace","size":120485,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":558879457,"status":"success","stage":"stage-2","name":"test-suite:base","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:17.557Z","started_at":"2020-05-19T12:52:16.088Z","finished_at":"2020-05-19T13:13:18.784Z","duration":1262.696713,"queued_duration":1.350688,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879457","artifacts":[{"file_type":"trace","size":98071,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":558879456,"status":"success","stage":"stage-2","name":"doc:ml-api:odoc","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:17.540Z","started_at":"2020-05-19T12:53:44.956Z","finished_at":"2020-05-19T12:58:19.084Z","duration":274.128335,"queued_duration":2.775816,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879456","artifacts":[{"file_type":"trace","size":77933,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-07-18T12:58:17.544Z","tag_list":[]}
{"id":558879455,"status":"success","stage":"stage-2","name":"doc:stdlib:dune","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:17.524Z","started_at":"2020-05-19T12:53:43.471Z","finished_at":"2020-05-19T12:57:46.246Z","duration":242.775039,"queued_duration":1.38492,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879455","artifacts":[{"file_type":"trace","size":81104,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-07-18T12:57:44.310Z","tag_list":[]}
{"id":558879454,"status":"success","stage":"stage-2","name":"doc:refman-pdf:dune","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:17.507Z","started_at":"2020-05-19T12:53:43.388Z","finished_at":"2020-05-19T13:03:54.686Z","duration":611.29757,"queued_duration":1.381265,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879454","artifacts":[{"file_type":"trace","size":25704,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-07-18T13:03:52.565Z","tag_list":[]}
{"id":558879453,"status":"success","stage":"stage-2","name":"doc:refman:dune","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:17.488Z","started_at":"2020-05-19T12:53:43.334Z","finished_at":"2020-05-19T13:00:44.923Z","duration":421.589412,"queued_duration":1.398549,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879453","artifacts":[{"file_type":"trace","size":23995,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-07-18T13:00:43.549Z","tag_list":[]}
{"id":558879452,"status":"success","stage":"stage-2","name":"doc:refman","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:17.470Z","started_at":"2020-05-19T12:52:15.156Z","finished_at":"2020-05-19T13:00:57.092Z","duration":521.93621,"queued_duration":0.475245,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879452","artifacts":[{"file_type":"trace","size":1621606,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-07-18T13:00:54.008Z","tag_list":[]}
{"id":558879451,"status":"success","stage":"stage-1","name":"plugin:plugin-tutorial","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:17.442Z","started_at":"2020-05-19T12:32:22.990Z","finished_at":"2020-05-19T12:36:57.123Z","duration":274.133243,"queued_duration":3.953776,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879451","artifacts":[{"file_type":"trace","size":59424,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":558879450,"status":"success","stage":"stage-1","name":"test-suite:edge+4.11+trunk+dune","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-05-19T12:32:17.424Z","started_at":"2020-05-19T12:32:22.854Z","finished_at":"2020-05-19T13:19:36.275Z","duration":2833.420528,"queued_duration":3.836407,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879450","artifacts":[{"file_type":"trace","size":100323,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-06-02T13:19:34.467Z","tag_list":[]}
{"id":558879449,"status":"success","stage":"stage-1","name":"pkg:nix","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:17.401Z","started_at":"2020-05-19T12:32:22.769Z","finished_at":"2020-05-19T13:20:43.318Z","duration":2900.549473,"queued_duration":3.772783,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879449","artifacts":[{"file_type":"trace","size":596403,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":558879448,"status":"success","stage":"stage-1","name":"pkg:opam","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:17.383Z","started_at":"2020-05-19T12:32:22.698Z","finished_at":"2020-05-19T12:59:35.366Z","duration":1632.668412,"queued_duration":3.721491,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879448","artifacts":[{"file_type":"trace","size":21338,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":558879447,"status":"success","stage":"stage-1","name":"lint","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:17.358Z","started_at":"2020-05-19T12:32:22.311Z","finished_at":"2020-05-19T12:37:23.824Z","duration":301.512976,"queued_duration":3.356585,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879447","artifacts":[{"file_type":"trace","size":37298,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":558879446,"status":"success","stage":"stage-1","name":"windows64","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:17.326Z","started_at":"2020-05-19T12:32:19.453Z","finished_at":"2020-05-19T13:30:27.213Z","duration":3487.760061,"queued_duration":0.53666,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879446","artifacts":[{"file_type":"trace","size":239693,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-05-26T13:30:25.926Z","tag_list":["windows-inria"]}
{"id":558879445,"status":"success","stage":"stage-1","name":"build:quick","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-05-19T12:32:17.302Z","started_at":"2020-05-19T12:32:22.239Z","finished_at":"2020-05-19T12:53:25.349Z","duration":1263.109536,"queued_duration":3.375566,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879445","artifacts":[{"file_type":"trace","size":200539,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-26T12:53:23.870Z","tag_list":[]}
{"id":558879444,"status":"success","stage":"stage-1","name":"build:base+async","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-05-19T12:32:17.281Z","started_at":"2020-05-19T12:32:22.194Z","finished_at":"2020-05-19T13:42:52.685Z","duration":4230.491081,"queued_duration":3.381956,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879444","artifacts":[{"file_type":"trace","size":285516,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-26T13:42:50.686Z","tag_list":[]}
{"id":558879443,"status":"success","stage":"stage-1","name":"build:edge+flambda:dune:dev","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:17.259Z","started_at":"2020-05-19T12:32:22.145Z","finished_at":"2020-05-19T12:53:41.779Z","duration":1279.634705,"queued_duration":3.383522,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879443","artifacts":[{"file_type":"trace","size":20540,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-26T12:53:39.802Z","tag_list":[]}
{"id":558879442,"status":"success","stage":"stage-1","name":"build:edge+flambda","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:17.237Z","started_at":"2020-05-19T12:32:22.025Z","finished_at":"2020-05-19T13:02:28.292Z","duration":1806.267147,"queued_duration":3.307294,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879442","artifacts":[{"file_type":"trace","size":286000,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-26T13:02:26.029Z","tag_list":[]}
{"id":558879441,"status":"success","stage":"stage-1","name":"build:base+32bit","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:17.208Z","started_at":"2020-05-19T12:32:21.787Z","finished_at":"2020-05-19T12:49:23.512Z","duration":1021.72464,"queued_duration":3.08889,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879441","artifacts":[{"file_type":"trace","size":279417,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-26T12:49:22.258Z","tag_list":[]}
{"id":558879440,"status":"success","stage":"stage-1","name":"build:base","ref":"pr-12357","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-05-19T12:32:17.181Z","started_at":"2020-05-19T12:32:21.606Z","finished_at":"2020-05-19T12:52:14.536Z","duration":1192.92997,"queued_duration":2.926785,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c062b67e0f61603ea456bbaa3c891c158a87acea","short_id":"c062b67e","created_at":"2020-05-19T14:31:59.000+02:00","parent_ids":["5b23b80c8a0af603e8078616b2c5957a6f709e62"],"title":"[declare] Remove some unused `fix_exn`","message":"[declare] Remove some unused `fix_exn`\n\nIn the current proof save path, the kernel can raise an exception when\nchecking a proof wrapped into a future.\n\nHowever, in this case, the future itself will \"fix\" the produced\nexception, with the mandatory handler set at the future's creation\ntime.\n\nThus, there is no need for the declare layer to mess with exceptions\nanymore, if my logic is correct. Note that the `fix_exn` parameter to\nthe `Declare` API was not used anymore.\n\nThis undoes 77cf18eb844b45776b2ec67be9f71e8dd4ca002c which comes from\npre-github times, so unfortunately I didn't have access to the\ndiscussion.\n\nThis needs some manual testing.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2020-05-15T03:14:15.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2020-05-19T14:31:59.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c062b67e0f61603ea456bbaa3c891c158a87acea"},"pipeline":{"id":147531609,"iid":16325,"project_id":6138686,"sha":"c062b67e0f61603ea456bbaa3c891c158a87acea","ref":"pr-12357","status":"failed","source":"push","created_at":"2020-05-19T12:32:17.150Z","updated_at":"2020-05-19T15:31:46.051Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/147531609"},"web_url":"https://gitlab.com/coq/coq/-/jobs/558879440","artifacts":[{"file_type":"trace","size":311487,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-26T12:52:12.622Z","tag_list":[]}
