{"id":107184204,"status":"failed","stage":"test","name":"ci-vst","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:03:37.940Z","started_at":"2018-10-11T16:30:45.963Z","finished_at":"2018-10-11T16:33:51.133Z","duration":185.169561,"queued_duration":0.208683,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c3345b238b3e1cf95d86a4da370079bf0e9be027","short_id":"c3345b23","created_at":"2018-10-11T18:03:23.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:03:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c3345b238b3e1cf95d86a4da370079bf0e9be027"},"pipeline":{"id":32701752,"iid":4257,"project_id":6138686,"sha":"c3345b238b3e1cf95d86a4da370079bf0e9be027","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:03:36.751Z","updated_at":"2018-10-11T17:05:22.796Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32701752"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/107184204","artifacts":[{"file_type":"trace","size":1062,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107184203,"status":"failed","stage":"test","name":"ci-unimath","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:03:37.913Z","started_at":"2018-10-11T16:30:46.902Z","finished_at":"2018-10-11T16:33:39.513Z","duration":172.610585,"queued_duration":1.023455,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c3345b238b3e1cf95d86a4da370079bf0e9be027","short_id":"c3345b23","created_at":"2018-10-11T18:03:23.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:03:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c3345b238b3e1cf95d86a4da370079bf0e9be027"},"pipeline":{"id":32701752,"iid":4257,"project_id":6138686,"sha":"c3345b238b3e1cf95d86a4da370079bf0e9be027","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:03:36.751Z","updated_at":"2018-10-11T17:05:22.796Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32701752"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/107184203","artifacts":[{"file_type":"trace","size":1062,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107184201,"status":"failed","stage":"test","name":"ci-sf","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:03:37.886Z","started_at":"2018-10-11T16:30:46.176Z","finished_at":"2018-10-11T16:33:35.959Z","duration":169.783282,"queued_duration":0.18452,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c3345b238b3e1cf95d86a4da370079bf0e9be027","short_id":"c3345b23","created_at":"2018-10-11T18:03:23.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:03:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c3345b238b3e1cf95d86a4da370079bf0e9be027"},"pipeline":{"id":32701752,"iid":4257,"project_id":6138686,"sha":"c3345b238b3e1cf95d86a4da370079bf0e9be027","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:03:36.751Z","updated_at":"2018-10-11T17:05:22.796Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32701752"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/107184201","artifacts":[{"file_type":"trace","size":1062,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107184199,"status":"failed","stage":"test","name":"ci-quickchick","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:03:37.858Z","started_at":"2018-10-11T16:30:46.478Z","finished_at":"2018-10-11T16:33:30.481Z","duration":164.002271,"queued_duration":0.411565,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c3345b238b3e1cf95d86a4da370079bf0e9be027","short_id":"c3345b23","created_at":"2018-10-11T18:03:23.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:03:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c3345b238b3e1cf95d86a4da370079bf0e9be027"},"pipeline":{"id":32701752,"iid":4257,"project_id":6138686,"sha":"c3345b238b3e1cf95d86a4da370079bf0e9be027","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:03:36.751Z","updated_at":"2018-10-11T17:05:22.796Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32701752"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/107184199","artifacts":[{"file_type":"trace","size":1062,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107184198,"status":"failed","stage":"test","name":"ci-plugin-tutorial","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:03:37.833Z","started_at":"2018-10-11T16:30:46.380Z","finished_at":"2018-10-11T16:33:54.302Z","duration":187.921639,"queued_duration":0.253576,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c3345b238b3e1cf95d86a4da370079bf0e9be027","short_id":"c3345b23","created_at":"2018-10-11T18:03:23.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:03:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c3345b238b3e1cf95d86a4da370079bf0e9be027"},"pipeline":{"id":32701752,"iid":4257,"project_id":6138686,"sha":"c3345b238b3e1cf95d86a4da370079bf0e9be027","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:03:36.751Z","updated_at":"2018-10-11T17:05:22.796Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32701752"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/107184198","artifacts":[{"file_type":"trace","size":1062,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107184197,"status":"failed","stage":"test","name":"ci-pidetop","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:03:37.809Z","started_at":"2018-10-11T16:30:46.310Z","finished_at":"2018-10-11T16:33:48.063Z","duration":181.753256,"queued_duration":0.121424,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c3345b238b3e1cf95d86a4da370079bf0e9be027","short_id":"c3345b23","created_at":"2018-10-11T18:03:23.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:03:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c3345b238b3e1cf95d86a4da370079bf0e9be027"},"pipeline":{"id":32701752,"iid":4257,"project_id":6138686,"sha":"c3345b238b3e1cf95d86a4da370079bf0e9be027","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:03:36.751Z","updated_at":"2018-10-11T17:05:22.796Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32701752"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/107184197","artifacts":[{"file_type":"trace","size":1062,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107184196,"status":"failed","stage":"test","name":"ci-mtac2","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:03:37.784Z","started_at":"2018-10-11T16:30:46.381Z","finished_at":"2018-10-11T16:33:50.273Z","duration":183.892186,"queued_duration":0.139131,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c3345b238b3e1cf95d86a4da370079bf0e9be027","short_id":"c3345b23","created_at":"2018-10-11T18:03:23.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:03:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c3345b238b3e1cf95d86a4da370079bf0e9be027"},"pipeline":{"id":32701752,"iid":4257,"project_id":6138686,"sha":"c3345b238b3e1cf95d86a4da370079bf0e9be027","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:03:36.751Z","updated_at":"2018-10-11T17:05:22.796Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32701752"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/107184196","artifacts":[{"file_type":"trace","size":1062,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107184195,"status":"failed","stage":"test","name":"ci-math-comp","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:03:37.761Z","started_at":"2018-10-11T16:30:46.858Z","finished_at":"2018-10-11T16:33:50.529Z","duration":183.67106,"queued_duration":0.556484,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c3345b238b3e1cf95d86a4da370079bf0e9be027","short_id":"c3345b23","created_at":"2018-10-11T18:03:23.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:03:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c3345b238b3e1cf95d86a4da370079bf0e9be027"},"pipeline":{"id":32701752,"iid":4257,"project_id":6138686,"sha":"c3345b238b3e1cf95d86a4da370079bf0e9be027","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:03:36.751Z","updated_at":"2018-10-11T17:05:22.796Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32701752"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/107184195","artifacts":[{"file_type":"trace","size":1062,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107184194,"status":"failed","stage":"test","name":"ci-ltac2","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:03:37.735Z","started_at":"2018-10-11T16:30:46.805Z","finished_at":"2018-10-11T16:33:41.351Z","duration":174.545472,"queued_duration":0.459011,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c3345b238b3e1cf95d86a4da370079bf0e9be027","short_id":"c3345b23","created_at":"2018-10-11T18:03:23.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:03:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c3345b238b3e1cf95d86a4da370079bf0e9be027"},"pipeline":{"id":32701752,"iid":4257,"project_id":6138686,"sha":"c3345b238b3e1cf95d86a4da370079bf0e9be027","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:03:36.751Z","updated_at":"2018-10-11T17:05:22.796Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32701752"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/107184194","artifacts":[{"file_type":"trace","size":1062,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107184193,"status":"failed","stage":"test","name":"ci-iris-lambda-rust","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:03:37.711Z","started_at":"2018-10-11T16:30:46.757Z","finished_at":"2018-10-11T16:33:27.852Z","duration":161.095219,"queued_duration":0.36584,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c3345b238b3e1cf95d86a4da370079bf0e9be027","short_id":"c3345b23","created_at":"2018-10-11T18:03:23.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:03:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c3345b238b3e1cf95d86a4da370079bf0e9be027"},"pipeline":{"id":32701752,"iid":4257,"project_id":6138686,"sha":"c3345b238b3e1cf95d86a4da370079bf0e9be027","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:03:36.751Z","updated_at":"2018-10-11T17:05:22.796Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32701752"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/107184193","artifacts":[{"file_type":"trace","size":1062,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107184192,"status":"failed","stage":"test","name":"ci-hott","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:03:37.687Z","started_at":"2018-10-11T16:30:46.594Z","finished_at":"2018-10-11T16:33:41.980Z","duration":175.38604,"queued_duration":0.155957,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c3345b238b3e1cf95d86a4da370079bf0e9be027","short_id":"c3345b23","created_at":"2018-10-11T18:03:23.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:03:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c3345b238b3e1cf95d86a4da370079bf0e9be027"},"pipeline":{"id":32701752,"iid":4257,"project_id":6138686,"sha":"c3345b238b3e1cf95d86a4da370079bf0e9be027","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:03:36.751Z","updated_at":"2018-10-11T17:05:22.796Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32701752"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/107184192","artifacts":[{"file_type":"trace","size":1062,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107184191,"status":"failed","stage":"test","name":"ci-geocoq","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:03:37.663Z","started_at":"2018-10-11T16:30:46.620Z","finished_at":"2018-10-11T16:30:56.467Z","duration":9.846418,"queued_duration":0.122546,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c3345b238b3e1cf95d86a4da370079bf0e9be027","short_id":"c3345b23","created_at":"2018-10-11T18:03:23.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:03:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c3345b238b3e1cf95d86a4da370079bf0e9be027"},"pipeline":{"id":32701752,"iid":4257,"project_id":6138686,"sha":"c3345b238b3e1cf95d86a4da370079bf0e9be027","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:03:36.751Z","updated_at":"2018-10-11T17:05:22.796Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32701752"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/107184191","artifacts":[{"file_type":"trace","size":135752,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107184190,"status":"failed","stage":"test","name":"ci-formal-topology","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:03:37.640Z","started_at":"2018-10-11T16:30:46.738Z","finished_at":"2018-10-11T16:33:32.752Z","duration":166.013245,"queued_duration":0.15071,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c3345b238b3e1cf95d86a4da370079bf0e9be027","short_id":"c3345b23","created_at":"2018-10-11T18:03:23.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:03:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c3345b238b3e1cf95d86a4da370079bf0e9be027"},"pipeline":{"id":32701752,"iid":4257,"project_id":6138686,"sha":"c3345b238b3e1cf95d86a4da370079bf0e9be027","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:03:36.751Z","updated_at":"2018-10-11T17:05:22.796Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32701752"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/107184190","artifacts":[{"file_type":"trace","size":1062,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107184189,"status":"failed","stage":"test","name":"ci-flocq","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:03:37.616Z","started_at":"2018-10-11T16:30:46.956Z","finished_at":"2018-10-11T16:33:43.112Z","duration":176.155877,"queued_duration":0.241597,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c3345b238b3e1cf95d86a4da370079bf0e9be027","short_id":"c3345b23","created_at":"2018-10-11T18:03:23.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:03:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c3345b238b3e1cf95d86a4da370079bf0e9be027"},"pipeline":{"id":32701752,"iid":4257,"project_id":6138686,"sha":"c3345b238b3e1cf95d86a4da370079bf0e9be027","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:03:36.751Z","updated_at":"2018-10-11T17:05:22.796Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32701752"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/107184189","artifacts":[{"file_type":"trace","size":1062,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107184187,"status":"failed","stage":"test","name":"ci-fiat-parsers","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:03:37.591Z","started_at":"2018-10-11T16:30:46.960Z","finished_at":"2018-10-11T16:30:56.034Z","duration":9.073797,"queued_duration":0.099425,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c3345b238b3e1cf95d86a4da370079bf0e9be027","short_id":"c3345b23","created_at":"2018-10-11T18:03:23.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:03:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c3345b238b3e1cf95d86a4da370079bf0e9be027"},"pipeline":{"id":32701752,"iid":4257,"project_id":6138686,"sha":"c3345b238b3e1cf95d86a4da370079bf0e9be027","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:03:36.751Z","updated_at":"2018-10-11T17:05:22.796Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32701752"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/107184187","artifacts":[{"file_type":"trace","size":131732,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107184186,"status":"failed","stage":"test","name":"ci-fiat-crypto-legacy","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:03:37.568Z","started_at":"2018-10-11T16:30:47.285Z","finished_at":"2018-10-11T16:30:56.948Z","duration":9.663106,"queued_duration":0.276298,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c3345b238b3e1cf95d86a4da370079bf0e9be027","short_id":"c3345b23","created_at":"2018-10-11T18:03:23.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:03:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c3345b238b3e1cf95d86a4da370079bf0e9be027"},"pipeline":{"id":32701752,"iid":4257,"project_id":6138686,"sha":"c3345b238b3e1cf95d86a4da370079bf0e9be027","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:03:36.751Z","updated_at":"2018-10-11T17:05:22.796Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32701752"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/107184186","artifacts":[{"file_type":"trace","size":1875,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107184185,"status":"failed","stage":"test","name":"ci-fiat-crypto","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:03:37.545Z","started_at":"2018-10-11T16:30:47.652Z","finished_at":"2018-10-11T16:30:57.238Z","duration":9.586586,"queued_duration":0.447647,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c3345b238b3e1cf95d86a4da370079bf0e9be027","short_id":"c3345b23","created_at":"2018-10-11T18:03:23.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:03:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c3345b238b3e1cf95d86a4da370079bf0e9be027"},"pipeline":{"id":32701752,"iid":4257,"project_id":6138686,"sha":"c3345b238b3e1cf95d86a4da370079bf0e9be027","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:03:36.751Z","updated_at":"2018-10-11T17:05:22.796Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32701752"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/107184185","artifacts":[{"file_type":"trace","size":135376,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":107184184,"status":"failed","stage":"test","name":"ci-fcsl-pcm","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:03:37.523Z","started_at":"2018-10-11T16:30:47.606Z","finished_at":"2018-10-11T16:33:34.856Z","duration":167.250585,"queued_duration":0.231938,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c3345b238b3e1cf95d86a4da370079bf0e9be027","short_id":"c3345b23","created_at":"2018-10-11T18:03:23.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:03:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c3345b238b3e1cf95d86a4da370079bf0e9be027"},"pipeline":{"id":32701752,"iid":4257,"project_id":6138686,"sha":"c3345b238b3e1cf95d86a4da370079bf0e9be027","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:03:36.751Z","updated_at":"2018-10-11T17:05:22.796Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32701752"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/107184184","artifacts":[{"file_type":"trace","size":1062,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107184183,"status":"failed","stage":"test","name":"ci-equations","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:03:37.501Z","started_at":"2018-10-11T16:30:47.816Z","finished_at":"2018-10-11T16:33:52.087Z","duration":184.270974,"queued_duration":0.28481,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c3345b238b3e1cf95d86a4da370079bf0e9be027","short_id":"c3345b23","created_at":"2018-10-11T18:03:23.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:03:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c3345b238b3e1cf95d86a4da370079bf0e9be027"},"pipeline":{"id":32701752,"iid":4257,"project_id":6138686,"sha":"c3345b238b3e1cf95d86a4da370079bf0e9be027","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:03:36.751Z","updated_at":"2018-10-11T17:05:22.796Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32701752"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/107184183","artifacts":[{"file_type":"trace","size":1062,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107184182,"status":"failed","stage":"test","name":"ci-elpi","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:03:37.479Z","started_at":"2018-10-11T16:30:47.940Z","finished_at":"2018-10-11T16:33:48.060Z","duration":180.120036,"queued_duration":0.200797,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c3345b238b3e1cf95d86a4da370079bf0e9be027","short_id":"c3345b23","created_at":"2018-10-11T18:03:23.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:03:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c3345b238b3e1cf95d86a4da370079bf0e9be027"},"pipeline":{"id":32701752,"iid":4257,"project_id":6138686,"sha":"c3345b238b3e1cf95d86a4da370079bf0e9be027","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:03:36.751Z","updated_at":"2018-10-11T17:05:22.796Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32701752"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/107184182","artifacts":[{"file_type":"trace","size":1062,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107184181,"status":"failed","stage":"test","name":"ci-cross-crypto","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:03:37.456Z","started_at":"2018-10-11T16:30:48.088Z","finished_at":"2018-10-11T16:33:31.600Z","duration":163.512243,"queued_duration":0.208489,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c3345b238b3e1cf95d86a4da370079bf0e9be027","short_id":"c3345b23","created_at":"2018-10-11T18:03:23.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:03:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c3345b238b3e1cf95d86a4da370079bf0e9be027"},"pipeline":{"id":32701752,"iid":4257,"project_id":6138686,"sha":"c3345b238b3e1cf95d86a4da370079bf0e9be027","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:03:36.751Z","updated_at":"2018-10-11T17:05:22.796Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32701752"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/107184181","artifacts":[{"file_type":"trace","size":1062,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107184180,"status":"failed","stage":"test","name":"ci-coquelicot","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:03:37.432Z","started_at":"2018-10-11T16:30:48.204Z","finished_at":"2018-10-11T16:33:34.213Z","duration":166.009113,"queued_duration":0.257015,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c3345b238b3e1cf95d86a4da370079bf0e9be027","short_id":"c3345b23","created_at":"2018-10-11T18:03:23.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:03:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c3345b238b3e1cf95d86a4da370079bf0e9be027"},"pipeline":{"id":32701752,"iid":4257,"project_id":6138686,"sha":"c3345b238b3e1cf95d86a4da370079bf0e9be027","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:03:36.751Z","updated_at":"2018-10-11T17:05:22.796Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32701752"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/107184180","artifacts":[{"file_type":"trace","size":1062,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107184179,"status":"failed","stage":"test","name":"ci-coq-dpdgraph","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:03:37.407Z","started_at":"2018-10-11T16:30:48.157Z","finished_at":"2018-10-11T16:33:50.310Z","duration":182.153159,"queued_duration":0.151804,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c3345b238b3e1cf95d86a4da370079bf0e9be027","short_id":"c3345b23","created_at":"2018-10-11T18:03:23.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:03:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c3345b238b3e1cf95d86a4da370079bf0e9be027"},"pipeline":{"id":32701752,"iid":4257,"project_id":6138686,"sha":"c3345b238b3e1cf95d86a4da370079bf0e9be027","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:03:36.751Z","updated_at":"2018-10-11T17:05:22.796Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32701752"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/107184179","artifacts":[{"file_type":"trace","size":1062,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107184178,"status":"failed","stage":"test","name":"ci-compcert","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:03:37.385Z","started_at":"2018-10-11T16:30:48.526Z","finished_at":"2018-10-11T16:33:43.776Z","duration":175.249943,"queued_duration":0.379825,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c3345b238b3e1cf95d86a4da370079bf0e9be027","short_id":"c3345b23","created_at":"2018-10-11T18:03:23.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:03:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c3345b238b3e1cf95d86a4da370079bf0e9be027"},"pipeline":{"id":32701752,"iid":4257,"project_id":6138686,"sha":"c3345b238b3e1cf95d86a4da370079bf0e9be027","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:03:36.751Z","updated_at":"2018-10-11T17:05:22.796Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32701752"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/107184178","artifacts":[{"file_type":"trace","size":1062,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107184177,"status":"failed","stage":"test","name":"ci-color","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:03:37.363Z","started_at":"2018-10-11T16:30:49.036Z","finished_at":"2018-10-11T16:33:56.462Z","duration":187.426255,"queued_duration":0.518649,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c3345b238b3e1cf95d86a4da370079bf0e9be027","short_id":"c3345b23","created_at":"2018-10-11T18:03:23.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:03:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c3345b238b3e1cf95d86a4da370079bf0e9be027"},"pipeline":{"id":32701752,"iid":4257,"project_id":6138686,"sha":"c3345b238b3e1cf95d86a4da370079bf0e9be027","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:03:36.751Z","updated_at":"2018-10-11T17:05:22.796Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32701752"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/107184177","artifacts":[{"file_type":"trace","size":1062,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107184176,"status":"failed","stage":"test","name":"ci-bignums","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:03:37.341Z","started_at":"2018-10-11T16:30:48.973Z","finished_at":"2018-10-11T16:33:35.362Z","duration":166.389689,"queued_duration":0.238407,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c3345b238b3e1cf95d86a4da370079bf0e9be027","short_id":"c3345b23","created_at":"2018-10-11T18:03:23.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:03:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c3345b238b3e1cf95d86a4da370079bf0e9be027"},"pipeline":{"id":32701752,"iid":4257,"project_id":6138686,"sha":"c3345b238b3e1cf95d86a4da370079bf0e9be027","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:03:36.751Z","updated_at":"2018-10-11T17:05:22.796Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32701752"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/107184176","artifacts":[{"file_type":"trace","size":1062,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107184175,"status":"failed","stage":"test","name":"ci-bedrock2","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:03:37.320Z","started_at":"2018-10-11T16:30:49.168Z","finished_at":"2018-10-11T16:33:50.330Z","duration":181.162016,"queued_duration":0.271488,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c3345b238b3e1cf95d86a4da370079bf0e9be027","short_id":"c3345b23","created_at":"2018-10-11T18:03:23.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:03:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c3345b238b3e1cf95d86a4da370079bf0e9be027"},"pipeline":{"id":32701752,"iid":4257,"project_id":6138686,"sha":"c3345b238b3e1cf95d86a4da370079bf0e9be027","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:03:36.751Z","updated_at":"2018-10-11T17:05:22.796Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32701752"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/107184175","artifacts":[{"file_type":"trace","size":1062,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107184174,"status":"failed","stage":"test","name":"ci-aac-tactics","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:03:37.297Z","started_at":"2018-10-11T16:30:51.486Z","finished_at":"2018-10-11T16:33:44.511Z","duration":173.02433,"queued_duration":2.283336,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c3345b238b3e1cf95d86a4da370079bf0e9be027","short_id":"c3345b23","created_at":"2018-10-11T18:03:23.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:03:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c3345b238b3e1cf95d86a4da370079bf0e9be027"},"pipeline":{"id":32701752,"iid":4257,"project_id":6138686,"sha":"c3345b238b3e1cf95d86a4da370079bf0e9be027","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:03:36.751Z","updated_at":"2018-10-11T17:05:22.796Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32701752"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/107184174","artifacts":[{"file_type":"trace","size":1062,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107184173,"status":"failed","stage":"test","name":"validate:edge+flambda","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:03:37.275Z","started_at":"2018-10-11T16:30:51.447Z","finished_at":"2018-10-11T16:33:48.066Z","duration":176.619093,"queued_duration":2.182144,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c3345b238b3e1cf95d86a4da370079bf0e9be027","short_id":"c3345b23","created_at":"2018-10-11T18:03:23.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:03:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c3345b238b3e1cf95d86a4da370079bf0e9be027"},"pipeline":{"id":32701752,"iid":4257,"project_id":6138686,"sha":"c3345b238b3e1cf95d86a4da370079bf0e9be027","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:03:36.751Z","updated_at":"2018-10-11T17:05:22.796Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32701752"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/107184173","artifacts":[{"file_type":"trace","size":1062,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107184172,"status":"failed","stage":"test","name":"validate:edge","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:03:37.254Z","started_at":"2018-10-11T16:30:51.362Z","finished_at":"2018-10-11T16:33:34.860Z","duration":163.497838,"queued_duration":2.053911,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c3345b238b3e1cf95d86a4da370079bf0e9be027","short_id":"c3345b23","created_at":"2018-10-11T18:03:23.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:03:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c3345b238b3e1cf95d86a4da370079bf0e9be027"},"pipeline":{"id":32701752,"iid":4257,"project_id":6138686,"sha":"c3345b238b3e1cf95d86a4da370079bf0e9be027","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:03:36.751Z","updated_at":"2018-10-11T17:05:22.796Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32701752"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/107184172","artifacts":[{"file_type":"trace","size":1062,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107184171,"status":"failed","stage":"test","name":"validate:base+32bit","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:03:37.226Z","started_at":"2018-10-11T16:30:49.618Z","finished_at":"2018-10-11T16:33:50.522Z","duration":180.903851,"queued_duration":0.228166,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c3345b238b3e1cf95d86a4da370079bf0e9be027","short_id":"c3345b23","created_at":"2018-10-11T18:03:23.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:03:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c3345b238b3e1cf95d86a4da370079bf0e9be027"},"pipeline":{"id":32701752,"iid":4257,"project_id":6138686,"sha":"c3345b238b3e1cf95d86a4da370079bf0e9be027","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:03:36.751Z","updated_at":"2018-10-11T17:05:22.796Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32701752"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/107184171","artifacts":[{"file_type":"trace","size":1062,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107184170,"status":"failed","stage":"test","name":"validate:base","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:03:37.201Z","started_at":"2018-10-11T16:30:49.646Z","finished_at":"2018-10-11T16:33:40.436Z","duration":170.789986,"queued_duration":0.153809,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c3345b238b3e1cf95d86a4da370079bf0e9be027","short_id":"c3345b23","created_at":"2018-10-11T18:03:23.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:03:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c3345b238b3e1cf95d86a4da370079bf0e9be027"},"pipeline":{"id":32701752,"iid":4257,"project_id":6138686,"sha":"c3345b238b3e1cf95d86a4da370079bf0e9be027","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:03:36.751Z","updated_at":"2018-10-11T17:05:22.796Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32701752"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/107184170","artifacts":[{"file_type":"trace","size":1062,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107184169,"status":"failed","stage":"test","name":"test-suite:egde:dune:dev","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:03:37.175Z","started_at":"2018-10-11T16:30:51.320Z","finished_at":"2018-10-11T16:33:44.509Z","duration":173.188815,"queued_duration":1.728015,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c3345b238b3e1cf95d86a4da370079bf0e9be027","short_id":"c3345b23","created_at":"2018-10-11T18:03:23.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:03:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c3345b238b3e1cf95d86a4da370079bf0e9be027"},"pipeline":{"id":32701752,"iid":4257,"project_id":6138686,"sha":"c3345b238b3e1cf95d86a4da370079bf0e9be027","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:03:36.751Z","updated_at":"2018-10-11T17:05:22.796Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32701752"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/107184169","artifacts":[{"file_type":"trace","size":1233,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107184167,"status":"failed","stage":"test","name":"test-suite:edge+flambda","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:03:37.148Z","started_at":"2018-10-11T16:30:49.910Z","finished_at":"2018-10-11T16:33:48.060Z","duration":178.150268,"queued_duration":0.207218,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c3345b238b3e1cf95d86a4da370079bf0e9be027","short_id":"c3345b23","created_at":"2018-10-11T18:03:23.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:03:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c3345b238b3e1cf95d86a4da370079bf0e9be027"},"pipeline":{"id":32701752,"iid":4257,"project_id":6138686,"sha":"c3345b238b3e1cf95d86a4da370079bf0e9be027","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:03:36.751Z","updated_at":"2018-10-11T17:05:22.796Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32701752"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/107184167","artifacts":[{"file_type":"trace","size":1225,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107184166,"status":"failed","stage":"test","name":"test-suite:edge","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:03:37.110Z","started_at":"2018-10-11T16:30:51.079Z","finished_at":"2018-10-11T16:33:52.438Z","duration":181.359524,"queued_duration":1.298186,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c3345b238b3e1cf95d86a4da370079bf0e9be027","short_id":"c3345b23","created_at":"2018-10-11T18:03:23.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:03:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c3345b238b3e1cf95d86a4da370079bf0e9be027"},"pipeline":{"id":32701752,"iid":4257,"project_id":6138686,"sha":"c3345b238b3e1cf95d86a4da370079bf0e9be027","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:03:36.751Z","updated_at":"2018-10-11T17:05:22.796Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32701752"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/107184166","artifacts":[{"file_type":"trace","size":1225,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107184165,"status":"failed","stage":"test","name":"test-suite:base+32bit","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:03:37.082Z","started_at":"2018-10-11T16:30:51.033Z","finished_at":"2018-10-11T16:33:49.657Z","duration":178.624037,"queued_duration":1.132833,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c3345b238b3e1cf95d86a4da370079bf0e9be027","short_id":"c3345b23","created_at":"2018-10-11T18:03:23.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:03:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c3345b238b3e1cf95d86a4da370079bf0e9be027"},"pipeline":{"id":32701752,"iid":4257,"project_id":6138686,"sha":"c3345b238b3e1cf95d86a4da370079bf0e9be027","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:03:36.751Z","updated_at":"2018-10-11T17:05:22.796Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32701752"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/107184165","artifacts":[{"file_type":"trace","size":1225,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107184164,"status":"failed","stage":"test","name":"test-suite:base","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:03:37.057Z","started_at":"2018-10-11T16:30:50.537Z","finished_at":"2018-10-11T16:33:45.056Z","duration":174.518697,"queued_duration":0.471806,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c3345b238b3e1cf95d86a4da370079bf0e9be027","short_id":"c3345b23","created_at":"2018-10-11T18:03:23.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:03:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c3345b238b3e1cf95d86a4da370079bf0e9be027"},"pipeline":{"id":32701752,"iid":4257,"project_id":6138686,"sha":"c3345b238b3e1cf95d86a4da370079bf0e9be027","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:03:36.751Z","updated_at":"2018-10-11T17:05:22.796Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32701752"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/107184164","artifacts":[{"file_type":"trace","size":1225,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107184163,"status":"failed","stage":"test","name":"doc:ml-api:odoc","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:03:37.031Z","started_at":"2018-10-11T16:30:50.992Z","finished_at":"2018-10-11T16:33:50.735Z","duration":179.743028,"queued_duration":0.730102,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c3345b238b3e1cf95d86a4da370079bf0e9be027","short_id":"c3345b23","created_at":"2018-10-11T18:03:23.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:03:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c3345b238b3e1cf95d86a4da370079bf0e9be027"},"pipeline":{"id":32701752,"iid":4257,"project_id":6138686,"sha":"c3345b238b3e1cf95d86a4da370079bf0e9be027","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:03:36.751Z","updated_at":"2018-10-11T17:05:22.796Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32701752"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/107184163","artifacts":[{"file_type":"trace","size":1062,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107184162,"status":"failed","stage":"test","name":"doc:refman","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:03:37.003Z","started_at":"2018-10-11T16:30:50.575Z","finished_at":"2018-10-11T16:33:50.567Z","duration":179.992731,"queued_duration":0.188941,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c3345b238b3e1cf95d86a4da370079bf0e9be027","short_id":"c3345b23","created_at":"2018-10-11T18:03:23.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:03:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c3345b238b3e1cf95d86a4da370079bf0e9be027"},"pipeline":{"id":32701752,"iid":4257,"project_id":6138686,"sha":"c3345b238b3e1cf95d86a4da370079bf0e9be027","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:03:36.751Z","updated_at":"2018-10-11T17:05:22.796Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32701752"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/107184162","artifacts":[{"file_type":"trace","size":1062,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107184161,"status":"success","stage":"test","name":"pkg:nix","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:03:36.975Z","started_at":"2018-10-11T16:30:50.932Z","finished_at":"2018-10-11T17:05:22.634Z","duration":2071.70172,"queued_duration":0.485712,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c3345b238b3e1cf95d86a4da370079bf0e9be027","short_id":"c3345b23","created_at":"2018-10-11T18:03:23.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:03:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c3345b238b3e1cf95d86a4da370079bf0e9be027"},"pipeline":{"id":32701752,"iid":4257,"project_id":6138686,"sha":"c3345b238b3e1cf95d86a4da370079bf0e9be027","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:03:36.751Z","updated_at":"2018-10-11T17:05:22.796Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32701752"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107184161","artifacts":[{"file_type":"trace","size":656728,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107184160,"status":"failed","stage":"test","name":"pkg:opam","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:03:36.949Z","started_at":"2018-10-11T16:30:50.870Z","finished_at":"2018-10-11T16:33:45.052Z","duration":174.181541,"queued_duration":0.354718,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c3345b238b3e1cf95d86a4da370079bf0e9be027","short_id":"c3345b23","created_at":"2018-10-11T18:03:23.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:03:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c3345b238b3e1cf95d86a4da370079bf0e9be027"},"pipeline":{"id":32701752,"iid":4257,"project_id":6138686,"sha":"c3345b238b3e1cf95d86a4da370079bf0e9be027","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:03:36.751Z","updated_at":"2018-10-11T17:05:22.796Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32701752"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/107184160","artifacts":[{"file_type":"trace","size":1062,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":107184159,"status":"failed","stage":"test","name":"windows64","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:03:36.914Z","started_at":"2018-10-11T16:30:50.791Z","finished_at":"2018-10-11T16:31:00.026Z","duration":9.234698,"queued_duration":0.230912,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c3345b238b3e1cf95d86a4da370079bf0e9be027","short_id":"c3345b23","created_at":"2018-10-11T18:03:23.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:03:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c3345b238b3e1cf95d86a4da370079bf0e9be027"},"pipeline":{"id":32701752,"iid":4257,"project_id":6138686,"sha":"c3345b238b3e1cf95d86a4da370079bf0e9be027","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:03:36.751Z","updated_at":"2018-10-11T17:05:22.796Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32701752"},"failure_reason":"script_failure","web_url":"https://gitlab.com/coq/coq/-/jobs/107184159","artifacts":[{"file_type":"trace","size":1732,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2018-10-18T16:30:59.391Z","tag_list":["windows"]}
{"id":107184158,"status":"success","stage":"build","name":"build:egde:dune:dev","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:03:36.875Z","started_at":"2018-10-11T16:03:39.115Z","finished_at":"2018-10-11T16:20:02.246Z","duration":983.131293,"queued_duration":0.910199,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c3345b238b3e1cf95d86a4da370079bf0e9be027","short_id":"c3345b23","created_at":"2018-10-11T18:03:23.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:03:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c3345b238b3e1cf95d86a4da370079bf0e9be027"},"pipeline":{"id":32701752,"iid":4257,"project_id":6138686,"sha":"c3345b238b3e1cf95d86a4da370079bf0e9be027","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:03:36.751Z","updated_at":"2018-10-11T17:05:22.796Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32701752"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107184158","artifacts":[{"file_type":"trace","size":16973,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-10-18T16:19:52.428Z","tag_list":[]}
{"id":107184156,"status":"success","stage":"build","name":"build:edge+flambda","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:03:36.850Z","started_at":"2018-10-11T16:03:38.971Z","finished_at":"2018-10-11T16:30:45.655Z","duration":1626.683526,"queued_duration":0.729709,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c3345b238b3e1cf95d86a4da370079bf0e9be027","short_id":"c3345b23","created_at":"2018-10-11T18:03:23.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:03:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c3345b238b3e1cf95d86a4da370079bf0e9be027"},"pipeline":{"id":32701752,"iid":4257,"project_id":6138686,"sha":"c3345b238b3e1cf95d86a4da370079bf0e9be027","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:03:36.751Z","updated_at":"2018-10-11T17:05:22.796Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32701752"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107184156","artifacts":[{"file_type":"trace","size":230695,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-10-18T16:30:34.545Z","tag_list":[]}
{"id":107184153,"status":"success","stage":"build","name":"build:edge","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:03:36.823Z","started_at":"2018-10-11T16:03:38.907Z","finished_at":"2018-10-11T16:20:57.230Z","duration":1038.323149,"queued_duration":0.622178,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c3345b238b3e1cf95d86a4da370079bf0e9be027","short_id":"c3345b23","created_at":"2018-10-11T18:03:23.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:03:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c3345b238b3e1cf95d86a4da370079bf0e9be027"},"pipeline":{"id":32701752,"iid":4257,"project_id":6138686,"sha":"c3345b238b3e1cf95d86a4da370079bf0e9be027","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:03:36.751Z","updated_at":"2018-10-11T17:05:22.796Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32701752"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107184153","artifacts":[{"file_type":"trace","size":229558,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-10-18T16:20:51.969Z","tag_list":[]}
{"id":107184151,"status":"success","stage":"build","name":"build:base+32bit","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:03:36.792Z","started_at":"2018-10-11T16:03:38.707Z","finished_at":"2018-10-11T16:18:24.638Z","duration":885.930252,"queued_duration":0.369293,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c3345b238b3e1cf95d86a4da370079bf0e9be027","short_id":"c3345b23","created_at":"2018-10-11T18:03:23.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:03:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c3345b238b3e1cf95d86a4da370079bf0e9be027"},"pipeline":{"id":32701752,"iid":4257,"project_id":6138686,"sha":"c3345b238b3e1cf95d86a4da370079bf0e9be027","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:03:36.751Z","updated_at":"2018-10-11T17:05:22.796Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32701752"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107184151","artifacts":[{"file_type":"trace","size":224788,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-10-18T16:18:18.203Z","tag_list":[]}
{"id":107184149,"status":"success","stage":"build","name":"build:base","ref":"pr-8421","tag":false,"coverage":null,"allow_failure":false,"created_at":"2018-10-11T16:03:36.765Z","started_at":"2018-10-11T16:03:38.578Z","finished_at":"2018-10-11T16:21:18.415Z","duration":1059.836871,"queued_duration":0.201437,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"c3345b238b3e1cf95d86a4da370079bf0e9be027","short_id":"c3345b23","created_at":"2018-10-11T18:03:23.000+02:00","parent_ids":["ca0f034f5b26132f540e0018db09046d8efc5be9"],"title":"[dune] [ci] [appveyor] Fix and test Dune for Windows.","message":"[dune] [ci] [appveyor] Fix and test Dune for Windows.\n\nUnfortunately our `.vo` building scheme introduces a bit of pitfall as\nit needs a POSIX shell and `system` is `cmd.exe` on Windows.\nHopefully, this bit of hack will go away when Dune can understand Coq\nlibraries.\n\nAnother core problem is that shell scripts (`kernel/**.sh`,\n`mkcamlp5.opt`) cannot be called with `(run ...)` on Windows, so we\nmust use `(bash ...)` which is far from ideal.\n\nWe also add some minimal testing of a Dune build on Windows, this\nshould take 3/4 minutes so I believe it is acceptable.\n\nCurrent problem on windows is that the loadpath is set sometimes to\n`_build/install/default/lib/coq/theories/Init`\n\nand others to\n\n`_build/default/theories/Init/`\n\ndue to coqroot being a strange thing in Win32 due to lack of symlinks,\nwhich makes it work by miracle on Unix.\n","author_name":"Emilio Jesus Gallego Arias","author_email":"e+git@x80.org","authored_date":"2018-09-06T13:24:53.000+02:00","committer_name":"Emilio Jesus Gallego Arias","committer_email":"e+git@x80.org","committed_date":"2018-10-11T18:03:23.000+02:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/c3345b238b3e1cf95d86a4da370079bf0e9be027"},"pipeline":{"id":32701752,"iid":4257,"project_id":6138686,"sha":"c3345b238b3e1cf95d86a4da370079bf0e9be027","ref":"pr-8421","status":"failed","source":"push","created_at":"2018-10-11T16:03:36.751Z","updated_at":"2018-10-11T17:05:22.796Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/32701752"},"web_url":"https://gitlab.com/coq/coq/-/jobs/107184149","artifacts":[{"file_type":"trace","size":276151,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2018-10-18T16:21:12.930Z","tag_list":[]}
