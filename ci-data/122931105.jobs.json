{"id":457941937,"status":"success","stage":"stage-4","name":"library:ci-corn","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:24.249Z","started_at":"2020-03-03T17:29:00.046Z","finished_at":"2020-03-03T18:02:16.278Z","duration":1996.232197,"queued_duration":1.228083,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941937","artifacts":[{"file_type":"trace","size":364623,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":457941935,"status":"success","stage":"stage-4","name":"library:ci-fiat-crypto","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:24.223Z","started_at":"2020-03-03T17:31:23.680Z","finished_at":"2020-03-03T19:28:50.660Z","duration":7046.979836,"queued_duration":0.898155,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941935","artifacts":[{"file_type":"trace","size":290749,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":457941930,"status":"success","stage":"stage-3","name":"library:ci-math-classes","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:24.195Z","started_at":"2020-03-03T17:20:25.878Z","finished_at":"2020-03-03T17:28:58.648Z","duration":512.770645,"queued_duration":0.903953,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941930","artifacts":[{"file_type":"trace","size":177432,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":457941928,"status":"success","stage":"stage-3","name":"library:ci-coqprime","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:24.171Z","started_at":"2020-03-03T17:20:25.772Z","finished_at":"2020-03-03T17:25:47.536Z","duration":321.764537,"queued_duration":0.867834,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941928","artifacts":[{"file_type":"trace","size":91139,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":457941926,"status":"success","stage":"stage-3","name":"library:ci-color","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:24.141Z","started_at":"2020-03-03T17:20:25.100Z","finished_at":"2020-03-03T17:38:36.163Z","duration":1091.06287,"queued_duration":0.268752,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941926","artifacts":[{"file_type":"trace","size":271170,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":457941923,"status":"success","stage":"stage-2","name":"plugin:ci-rewriter","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:24.115Z","started_at":"2020-03-03T17:15:50.864Z","finished_at":"2020-03-03T17:31:22.616Z","duration":931.751686,"queued_duration":2.729082,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941923","artifacts":[{"file_type":"trace","size":142604,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":457941922,"status":"success","stage":"stage-2","name":"plugin:ci-relation_algebra","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:24.093Z","started_at":"2020-03-03T17:00:09.688Z","finished_at":"2020-03-03T17:06:53.814Z","duration":404.125414,"queued_duration":1.255472,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941922","artifacts":[{"file_type":"trace","size":57815,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":457941919,"status":"success","stage":"stage-2","name":"plugin:ci-reduction_effects","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:24.073Z","started_at":"2020-03-03T17:00:09.581Z","finished_at":"2020-03-03T17:03:37.921Z","duration":208.34068,"queued_duration":1.276097,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941919","artifacts":[{"file_type":"trace","size":35132,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":457941916,"status":"success","stage":"stage-2","name":"plugin:ci-quickchick","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:24.055Z","started_at":"2020-03-03T17:15:50.819Z","finished_at":"2020-03-03T17:23:34.201Z","duration":463.381274,"queued_duration":2.780012,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941916","artifacts":[{"file_type":"trace","size":502112,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":457941915,"status":"success","stage":"stage-2","name":"plugin:ci-perennial","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:24.034Z","started_at":"2020-03-03T17:15:50.748Z","finished_at":"2020-03-03T17:47:27.133Z","duration":1896.384954,"queued_duration":2.776633,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941915","artifacts":[{"file_type":"trace","size":40579,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":457941912,"status":"success","stage":"stage-2","name":"plugin:ci-paramcoq","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:24.014Z","started_at":"2020-03-03T17:00:09.341Z","finished_at":"2020-03-03T17:03:35.084Z","duration":205.743237,"queued_duration":1.315236,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941912","artifacts":[{"file_type":"trace","size":84861,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":457941911,"status":"success","stage":"stage-2","name":"plugin:ci-mtac2","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:23.995Z","started_at":"2020-03-03T17:00:09.256Z","finished_at":"2020-03-03T17:04:49.752Z","duration":280.496108,"queued_duration":1.401115,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941911","artifacts":[{"file_type":"trace","size":157526,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":457941909,"status":"success","stage":"stage-2","name":"plugin:ci-fiat_parsers","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:23.977Z","started_at":"2020-03-03T17:00:09.169Z","finished_at":"2020-03-03T17:20:55.358Z","duration":1246.189629,"queued_duration":1.40407,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941909","artifacts":[{"file_type":"trace","size":241905,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":457941908,"status":"success","stage":"stage-2","name":"plugin:ci-equations","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:23.959Z","started_at":"2020-03-03T17:00:09.096Z","finished_at":"2020-03-03T17:08:03.224Z","duration":474.12874,"queued_duration":1.460778,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941908","artifacts":[{"file_type":"trace","size":91220,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":457941906,"status":"success","stage":"stage-2","name":"plugin:ci-elpi","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:23.938Z","started_at":"2020-03-03T17:00:08.980Z","finished_at":"2020-03-03T17:05:44.741Z","duration":335.761556,"queued_duration":1.447388,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941906","artifacts":[{"file_type":"trace","size":284137,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":457941904,"status":"success","stage":"stage-2","name":"plugin:ci-coqhammer","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:23.918Z","started_at":"2020-03-03T17:00:08.931Z","finished_at":"2020-03-03T17:03:49.462Z","duration":220.530869,"queued_duration":1.535071,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941904","artifacts":[{"file_type":"trace","size":42482,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":457941902,"status":"success","stage":"stage-2","name":"plugin:ci-coq_dpdgraph","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:23.897Z","started_at":"2020-03-03T17:00:08.881Z","finished_at":"2020-03-03T17:03:40.257Z","duration":211.37622,"queued_duration":1.722292,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941902","artifacts":[{"file_type":"trace","size":47606,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":457941900,"status":"success","stage":"stage-2","name":"plugin:ci-bignums","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:23.878Z","started_at":"2020-03-03T17:15:50.647Z","finished_at":"2020-03-03T17:20:24.698Z","duration":274.050975,"queued_duration":2.745114,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941900","artifacts":[{"file_type":"trace","size":48656,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":457941898,"status":"success","stage":"stage-2","name":"plugin:ci-aac_tactics","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:23.858Z","started_at":"2020-03-03T17:00:08.827Z","finished_at":"2020-03-03T17:03:19.064Z","duration":190.236865,"queued_duration":1.729402,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941898","artifacts":[{"file_type":"trace","size":53935,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":457941896,"status":"success","stage":"stage-2","name":"library:ci-vst","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:23.840Z","started_at":"2020-03-03T17:15:50.590Z","finished_at":"2020-03-03T18:28:45.920Z","duration":4375.329642,"queued_duration":2.765259,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941896","artifacts":[{"file_type":"trace","size":175974,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":457941895,"status":"success","stage":"stage-2","name":"library:ci-verdi-raft","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:23.817Z","started_at":"2020-03-03T17:15:50.469Z","finished_at":"2020-03-03T17:47:52.543Z","duration":1922.074039,"queued_duration":2.718176,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941895","artifacts":[{"file_type":"trace","size":177131,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":457941893,"status":"success","stage":"stage-2","name":"library:ci-unimath","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:23.799Z","started_at":"2020-03-03T17:15:50.418Z","finished_at":"2020-03-03T18:11:04.384Z","duration":3313.966524,"queued_duration":2.730193,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941893","artifacts":[{"file_type":"trace","size":246559,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":457941891,"status":"success","stage":"stage-2","name":"library:ci-tlc","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:23.781Z","started_at":"2020-03-03T17:00:08.649Z","finished_at":"2020-03-03T17:04:38.037Z","duration":269.387987,"queued_duration":1.61775,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941891","artifacts":[{"file_type":"trace","size":37251,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":457941890,"status":"success","stage":"stage-2","name":"library:ci-stdlib2","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:23.759Z","started_at":"2020-03-03T17:15:50.357Z","finished_at":"2020-03-03T17:19:30.049Z","duration":219.691328,"queued_duration":2.740297,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941890","artifacts":[{"file_type":"trace","size":40456,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":457941889,"status":"success","stage":"stage-2","name":"library:ci-sf","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:23.738Z","started_at":"2020-03-03T17:00:08.414Z","finished_at":"2020-03-03T17:05:02.167Z","duration":293.752996,"queued_duration":1.444826,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941889","artifacts":[{"file_type":"trace","size":437517,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":457941888,"status":"success","stage":"stage-2","name":"library:ci-math-comp","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:23.717Z","started_at":"2020-03-03T17:15:50.176Z","finished_at":"2020-03-03T18:34:26.038Z","duration":4715.861144,"queued_duration":2.629989,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941888","artifacts":[{"file_type":"trace","size":922863,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":457941887,"status":"success","stage":"stage-2","name":"library:ci-iris-lambda-rust","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:23.691Z","started_at":"2020-03-03T17:15:50.041Z","finished_at":"2020-03-03T18:00:32.107Z","duration":2682.066499,"queued_duration":2.567841,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941887","artifacts":[{"file_type":"trace","size":534046,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":457941886,"status":"success","stage":"stage-2","name":"library:ci-hott","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:23.667Z","started_at":"2020-03-03T17:00:08.031Z","finished_at":"2020-03-03T17:11:14.979Z","duration":666.948443,"queued_duration":1.122955,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941886","artifacts":[{"file_type":"trace","size":128604,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":457941884,"status":"success","stage":"stage-2","name":"library:ci-geocoq","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:23.634Z","started_at":"2020-03-03T17:15:49.747Z","finished_at":"2020-03-03T17:50:30.447Z","duration":2080.699251,"queued_duration":2.343285,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941884","artifacts":[{"file_type":"trace","size":513247,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":457941883,"status":"success","stage":"stage-2","name":"library:ci-flocq","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:23.606Z","started_at":"2020-03-03T17:00:07.940Z","finished_at":"2020-03-03T17:06:41.965Z","duration":394.024982,"queued_duration":1.091516,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941883","artifacts":[{"file_type":"trace","size":37502,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":457941881,"status":"success","stage":"stage-2","name":"library:ci-fcsl-pcm","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:23.570Z","started_at":"2020-03-03T17:00:07.792Z","finished_at":"2020-03-03T17:04:58.946Z","duration":291.154219,"queued_duration":1.0039,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941881","artifacts":[{"file_type":"trace","size":143637,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":457941880,"status":"success","stage":"stage-2","name":"library:ci-cross-crypto","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:23.540Z","started_at":"2020-03-03T17:00:07.736Z","finished_at":"2020-03-03T17:39:04.021Z","duration":2336.285296,"queued_duration":1.004387,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941880","artifacts":[{"file_type":"trace","size":51379,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":457941879,"status":"success","stage":"stage-2","name":"library:ci-coquelicot","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:23.508Z","started_at":"2020-03-03T17:00:07.688Z","finished_at":"2020-03-03T17:06:04.447Z","duration":356.758981,"queued_duration":1.014994,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941879","artifacts":[{"file_type":"trace","size":181767,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":457941876,"status":"success","stage":"stage-2","name":"library:ci-compcert","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:23.436Z","started_at":"2020-03-03T17:15:49.607Z","finished_at":"2020-03-03T17:37:08.633Z","duration":1279.026323,"queued_duration":2.260108,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941876","artifacts":[{"file_type":"trace","size":4194360,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":null,"tag_list":[]}
{"id":457941874,"status":"success","stage":"stage-2","name":"library:ci-bedrock2","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:23.388Z","started_at":"2020-03-03T17:15:49.463Z","finished_at":"2020-03-03T18:39:46.862Z","duration":5037.398745,"queued_duration":2.180825,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941874","artifacts":[{"file_type":"trace","size":327449,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":457941873,"status":"success","stage":"stage-2","name":"library:ci-argosy","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:23.369Z","started_at":"2020-03-03T17:00:07.635Z","finished_at":"2020-03-03T17:04:28.418Z","duration":260.783221,"queued_duration":1.021408,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941873","artifacts":[{"file_type":"trace","size":31597,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":457941872,"status":"success","stage":"stage-2","name":"validate:quick","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:23.344Z","started_at":"2020-03-03T17:02:12.539Z","finished_at":"2020-03-03T17:07:16.563Z","duration":304.024416,"queued_duration":1.591016,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941872","artifacts":[{"file_type":"trace","size":68889,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-02T17:07:15.556Z","tag_list":[]}
{"id":457941871,"status":"success","stage":"stage-2","name":"validate:edge+flambda","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:23.319Z","started_at":"2020-03-03T17:15:49.413Z","finished_at":"2020-03-03T17:20:30.914Z","duration":281.500807,"queued_duration":2.196894,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941871","artifacts":[{"file_type":"trace","size":69639,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-02T17:20:29.452Z","tag_list":[]}
{"id":457941870,"status":"success","stage":"stage-2","name":"validate:base+32bit","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:23.293Z","started_at":"2020-03-03T17:00:06.831Z","finished_at":"2020-03-03T17:05:14.385Z","duration":307.554204,"queued_duration":1.474486,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941870","artifacts":[{"file_type":"trace","size":67581,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-02T17:05:13.208Z","tag_list":[]}
{"id":457941869,"status":"success","stage":"stage-2","name":"validate:base","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:23.267Z","started_at":"2020-03-03T17:00:07.510Z","finished_at":"2020-03-03T17:05:08.029Z","duration":300.519302,"queued_duration":0.981985,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941869","artifacts":[{"file_type":"trace","size":68949,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-02T17:05:06.437Z","tag_list":[]}
{"id":457941868,"status":"success","stage":"stage-2","name":"test-suite:base+async","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-03-03T16:42:23.239Z","started_at":"2020-03-03T17:00:07.466Z","finished_at":"2020-03-03T17:38:26.273Z","duration":2298.806615,"queued_duration":1.025508,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941868","artifacts":[{"file_type":"trace","size":93992,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":457941867,"status":"success","stage":"stage-2","name":"test-suite:edge:dune:dev","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:23.210Z","started_at":"2020-03-03T17:02:12.446Z","finished_at":"2020-03-03T17:26:47.589Z","duration":1475.143529,"queued_duration":1.553563,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941867","artifacts":[{"file_type":"trace","size":94452,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":457941865,"status":"success","stage":"stage-2","name":"test-suite:edge+flambda","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:23.181Z","started_at":"2020-03-03T17:15:49.363Z","finished_at":"2020-03-03T17:39:02.742Z","duration":1393.37898,"queued_duration":2.22911,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941865","artifacts":[{"file_type":"trace","size":94618,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":457941863,"status":"success","stage":"stage-2","name":"test-suite:base+32bit","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:23.151Z","started_at":"2020-03-03T17:00:06.681Z","finished_at":"2020-03-03T17:20:20.215Z","duration":1213.534109,"queued_duration":1.385826,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941863","artifacts":[{"file_type":"trace","size":92623,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":457941860,"status":"success","stage":"stage-2","name":"test-suite:base","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:23.116Z","started_at":"2020-03-03T17:00:07.159Z","finished_at":"2020-03-03T17:21:09.615Z","duration":1262.455753,"queued_duration":0.790831,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941860","artifacts":[{"file_type":"trace","size":93865,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":457941856,"status":"success","stage":"stage-2","name":"doc:ml-api:odoc","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:23.080Z","started_at":"2020-03-03T17:02:11.687Z","finished_at":"2020-03-03T17:06:38.172Z","duration":266.485371,"queued_duration":0.854681,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941856","artifacts":[{"file_type":"trace","size":76324,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-02T17:06:36.016Z","tag_list":[]}
{"id":457941855,"status":"success","stage":"stage-2","name":"doc:stdlib:dune","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:23.044Z","started_at":"2020-03-03T17:02:11.629Z","finished_at":"2020-03-03T17:07:09.074Z","duration":297.445823,"queued_duration":0.866201,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941855","artifacts":[{"file_type":"trace","size":26178,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-02T17:07:06.897Z","tag_list":[]}
{"id":457941854,"status":"success","stage":"stage-2","name":"doc:refman:dune","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:23.006Z","started_at":"2020-03-03T17:02:11.459Z","finished_at":"2020-03-03T17:09:31.574Z","duration":440.11477,"queued_duration":0.754053,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941854","artifacts":[{"file_type":"trace","size":25735,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-02T17:09:29.965Z","tag_list":[]}
{"id":457941853,"status":"success","stage":"stage-2","name":"doc:refman","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:22.980Z","started_at":"2020-03-03T17:00:07.108Z","finished_at":"2020-03-03T17:07:40.918Z","duration":453.810712,"queued_duration":0.812905,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941853","artifacts":[{"file_type":"trace","size":1418103,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-05-02T17:07:39.256Z","tag_list":[]}
{"id":457941851,"status":"success","stage":"stage-1","name":"plugin:plugin-tutorial","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:22.923Z","started_at":"2020-03-03T16:42:27.374Z","finished_at":"2020-03-03T16:47:11.699Z","duration":284.325265,"queued_duration":2.158914,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941851","artifacts":[{"file_type":"trace","size":57819,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":457941850,"status":"success","stage":"stage-1","name":"pkg:nix","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:22.894Z","started_at":"2020-03-03T16:42:26.657Z","finished_at":"2020-03-03T17:25:27.777Z","duration":2581.120235,"queued_duration":1.517143,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941850","artifacts":[{"file_type":"trace","size":580925,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":457941849,"status":"success","stage":"stage-1","name":"pkg:opam","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:22.868Z","started_at":"2020-03-03T16:42:26.466Z","finished_at":"2020-03-03T17:07:55.989Z","duration":1529.522962,"queued_duration":1.413349,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941849","artifacts":[{"file_type":"trace","size":20559,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":457941848,"status":"success","stage":"stage-1","name":"lint","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:22.840Z","started_at":"2020-03-03T16:42:26.408Z","finished_at":"2020-03-03T16:48:14.388Z","duration":347.979572,"queued_duration":1.39871,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941848","artifacts":[{"file_type":"trace","size":37059,"filename":"job.log","file_format":null}],"runner":{"id":380987,"description":"shared-runners-manager-6.gitlab.com","ip_address":"34.74.239.13","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":null,"tag_list":[]}
{"id":457941846,"status":"success","stage":"stage-1","name":"windows64","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:22.807Z","started_at":"2020-03-03T17:29:31.335Z","finished_at":"2020-03-03T18:30:31.642Z","duration":3660.306723,"queued_duration":2826.363253,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941846","artifacts":[{"file_type":"trace","size":247264,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-03-10T18:30:30.467Z","tag_list":["windows-inria"]}
{"id":457941844,"status":"success","stage":"stage-1","name":"build:quick","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-03-03T16:42:22.782Z","started_at":"2020-03-03T16:42:26.303Z","finished_at":"2020-03-03T17:02:10.802Z","duration":1184.499119,"queued_duration":1.395191,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941844","artifacts":[{"file_type":"trace","size":193835,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-03-10T17:02:08.906Z","tag_list":[]}
{"id":457941842,"status":"success","stage":"stage-1","name":"build:base+async","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":true,"created_at":"2020-03-03T16:42:22.759Z","started_at":"2020-03-03T16:42:26.167Z","finished_at":"2020-03-03T17:46:20.111Z","duration":3833.944759,"queued_duration":1.349279,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941842","artifacts":[{"file_type":"trace","size":274506,"filename":"job.log","file_format":null}],"runner":{"id":44028,"description":"shared-runners-manager-3.gitlab.com","ip_address":"35.196.21.178","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-03-10T17:46:18.609Z","tag_list":[]}
{"id":457941839,"status":"success","stage":"stage-1","name":"build:edge+flambda:dune:dev","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:22.739Z","started_at":"2020-03-03T16:42:26.089Z","finished_at":"2020-03-03T17:02:10.516Z","duration":1184.426132,"queued_duration":1.326403,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941839","artifacts":[{"file_type":"trace","size":20623,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-03-10T17:02:07.793Z","tag_list":[]}
{"id":457941837,"status":"success","stage":"stage-1","name":"build:edge+flambda","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:22.719Z","started_at":"2020-03-03T16:42:25.918Z","finished_at":"2020-03-03T17:15:46.990Z","duration":2001.072275,"queued_duration":1.226163,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941837","artifacts":[{"file_type":"trace","size":308764,"filename":"job.log","file_format":null}],"runner":null,"artifacts_expire_at":"2020-03-10T17:15:44.648Z","tag_list":[]}
{"id":457941835,"status":"success","stage":"stage-1","name":"build:base+32bit","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:22.697Z","started_at":"2020-03-03T16:42:25.833Z","finished_at":"2020-03-03T17:00:05.119Z","duration":1059.286663,"queued_duration":1.20604,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941835","artifacts":[{"file_type":"trace","size":268661,"filename":"job.log","file_format":null}],"runner":{"id":44949,"description":"shared-runners-manager-4.gitlab.com","ip_address":"13.37.237.197","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-03-10T17:00:03.080Z","tag_list":[]}
{"id":457941834,"status":"success","stage":"stage-1","name":"build:base","ref":"pr-11429","tag":false,"coverage":null,"allow_failure":false,"created_at":"2020-03-03T16:42:22.677Z","started_at":"2020-03-03T16:42:25.393Z","finished_at":"2020-03-03T17:00:06.145Z","duration":1060.751484,"queued_duration":0.838446,"user":{"id":2256237,"username":"coqbot","name":"coqbot","state":"active","avatar_url":"https://gitlab.com/uploads/-/system/user/avatar/2256237/avatar.png","web_url":"https://gitlab.com/coqbot","created_at":"2018-04-28T07:53:57.210Z","bio":"Hello, I'm a bot.","location":"","public_email":"","skype":"","linkedin":"","twitter":"","website_url":"","organization":"","job_title":"","pronouns":null,"bot":false,"work_information":null,"followers":0,"following":0,"local_time":null},"commit":{"id":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","short_id":"b389b6e3","created_at":"2020-03-03T17:41:17.000+01:00","parent_ids":["18aa9ca60ec9b3d1712276ec0c615dfe54c1a251"],"title":"[zify] efficiency improvements","message":"[zify] efficiency improvements\n\n- zify_iter_specs is entirely in OCaml\n- zify_op has been improved\n  * The generation of proof-terms is more direct\n  * It does not `rewrite` but instead either performs\n    a `pose proof` or a `change`\n  * The support for `and`, `or`, `not`, arrow is hardcoded\n  * Avoid generating duplicate hypotheses such as 0 <= Z.of_nat x\n- zify_elim_let is entirely in OCaml (no Ltac callback)\n\n[micromega] fix stack overflow\n\nLess naive computation of bounds (online elimination of duplicates)\n","author_name":"Frédéric Besson","author_email":"frederic.besson@inria.fr","authored_date":"2020-01-20T15:55:13.000+01:00","committer_name":"Frédéric Besson","committer_email":"frederic.besson@inria.fr","committed_date":"2020-03-03T17:41:17.000+01:00","trailers":{},"web_url":"https://gitlab.com/coq/coq/-/commit/b389b6e3b6754f9f12190bfd2c0e7f68783b582f"},"pipeline":{"id":122931105,"iid":14126,"project_id":6138686,"sha":"b389b6e3b6754f9f12190bfd2c0e7f68783b582f","ref":"pr-11429","status":"success","source":"push","created_at":"2020-03-03T16:42:22.653Z","updated_at":"2020-03-03T19:28:50.764Z","web_url":"https://gitlab.com/coq/coq/-/pipelines/122931105"},"web_url":"https://gitlab.com/coq/coq/-/jobs/457941834","artifacts":[{"file_type":"trace","size":318872,"filename":"job.log","file_format":null}],"runner":{"id":380986,"description":"shared-runners-manager-5.gitlab.com","ip_address":"34.74.209.140","active":true,"paused":false,"is_shared":true,"runner_type":"instance_type","name":"gitlab-runner","online":false,"status":"stale"},"artifacts_expire_at":"2020-03-10T17:00:04.008Z","tag_list":[]}
