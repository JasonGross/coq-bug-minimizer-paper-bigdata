[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524526","html_url":"https://github.com/coq/coq/issues/3641#issuecomment-337524526","issue_url":"https://api.github.com/repos/coq/coq/issues/3641","id":337524526,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNDUyNg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-09-18T09:03:41Z","updated_at":"2017-10-18T09:32:43Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\n(* File reduced by coq-bug-finder from original input, then from 7593 lines to 243 lines, then from 256 lines to 102 lines, then from\\\n 104 lines to 28 lines *)\n(* coqc version trunk (September 2014) compiled on Sep 17 2014 0:22:30 with OCaml 4.01.0\n   coqtop version cagnode16:/afs/csail.mit.edu/u/j/jgross/coq-trunk,trunk (d34e1eed232c84590ddb80d70db9f7f7cf13584a) *)\nSet Primitive Projections.\nSet Implicit Arguments.\nRecord prod (A B : Type) := pair { fst : A ; snd : B }.\nNotation \"x * y\" := (prod x y) : type_scope.\nNotation \"( x , y , .. , z )\" := (pair .. (pair x y) .. z) : core_scope.\nClass UnitSubuniverse := { O : Type -> Type ; O_unit : forall T, T -> O T }.\nClass ReflectiveSubuniverse := { rsubu_usubu : UnitSubuniverse ; O_rectnd : forall {P Q : Type} (f : P -> Q), O P -> Q }.\nGlobal Existing Instance rsubu_usubu.\nContext {subU : ReflectiveSubuniverse}.\nGoal forall (A B : Type) (x : O A * O B) (x0 : B),\n       { g : _ & O_rectnd (fun z : A * B => (O_unit (fst z), O_unit (snd z)))\n                          (O_rectnd (fun a : A => O_unit (a, x0)) (fst x)) =\n                 g x0 }.\n  eexists.\n  match goal with\n    | [ |- context[?e] ] => is_evar e; let e' := fresh \"e'\" in pose (e' := e)\n  end.\n  change ?g with e'. (* Stack overflow *)\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524526/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524530","html_url":"https://github.com/coq/coq/issues/3641#issuecomment-337524530","issue_url":"https://api.github.com/repos/coq/coq/issues/3641","id":337524530,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNDUzMA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-09-18T19:55:57Z","updated_at":"2017-10-18T09:32:43Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nThis seems to be due to change ?g interpreting ?g as a MatchingVar evar hence as a Meta g, while it's really not once out of the context[?e] expression.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524530/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524531","html_url":"https://github.com/coq/coq/issues/3641#issuecomment-337524531","issue_url":"https://api.github.com/repos/coq/coq/issues/3641","id":337524531,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNDUzMQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-09-19T08:41:58Z","updated_at":"2017-10-18T09:32:43Z","author_association":"CONTRIBUTOR","body":"Comment author: @herbelin\n\nActually, the bug is not related to the support for parsing evars. It comes from r16525 in May 2013.\n\nStill, there is a question about whether we allow to refer to existing evars in the pattern given to change. As of today, ?g is not interpreted as the existing evar ?g but as a fresh hole. This raises the question whether we give a different syntax to ?g as an existing evar and ?g as a fresh hole, or whether we don't introduce new syntax but interpret ?g possibly as an existing evar and otherwise as a fresh hole.\n\nFixed in trunk (not present in 8.4).\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524531/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524532","html_url":"https://github.com/coq/coq/issues/3641#issuecomment-337524532","issue_url":"https://api.github.com/repos/coq/coq/issues/3641","id":337524532,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNDUzMg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-09-19T09:25:12Z","updated_at":"2017-10-18T09:32:43Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nMaybe existing evars should get a different syntax ([??g], or [?g?] or something else entirely?) so they can be used unambiguously in patterns?\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524532/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]