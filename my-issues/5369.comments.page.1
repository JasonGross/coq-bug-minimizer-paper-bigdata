[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337551466","html_url":"https://github.com/coq/coq/issues/5369#issuecomment-337551466","issue_url":"https://api.github.com/repos/coq/coq/issues/5369","id":337551466,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1MTQ2Ng==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-02-27T19:02:11Z","updated_at":"2020-08-24T16:15:26Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\r\n\r\n```coq\r\nRequire Import Coq.Classes.Morphisms Coq.Setoids.Setoid.\r\nAxiom f g : nat -> nat -> nat.\r\nAxiom Hfg : forall n m, n = n -> f n m = g n m.\r\nAxiom LetIn : forall {A B} (x : A) (f : A -> B), B.\r\nAxiom LetIn_Proper : forall A B, Proper (eq ==> pointwise_relation _ eq ==> eq) \r\n(@ LetIn A B).\r\nExisting Instance LetIn_Proper.\r\nGoal forall n, LetIn n (fun n' => f 1 n') = LetIn n (fun n' => g 1 n').\r\nProof.\r\n  intros.\r\n  Fail setoid_rewrite Hfg. (* The command has indeed failed with message:\r\n         Ltac call to \"setoid_rewrite (orient) (glob_constr_with_bindings)\" \r\nfailed.\r\n         Tactic failure: setoid rewrite failed: Nothing to rewrite. *) (* why \r\ndoes this fail?  I think it should not *)\r\n  setoid_rewrite (fun n m => @ Hfg n m eq_refl).\r\n  Undo.\r\n  apply LetIn_Proper; [ reflexivity | intro ].\r\n  setoid_rewrite Hfg.\r\n```\r\n\r\n\r\nThe following failure is a bit less surprising, but I think it should still \r\nwork in this case, because the bound variables should be accessible to be named \r\nin the side condition by the time the lemma is used:\r\n```coq\r\nRequire Import Coq.Classes.Morphisms Coq.Setoids.Setoid.\r\nAxiom f g : nat -> nat -> nat.\r\nAxiom Hfg : forall n m, n = m -> f n m = g n m.\r\nAxiom LetIn : forall {A B} (x : A) (f : A -> B), B.\r\nAxiom LetIn_Proper : forall A B, Proper (eq ==> pointwise_relation _ eq ==> eq) \r\n(@ LetIn A B).\r\nExisting Instance LetIn_Proper.\r\nGoal forall n, LetIn n (fun n' => f n' n') = LetIn n (fun n' => g n' n').\r\nProof.\r\n  intros.\r\n  Fail setoid_rewrite Hfg. (* The command has indeed failed with message:\r\n         Ltac call to \"setoid_rewrite (orient) (glob_constr_with_bindings)\" \r\nfailed.\r\n         Tactic failure: setoid rewrite failed: Nothing to rewrite. *) (* I \r\nthink this should also succeed *)\r\n  setoid_rewrite (fun n => @ Hfg n n eq_refl).\r\n  Undo.\r\n  apply LetIn_Proper; [ reflexivity | intro ].\r\n  setoid_rewrite Hfg.\r\n```","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337551466/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337551468","html_url":"https://github.com/coq/coq/issues/5369#issuecomment-337551468","issue_url":"https://api.github.com/repos/coq/coq/issues/5369","id":337551468,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1MTQ2OA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-02-27T19:51:42Z","updated_at":"2017-10-18T10:55:05Z","author_association":"CONTRIBUTOR","body":"Comment author: @psteckler\n\nDid you mean \"n = m\" instead of \"n = n\" on line 3 of this script?\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337551468/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337551470","html_url":"https://github.com/coq/coq/issues/5369#issuecomment-337551470","issue_url":"https://api.github.com/repos/coq/coq/issues/5369","id":337551470,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1MTQ3MA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-02-27T20:00:14Z","updated_at":"2017-10-18T10:55:05Z","author_association":"CONTRIBUTOR","body":"Comment author: @psteckler\n\n(In reply to Paul Steckler from comment [BZ#1](https://github.com/coq/coq/issues?q=is%3Aissue%20%22Original%20bug%20ID%3A%20BZ%231%22))\n> Did you mean \"n = m\" instead of \"n = n\" on line 3 of this script?\n\nNo, you didn't.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337551470/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337551471","html_url":"https://github.com/coq/coq/issues/5369#issuecomment-337551471","issue_url":"https://api.github.com/repos/coq/coq/issues/5369","id":337551471,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1MTQ3MQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-03-23T16:23:13Z","updated_at":"2017-10-18T10:55:05Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nIndeed the side conditions should be handled correctly.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337551471/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]