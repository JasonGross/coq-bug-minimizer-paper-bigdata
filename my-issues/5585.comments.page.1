[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337554836","html_url":"https://github.com/coq/coq/issues/5585#issuecomment-337554836","issue_url":"https://api.github.com/repos/coq/coq/issues/5585","id":337554836,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1NDgzNg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-06-05T20:32:52Z","updated_at":"2018-03-09T15:50:29Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\r\n\r\nI'd like this to work:\r\n```coq\r\n\r\nSection with_state.\r\n  (** TODO: MOVE ME *)\r\n  Local Notation \"'return' x\" := (fun {T} (continuation:_->T) => continuation\r\n                                                                   x) (at level \r\n70).\r\n  Local Notation \"~> R\" := (forall {T} (_:R->T), T) (at level 70).\r\n  Local Notation \"A ~> R\" := (forall (_:A) {T} (_:R->T), T) (at level 99).\r\n\r\n  Context {state : Type}.\r\n\r\n  Definition loop_cps_step\r\n             (loop_cps\r\n              : forall (max_iter : nat)\r\n                       (initial : state)\r\n                       (body : state -> forall {T} (continue : state -> T)\r\n                                               (break : state -> T), T),\r\n                 ~> state)\r\n             (max_iter : nat)\r\n    : forall (initial : state)\r\n             (body : state -> forall {T} (continue : state -> T) (break : state\r\n                                                                          -> \r\nT), T),\r\n      ~> state\r\n    := fun st body\r\n       => match max_iter with\r\n          | 0\r\n            => (return st)\r\n          | S max_iter'\r\n            => fun T ret\r\n               => body st T (fun st' => @ loop_cps max_iter' st' body _ ret) ret\r\n          end.\r\n\r\n  Fixpoint loop_cps (max_iter : nat)\r\n    : forall (initial : state)\r\n             (body : state -> forall {T} (continue : state -> T) (break : state\r\n                                                                          -> \r\nT), T),\r\n      ~> state\r\n    := loop_cps_step loop_cps max_iter.\r\nEnd with_state.\r\n\r\nNotation \"'loop' _{ fuel } ( state = initial ) 'via' ( continue , break ) {{ \r\nbody }} ; rest\"\r\n  := (@ loop_cps _ fuel initial\r\n                (fun state T continue break => body)\r\n                _ (fun state => rest))\r\n       (at level 200, state binder, rest at level 10,\r\n        format \"'[v  ' 'loop' _{ fuel }  ( state  =  initial )  'via'  ( \r\ncontinue ,  break )  {{ '//' body ']' '//' }} ; '//' rest\").\r\n\r\nCheck loop _{ 10 } ('(a, b) = (0, 0)) via (continue, break) {{ continue (a + 1, \r\nb+1) }} ; a + b.\r\n\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337554836/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337554838","html_url":"https://github.com/coq/coq/issues/5585#issuecomment-337554838","issue_url":"https://api.github.com/repos/coq/coq/issues/5585","id":337554838,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1NDgzOA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-08-05T16:29:56Z","updated_at":"2017-10-18T11:05:33Z","author_association":"CONTRIBUTOR","body":"Comment author: @tchajed\n\n+1 for this feature request; I also have a recursive binder in a notation that only type checks if there's one binding so that I can support patterns in binders.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337554838/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/371857147","html_url":"https://github.com/coq/coq/issues/5585#issuecomment-371857147","issue_url":"https://api.github.com/repos/coq/coq/issues/5585","id":371857147,"node_id":"MDEyOklzc3VlQ29tbWVudDM3MTg1NzE0Nw==","user":{"login":"herbelin","id":460771,"node_id":"MDQ6VXNlcjQ2MDc3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/460771?v=4","gravatar_id":"","url":"https://api.github.com/users/herbelin","html_url":"https://github.com/herbelin","followers_url":"https://api.github.com/users/herbelin/followers","following_url":"https://api.github.com/users/herbelin/following{/other_user}","gists_url":"https://api.github.com/users/herbelin/gists{/gist_id}","starred_url":"https://api.github.com/users/herbelin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/herbelin/subscriptions","organizations_url":"https://api.github.com/users/herbelin/orgs","repos_url":"https://api.github.com/users/herbelin/repos","events_url":"https://api.github.com/users/herbelin/events{/privacy}","received_events_url":"https://api.github.com/users/herbelin/received_events","type":"User","site_admin":false},"created_at":"2018-03-09T16:08:28Z","updated_at":"2018-03-09T16:08:28Z","author_association":"MEMBER","body":"Granted in #982.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/371857147/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]