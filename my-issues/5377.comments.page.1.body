Comment author: @JasonGross

This code works in Coq 8.4pl6, but fails in Coq 8.5, 8.6

Goal ((forall (t : Set) (x y : t),
          True ->
          x = y)) -> False.
  clear; intro HG.
  lazymatch goal with
  | [ H : (forall t x y, True -> _)
      |- _ ]
    => idtac H
  end.
  lazymatch goal with
  | [ H : forall t x y, True -> @ ?P t x y
                        |- _ ]
    => idtac
  end.


Comment author: @JasonGross

Bisecting gives

83159124ce222cb0d9811868d5a432d306c7d8f5 is the first bad commit
commit 83159124ce222cb0d9811868d5a432d306c7d8f5
Author: Pierre-Marie PÃ©drot <pierre-marie.pedrot@ inria.fr>
Date:   Tue Sep 2 18:26:09 2014 +0200

    Fixing bug [BZ#3136](https://github.com/coq/coq/issues?q=is%3Aissue%20%22Original%20bug%20ID%3A%20BZ%233136%22).

    Second-order pattern-matching now respect variable abstraction order.

:040000 040000 2df647f2768e0de8120b690586e23731945583ca 
96997377c7c14abdda17651ccb4c689b41fb4cd9 M      pretyping


Comment author: @JasonGross

By the way, I bisected with:

(* -*- mode: coq; coq-prog-args: ("-emacs" "-nois" "-boot") -*- *)
Axiom eq : forall {T} (_ : T), Prop.
Goal forall _ : (forall t (x : t) (_ : Set), eq x), Prop.
  intro.
  lazymatch goal with
  | [ H : forall t x (_ : Set), _ |- _ ]
    => idtac H
  end.
  lazymatch goal with
  | [ H : forall t x (_ : Set), @ ?P t x |- _ ]
    => idtac
  end.
Admitted.


Comment author: @ppedrot

https://github.com/coq/coq/pull/567


Comment author: @maximedenes

PMP's fix merged in 8.6 branch. Thanks!


