[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337542687","html_url":"https://github.com/coq/coq/issues/4748#issuecomment-337542687","issue_url":"https://api.github.com/repos/coq/coq/issues/4748","id":337542687,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0MjY4Nw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-05-23T03:58:00Z","updated_at":"2017-10-18T10:26:23Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nThe setoid_rewrite error messages are essentially useless.  At the very least, they should mention \"Set Typeclasses Debug\".  Better, they should list the first and final inferred instance for each top-level [Proper] class problem, noting which ones had no inferrable instances.  I suspect this would handle something like 80% of the cases I run into.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337542687/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337542689","html_url":"https://github.com/coq/coq/issues/4748#issuecomment-337542689","issue_url":"https://api.github.com/repos/coq/coq/issues/4748","id":337542689,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0MjY4OQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-06-23T19:40:46Z","updated_at":"2017-10-18T10:26:23Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\n*** Bug [BZ#4847](https://github.com/coq/coq/issues?q=is%3Aissue%20%22Original%20bug%20ID%3A%20BZ%234847%22) has been marked as a duplicate of this bug. ***\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337542689/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337542690","html_url":"https://github.com/coq/coq/issues/4748#issuecomment-337542690","issue_url":"https://api.github.com/repos/coq/coq/issues/4748","id":337542690,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0MjY5MA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-08-05T19:06:09Z","updated_at":"2017-10-18T10:26:23Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nHere is a simple strategy for creating better setoid_rewrite error messages:\n\n1. Add an option [Set SetoidRewrite Timeout n] such that, if [setoid_rewrite] \ntakes longer than [n] seconds, it will fail with an error message about what it \nwas unable to resolve in that time, as specificed in steps 2 and 3.\n\n2. Write this code:\nLtac evar_to_underscore term :=\n  let is_ev := constr:(ltac:(first [ is_evar term; exact true | exact false ])) \nin\n  let has_ev := constr:(ltac:(first [ has_evar term; exact true | exact false \n])) in\n  lazymatch has_ev with\n  | false => term\n  | true\n    => lazymatch is_ev with\n       | true => uconstr:(_)\n       | false\n         => lazymatch term with\n            | ?f ?x\n              => let f' := evar_to_underscore f in\n                 let x' := evar_to_underscore x in\n                 uconstr:(f' x')\n            | _ => term\n            end\n       end\n  end.\nLtac Morphisms.proper_subrelation ::=\n  match goal with\n    [ H : Morphisms.apply_subrelation |- ?G ] => clear H ;\n                                       Init.class_apply \n@ Morphisms.subrelation_proper;\n                                       [ let G' := evar_to_underscore G in\n                                         idtac \"Warning: No direct instance \nfor\" G' | .. ]\n  end.\n\n3. In any block of existential instance that fails to resolve, print the first \nsuch Warning, preferably including the top-level subgoal number (so, e.g., 3, \nin \"Debug: 3.1.4.1.5.9:\")\n\nAlternatively, stick such a printing in partial_application_tactic, but I think \nit works better in proper_subrelation.\n\nThis is based on the assumption that, generally, if a Proper instance fails to \nresolve, then it is because you're missing an explicit instance for that \nfunction, and you want to give the most general form possible.\n\nI'm not sure if you want to modify proper_subrelation, or add a hook into the \nsetoid_rewrite machinery, or something, but this sort of printout is massively \nbetter than the current \"Could not resolve existential instances\" or whatever, \nwith a blob of subgoals which are hard to decipher.  It might make sense to \nleave the current printout as a \"more verbose\" error message option, but I've \nyet to meet anyone (including myself) who gleans useful information from the \ncurrent error message, where as this error message would cut my setoid_rewrite \ndebugging time by roughly an order of magnitude.\n\nN.B. A friend of mine wrote a Python script implementing a similar strategy at \nhttps://github.com/asya-bergal/setoid_rewrite_debug/blob/master/setoid_rewrite_debug.py.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337542690/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]