[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337541122","html_url":"https://github.com/coq/coq/issues/4637#issuecomment-337541122","issue_url":"https://api.github.com/repos/coq/coq/issues/4637","id":337541122,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0MTEyMg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-03-21T20:31:12Z","updated_at":"2017-10-18T10:21:21Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nIf I do something like [set (x := y); vm_compute in x; subst x], there's no vm_cast inserted in the proof term.  This can cause [Defined] to be very slow.  If it's useful, I can try to come up with a test case, though I'm having trouble finding a small example where it matters whether [Defined] does [vm_compute] vs it's normal strategy.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337541122/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337541123","html_url":"https://github.com/coq/coq/issues/4637#issuecomment-337541123","issue_url":"https://api.github.com/repos/coq/coq/issues/4637","id":337541123,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0MTEyMw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-03-23T02:21:00Z","updated_at":"2017-10-18T10:21:21Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nCreated attachment 687\n`make src/Parsers/Refinement/SharpenedJSON.vo`\n\nThe first [Defined] in src/Parsers/Refinement/SharpenedJSON.v takes 40 minutes in Coq 8.4pl6.  If I make sure that the VMCasts are inserted (see bug [BZ#4643](https://github.com/coq/coq/issues?q=is%3Aissue%20%22Original%20bug%20ID%3A%20BZ%234643%22)), then it only takes 2 minutes.\n\n> Attached file: [bug_4637.zip](https://coq.inria.fr/bugfiles/attachment.cgi?id=687) (application/x-zip-compressed, 953084 bytes)\n> Description:   `make src/Parsers/Refinement/SharpenedJSON.vo`\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337541123/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337541124","html_url":"https://github.com/coq/coq/issues/4637#issuecomment-337541124","issue_url":"https://api.github.com/repos/coq/coq/issues/4637","id":337541124,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0MTEyNA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-03-23T12:42:50Z","updated_at":"2017-10-18T10:21:21Z","author_association":"CONTRIBUTOR","body":"Comment author: @silene\n\nHere is a small example where it matters (increase n if the issue is not noticeable).\n\nRequire Import Arith.\nGoal let n := 9 in fact n - fact n = 0.\nintro n.\nset (l := fact n - fact n).\nTime vm_compute in l.\nreflexivity.\nTime Defined.\n\nThe main issue with inserting vm_cast where it matters is that it is quite intricate to get it right. That is the reason why nobody tried to make it so. For instance, on the example above, \"vm_compute in l\" would have to behave as follows in order for vm_cast to reduce only the body of the let-in:\n\n(* vm_compute in l *)\ngeneralize (eq_refl (l = 0)).\ngeneralize (l = 0) at 2 3.\nintros P HP.\ngeneralize (eq_refl (fact n - fact n)).\ngeneralize (fact n - fact n) at 1.\nintros k Hk.\nrevert HP.\nrevert l.\nrewrite <- Hk.\nintros l HP.\nrevert Hk.\nTime vm_compute.\nintros Hk.\nrevert l HP.\nrewrite Hk.\nintros l HP.\nrewrite <- HP.\nclear k Hk P HP.\n\nIt is possible to make the code shorter (e.g. by using auxiliary lemmas), but this example should already make it apparent why it is not as simple as it might seem.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337541124/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337541125","html_url":"https://github.com/coq/coq/issues/4637#issuecomment-337541125","issue_url":"https://api.github.com/repos/coq/coq/issues/4637","id":337541125,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0MTEyNQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-03-29T14:29:28Z","updated_at":"2017-10-18T10:21:22Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nThanks for the shorter example!  Here's a generic-ish solution:\n\n(** Work around bug [BZ#4494](https://github.com/coq/coq/issues?q=is%3Aissue%20%22Original%20bug%20ID%3A%20BZ%234494%22), https://coq.inria.fr/bugs/show_bug.cgi?id=4494 (replace is slow and broken under binders *)\nLtac replace_with_at_by x y set_tac tac :=\n  let H := fresh in\n  let x' := fresh in\n  set_tac x' x;\n  assert (H : y = x') by (subst x'; tac);\n  clearbody x'; induction H.\n\nLtac replace_with_at x y set_tac :=\n  let H := fresh in\n  let x' := fresh in\n  set_tac x' x;\n  cut (y = x');\n  [ intro H; induction H\n  | subst x' ].\n\nLtac replace_with_vm_compute c :=\n  let c' := (eval vm_compute in c) in\n  (* we'd like to just do: *)\n  (* replace c with c' by (clear; abstract (vm_compute; reflexivity)) *)\n  (* but [set] is too slow in 8.4, so we write our own version (see https://coq.inria.fr/bugs/show_bug.cgi?id=3280#c13 *)\n  let set_tac := (fun x' x\n                  => pose x as x';\n                     change x with x') in\n  replace_with_at_by c c' set_tac ltac:(clear; vm_cast_no_check (eq_refl c')).\n\nLtac replace_with_vm_compute_in c H :=\n  let c' := (eval vm_compute in c) in\n  (* By constrast [set ... in ...] seems faster than [change .. with ... in ...] in 8.4?! *)\n  replace_with_at_by c c' ltac:(fun x' x => set (x' := x) in H ) ltac:(clear; vm_cast_no_check (eq_refl c')).\n\nRequire Import Arith.\nGoal let n := 9 in fact n - fact n = 0.\nintro n.\nset (l := fact n - fact n).\n(*Time vm_compute in l.*)\nTime replace_with_vm_compute_in (fact n - fact n) l.\nreflexivity.\nTime Defined.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337541125/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337541126","html_url":"https://github.com/coq/coq/issues/4637#issuecomment-337541126","issue_url":"https://api.github.com/repos/coq/coq/issues/4637","id":337541126,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0MTEyNg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-09-14T13:46:55Z","updated_at":"2017-10-18T10:21:22Z","author_association":"CONTRIBUTOR","body":"Comment author: @silene\n\n*** Bug [BZ#4662](https://github.com/coq/coq/issues?q=is%3Aissue%20%22Original%20bug%20ID%3A%20BZ%234662%22) has been marked as a duplicate of this bug. ***\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337541126/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]