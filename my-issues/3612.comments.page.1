[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524129","html_url":"https://github.com/coq/coq/issues/3612#issuecomment-337524129","issue_url":"https://api.github.com/repos/coq/coq/issues/3612","id":337524129,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNDEyOQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-09-11T21:16:59Z","updated_at":"2017-10-18T09:31:30Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\n(* -*- mode: coq; coq-prog-args: (\"-emacs\" \"-indices-matter\" \"-nois\") -*- *)\n(* File reduced by coq-bug-finder from original input, then from 3595 lines to 3518 lines, then from 3133 lines to 2950 lines, then from 2911 lines to 415 lines, then from 431 lines to 407 \\\nlines, then from 421 lines to 428 lines, then from 444 lines to 429 lines, then from 434 lines to 66 lines, then from 163 lines to 48 lines *)\n(* coqc version trunk (September 2014) compiled on Sep 11 2014 14:48:8 with OCaml 4.01.0\n   coqtop version cagnode17:/afs/csail.mit.edu/u/j/jgross/coq-trunk,trunk (580b25e05c7cc9e7a31430b3d9edb14ae12b7598) *)\nReserved Notation \"x -> y\" (at level 99, right associativity, y at level 200).\nReserved Notation \"x = y  :>  T\" (at level 70, y at next level, no associativity).\nReserved Notation \"x = y\" (at level 70, no associativity).\nOpen Scope type_scope.\nGlobal Set Universe Polymorphism.\nNotation \"A -> B\" := (forall (_ : A), B) : type_scope.\nGeneralizable All Variables.\nLocal Set Primitive Projections.\nRecord sigT {A} (P : A -> Type) := existT { projT1 : A ; projT2 : P projT1 }.\nArguments projT1 {A P} _ / .\nArguments projT2 {A P} _ / .\nNotation \"( x ; y )\" := (existT _ x y) : fibration_scope.\nOpen Scope fibration_scope.\nNotation pr1 := projT1.\nNotation pr2 := projT2.\nNotation \"x .1\" := (pr1 x) (at level 3, format \"x '.1'\") : fibration_scope.\nNotation \"x .2\" := (pr2 x) (at level 3, format \"x '.2'\") : fibration_scope.\nInductive paths {A : Type} (a : A) : A -> Type := idpath : paths a a.\nNotation \"x = y :> A\" := (@ paths A x y) : type_scope.\nNotation \"x = y\" := (x = y :>_) : type_scope.\nAxiom transport : forall {A : Type} (P : A -> Type) {x y : A} (p : x = y) (u : P x), P y .\nNotation \"p # x\" := (transport _ p x) (right associativity, at level 65, only parsing) : path_scope.\nLocal Open Scope path_scope.\nAxiom pr1_path : forall `{P : A -> Type} {u v : sigT P} (p : u = v), u.1 = v.1.\nNotation \"p ..1\" := (pr1_path p) (at level 3) : fibration_scope.\nAxiom pr2_path : forall `{P : A -> Type} {u v : sigT P} (p : u = v), p..1 # u.2 = v.2.\nNotation \"p ..2\" := (pr2_path p) (at level 3) : fibration_scope.\nAxiom path_path_sigma : forall {A : Type} (P : A -> Type) (u v : sigT P)\n           (p q : u = v)\n           (r : p..1 = q..1)\n           (s : transport (fun x => transport P x u.2 = v.2) r p..2 = q..2),\np = q.\nGoal forall (A : Type) (B : forall _ : A, Type) (x : @ sigT A (fun x : A => B x))\n            (xx : @ paths (@ sigT A (fun x0 : A => B x0)) x x),\n       @ paths (@ paths (@ sigT A (fun x0 : A => B x0)) x x) xx\n              (@ idpath (@ sigT A (fun x0 : A => B x0)) x).\n  intros A B x xx.\n  Set Printing All.\n  change (fun x => B x) with B in xx.\n  pose (path_path_sigma B x x xx) as x''.\n  clear x''.\n  Check (path_path_sigma B x x xx). (* Toplevel input, characters 15-48:\nError: Illegal application:\nThe term \"@ path_path_sigma\" of type\n \"forall (A : Type) (P : forall _ : A, Type) (u v : @ sigT A P)\n    (p q : @ paths (@ sigT A P) u v)\n    (r : @ paths (@ paths A u.(@ projT1) v.(@ projT1))\n           (@ pr1_path A P u v p) (@ pr1_path A P u v q))\n    (_ : @ paths\n           (@ paths (P v.(@ projT1))\n              (@ transport A P u.(@ projT1) v.(@ projT1)\n                 (@ pr1_path A P u v q) u.(@ projT2))\n              v.(@ projT2))\n           (@ transport (@ paths A u.(@ projT1) v.(@ projT1))\n              (fun x : @ paths A u.(@ projT1) v.(@ projT1) =>\n               @ paths (P v.(@ projT1))\n                 (@ transport A P u.(@ projT1) v.(@ projT1) x u.(@ projT2))\n                 v.(@ projT2)) (@ pr1_path A P u v p)\n              (@ pr1_path A P u v q) r (@ pr2_path A P u v p))\n           (@ pr2_path A P u v q)), @ paths (@ paths (@ sigT A P) u v) p q\"\ncannot be applied to the terms\n \"A\" : \"Type\"\n \"B\" : \"forall _ : A, Type\"\n \"x\" : \"@ sigT A (fun x : A => B x)\"\n \"x\" : \"@ sigT A (fun x : A => B x)\"\n \"xx\" : \"@ paths (@ sigT A B) x x\"\nThe 5th term has type \"@ paths (@ sigT A B) x x\" which should be coercible to\n \"@ paths (@ sigT A B) x x\". *)\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524129/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524131","html_url":"https://github.com/coq/coq/issues/3612#issuecomment-337524131","issue_url":"https://api.github.com/repos/coq/coq/issues/3612","id":337524131,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNDEzMQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-09-26T11:28:30Z","updated_at":"2017-10-18T09:31:30Z","author_association":"CONTRIBUTOR","body":"Comment author: @ppedrot\n\nInterestingly the [pose] line displays an anomaly that does not reach toplevel...\n\nAnomaly: variable x unbound. Please report.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524131/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524133","html_url":"https://github.com/coq/coq/issues/3612#issuecomment-337524133","issue_url":"https://api.github.com/repos/coq/coq/issues/3612","id":337524133,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNDEzMw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-02-27T20:12:02Z","updated_at":"2017-10-18T09:31:30Z","author_association":"CONTRIBUTOR","body":"Comment author: @ppedrot\n\nSeems to have been fixed in trunk.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524133/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]