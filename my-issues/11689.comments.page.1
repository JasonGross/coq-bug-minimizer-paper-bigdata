[{"url":"https://api.github.com/repos/coq/coq/issues/comments/591658415","html_url":"https://github.com/coq/coq/issues/11689#issuecomment-591658415","issue_url":"https://api.github.com/repos/coq/coq/issues/11689","id":591658415,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MTY1ODQxNQ==","user":{"login":"mikeshulman","id":646600,"node_id":"MDQ6VXNlcjY0NjYwMA==","avatar_url":"https://avatars.githubusercontent.com/u/646600?v=4","gravatar_id":"","url":"https://api.github.com/users/mikeshulman","html_url":"https://github.com/mikeshulman","followers_url":"https://api.github.com/users/mikeshulman/followers","following_url":"https://api.github.com/users/mikeshulman/following{/other_user}","gists_url":"https://api.github.com/users/mikeshulman/gists{/gist_id}","starred_url":"https://api.github.com/users/mikeshulman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikeshulman/subscriptions","organizations_url":"https://api.github.com/users/mikeshulman/orgs","repos_url":"https://api.github.com/users/mikeshulman/repos","events_url":"https://api.github.com/users/mikeshulman/events{/privacy}","received_events_url":"https://api.github.com/users/mikeshulman/received_events","type":"User","site_admin":false},"created_at":"2020-02-26T21:40:49Z","updated_at":"2020-02-26T21:40:49Z","author_association":"NONE","body":"With 3000=12, your example takes 8.5 seconds on my workstation.  I didn't wait for 3000=13 to finish; it seems to go up exponentially.  The `lazymatch` version is indeed much faster; at 3000=500 it takes 0.25 seconds (at higher values of 3000, the first line `cbv; intro x; intros.` starts to be unmanageably slow).","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/591658415/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/591680931","html_url":"https://github.com/coq/coq/issues/11689#issuecomment-591680931","issue_url":"https://api.github.com/repos/coq/coq/issues/11689","id":591680931,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MTY4MDkzMQ==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2020-02-26T22:38:24Z","updated_at":"2020-02-27T03:19:04Z","author_association":"MEMBER","body":"An example where I expect behavior to change (untested):\r\n```coq\r\nSection __.\r\n  Variable (x : nat).\r\n\r\n  Definition T := x = x.\r\n  Definition t : T := eq_refl.\r\n  Let y (v : x = x) : Prop := True.\r\n  Let z : y t /\\ x = x := conj I eq_refl.\r\n  Definition w : Prop := z = z.\r\n\r\n  Goal y t -> y t /\\ w = w -> True.\r\n  Proof.\r\n    intros.\r\n    clear dependent x.\r\n```\r\nIf I have run the tactics right in my head (and this is uncertain to me; this is the most complicated tactic problem I've ever tried to generate/run without coqc in front of me), then it should succeed with the current version, but fail if we swap out match for lazymatch.  I think this is okay, as long as it is marked in the changelog.  (Note that by changing all the Definitions to Lets we should be able to make the tactic work fine by having it search in the bodies of things and not just in the types.  But I don't see any way to get it to work nicely when you don't know which definitions make use of which variables.)\r\n\r\nEdit: now tested, change in behavior confirmed.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/591680931/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/598867966","html_url":"https://github.com/coq/coq/issues/11689#issuecomment-598867966","issue_url":"https://api.github.com/repos/coq/coq/issues/11689","id":598867966,"node_id":"MDEyOklzc3VlQ29tbWVudDU5ODg2Nzk2Ng==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2020-03-13T18:57:29Z","updated_at":"2020-03-13T18:57:29Z","author_association":"MEMBER","body":"Note that the version of https://github.com/coq/coq/issues/11691#issuecomment-598863282 takes 25.687 seconds on my machine for 3000=500, while the lazymatch version here takes 0.145 s.  To be faster while still retaining the extra power, we'd need to move to Ltac2, I believe.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/598867966/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]