[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337517549","html_url":"https://github.com/coq/coq/issues/3219#issuecomment-337517549","issue_url":"https://api.github.com/repos/coq/coq/issues/3219","id":337517549,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUxNzU0OQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-01-25T22:14:16Z","updated_at":"2017-10-18T09:12:49Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nRecord Foo (obj : Type) := { foo :> _ := obj }.\nRecord Bar (obj : Type) := { bar :> _ := obj }.\nRecord Baz (obj : Type) := { bazfoo :> Foo obj; bazbar :> Bar obj }.\n(* Warning: Ambiguous paths: [bazbar; bar] : Baz >-> Sortclass *)\n\nBoth paths give rise to a function which unifies with (fun x : Baz obj => obj), so there should be no warning.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337517549/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/467865835","html_url":"https://github.com/coq/coq/issues/3219#issuecomment-467865835","issue_url":"https://api.github.com/repos/coq/coq/issues/3219","id":467865835,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2Nzg2NTgzNQ==","user":{"login":"pi8027","id":111003,"node_id":"MDQ6VXNlcjExMTAwMw==","avatar_url":"https://avatars.githubusercontent.com/u/111003?v=4","gravatar_id":"","url":"https://api.github.com/users/pi8027","html_url":"https://github.com/pi8027","followers_url":"https://api.github.com/users/pi8027/followers","following_url":"https://api.github.com/users/pi8027/following{/other_user}","gists_url":"https://api.github.com/users/pi8027/gists{/gist_id}","starred_url":"https://api.github.com/users/pi8027/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pi8027/subscriptions","organizations_url":"https://api.github.com/users/pi8027/orgs","repos_url":"https://api.github.com/users/pi8027/repos","events_url":"https://api.github.com/users/pi8027/events{/privacy}","received_events_url":"https://api.github.com/users/pi8027/received_events","type":"User","site_admin":false},"created_at":"2019-02-27T13:42:05Z","updated_at":"2019-02-27T13:54:09Z","author_association":"CONTRIBUTOR","body":"cc: @gares @maximedenes \r\nA solution to this problem would also solve the problem of many ambiguous paths in MathComp because these ambiguous paths are convertible to each other. Relaxing the ambiguity condition of coercions by convertibility checking can eliminate meaningless warnings in the correct way. For example:\r\n\r\n```coq\r\nRequire Import all_algebra.\r\n\r\nGoal\r\n(fun T => GRing.ComRing.ringType (GRing.ComUnitRing.comRingType T)) =\r\nGRing.ComUnitRing.ringType /\\\r\n(fun T => GRing.UnitRing.ringType (GRing.ComUnitRing.unitRingType T)) =\r\nGRing.ComUnitRing.ringType.\r\nsplit; reflexivity.\r\nQed.\r\n```\r\n\r\nHowever, coercions are indexed by only the head symbols of types, therefore, I'm not sure of the feasibility of this idea. If all the coercions respect the uniform inheritance condition, is it possible?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/467865835/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]