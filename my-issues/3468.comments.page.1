[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337521654","html_url":"https://github.com/coq/coq/issues/3468#issuecomment-337521654","issue_url":"https://api.github.com/repos/coq/coq/issues/3468","id":337521654,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMTY1NA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-07-29T15:40:55Z","updated_at":"2018-10-15T16:59:40Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\r\n```coq\r\nDelimit Scope foo_scope with foo.\r\nNotation \"x ~~\" := (x) (at level 0) : foo_scope.\r\nNotation bar x := (x%foo).\r\nNotation baz x := ($(exact x%foo)$).\r\nCheck bar (O ~~).\r\nCheck baz (O ~~). (* Toplevel input, characters 11-15:\r\nError: Unknown interpretation for notation \"_ ~~\".  *)\r\n```\r\nI would be ok with there being another way to specify binding scopes, as long as the term that I return can be completely determined by the tactic.  (So I don't want to have to let-expand outside of the tactic to get the notation scope to work.)\r\n\r\nBut it would be nicer if this just worked.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337521654/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/429930956","html_url":"https://github.com/coq/coq/issues/3468#issuecomment-429930956","issue_url":"https://api.github.com/repos/coq/coq/issues/3468","id":429930956,"node_id":"MDEyOklzc3VlQ29tbWVudDQyOTkzMDk1Ng==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2018-10-15T16:54:11Z","updated_at":"2018-10-15T16:54:11Z","author_association":"MEMBER","body":"cc @ppedrot @vmurali @tchajed \r\n\r\nNote that having `ltac:(...)` *anywhere* in a notation breaks scope stacks *everywhere* in that notation.  So, for example,\r\n```coq\r\nNotation foo a b := ((a + b)%type) (only parsing).                                                                                                                                                          \r\nNotation bar a b := (let __ := ltac:(exact I) in (a + b)%type) (only parsing).                                                                                                                              \r\nCheck foo (Set + Set) Set. (* (Set + Set + Set)%type *)                                                                                                                                                     \r\nCheck bar (Set + Set) Set. (* Error: The term \"Set\" has type \"Type\" while it is expected to have type \"nat\". *) \r\n```\r\nIf this were not the case, then you could do something like\r\n```coq\r\nNotation baz x := (match x%foo with y => ltac:(exact y) end) (only parsing).\r\n```\r\n(N.B., you need to `cbv delta [y] in y` to, e.g., match on the underlying term in Ltac.)","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/429930956/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/429934172","html_url":"https://github.com/coq/coq/issues/3468#issuecomment-429934172","issue_url":"https://api.github.com/repos/coq/coq/issues/3468","id":429934172,"node_id":"MDEyOklzc3VlQ29tbWVudDQyOTkzNDE3Mg==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2018-10-15T17:03:44Z","updated_at":"2018-10-15T17:03:44Z","author_association":"MEMBER","body":"cc @herbelin ","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/429934172/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/430258373","html_url":"https://github.com/coq/coq/issues/3468#issuecomment-430258373","issue_url":"https://api.github.com/repos/coq/coq/issues/3468","id":430258373,"node_id":"MDEyOklzc3VlQ29tbWVudDQzMDI1ODM3Mw==","user":{"login":"herbelin","id":460771,"node_id":"MDQ6VXNlcjQ2MDc3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/460771?v=4","gravatar_id":"","url":"https://api.github.com/users/herbelin","html_url":"https://github.com/herbelin","followers_url":"https://api.github.com/users/herbelin/followers","following_url":"https://api.github.com/users/herbelin/following{/other_user}","gists_url":"https://api.github.com/users/herbelin/gists{/gist_id}","starred_url":"https://api.github.com/users/herbelin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/herbelin/subscriptions","organizations_url":"https://api.github.com/users/herbelin/orgs","repos_url":"https://api.github.com/users/herbelin/repos","events_url":"https://api.github.com/users/herbelin/events{/privacy}","received_events_url":"https://api.github.com/users/herbelin/received_events","type":"User","site_admin":false},"created_at":"2018-10-16T14:25:54Z","updated_at":"2018-10-16T14:25:54Z","author_association":"MEMBER","body":"Possible fix at #8745.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/430258373/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/477370579","html_url":"https://github.com/coq/coq/issues/3468#issuecomment-477370579","issue_url":"https://api.github.com/repos/coq/coq/issues/3468","id":477370579,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3NzM3MDU3OQ==","user":{"login":"vmurali","id":236101,"node_id":"MDQ6VXNlcjIzNjEwMQ==","avatar_url":"https://avatars.githubusercontent.com/u/236101?v=4","gravatar_id":"","url":"https://api.github.com/users/vmurali","html_url":"https://github.com/vmurali","followers_url":"https://api.github.com/users/vmurali/followers","following_url":"https://api.github.com/users/vmurali/following{/other_user}","gists_url":"https://api.github.com/users/vmurali/gists{/gist_id}","starred_url":"https://api.github.com/users/vmurali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vmurali/subscriptions","organizations_url":"https://api.github.com/users/vmurali/orgs","repos_url":"https://api.github.com/users/vmurali/repos","events_url":"https://api.github.com/users/vmurali/events{/privacy}","received_events_url":"https://api.github.com/users/vmurali/received_events","type":"User","site_admin":false},"created_at":"2019-03-27T22:25:13Z","updated_at":"2019-03-27T22:33:50Z","author_association":"NONE","body":"@JasonGross 's example of \r\n\r\n```\r\nNotation foo a b := ((a + b)%type) (only parsing).                                                                                                                                                          \r\nNotation bar a b := (let __ := ltac:(exact I) in (a + b)%type) (only parsing).                                                                                                                              \r\nCheck foo (Set + Set) Set. (* (Set + Set + Set)%type *)                                                                                                                                                     \r\nCheck bar (Set + Set) Set. (* Error: The term \"Set\" has type \"Type\" while it is expected to have type \"nat\". *) \r\n```\r\n\r\nStill doesn't work in 8.9.x \r\n\r\nIs this issue really closed?\r\n\r\nIf so, what's the workaround to make the above example work?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/477370579/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]