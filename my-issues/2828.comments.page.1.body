Comment author: @JasonGross

The code
```
Parameter A B : Type.
Coercion POL (p : prod A B) := fst p.
Goal forall x : prod A B, A.
  intro x. exact x.
```
gives `Anomaly: apply_coercion. Please report.` on `exact x`.

I'm not sure if this is actually because, or even related to the fact that, the `Coercion` line gives the warning " Warning: POL does not respect the uniform inheritance condition ", but it seems like a good first guess.


Comment author: @aspiwack

This sort of coercions used to trigger a full-blown error. The code was (unfortunately) never meant to handle this sort of cases. It's not very surprising that it fails awfully.


Comment author: @JasonGross

*** Bug [BZ#4635](https://github.com/coq/coq/issues?q=is%3Aissue%20%22Original%20bug%20ID%3A%20BZ%234635%22) has been marked as a duplicate of this bug. ***


Comment author: Qinxiang Cao &lt;<caoqinxiang@gmail.com>&gt;

(In reply to Jason Gross from comment [BZ#2](https://github.com/coq/coq/issues?q=is%3Aissue%20%22Original%20bug%20ID%3A%20BZ%232%22))
> *** Bug [BZ#4635](https://github.com/coq/coq/issues?q=is%3Aissue%20%22Original%20bug%20ID%3A%20BZ%234635%22) has been marked as a duplicate of this bug. ***

In fact, I read this before submitting my bug report. But I still do not get why this is an error, i.e. I don't see what is the boundary of legal coercion and illegal coercion.


Comment author: Qinxiang Cao &lt;<caoqinxiang@gmail.com>&gt;

(In reply to Jason Gross from comment [BZ#2](https://github.com/coq/coq/issues?q=is%3Aissue%20%22Original%20bug%20ID%3A%20BZ%232%22))
> *** Bug [BZ#4635](https://github.com/coq/coq/issues?q=is%3Aissue%20%22Original%20bug%20ID%3A%20BZ%234635%22) has been marked as a duplicate of this bug. ***

Hmmm, I did some more experiment. It seems like: Coercion are for general cases not for specific cases. Is this correct?

I changed my code into the following, and it works (see Bug [BZ#4635](https://github.com/coq/coq/issues?q=is%3Aissue%20%22Original%20bug%20ID%3A%20BZ%234635%22) for original error code). If my understanding is correct, I hope people with similar problem in the future can see this post.


Section Failure.

Context {addr: Type}.
Context {data: Type}.

Parameter pAC: A addr data -> C addr data.
Coercion pAC: A >-> C.

End Failure.

Module Success.
Section Success.

Context {addr: Type}.
Context {data: Type}.

Goal forall (b: B addr data (fun a => True)) (x: addr),
  gamma _ _ (pAC b) x = gamma _ _ (pAC b) x.
Abort.

(* Now it works. *)
Goal forall (b: B addr data (fun g => True)) (x: addr),
  gamma _ _ b x = gamma _ _ b x.
Abort.

End Success.
End Success.


Comment author: @herbelin

*** Bug [BZ#4507](https://github.com/coq/coq/issues?q=is%3Aissue%20%22Original%20bug%20ID%3A%20BZ%234507%22) has been marked as a duplicate of this bug. ***


Comment author: @herbelin

*** Bug [BZ#4114](https://github.com/coq/coq/issues?q=is%3Aissue%20%22Original%20bug%20ID%3A%20BZ%234114%22) has been marked as a duplicate of this bug. ***


