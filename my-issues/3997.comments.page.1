[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530549","html_url":"https://github.com/coq/coq/issues/3997#issuecomment-337530549","issue_url":"https://api.github.com/repos/coq/coq/issues/3997","id":337530549,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzMDU0OQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-02-04T19:37:01Z","updated_at":"2018-11-30T18:22:17Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\r\n\r\n```coq\r\n\r\nGlobal Set Primitive Projections.\r\nClass IsEquiv {A B : Type} (f : A -> B) := { equiv_inv : B -> A }.\r\nRecord Equiv A B := { equiv_fun : A -> B ; equiv_isequiv : IsEquiv equiv_fun }.\r\nCoercion equiv_fun : Equiv >-> Funclass.\r\nGlobal Existing Instance equiv_isequiv.\r\nAxiom equiv_sum_assoc : forall (A B C : Type), Equiv ((A + B) + C) (A + (B + C)).\r\nGoal True.\r\n  try pose ((fun g f x => g (f x)) (@ equiv_inv _ _ (equiv_sum_assoc _ _ _) _) (equiv_sum_assoc _ _ _)). (* success... wtf, given next line? *)\r\n  Fail pose ((fun g f x => g (f x)) (@ equiv_inv _ _ (equiv_sum_assoc _ _ _) _) (equiv_sum_assoc _ _ _)). (* stack overflow *)\r\n  exact I.\r\nDefined.\r\n\r\n\r\n```","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530549/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530550","html_url":"https://github.com/coq/coq/issues/3997#issuecomment-337530550","issue_url":"https://api.github.com/repos/coq/coq/issues/3997","id":337530550,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzMDU1MA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-02-05T12:18:29Z","updated_at":"2017-10-18T09:50:03Z","author_association":"CONTRIBUTOR","body":"Comment author: @aspiwack\n\nActually, [try] doesn't catch stack overflows (they are marked as critical, thus not normally caught):\n\nGoal False.\n  Fail try\n   (let rec f x := f x in\n    let h := f () in idtac).\n\n\nAlso, replacing [pose …] by [refine (let x := … in _)] the error is left uncaught as well:\n\nGlobal Set Primitive Projections.\nClass IsEquiv {A B : Type} (f : A -> B) := { equiv_inv : B -> A }.\nRecord Equiv A B := { equiv_fun : A -> B ; equiv_isequiv : IsEquiv equiv_fun }.\nCoercion equiv_fun : Equiv >-> Funclass.\nGlobal Existing Instance equiv_isequiv.\nAxiom equiv_sum_assoc : forall (A B C : Type), Equiv ((A + B) + C) (A + (B + C)).\nGoal True.\n  Fail try refine (let x := ((fun g f x => g (f x)) (@ equiv_inv _ _ (equiv_sum_assoc _ _ _) _) (equiv_sum_assoc _ _ _)) in _ ).\n\n\nSo signs seem to point to [pose] as the culprit for this one…\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530550/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530552","html_url":"https://github.com/coq/coq/issues/3997#issuecomment-337530552","issue_url":"https://api.github.com/repos/coq/coq/issues/3997","id":337530552,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzMDU1Mg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-02-05T14:05:11Z","updated_at":"2017-10-18T09:50:03Z","author_association":"CONTRIBUTOR","body":"Comment author: @herbelin\n\nNothing to do with pose either.\n\nThere is a \"normal\" error about an implicit argument not being solved. I suspect then the printer for the error to raise a Stack_overflow (and this remains to be investigated).\n\nThe try correctly catches the unresolved implicit argument error and does not try to print the message, so, no stack overflow.\n\nA secondary question is why Fail captures Stack_overflow when writing:\n\nFail Check (((fun g f x => g (f x)) (@ equiv_inv _ _ (equiv_sum_assoc _ _ _) _)) (equiv_sum_assoc _ _ _)).\n(*\nThe command has indeed failed with message:\n=> Stack overflow.\n*)\n\nwhile it does not when writing:\n\nFail pose ((fun g f x => g (f x)) (@ equiv_inv _ _ (equiv_sum_assoc _ _ _) _) (equiv_sum_assoc _ _ _)). \n(*\nStack overflow.\n*)\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530552/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530553","html_url":"https://github.com/coq/coq/issues/3997#issuecomment-337530553","issue_url":"https://api.github.com/repos/coq/coq/issues/3997","id":337530553,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzMDU1Mw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-02-05T14:28:49Z","updated_at":"2017-10-18T09:50:03Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nPerhaps [Check] tries to create the message itself, failing with a stack overflow, which [Fail] catches, but [pose] does not create the message, and hence it is [Fail] that tries to create the message, which itself fails with a stack overflow?\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530553/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530554","html_url":"https://github.com/coq/coq/issues/3997#issuecomment-337530554","issue_url":"https://api.github.com/repos/coq/coq/issues/3997","id":337530554,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzMDU1NA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-02-11T09:05:16Z","updated_at":"2017-10-18T09:50:04Z","author_association":"CONTRIBUTOR","body":"Comment author: @herbelin\n\nState of investigation:\n\nIn a unification context simplified as follows:\n\n|- ?A:Type \ng:?A |- ?B:Type\n?C:?A\n\nwe have to unify ?A=?B[g:=?C]:Type. Coq does ?A:=?B[g:=?C] leading to the type of ?C depending on itself.\n\nSomething is wrong but where exactly? Should ?B be restricted so as not to depend from g as a consequence of the equation ?A=?B[g:=?C:?A]? Is this a necessary condition? Can a term have a subterm whose type contains the term?\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530554/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530555","html_url":"https://github.com/coq/coq/issues/3997#issuecomment-337530555","issue_url":"https://api.github.com/repos/coq/coq/issues/3997","id":337530555,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzMDU1NQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-02-11T09:11:28Z","updated_at":"2017-10-18T09:50:04Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nI will note that removing the [Set Primitive Projections] makes the [pose] give a normal error message.  What is special about the [Set Primitive Projections] path that makes the unifier loop?\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530555/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530556","html_url":"https://github.com/coq/coq/issues/3997#issuecomment-337530556","issue_url":"https://api.github.com/repos/coq/coq/issues/3997","id":337530556,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzMDU1Ng==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-02-12T08:36:42Z","updated_at":"2017-10-18T09:50:04Z","author_association":"CONTRIBUTOR","body":"Comment author: @herbelin\n\nGood remark, it helps. With primitive projections, the occur check has to be changed.\n\nIn ?n := proj ?n t with t:I ?n, the dependency of ?n in itself stops being detected when proj is a primitive projection, since ?n is absent of the projection.\n\nSo, I presume that the function Evarsolve.noccur_evar has to be modified to treat primitive projections specifically. I'll see with Matthieu.\n\n[With respect to my own previous question, I still don't know if a constraint of the form ?A:=?B[g:=?C] with ?C:?A can be generated (even w/o primitive projections). I was able to generate one but if ever it can be generated, it will have to be rejected.]\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530556/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530557","html_url":"https://github.com/coq/coq/issues/3997#issuecomment-337530557","issue_url":"https://api.github.com/repos/coq/coq/issues/3997","id":337530557,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzMDU1Nw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-02-12T08:37:54Z","updated_at":"2017-10-18T09:50:04Z","author_association":"CONTRIBUTOR","body":"Comment author: @herbelin\n\n[I meant: I was _unable_ to generate one.]\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530557/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530558","html_url":"https://github.com/coq/coq/issues/3997#issuecomment-337530558","issue_url":"https://api.github.com/repos/coq/coq/issues/3997","id":337530558,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzMDU1OA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-02-19T13:09:45Z","updated_at":"2017-10-18T09:50:04Z","author_association":"CONTRIBUTOR","body":"Comment author: @silene\n\nSee bug [BZ#4062](https://github.com/coq/coq/issues?q=is%3Aissue%20%22Original%20bug%20ID%3A%20BZ%234062%22) for a way to generate such (incorrect) constraints.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530558/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530559","html_url":"https://github.com/coq/coq/issues/3997#issuecomment-337530559","issue_url":"https://api.github.com/repos/coq/coq/issues/3997","id":337530559,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzMDU1OQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-07-28T16:19:24Z","updated_at":"2017-10-18T09:50:04Z","author_association":"CONTRIBUTOR","body":"Comment author: @ppedrot\n\nI believe that this bug in itself is fixed. If somebody wants a lengthier discussion on a precise question amongst those that were raised here, he should open a new dedicated bug...\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530559/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]