[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337538835","html_url":"https://github.com/coq/coq/issues/4490#issuecomment-337538835","issue_url":"https://api.github.com/repos/coq/coq/issues/4490","id":337538835,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzODgzNQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-01-12T05:07:14Z","updated_at":"2021-08-23T10:07:42Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\r\n\r\nConsider the code:\r\n```coq\r\nRequire Import Coq.Lists.List Coq.Classes.Morphisms.\r\n\r\nDefinition list_caset A (P : list A -> Type) (N : P nil) (C : forall x xs, P (x::xs))\r\n             ls\r\n  : P ls\r\n    := match ls with\r\n         | nil => N\r\n         | x::xs => C x xs\r\n       end.\r\n\r\nGlobal Instance list_caset_Proper {A P}\r\n: Proper (eq\r\n            ==> pointwise_relation _ (pointwise_relation _ eq)\r\n            ==> pointwise_relation _ eq)\r\n         (@ list_caset A (fun _ => P)).\r\nProof.\r\n  lazy.\r\n  intros ??? ?? H [|? ?]; subst; eauto.\r\nQed.\r\n\r\nGlobal Instance list_caset_Proper' {A P}\r\n: Proper (eq\r\n            ==> pointwise_relation _ (pointwise_relation _ eq)\r\n            ==> eq\r\n            ==> eq)\r\n         (@ list_caset A (fun _ => P)).\r\nProof.\r\n  lazy.\r\n  intros ??? ?? H [|? ?] ??; subst; eauto.\r\nQed.\r\n\r\nGoal True.\r\nProof.\r\n  let P := nat in\r\n  let A := nat in\r\n  pose proof (_ : Proper (@ eq P ==> pointwise_relation A (pointwise_relation _ eq) ==> _ ==> _) (@ list_caset A (fun _ => P))).\r\n  let P := nat in\r\n  let A := nat in\r\n  pose proof (_ : Proper (@ eq P ==> pointwise_relation A _ ==> _ ==> _) (@ list_caset A (fun _ => P))).\r\n```\r\nThe first of these succeeds, while the second fails with\r\n```\r\nToplevel input, characters 107-133:\r\nError:\r\nIn environment\r\nH : Proper\r\n      (eq ==>\r\n       pointwise_relation nat (pointwise_relation (list nat) eq) ==>\r\n       eq ==> eq) (list_caset nat (fun _ : list nat => nat))\r\nThe term \"list_caset nat (fun _ : list nat => nat)\" has type\r\n \"nat -> (nat -> list nat -> nat) -> list nat -> nat\"\r\n while it is expected to have type \"nat -> (nat -> ?121) -> ?123 -> ?124\".\r\n```\r\n\r\nIn Coq 8.5, we get a slightly more illuminating error message:\r\n```\r\nError:\r\nIn environment\r\nH : Proper (eq ==> pointwise_relation nat (pointwise_relation (list nat) eq) ==> eq ==> eq)\r\n      (list_caset nat (fun _ : list nat => nat))\r\nThe term \"list_caset nat (fun _ : list nat => nat)\" has type \"nat -> (nat -> list nat -> nat) -> list nat -> nat\"\r\nwhile it is expected to have type \"nat -> (nat -> ?B) -> ?T -> ?T2\" (cannot instantiate \"?B\" because \"x\" is not in its scope:\r\navailable arguments are \"H\").\r\n```\r\nI'm confused where `x` is coming from.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337538835/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]