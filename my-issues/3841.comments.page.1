[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337527908","html_url":"https://github.com/coq/coq/issues/3841#issuecomment-337527908","issue_url":"https://api.github.com/repos/coq/coq/issues/3841","id":337527908,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNzkwOA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-12-07T21:47:11Z","updated_at":"2017-10-18T09:42:31Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nClass A := { a : False }.\nDefinition foo {a : A} {T} := fun x : T => x.\nGoal True = True.\nProof.\n  eapply foo.\n  reflexivity.\n\nThis occurs in both 8.4 and trunk.  When a tactic loses an unresolved typeclass evar, almost every subsequent tactic decides that it's its job to try to find that instance, and complains.  I think the evar should probably show up as an uninstantiated evar at the end of the proof.  If nothing else, [eapply] should warn, or probably just error, if it loses a typeclass evar.\n\n(Apologies if I already reported this; I seem to recall tracking this down over the summer, but cannot find the report.)\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337527908/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337527910","html_url":"https://github.com/coq/coq/issues/3841#issuecomment-337527910","issue_url":"https://api.github.com/repos/coq/coq/issues/3841","id":337527910,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNzkxMA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-12-09T15:39:52Z","updated_at":"2017-10-18T09:42:31Z","author_association":"CONTRIBUTOR","body":"Comment author: @ppedrot\n\nWe should mark all evars as resolvable at the end of a tactic, I think.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337527910/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337527912","html_url":"https://github.com/coq/coq/issues/3841#issuecomment-337527912","issue_url":"https://api.github.com/repos/coq/coq/issues/3841","id":337527912,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNzkxMg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-12-10T10:35:27Z","updated_at":"2017-10-18T09:42:31Z","author_association":"CONTRIBUTOR","body":"Comment author: @aspiwack\n\nProbably.\n\nIn [Proof.run_tactic], I grab the \"future goals\" from the evar map, and add them to the shelve. They should be also be turned into goals and marked unresolvable at that point. I'll try to do that soon.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337527912/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337527913","html_url":"https://github.com/coq/coq/issues/3841#issuecomment-337527913","issue_url":"https://api.github.com/repos/coq/coq/issues/3841","id":337527913,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNzkxMw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-12-12T18:30:25Z","updated_at":"2017-10-18T09:42:31Z","author_association":"CONTRIBUTOR","body":"Comment author: @aspiwack\n\nFixed in trunk ( a5ccde6f22deb1a1a2d59d3b532f74c217a05aee ).\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337527913/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]