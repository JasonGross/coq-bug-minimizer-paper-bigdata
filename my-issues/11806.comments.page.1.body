Note that it also fails when the plugin is literally empty, see [here](https://github.com/JasonGross/test-coq-plugin-macos/runs/501644736?check_suite_focus=true)
cc @Blaisorblade  ?
Seems to build here. My build log:
```
$ make
coq_makefile -f _CoqProject -o Makefile.coq
/Library/Developer/CommandLineTools/usr/bin/make -f Makefile.coq all
COQDEP VFILES
COQPP src/strategy_tactic_plugin.mlg
COQDEP src/strategy_tactic_plugin.mllib
CAMLDEP src/strategy_tactic_plugin.ml
CAMLOPT -c  src/strategy_tactic_plugin.ml
CAMLOPT -a -o src/strategy_tactic_plugin.cmxa
CAMLOPT -shared -o src/strategy_tactic_plugin.cmxs
ld: warning: directory not found for option '-L/Users/pgiarrusso/.opam/coq-8.10-flambda/lib/coq//plugins/fourier'
COQC src/Strategy.v
src/Strategy (real: 0.35, user: 0.18, sys: 0.08, mem: 76504 ko)
```

127 is apparently "command not found", so is OCaml misconfigured on that CI machine?
Hmm, can you take a look at the script I'm using (it's the same as Coq CI's script except that I don't `make byte` in Coq) :
```
    env:
      NJOBS: "2"
      COQ_VERSION: "master"

    # initial steps copied from https://github.com/coq/coq/blob/cfc41cb79e2364f19d97e7e5c94262132972b0b2/azure-pipelines.yml#L41-L110
    steps:
    - name: Install system dependencies
      run: |
        set -e
        brew update
        (cd $(brew --repository)/Library/Taps/homebrew/homebrew-core/ && git fetch --shallow-since=${HBCORE_DATE} && git checkout ${HBCORE_REF})
        brew install gnu-time opam pkg-config gtksourceview3 adwaita-icon-theme
        pip3 install macpack
      env:
        HOMEBREW_NO_AUTO_UPDATE: "1"
        HBCORE_DATE: "2019-09-03"
        HBCORE_REF: "44ee64cf4b9f2d2bf000758d356db0c77425e42e"

    - name: Install OCaml dependencies
      run: |
        set -e
        export PKG_CONFIG_PATH=/usr/local/opt/libffi/lib/pkgconfig
        opam init -a -j "$NJOBS" --compiler=ocaml-base-compiler.$COMPILER
        opam switch set ocaml-base-compiler.$COMPILER
        eval $(opam env)
        opam update
        opam install -j "$NJOBS" num ocamlfind${FINDLIB_VER} ounit lablgtk3-sourceview3
        opam list
      env:
        COMPILER: "4.09.0"
        FINDLIB_VER: ".1.8.1"
        OPAMYES: "true"

    - name: Build Coq
      run: |
        set -e
        git clone https://github.com/coq/coq.git --branch=${COQ_VERSION}
        eval $(opam env)
        (cd coq && ./configure -prefix /usr/local/ -warn-error yes -native-compiler no -coqide no)
        (cd coq && make -j "$NJOBS")

    - name: Install Coq
      run: |
        (cd coq && make install)

    - name: echo build params
      run: |
        sysctl -n machdep.cpu.brand_string
        sysctl -a | grep machdep.cpu
        uname -a
        sw_vers -productVersion
        system_profiler SPSoftwareDataType
        coqc --version
        echo | coqtop
    - uses: actions/checkout@v2
    - name: submodules-init
      uses: snickerbockers/submodules-init@v4
    - name: all
      run: make all VERBOSE=1
```
To consolidate discussion here from [Gitter](https://gitter.im/coq/coq?at=5e695c2af046a30bbe5a2c4d):
> I wonder about export PKG_CONFIG_PATH=/usr/local/opt/libffi/lib/pkgconfig in the github workflow: any chance that's needed also when using the compiler, for whatever reason?

That's the only obvious question â€” also because the error is at link time. And FWIW my test was with Coq 8.10.2 (and I don't have macpack).

But I'm not the best expert, and @MSoegtropIMC gave example working code on Gitter...
Apparently the issue was that I need to run `eval $(opam config env)` before building my project.  I assume this is expected, so will close this issue.  If there is still an issue, others should feel free to reopen
This explains the 127 error (missing executable). Good that this is solved.
