[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337515784","html_url":"https://github.com/coq/coq/issues/3121#issuecomment-337515784","issue_url":"https://api.github.com/repos/coq/coq/issues/3121","id":337515784,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUxNTc4NA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2013-09-03T18:36:49Z","updated_at":"2017-10-18T09:07:35Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nI would like to have [Hint]s for [eauto] which run only once.  This is useful, for example, to break trivial cycles in typeclass instance search.\n\nThe idea that I had for implementing this is to have a construction which changes the contents of a hint database for the duration of the following tactic.  For example, I could write\n\nLtac do_tac_then_remove_tac_from_ti_in_other_tac tac other_tac self_tac :=\n  tac;\n  dblet typeclass_instances := typeclass_instances -[(self_tac tac other_tac self_tac)] in\n  other_tac.\n\nHint Extern 0\n  => do_tac_then_remove_tac_from_ti_in_other_tac\n        ltac:(apply foo)\n        ltac:(solve [ eauto with typeclass_instances ])\n        ltac:(do_tac_then_remove_tac_from_ti_in_other_tac)\n: typeclass_instances.\n\nand then you only get to call [apply foo] once in any chain of typeclass reasoning.  Note that if some other tactic in the typeclass_instances database calls, e.g., [trivial with typeclass_instances], that invocation should not see the [apply foo] hint if it's already been used.\n\nAlternatively, perhaps there could be a kind of use-once [Hint], so that\n\nLinear Hint Extern 0 => apply foo : db.\n\nwould mean that any chain of reasoning invoked by [eauto with db] can use [apply foo] at most once.  Adding [Linear Hint]s should never result in cycles that would not appear if you manually applied them.  For example, the hints\n\nLinear Hint Extern 0 => idtac; eauto with db : db.\nLinear Hint Extern 0 => idtac; idtac; eauto with db : db.\n\nshould not loop forever, nor stack overflow.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337515784/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]