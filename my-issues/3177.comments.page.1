[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337516733","html_url":"https://github.com/coq/coq/issues/3177#issuecomment-337516733","issue_url":"https://api.github.com/repos/coq/coq/issues/3177","id":337516733,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUxNjczMw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2013-12-06T20:30:09Z","updated_at":"2017-10-18T09:10:29Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nConsider the code\n\nRequire Import Setoid Morphisms RelationClasses Equivalence.\n\nGoal forall T (R : relation T) x y z, Transitive R -> R x y -> R y z -> R x z.\nProof.\n  intros T R x y z Tr H1 H2.\n  evar (z' : T -> T).\n  transitivity (z' z).\n  setoid_rewrite H1.\n\nIt works fine.  If I [subst z'], though, as in\n\nRequire Import Setoid Morphisms RelationClasses Equivalence.\n\nGoal forall T (R : relation T) x y z, Transitive R -> R x y -> R y z -> R x z.\nProof.\n  intros T R x y z Tr H1 H2.\n  evar (z' : T -> T).\n  transitivity (z' z).\n  subst z'.\n  setoid_rewrite H1.\n\nthen setoid_rewrite gets confused:\n\nToplevel input, characters 0-17:\nError:\nTactic failure:setoid rewrite failed: Unable to satisfy the rewriting constraints.\n\nCould not find an instance for \"Proper (R ==> R ==> Basics.flip Basics.impl)\n                                  R\" in environment:\n\nT : Type\nR : relation T\nx : T\ny : T\nz : T\nTr : Transitive R\nH1 : R x y\nH2 : R y z\ndo_subrelation := do_subrelation : apply_subrelation\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337516733/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337516735","html_url":"https://github.com/coq/coq/issues/3177#issuecomment-337516735","issue_url":"https://api.github.com/repos/coq/coq/issues/3177","id":337516735,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUxNjczNQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2013-12-10T15:44:19Z","updated_at":"2017-10-18T09:10:29Z","author_association":"CONTRIBUTOR","body":"Comment author: @ppedrot\n\nSurely related to bug [BZ#3141](https://github.com/coq/coq/issues?q=is%3Aissue%20%22Original%20bug%20ID%3A%20BZ%233141%22). The subst tactic is known for its evar-intolerance.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337516735/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337516737","html_url":"https://github.com/coq/coq/issues/3177#issuecomment-337516737","issue_url":"https://api.github.com/repos/coq/coq/issues/3177","id":337516737,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUxNjczNw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2013-12-10T17:09:35Z","updated_at":"2017-10-18T09:10:30Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nThe problem is with setoid_rewrite, not subst.  I can make it work again by doing\n\nRequire Import Setoid Morphisms RelationClasses Equivalence.\n\nGoal forall T (R : relation T) x y z, Transitive R -> R x y -> R y z -> R x z.\nProof.\n  intros T R x y z Tr H1 H2.\n  evar (z' : T -> T).\n  transitivity (z' z).\n  subst z'.\n  match goal with\n    | [ |- appcontext[?E] ] => is_evar E; let E' := fresh in set (E' := E)\n  end.\n  setoid_rewrite H1.\n\nAnd I can break it without subst:\n\nRequire Import Setoid Morphisms RelationClasses Equivalence.\n\nGoal forall T (R : relation T) x y z, Transitive R -> R x y -> R y z -> R x z.\nProof.\n  intros T R x y z Tr H1 H2.\n  evar (z' : T -> T).\n  transitivity (z' z).\n  unfold z'; clear z'.\n  setoid_rewrite H1.\n\n\nI do not think it's related to https://coq.inria.fr/bugs/show_bug.cgi?id=3141; that talks about [subst] (which substitutes equalities), whereas [subst] here simply removes a [let ... in ...] in the proof tree.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337516737/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337516738","html_url":"https://github.com/coq/coq/issues/3177#issuecomment-337516738","issue_url":"https://api.github.com/repos/coq/coq/issues/3177","id":337516738,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUxNjczOA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-11-22T14:48:39Z","updated_at":"2017-10-18T09:10:30Z","author_association":"CONTRIBUTOR","body":"Comment author: @herbelin\n\nThe evar has a dependency in x. So, when trying to replace x with y in the goal, the x in the instance of the evar is also to be replaced. Since evar is undefined, setoid_rewrite does not find a \"Proper\" lemma and fails (if you look at the error message, it is looking at a \"R ==> R ==> flip impl\" relation and not a \"R ==> eq ==> flip impl\" what hints that there is a rewriting attempt going on in the evar).\n\nTo get what you want, do instead \"setoid_rewrite H1 at 1\".\n\nOne could imagine that occurrences in evars are skipped by default, but I don't know how universal it would be to go this direction.\n\nI don't know what Matthieu would like to do here. Maybe the error message could be improved, maybe reporting something like \"cannot rewrite x at occurrence 2\", but in the meantime, I mark it as invalid.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337516738/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]