[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337518049","html_url":"https://github.com/coq/coq/issues/3248#issuecomment-337518049","issue_url":"https://api.github.com/repos/coq/coq/issues/3248","id":337518049,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUxODA0OQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-03-05T20:05:54Z","updated_at":"2018-04-17T18:59:37Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\r\n```coq\r\nSet Implicit Arguments.\r\n\r\nLtac ret_and_left_helper T tac :=\r\n  let t := type of T in\r\n  lazymatch eval hnf in t with\r\n    | ?a /\\ ?b => constr:(proj1 T)\r\n    | forall x : ?T', @ ?f x =>\r\n      constr:(fun x : T' => $(let fx := constr:(T x) in\r\n                              let t := tac fx in\r\n                              exact t)$)\r\n  end.\r\n\r\nLtac ret_and_left T := ret_and_left_helper T ret_and_left.\r\n\r\nGoal forall A B : Prop, (A -> B -> A /\\ B) -> True.\r\nintros.\r\nlet t' := ret_and_left H in\r\npose t'. (* Error: Illegal application:\r\nThe term \"H\" of type \"A -> B -> A /\\ B\"\r\ncannot be applied to the terms\r\n \"x\" : \"B\"\r\n \"x\" : \"B\"\r\nThe 1st term has type \"B\" which should be coercible to\r\n\"A\". *)\r\n```\r\nI expect this tactic to work.  If I make `A -> B -> A /\\ B` be `A -> A -> A /\\ B`, I get `a := fun _ x0 : A => proj1 (H x0 x0) : A -> A -> A`, which is the wrong term.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337518049/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337518050","html_url":"https://github.com/coq/coq/issues/3248#issuecomment-337518050","issue_url":"https://api.github.com/repos/coq/coq/issues/3248","id":337518050,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUxODA1MA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-03-05T23:20:09Z","updated_at":"2017-10-18T09:14:13Z","author_association":"CONTRIBUTOR","body":"Comment author: @ppedrot\n\nI suspect some fishy interpretation for terms. Ltac does not have true variables, so it happily uses haphazard casts between constr and potential variables at runtime.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337518050/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337518052","html_url":"https://github.com/coq/coq/issues/3248#issuecomment-337518052","issue_url":"https://api.github.com/repos/coq/coq/issues/3248","id":337518052,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUxODA1Mg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-03-05T23:51:42Z","updated_at":"2017-10-18T09:14:13Z","author_association":"CONTRIBUTOR","body":"Comment author: @ppedrot\n\nActually this seems to be the expected behaviour. The binder does not create any fresh variables, and Ltac only manipulates terms outside of their environment. I assume there is a workaround to your particular problem nonetheless.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337518052/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337518053","html_url":"https://github.com/coq/coq/issues/3248#issuecomment-337518053","issue_url":"https://api.github.com/repos/coq/coq/issues/3248","id":337518053,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUxODA1Mw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-03-06T00:00:45Z","updated_at":"2017-10-18T09:14:13Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nWhy does [fun x : T' => ...] not create [x] as a fresh variable?  Is there a way to force it to do so?\n\nI find this behavior unexpected and unproductive; for some reason, Coq is identifying terms between different calls to my function just because they have the same name.\n\nMy first attempt at a workaround exposes another bug, which is that $()$ doesn't know about identifiers introduced in constr:(), which makes me surprised that my original tactic was accepted in the first place:\n\nLtac ret_and_left T :=\n  let t := type of T in\n  lazymatch eval hnf in t with\n    | ?a /\\ ?b => constr:(proj1 T)\n    | forall x : ?T', @ ?f x =>\n      let tac := ret_and_left in\n      constr:(fun x' : T' => let fx := T x' in\n                             $(let t := tac fx in\n                               exact t)$)\n  end.\n(* it can't find [fx] *)\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337518053/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337518056","html_url":"https://github.com/coq/coq/issues/3248#issuecomment-337518056","issue_url":"https://api.github.com/repos/coq/coq/issues/3248","id":337518056,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUxODA1Ng==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-03-06T00:02:14Z","updated_at":"2017-10-18T09:14:13Z","author_association":"CONTRIBUTOR","body":"Comment author: @ppedrot\n\nThis one seems more like a bug.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337518056/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337518057","html_url":"https://github.com/coq/coq/issues/3248#issuecomment-337518057","issue_url":"https://api.github.com/repos/coq/coq/issues/3248","id":337518057,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUxODA1Nw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-03-06T00:16:57Z","updated_at":"2017-10-18T09:14:13Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nCan you explain to me how to run the old ltac by hand, in a way that it's not a bug?  It seems to me to stem from the same behavior as the following, which also seems like a bug:\n\nLtac silly T := constr:(fun x : unit => T x).\nLtac silly' T := constr:(fun x : unit => $(let t' := T in exact t')$ x).\n\nGoal forall x : unit, True.\nintro x.\nlet t := constr:(fun y => y = x) in\nlet t' := silly t in\npose t'.\n(* [P := fun x0 : unit => (fun y : unit => y = x) x0 : unit -> Prop] - what I expected *)\nlet t := constr:(fun y => y = x) in\nlet t' := silly' t in\npose t'.\n(* [P0 := fun x0 : unit => (fun y : unit => y = x0) x0 : unit -> Prop] - what?! why'd my [x] from the environment get substituted to [x0]? *)\n\nIt seems that $()$ re-typechecks any terms that occur inside of it in unexpected ways, re-binding variables with duplicated names.  Or perhaps capture-avoiding substitution is done in the wrong order.  Anyway, I really do not expect my tactics to be sensitive to name changes in ways like this.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337518057/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337518060","html_url":"https://github.com/coq/coq/issues/3248#issuecomment-337518060","issue_url":"https://api.github.com/repos/coq/coq/issues/3248","id":337518060,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUxODA2MA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-03-06T00:38:30Z","updated_at":"2017-10-18T09:14:13Z","author_association":"CONTRIBUTOR","body":"Comment author: @ppedrot\n\nThe one with the let-binding now works in trunk as you expect. I will see what to do for the other ones.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337518060/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337518061","html_url":"https://github.com/coq/coq/issues/3248#issuecomment-337518061","issue_url":"https://api.github.com/repos/coq/coq/issues/3248","id":337518061,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUxODA2MQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-03-06T17:06:51Z","updated_at":"2017-10-18T09:14:14Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nThanks!\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337518061/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337518062","html_url":"https://github.com/coq/coq/issues/3248#issuecomment-337518062","issue_url":"https://api.github.com/repos/coq/coq/issues/3248","id":337518062,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUxODA2Mg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-03-07T00:28:41Z","updated_at":"2017-10-18T09:14:14Z","author_association":"CONTRIBUTOR","body":"Comment author: @ppedrot\n\nThe issue of capturing variables in $(...)$ constructions is deeper than it seems. I don't think I can easily fix it. It comes from the way goals are treated inside tactics: rel contexts become named context at the creation of the goal, so the unbound variables of the captured term refers to the innermost bound variable, which produces the behaviour you're witnessing.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337518062/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337518064","html_url":"https://github.com/coq/coq/issues/3248#issuecomment-337518064","issue_url":"https://api.github.com/repos/coq/coq/issues/3248","id":337518064,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUxODA2NA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-03-07T07:51:50Z","updated_at":"2017-10-18T09:14:14Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nWhat are rel contexts and named contexts?\n\nAre you saying that this happens because the \"x\" in my function is more inner than the \"x\" in the context?\n\nIs it possible to do some kind of pre-conversion at the beginning of the tactic, and applying renaming to the context and captured terms at the same time?  When does renaming currently happen?\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337518064/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337518066","html_url":"https://github.com/coq/coq/issues/3248#issuecomment-337518066","issue_url":"https://api.github.com/repos/coq/coq/issues/3248","id":337518066,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUxODA2Ng==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-09-07T13:28:04Z","updated_at":"2017-10-18T09:14:14Z","author_association":"CONTRIBUTOR","body":"Comment author: @ppedrot\n\nThis seems to be fixed in trunk but I have no idea of which commit did it...\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337518066/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337518067","html_url":"https://github.com/coq/coq/issues/3248#issuecomment-337518067","issue_url":"https://api.github.com/repos/coq/coq/issues/3248","id":337518067,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUxODA2Nw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-09-29T19:29:04Z","updated_at":"2018-04-17T18:58:26Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\r\n\r\nThis does not seem fixed in trunk.  I haven't re-tried the other code in the thread, but the following behaves incorrectly:\r\n```coq\r\nLtac ret_and_left f :=\r\n  let tac := ret_and_left in\r\n  let T := type of f in\r\n  lazymatch eval hnf in T with\r\n    | ?a /\\ ?b => exact (proj1 f)\r\n    | ?T' -> _ =>\r\n      let ret := constr:(fun x' : T' => $(tac (f x'))$) in\r\n      let ret' := (eval cbv zeta in ret) in\r\n      exact ret'\r\n  end.\r\n\r\nGoal forall A B : Prop, (A -> A -> A -> A /\\ B) -> True.\r\n  intros A B H.\r\n  pose $(ret_and_left H)$.\r\n  (** [fun _ _ x'1 : A => proj1 (H x'1 x'1 x'1) : A -> A -> A -> A *)\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337518067/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337518068","html_url":"https://github.com/coq/coq/issues/3248#issuecomment-337518068","issue_url":"https://api.github.com/repos/coq/coq/issues/3248","id":337518068,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUxODA2OA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-02-27T20:07:41Z","updated_at":"2018-04-17T18:57:59Z","author_association":"CONTRIBUTOR","body":"Comment author: @ppedrot\r\n\r\nThe error you mention was actually the expected behaviour, because Ltac only manipulates terms with variables in a non-capture-avoiding manner. Now that we have a way to give a name to binders in Ltac, you can work around your problem by simply writing the tactic as:\r\n```coq\r\nLtac ret_and_left f :=\r\n  let tac := ret_and_left in\r\n  let T := type of f in\r\n  lazymatch eval hnf in T with\r\n    | ?a /\\ ?b => exact (proj1 f)\r\n    | ?T' -> _ =>\r\n      let x' := fresh \"x\" in\r\n      let ret := constr:(fun x' : T' => $(tac (f x'))$) in\r\n      let ret' := (eval cbv zeta in ret) in\r\n      exact ret'\r\n  end.\r\n```\r\n(Note the fresh variable instantiation.)\r\n\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337518068/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/382490811","html_url":"https://github.com/coq/coq/issues/3248#issuecomment-382490811","issue_url":"https://api.github.com/repos/coq/coq/issues/3248","id":382490811,"node_id":"MDEyOklzc3VlQ29tbWVudDM4MjQ5MDgxMQ==","user":{"login":"herbelin","id":460771,"node_id":"MDQ6VXNlcjQ2MDc3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/460771?v=4","gravatar_id":"","url":"https://api.github.com/users/herbelin","html_url":"https://github.com/herbelin","followers_url":"https://api.github.com/users/herbelin/followers","following_url":"https://api.github.com/users/herbelin/following{/other_user}","gists_url":"https://api.github.com/users/herbelin/gists{/gist_id}","starred_url":"https://api.github.com/users/herbelin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/herbelin/subscriptions","organizations_url":"https://api.github.com/users/herbelin/orgs","repos_url":"https://api.github.com/users/herbelin/repos","events_url":"https://api.github.com/users/herbelin/events{/privacy}","received_events_url":"https://api.github.com/users/herbelin/received_events","type":"User","site_admin":false},"created_at":"2018-04-18T18:49:31Z","updated_at":"2018-04-18T18:49:31Z","author_association":"MEMBER","body":"I'm adding here a related issue discussed [here](https://github.com/coq/coq/pull/307#issuecomment-255523527).\r\n\r\n```coq\r\nLtac f_rec n x y := match n with\r\n  | 3 => constr:((x,y))\r\n  | _ => constr:(let z := n in ltac:(let ret := f_rec (S n) y z in exact ret))\r\n end.\r\nCheck eq_refl : ltac:(let b := f_rec 1 0 0 in exact (b=(1,2))).\r\n```\r\nNote that it works (in Ltac1) if using a `fresh`:\r\n```coq\r\nLtac f_rec n x y := match n with\r\n  | 3 => constr:((x,y))\r\n  | _ => let z:=fresh in constr:(let z := n in ltac:(let ret := f_rec (S n) y z in exact ret))\r\n end.\r\nCheck eq_refl : ltac:(let b := f_rec 1 0 0 in exact (b=(1,2))).\r\n```","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/382490811/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]