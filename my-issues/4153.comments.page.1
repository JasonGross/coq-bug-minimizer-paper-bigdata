[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337533472","html_url":"https://github.com/coq/coq/issues/4153#issuecomment-337533472","issue_url":"https://api.github.com/repos/coq/coq/issues/4153","id":337533472,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzMzQ3Mg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-03-23T02:58:20Z","updated_at":"2017-10-18T09:58:38Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nHere is code that worked in 8.4, and does not work in 8.5:\n\n(* File reduced by coq-bug-finder from original input, then from 6735 lines to 486 lines, then from 407 lines to 72 lines *)\n(* coqc version 8.5beta1 (March 2015) compiled on Mar 15 2015 16:24:54 with OCaml 4.01.0\n   coqtop version cagnode15:/afs/csail.mit.edu/u/j/jgross/coq-8.5,v8.5 (1b3759e78f227eb85a128c58b8ce8c11509dd8c3) *)\nRequire Import Coq.Lists.List.\nRequire Import Coq.Sets.Ensembles.\nGlobal Set Implicit Arguments.\nClass DecideableEnsemble {A} (P : Ensemble A) :=\n  { dec : A -> bool;\n    dec_decides_P : forall a, dec a = true <-> P a}.\nClass IndexBound {A : Set} (a : A) (Bound : list A) :=\n  { ibound :> nat;\n    boundi : nth_error Bound ibound = Some a}.\nGlobal Instance IndexBound_tail\n       {A : Set}\n       (a a' : A) (Bound : list A)\n       {sB' : IndexBound a Bound}\n: IndexBound a (a' :: Bound) :=\n  { ibound := S ibound;\n    boundi := boundi }.\nGlobal Arguments ibound {A} [a Bound] _ .\nRecord BoundedIndex {A : Set} (Bound : list A) :=\n  { bindex : A;\n    indexb :> IndexBound bindex Bound }.\nLocal Notation Dep_Type A := (A -> Type).\nAxiom Iterate_Dep_Type_BoundedIndex_filter\n: forall {A : Set} (Bound : list A) (filter : nat -> bool), Dep_Type (BoundedIndex Bound) -> Type.\n\nGoal forall (A : Set) (a : A) (Bound : list A)\n            (_ : forall (P : forall _ : @ BoundedIndex A Bound, Type)\n                        (filter : Ensemble nat)\n                        (filter_dec : @ DecideableEnsemble nat filter)\n                        (_ : forall (idx : @ BoundedIndex A Bound)\n                                    (_ : filter\n                                           (@ ibound A (@ bindex A Bound idx) Bound\n                                                    (@ indexb A Bound idx))),\n                               P idx),\n                   @ Iterate_Dep_Type_BoundedIndex_filter A Bound\n                                                         (@ dec nat filter filter_dec) P)\n            (P : forall _ : @ BoundedIndex A (@ cons A a Bound), Type)\n            (filter : Ensemble nat) (filter_dec : @ DecideableEnsemble nat filter),\n       @ Iterate_Dep_Type_BoundedIndex_filter A Bound\n                                             (fun n : nat => @ dec nat filter filter_dec (S n))\n                                             (fun H : @ BoundedIndex A Bound =>\n                                                P\n                                                  (@ Build_BoundedIndex A (@ cons A a Bound) (@ bindex A Bound H)\n                                                                       (@ IndexBound_tail A (@ bindex A Bound H) a Bound\n                                                                                         (@ indexb A Bound H)))).\n  intros A a Bound IHBound P filter filter_dec.\n  refine (IHBound _ (fun n => filter (S n))\n                  {| dec := _;\n                     dec_decides_P n := (dec_decides_P (S n)) |} _) || fail \"too early\".\n  Undo.\n  eapply (IHBound _ (fun n => filter (S n))\n                  {| dec := _;\n                     dec_decides_P n := (dec_decides_P (S n)) |}).\n(* Toplevel input, characters 129-148:\nError:\nIn environment\nA : Set\na : A\nBound : list A\nIHBound : forall (P : Dep_Type (BoundedIndex Bound))\n            (filter : Ensemble nat) (filter_dec : DecideableEnsemble filter),\n          (forall idx : BoundedIndex Bound, filter (ibound idx) -> P idx) ->\n          Iterate_Dep_Type_BoundedIndex_filter dec P\nP : Dep_Type (BoundedIndex (a :: Bound))\nfilter : Ensemble nat\nfilter_dec : DecideableEnsemble filter\nn : nat\nThe term \"dec_decides_P (S n)\" has type \"dec (S n) = true <-> ?P (S n)\"\nwhile it is expected to have type \"dec (S n) = true <-> ?e n\".\n*)\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337533472/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/353596618","html_url":"https://github.com/coq/coq/issues/4153#issuecomment-353596618","issue_url":"https://api.github.com/repos/coq/coq/issues/4153","id":353596618,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MzU5NjYxOA==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2017-12-22T13:17:11Z","updated_at":"2017-12-22T13:17:11Z","author_association":"MEMBER","body":"This is a bug affecting an already old version, and it is unlikely both that we fix it and that it would help you. Therefore I'll close it as WONTFIX.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/353596618/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]