[{"url":"https://api.github.com/repos/coq/coq/issues/comments/571710861","html_url":"https://github.com/coq/coq/issues/11364#issuecomment-571710861","issue_url":"https://api.github.com/repos/coq/coq/issues/11364","id":571710861,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MTcxMDg2MQ==","user":{"login":"herbelin","id":460771,"node_id":"MDQ6VXNlcjQ2MDc3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/460771?v=4","gravatar_id":"","url":"https://api.github.com/users/herbelin","html_url":"https://github.com/herbelin","followers_url":"https://api.github.com/users/herbelin/followers","following_url":"https://api.github.com/users/herbelin/following{/other_user}","gists_url":"https://api.github.com/users/herbelin/gists{/gist_id}","starred_url":"https://api.github.com/users/herbelin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/herbelin/subscriptions","organizations_url":"https://api.github.com/users/herbelin/orgs","repos_url":"https://api.github.com/users/herbelin/repos","events_url":"https://api.github.com/users/herbelin/events{/privacy}","received_events_url":"https://api.github.com/users/herbelin/received_events","type":"User","site_admin":false},"created_at":"2020-01-07T18:26:40Z","updated_at":"2020-01-07T19:06:34Z","author_association":"MEMBER","body":"@JasonGross: your proposal looks good. Would need some work to be implemented though.\r\n\r\nAdded: One would need to keep parameters in `PatCstr`, which means not applying `Constrintern.chop_params_pattern` in `Constrintern.intern_cstr_with_all_args`. Then, in `cases.ml`, one would need to do the job of unifying if a term and to add a `let` if a fresh name. The latter seems to lead to changing the reduction rule for `match` so that it binds the parameters in the right-hand side of a clause. But then, we need to remember the parameters somewhere in the internal `Case` constructor so that the parameters are known at reduction time. So, accepting a term and unifying seems to be an easier first step. I.e., accepting a binder seems to be a bigger change.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/571710861/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]