[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337515917","html_url":"https://github.com/coq/coq/issues/3129#issuecomment-337515917","issue_url":"https://api.github.com/repos/coq/coq/issues/3129","id":337515917,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUxNTkxNw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2013-09-17T16:37:32Z","updated_at":"2017-10-18T09:07:59Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\n(* I would like either a flag to SeachAbout or a UnificationSearchAbout (or similar) so that in the following, test_theorem is found by the second search: *)\n\nTheorem test_theorem (A : Type) (x y : A) : x = y.\nAdmitted.\n\nSearchAbout (_ = _).\n(* ...\n...\ntest_theorem: forall (A : Type) (x y : A), x = y *)\nSearchAbout (plus = mult).\n(* *)\n(* I would like to see test_theorem here. *)\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337515917/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337515919","html_url":"https://github.com/coq/coq/issues/3129#issuecomment-337515919","issue_url":"https://api.github.com/repos/coq/coq/issues/3129","id":337515919,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUxNTkxOQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2013-09-18T12:10:04Z","updated_at":"2017-10-18T09:08:00Z","author_association":"CONTRIBUTOR","body":"Comment author: @ppedrot\n\nThis is stronger than plain unification. If I understand well, you want Search to be able to instantiate the arguments of a forall construct? This is indeed doable, but there will be completeness issues.\n\nBtw, any patch is welcome, and by the current standards, you should consider hacking Coq's code in order to become a full-fledged Coq guru...\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337515919/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337515921","html_url":"https://github.com/coq/coq/issues/3129#issuecomment-337515921","issue_url":"https://api.github.com/repos/coq/coq/issues/3129","id":337515921,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUxNTkyMQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-06-02T13:44:43Z","updated_at":"2017-10-18T09:08:00Z","author_association":"CONTRIBUTOR","body":"Comment author: @ppedrot\n\nWould you already be happy with a Search function taking a tactic T such that all the terms returned by [Search T] are the [c] s.t. [T c] does not fail? You would then use all the Ltac trickery you know of to do whatever you want...\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337515921/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]