[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548374","html_url":"https://github.com/coq/coq/issues/5149#issuecomment-337548374","issue_url":"https://api.github.com/repos/coq/coq/issues/5149","id":337548374,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0ODM3NA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-10-18T21:45:50Z","updated_at":"2017-10-18T10:44:42Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nGoal forall (base_type_code : Type) (t : base_type_code) (flat_type : Type) \n            (t' : flat_type) (exprf interp_flat_type0 interp_flat_type1 : \nflat_type -> Type)\n            (v v' : interp_flat_type1 t'),\n    v = v' ->\n    forall (interpf : forall t0 : flat_type, exprf t0 -> interp_flat_type1 t0)\n           (SmartVarVar : forall t0 : flat_type, interp_flat_type1 t0 -> \ninterp_flat_type0 t0)\n           (Tbase : base_type_code -> flat_type) (x : exprf (Tbase t))\n           (x' : interp_flat_type1 (Tbase t)) (T : Type)\n           (flatten_binding_list : forall t0 : flat_type,\n               interp_flat_type0 t0 -> interp_flat_type1 t0 -> list T)\n           (P : T -> list T -> Prop) (prod : Type -> Type -> Type)\n           (s : forall x0 : base_type_code, prod (exprf (Tbase x0)) \n(interp_flat_type1 (Tbase x0)) -> T)\n           (pair : forall A B : Type, A -> B -> prod A B),\n      P (s t (pair (exprf (Tbase t)) (interp_flat_type1 (Tbase t)) x x'))\n        (flatten_binding_list t' (SmartVarVar t' v') v) ->\n      (forall (t0 : base_type_code) (t'0 : flat_type) (v0 : interp_flat_type1 \nt'0)\n              (x0 : exprf (Tbase t0)) (x'0 : interp_flat_type1 (Tbase t0)),\n          P (s t0 (pair (exprf (Tbase t0)) (interp_flat_type1 (Tbase t0)) x0 \nx'0))\n            (flatten_binding_list t'0 (SmartVarVar t'0 v0) v0) -> interpf \n(Tbase t0) x0 = x'0) ->\n      interpf (Tbase t) x = x'.\nProof.\n  intros ?????????????????????? interpf_SmartVarVar.\n  solve [ unshelve (subst; eapply interpf_SmartVarVar; eassumption) ] || fail \n\"too early\".\n  Undo.\n  solve [ unshelve (eapply interpf_SmartVarVar; subst; eassumption) ]. (* \nError: No applicable tactic. *)\n\n\n\n\nNote that if I do\n\n  eapply interpf_SmartVarVar; subst; eassumption.\n  Grab Existential Variables.\n  { exfalso.\n\nI get the very strange error message \"Error: Incorrect number of goals \n(expected 1 tactic).\" on [exfalso].\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548374/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548375","html_url":"https://github.com/coq/coq/issues/5149#issuecomment-337548375","issue_url":"https://api.github.com/repos/coq/coq/issues/5149","id":337548375,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0ODM3NQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-10-18T22:03:46Z","updated_at":"2017-10-18T10:44:42Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nBisecting gives:\n\n0b417c12eb10bb29bcee04384b6c0855cb9de73a is the first bad commit\ncommit 0b417c12eb10bb29bcee04384b6c0855cb9de73a\nAuthor: Matthieu Sozeau <matthieu.sozeau@ inria.fr>\nDate:   Wed Oct 5 17:50:45 2016 +0200\n\n    unification.ml: fix for bug [BZ#4763](https://github.com/coq/coq/issues?q=is%3Aissue%20%22Original%20bug%20ID%3A%20BZ%234763%22), unif regression\n    \n    Do not force all remaining conversions problems to be solved after the\n    _first_ solution of an evar, but only at the end of assignment of terms\n    to evars in w_merge. This was hell to track down, thanks for the help of\n    Maxime. contribs pass and HoTT too.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548375/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548377","html_url":"https://github.com/coq/coq/issues/5149#issuecomment-337548377","issue_url":"https://api.github.com/repos/coq/coq/issues/5149","id":337548377,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0ODM3Nw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-10-19T06:39:15Z","updated_at":"2017-10-18T10:44:43Z","author_association":"CONTRIBUTOR","body":"Comment author: @herbelin\n\nHi Jason,\n\nThis is not properly related to \"subst\". The only role of \"subst\" here is to produce an evar instantiated twice with the same variable so that it is not invertible canonically (the evar is \"?v0@ {v:=v'; v':=v'}\" to be unified with \"v'\").\n\nThe removal of the consider_remaining_unif_problems in 0b417c12eb did that eassumption does not try anymore to find a (heuristic) instance for \"?v0\".\n\nOne does not see it because not all pending conversion problems are actually printed. This is something we observed with ThÃ©o that the so-called pending evar \"candidates\" are not printed.\n\nI guess that a fix would not be too difficult, knowing however that we are here at the border of the design of what we want in terms of interactivity with unification.\n\nFor the record, a much shorter example:\n\nGoal forall x x' : nat, x = x' -> S x = S x -> exists y, S y = S x.\nintros.\neexists.\nrewrite <- H.\neassumption.\n(* goal of type \"nat\" remaining on the shelf *)\n\nAs for the \"Incorrect number of goals\", I would suspect this is another bug.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548377/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548378","html_url":"https://github.com/coq/coq/issues/5149#issuecomment-337548378","issue_url":"https://api.github.com/repos/coq/coq/issues/5149","id":337548378,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0ODM3OA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-10-19T08:15:44Z","updated_at":"2017-10-18T10:44:43Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nInteresting... should we print the evar candidates as well then? About the current issue, I think there's a little issue, how come w_unify just restricts the candidates of ?y but doesn't add a ?y[x:=x,x':=x] = x problem as well? It seems that the information is lost to me.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548378/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548380","html_url":"https://github.com/coq/coq/issues/5149#issuecomment-337548380","issue_url":"https://api.github.com/repos/coq/coq/issues/5149","id":337548380,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0ODM4MA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-10-19T08:31:20Z","updated_at":"2017-10-18T10:44:43Z","author_association":"CONTRIBUTOR","body":"Comment author: @herbelin\n\n(In reply to Matthieu Sozeau from comment [BZ#3](https://github.com/coq/coq/issues?q=is%3Aissue%20%22Original%20bug%20ID%3A%20BZ%233%22))\n> Interesting... should we print the evar candidates as well then?\n\nAs soon as pending problems are printed, yes, evar candidates should be printed as well.\n\n> About the\n> current issue, I think there's a little issue, how come w_unify just\n> restricts the candidates of ?y but doesn't add a ?y[x:=x,x':=x] = x problem\n> as well? It seems that the information is lost to me.\n\nCandidates can be and are indeed used to represent this kind of global pending constraint in a local way. This equation is indeed equivalent to instantiating ?y by either x or x'.\n\nWhy does w_unify do that? Because some part of evarconv and evarsolve do it in general, and presumably did it here.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548380/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548381","html_url":"https://github.com/coq/coq/issues/5149#issuecomment-337548381","issue_url":"https://api.github.com/repos/coq/coq/issues/5149","id":337548381,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0ODM4MQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-10-19T11:28:43Z","updated_at":"2017-10-18T10:44:43Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\n(In reply to Hugo Herbelin from comment [BZ#4](https://github.com/coq/coq/issues?q=is%3Aissue%20%22Original%20bug%20ID%3A%20BZ%234%22))\n> (In reply to Matthieu Sozeau from comment [BZ#3](https://github.com/coq/coq/issues?q=is%3Aissue%20%22Original%20bug%20ID%3A%20BZ%233%22))\n> > Interesting... should we print the evar candidates as well then?\n> \n> As soon as pending problems are printed, yes, evar candidates should be\n> printed as well.\n\nOk, will do in a separate commit then.\n\n> > About the\n> > current issue, I think there's a little issue, how come w_unify just\n> > restricts the candidates of ?y but doesn't add a ?y[x:=x,x':=x] = x problem\n> > as well? It seems that the information is lost to me.\n> \n> Candidates can be and are indeed used to represent this kind of global\n> pending constraint in a local way. This equation is indeed equivalent to\n> instantiating ?y by either x or x'.\n> \n> Why does w_unify do that? Because some part of evarconv and evarsolve do it\n> in general, and presumably did it here.\n\nI see, my overlook, they should indeed be seen as a pending disjunction of constraints.\nI was worried in 0b417c12eb that entirely removing the consider_remaining in favor of reconsider would stop solving some preexisting problems and this test-case shows it can even apply to problems that w_unify produces itself. By putting it back we're making a choice that w_unify always solves the existing and new unif constraints (candidates included) or fails. I guess we'll have to think about how to control this in the future indeed, as I can see tactic users wanting at least both \"extreme\" behaviors (always solve them or never make a choice) and maybe some in between as well.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548381/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548382","html_url":"https://github.com/coq/coq/issues/5149#issuecomment-337548382","issue_url":"https://api.github.com/repos/coq/coq/issues/5149","id":337548382,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0ODM4Mg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-10-19T11:36:19Z","updated_at":"2017-10-18T10:44:43Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nThe fix is being tested here:\nhttps://ci.inria.fr/coq/view/coq-contribs/job/coq-contribs/504/console\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548382/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548384","html_url":"https://github.com/coq/coq/issues/5149#issuecomment-337548384","issue_url":"https://api.github.com/repos/coq/coq/issues/5149","id":337548384,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0ODM4NA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-10-19T13:28:14Z","updated_at":"2017-10-18T10:44:43Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nThe other bug (expected 1 tactic) should be investigated too, but my fix revealed another bug in error printing. The two are being tested here: https://ci.inria.fr/coq/view/coq-contribs/job/coq-contribs/508/console\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548384/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548385","html_url":"https://github.com/coq/coq/issues/5149#issuecomment-337548385","issue_url":"https://api.github.com/repos/coq/coq/issues/5149","id":337548385,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0ODM4NQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-10-20T07:34:10Z","updated_at":"2017-10-18T10:44:43Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nOk, after discussions with Enrico and Maxime, here's another proposal for a fix:\n\nhttps://github.com/mattam82/coq/commit/7efd26d177ed7a050fe8a1ca000a7fd8af96a4b9\n\n\nAdds a new multi-goal tactic [solve_constraints] that forces solving of\nunification constraints and evar candidates to be solved.\nAdds an option [Set Eager Tactic Unification] that launches\n[solve_constraints] at every [.], on by default, preserving the 8.4\nbehavior of tactics. \n\nWith this in place, eassumption. does run consider_remaining_unif_problems, choosing a solution. The initial example goes through if we remove unshelve or add an explicit solve_constraints after eassumption (with or without the unshelve).\n\nhttps://ci.inria.fr/coq/view/coq-contribs/job/coq-contribs/516/console\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548385/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548386","html_url":"https://github.com/coq/coq/issues/5149#issuecomment-337548386","issue_url":"https://api.github.com/repos/coq/coq/issues/5149","id":337548386,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0ODM4Ng==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-10-20T08:06:39Z","updated_at":"2017-10-18T10:44:43Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nAnother try. Some test-suite files change behavior, failing explicitely when consider_remaining fails now. https://ci.inria.fr/coq/view/coq-contribs/job/coq-contribs/518/\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548386/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548387","html_url":"https://github.com/coq/coq/issues/5149#issuecomment-337548387","issue_url":"https://api.github.com/repos/coq/coq/issues/5149","id":337548387,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0ODM4Nw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-10-20T08:16:51Z","updated_at":"2017-10-18T10:44:44Z","author_association":"CONTRIBUTOR","body":"Comment author: @maximedenes\n\nI like the proposal a lot, but it may be time to also rename [consider_remaining_unif_problems] into [heuristic_solve_constraints], [heuristic_solve_postponed] or something like that.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548387/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548388","html_url":"https://github.com/coq/coq/issues/5149#issuecomment-337548388","issue_url":"https://api.github.com/repos/coq/coq/issues/5149","id":337548388,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0ODM4OA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-10-20T08:19:56Z","updated_at":"2017-10-18T10:44:44Z","author_association":"CONTRIBUTOR","body":"Comment author: @maximedenes\n\nTwo questions:\n\n1) how does solve_constraints (when called at \".\") relate to shelving?\n\n2) what exactly is the change of behavior? I thought you told me yesterday that consider_remaining_unif_problems would fail if it could not solve the constraints. So how does solve_constraints introduce more failures?\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548388/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548389","html_url":"https://github.com/coq/coq/issues/5149#issuecomment-337548389","issue_url":"https://api.github.com/repos/coq/coq/issues/5149","id":337548389,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0ODM4OQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-10-20T08:35:06Z","updated_at":"2017-10-18T10:44:44Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nsolve_constraints_heuristically sounds good to me.\n1) It's a multi-goal tactic, it's global and it works if there are only shelved goals too. The \".\" becomes equivalent to \"; all:solve_constraints\"\n2) refine didn't call consider_remaining before, it silently left unification constraints.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548389/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548391","html_url":"https://github.com/coq/coq/issues/5149#issuecomment-337548391","issue_url":"https://api.github.com/repos/coq/coq/issues/5149","id":337548391,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0ODM5MQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-10-20T08:37:19Z","updated_at":"2017-10-18T10:44:44Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nHow about \"Set Tactic Unification Use Heuristics\" instead of my \"Eager\" btw? When unset it should really mean that the unifier makes no choice and leaves the constraints that have multiple solutions.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548391/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548392","html_url":"https://github.com/coq/coq/issues/5149#issuecomment-337548392","issue_url":"https://api.github.com/repos/coq/coq/issues/5149","id":337548392,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0ODM5Mg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-10-20T12:49:37Z","updated_at":"2017-10-18T10:44:44Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nIt passed the contribs, making a PR for review before merge!\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548392/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548394","html_url":"https://github.com/coq/coq/issues/5149#issuecomment-337548394","issue_url":"https://api.github.com/repos/coq/coq/issues/5149","id":337548394,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0ODM5NA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-10-20T12:59:11Z","updated_at":"2017-10-18T10:44:44Z","author_association":"CONTRIBUTOR","body":"Comment author: @herbelin\n\nAs an add-on, I like the idea of reflecting the function applying unification \"heuristic\" as a proper tactic.\n\nI feel that it is however a bit early to provide an option to (de)activating it in the sense that I see a couple of behaviors to be changed before embarking into a model giving to the user a better control on unification.\n\n1) For instance, it happens that refine actually calls consider_remaining_unif_problems but the error is not fatal when consider_remaining_unif_problems fails (this is because it calls consider_remaining_unif_problems via Pretyping.apply_heuristics with the fail_evar flag to false).\n\nFor instance, if the following generates unresolved unification constraints\n\nGoal forall x:nat, True /\\ x = x.\nintro x. refine (nat_rect _ _ _ x).\n\nThe following does not, even though the statement looks superficially similar and that there are still several solutions for the return predicate:\n\nGoal forall x:nat, x = x.\nintro x. refine (nat_rect _ _ _ x).\n\n2) Unification is currently not enough designed in such a way that heuristics are only applied in consider_remaining_unif_problems. There are choices, especially f.o. heuristics tried early already in evarconv.\n\nSo, to go in the direction of a clear separation of the use of heuristics outside of the main loop decomposing unification problems into many-solutions elementary constraints, I feel that we have to work first on the unification algorithm itself.\n\nAn alternative is otherwise to clearly tag the option \"Tactic Unification Use Heuristics\" as experimental so that we can think more at the underlying general design.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548394/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548395","html_url":"https://github.com/coq/coq/issues/5149#issuecomment-337548395","issue_url":"https://api.github.com/repos/coq/coq/issues/5149","id":337548395,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0ODM5NQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-10-20T14:21:29Z","updated_at":"2017-10-18T10:44:44Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nThe fix for 8.5 is discussed here: https://github.com/coq/coq/pull/330\nThe addendum for 8.6 (user-accessible tactic and mode with no constraint solving) here:\nhttps://github.com/coq/coq/pull/331\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548395/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]