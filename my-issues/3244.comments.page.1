[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337517964","html_url":"https://github.com/coq/coq/issues/3244#issuecomment-337517964","issue_url":"https://api.github.com/repos/coq/coq/issues/3244","id":337517964,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUxNzk2NA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-02-28T00:27:55Z","updated_at":"2017-10-18T09:13:57Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nI don't expect to need to add underscores to make [rewrite] go through.\n\n(* File reduced by coq-bug-finder from 925 lines to 118 lines, then from 100 lines to 76 lines. *)\nRequire Export Setoid RelationClasses Morphisms.\n\nGlobal Set Implicit Arguments.\n\nClass Context := { }.\n\nInductive Comp `{ctx : Context} : Type -> Type :=\n| Bind : forall A B, Comp A -> (A -> Comp B) -> Comp B\n| Pick : forall A, (A -> Prop) -> Comp A.\n\nAxiom refine : forall {A} {oldCtx newCtx : Context}\n                      (old : @ Comp oldCtx A)\n                      (new : @ Comp newCtx A), Prop.\n\nDefinition refineEquiv {A}\n           {oldCtx newCtx : Context}\n           (old : @ Comp oldCtx A)\n           (new : @ Comp newCtx A) : Prop\n  := refine old new /\\ refine new old.\n\nGlobal Instance refineEquiv_Equivalence A `{Context} : Equivalence (@ refineEquiv A _ _).\nAdmitted.\n\nAdd Parametric Morphism `{Context} A B\n: (@ Bind _ A B)\n    with signature\n    (@ refineEquiv A _ _)\n      ==> (pointwise_relation _ (@ refineEquiv B _ _))\n      ==> (@ refineEquiv B _ _)\n      as refineEquiv_bind.\nadmit.\nDefined.\n\nAxiom refineEquiv_pick_pick : forall A {ctx1 ctx2} (P1 P2 : A -> Prop),\n                                @ refineEquiv _ ctx1 ctx2 (Pick P1) (Pick P2).\n\nGoal forall (ctx2 : Context) (A B : Type) (P : A -> Prop) (f : A -> B) H H'',\n       @ refineEquiv B ctx2 ctx2\n                    (Bind (Pick P) H'')\n                    H.\nintros.\nerewrite (@ refineEquiv_pick_pick _ _ _).\nUndo.\nSet Printing All.\nerewrite (@ refineEquiv_pick_pick _ _).\n(* Toplevel input, characters 15-52:\nError:\nFound no subterm matching \"@ refine ?140 ?141 ?469 (@ Pick ?141 ?140 ?470)\n                             (@ Pick ?469 ?140 ?471)\" in the current goal. *)\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337517964/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]