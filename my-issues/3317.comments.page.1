[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337519299","html_url":"https://github.com/coq/coq/issues/3317#issuecomment-337519299","issue_url":"https://api.github.com/repos/coq/coq/issues/3317","id":337519299,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUxOTI5OQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-05-13T15:03:30Z","updated_at":"2017-10-18T09:17:34Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nSet Universe Polymorphism.\nSet Primitive Projections.\nSet Asymmetric Patterns.\nInductive paths {A} (x : A) : A -> Type := idpath : paths x x\nwhere \"x = y\" := (@ paths _ x y) : type_scope.\nRecord sigT {A : Type} (P : A -> Type) := existT { projT1 : A; projT2 : P projT1 }.\nArguments existT {A} _ _ _.\nDefinition transport {A : Type} (P : A -> Type) {x y : A} (p : x = y) (u : P x) : P y :=\n  match p with idpath => u end.\nNotation \"x .1\" := (projT1 x) (at level 3).\nNotation \"x .2\" := (projT2 x) (at level 3).\nNotation \"( x ; y )\" := (existT _ x y).\nSet Printing All.\nDefinition path_sigma_uncurried {A : Type} (P : A -> Type) (u v : sigT P)\n  (pq : sigT (fun p : u.1 = v.1 => transport _ p u.2 = v.2))\n  : u = v\n  := match pq with\n       | existT p q =>\n         match u, v return (forall p0 : (u.1 = v.1), (transport P p0 u.2 = v.2) -> (u=v)) with\n           | (x;y), (x';y') => fun p1 (q1 : transport P p1 (existT P x y).2 = (existT P x' y').2) =>\n             match p1 in (_ = x'') return (forall y'', (transport _ p1 y = y'') -> (x;y)=(x'';y'')) with\n               | idpath => fun y' (q2 : transport 1 1 y = y') =>\n                 match q2 in (_ = y'') return (x;y) = (x;y'') with\n                   | idpath => 1\n                 end\n             end y' q1\n         end p q\n     end.\n(* Toplevel input, characters 341-357:\nError:\nIn environment\nA : Type\nP : forall _ : A, Type\nu : @ sigT A P\nv : @ sigT A P\npq :\n@ sigT (@ paths A (projT1 u) (projT1 v))\n  (fun p : @ paths A (projT1 u) (projT1 v) =>\n   @ paths (P (projT1 v)) (@ transport A P (projT1 u) (projT1 v) p (projT2 u))\n     (projT2 v))\np : @ paths A (projT1 u) (projT1 v)\nq :\n@ paths (P (projT1 v)) (@ transport A P (projT1 u) (projT1 v) p (projT2 u))\n  (projT2 v)\nx : A\ny : P x\nx' : A\ny' : P x'\np1 : @ paths A (projT1 (@ existT A P x y)) (projT1 (@ existT A P x' y'))\nThe term \"projT2 (@ existT A P x y)\" has type \"P (projT1 (@ existT A P x y))\"\nwhile it is expected to have type \"P (projT1 (@ existT A P x y))\".\n *)\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337519299/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337519300","html_url":"https://github.com/coq/coq/issues/3317#issuecomment-337519300","issue_url":"https://api.github.com/repos/coq/coq/issues/3317","id":337519300,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUxOTMwMA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-05-13T15:09:10Z","updated_at":"2017-10-18T09:17:34Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nPerhaps related:\n\nSet Universe Polymorphism.\nSet Primitive Projections.\nSet Asymmetric Patterns.\nInductive paths {A} (x : A) : A -> Type := idpath : paths x x\nwhere \"x = y\" := (@ paths _ x y) : type_scope.\nRecord sigT {A : Type} (P : A -> Type) := existT { projT1 : A; projT2 : P projT1 }.\nArguments existT {A} _ _ _.\nDefinition transport {A : Type} (P : A -> Type) {x y : A} (p : x = y) (u : P x) : P y :=\n  match p with idpath => u end.\nNotation \"x .1\" := (projT1 x) (at level 3).\nNotation \"x .2\" := (projT2 x) (at level 3).\nNotation \"( x ; y )\" := (existT _ x y).\nSet Printing All.\n\nDefinition path_sigma_uncurried {A : Type} (P : A -> Type) (u v : sigT P)\n  (pq : sigT (fun p : u.1 = v.1 => transport _ p u.2 = v.2))\n  : u = v.\nProof.\n  destruct u as [x y].\n  destruct v. (* Toplevel input, characters 0-11:\nError: Illegal application:\nThe term \"transport\" of type\n \"forall (A : Type) (P : forall _ : A, Type) (x y : A)\n    (_ : @ paths A x y) (_ : P x), P y\"\ncannot be applied to the terms\n \"A\" : \"Type\"\n \"P\" : \"forall _ : A, Type\"\n \"projT1 (@ existT A P x y)\" : \"A\"\n \"projT1 v\" : \"A\"\n \"p\" : \"@ paths A (projT1 (@ existT A P x y)) (projT1 v)\"\n \"projT2 (@ existT A P x y)\" : \"P (projT1 (@ existT A P x y))\"\nThe 5th term has type \"@ paths A (projT1 (@ existT A P x y)) (projT1 v)\"\nwhich should be coercible to\n \"@ paths A (projT1 (@ existT A P x y)) (projT1 v)\".\n *)\n\n(running [simpl in *] makes it work)\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337519300/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337519301","html_url":"https://github.com/coq/coq/issues/3317#issuecomment-337519301","issue_url":"https://api.github.com/repos/coq/coq/issues/3317","id":337519301,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUxOTMwMQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-07-29T12:36:39Z","updated_at":"2017-10-18T09:17:34Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nFixed in trunk.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337519301/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]