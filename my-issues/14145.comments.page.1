[{"url":"https://api.github.com/repos/coq/coq/issues/comments/824173553","html_url":"https://github.com/coq/coq/issues/14145#issuecomment-824173553","issue_url":"https://api.github.com/repos/coq/coq/issues/14145","id":824173553,"node_id":"MDEyOklzc3VlQ29tbWVudDgyNDE3MzU1Mw==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2021-04-21T15:56:39Z","updated_at":"2021-04-21T15:56:39Z","author_association":"MEMBER","body":"I don't think you can do that without breaking Ltac1 parsing.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/824173553/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/824174367","html_url":"https://github.com/coq/coq/issues/14145#issuecomment-824174367","issue_url":"https://api.github.com/repos/coq/coq/issues/14145","id":824174367,"node_id":"MDEyOklzc3VlQ29tbWVudDgyNDE3NDM2Nw==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2021-04-21T15:57:48Z","updated_at":"2021-04-21T15:57:48Z","author_association":"MEMBER","body":"Actually it's worse than that, the *runtime* probably depends on that indirectly. It's the same reason you can't write `(fun x => idtac) foo` in Ltac1. ","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/824174367/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/824198841","html_url":"https://github.com/coq/coq/issues/14145#issuecomment-824198841","issue_url":"https://api.github.com/repos/coq/coq/issues/14145","id":824198841,"node_id":"MDEyOklzc3VlQ29tbWVudDgyNDE5ODg0MQ==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2021-04-21T16:33:41Z","updated_at":"2021-04-21T16:33:41Z","author_association":"MEMBER","body":"Oh, hrm.  That's a good point that you can't do this with Ltac1 functions either.  I don't really understand why it would break parsing to take something that's currently a parse error and make it not a parse error (can you say how it would break Ltac1 parsing?), and I'd be fine with the parser turning it into a let-binding of an inaccessible function variable under the hood (so I don't see how the runtime issue is a blocker --- but I'm also curious what the issue with the runtime is).\r\n\r\nIn any case, if this is something that isn't going to be supported, I think we should document it strongly in the reference manual that `ltac2:( ... |- ...) args` is not expected to work, and that the solution is to let-bind it instead.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/824198841/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/824258944","html_url":"https://github.com/coq/coq/issues/14145#issuecomment-824258944","issue_url":"https://api.github.com/repos/coq/coq/issues/14145","id":824258944,"node_id":"MDEyOklzc3VlQ29tbWVudDgyNDI1ODk0NA==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2021-04-21T18:12:27Z","updated_at":"2021-04-21T18:14:40Z","author_association":"MEMBER","body":"> so I don't see how the runtime issue is a blocker\r\n\r\nThere is dedicated code to do fancy stuff with applied Ltac1 references (the only thing allowed) and try to read the mind of the user. I am not touching that with a 10-foot pole. We can use the let-expansion trick you mention, which seems more reasonable. But then you wander into the dangerous territory of \"what-is-a-value\"-land, not to mention it's fragile to rely on fresh variables.\r\n\r\nSo I'd rather not touch at all at this code and document the restriction, since it has been there since the inception of Ltac1.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/824258944/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]