[{"url":"https://api.github.com/repos/coq/coq/issues/comments/626401188","html_url":"https://github.com/coq/coq/issues/12298#issuecomment-626401188","issue_url":"https://api.github.com/repos/coq/coq/issues/12298","id":626401188,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNjQwMTE4OA==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2020-05-10T22:44:22Z","updated_at":"2020-05-10T22:44:22Z","author_association":"MEMBER","body":"Note that adding `let v := (eval cbv beta in v) in` right before `cache_term Build_T_ty v Build_T` fixes the issue, presumably by evar-normalizing the term.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/626401188/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/626401406","html_url":"https://github.com/coq/coq/issues/12298#issuecomment-626401406","issue_url":"https://api.github.com/repos/coq/coq/issues/12298","id":626401406,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNjQwMTQwNg==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2020-05-10T22:46:35Z","updated_at":"2020-05-10T22:46:35Z","author_association":"MEMBER","body":"Here's a smaller example:\r\n```coq\r\nGoal True -> True.\r\n  simple refine (let H : True -> True := _ in\r\n                 _);\r\n    [ intro x; exact x | ];\r\n    lazymatch goal with\r\n    | [ H := ?v |- _ ]\r\n      => clear H;\r\n           abstract exact v\r\n    end.\r\n  (* Error: Anomaly \"Evar ?X2 was not declared.\"\r\nPlease report at http://coq.inria.fr/bugs/.\r\n*)\r\n```","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/626401406/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/881939926","html_url":"https://github.com/coq/coq/issues/12298#issuecomment-881939926","issue_url":"https://api.github.com/repos/coq/coq/issues/12298","id":881939926,"node_id":"IC_kwDOABUDh840kVXW","user":{"login":"herbelin","id":460771,"node_id":"MDQ6VXNlcjQ2MDc3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/460771?v=4","gravatar_id":"","url":"https://api.github.com/users/herbelin","html_url":"https://github.com/herbelin","followers_url":"https://api.github.com/users/herbelin/followers","following_url":"https://api.github.com/users/herbelin/following{/other_user}","gists_url":"https://api.github.com/users/herbelin/gists{/gist_id}","starred_url":"https://api.github.com/users/herbelin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/herbelin/subscriptions","organizations_url":"https://api.github.com/users/herbelin/orgs","repos_url":"https://api.github.com/users/herbelin/repos","events_url":"https://api.github.com/users/herbelin/events{/privacy}","received_events_url":"https://api.github.com/users/herbelin/received_events","type":"User","site_admin":false},"created_at":"2021-07-17T18:26:43Z","updated_at":"2021-07-17T18:26:43Z","author_association":"MEMBER","body":"Tactical `abstract` does not support existential variables. But there is an instantiated evar hidden in the `EConstr` bound to `v` which is not normalized.\r\n\r\nA compromise would be to normalize all `constr` Ltac bindings, but probably something more principled should be done (keeping a `sigma` with each Ltac value`? having `abstract` starting with a non initial `sigma`? ...). See #14671 for the ad hoc fix.\r\n\r\nNote: the `clear H` is not needed in the example above.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/881939926/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]