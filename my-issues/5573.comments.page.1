[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337554677","html_url":"https://github.com/coq/coq/issues/5573#issuecomment-337554677","issue_url":"https://api.github.com/repos/coq/coq/issues/5573","id":337554677,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1NDY3Nw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-06-01T18:33:49Z","updated_at":"2022-01-10T19:23:15Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\r\n\r\nConsider how adding [tail_add] swaps the order of [Nat.zero] and [Nat.one] in \r\nthe following:\r\n```coq\r\nModule A.\r\n  Inductive nat := O | S (_ : nat).\r\n  Module Nat.\r\n    Definition zero := S O.\r\n    Definition one := S (S O).\r\n    Definition two := S (S (S O)).\r\n    Fixpoint add n m :=\r\n      match n with\r\n      | O => m\r\n      | S p => S (add p m)\r\n      end.\r\n  End Nat.\r\n  SearchPattern nat.\r\n  (* O: nat\r\nNat.zero: nat\r\nNat.two: nat\r\nNat.one: nat\r\nS: nat -> nat\r\nNat.add: nat -> nat -> nat *)\r\nEnd A.\r\nModule B.\r\n  Inductive nat := O | S (_ : nat).\r\n  Module Nat.\r\n    Definition zero := S O.\r\n    Definition one := S (S O).\r\n    Definition two := S (S (S O)).\r\n    Fixpoint add n m :=\r\n      match n with\r\n      | O => m\r\n      | S p => S (add p m)\r\n      end.\r\n\r\n    Fixpoint tail_add n m :=\r\n      match n with\r\n      | O => m\r\n      | S n => tail_add n (S m)\r\n      end.\r\n  End Nat.\r\n  SearchPattern nat.\r\n  (* O: nat\r\nNat.one: nat\r\nNat.two: nat\r\nNat.zero: nat\r\nS: nat -> nat\r\nNat.add: nat -> nat -> nat\r\nNat.tail_add: nat -> nat -> nat *)\r\nEnd B.\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337554677/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337554679","html_url":"https://github.com/coq/coq/issues/5573#issuecomment-337554679","issue_url":"https://api.github.com/repos/coq/coq/issues/5573","id":337554679,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1NDY3OQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-06-01T18:47:51Z","updated_at":"2017-10-18T11:05:00Z","author_association":"CONTRIBUTOR","body":"Comment author: @ejgallego\n\nWhy is that a problem? A better, dynamic ordering for search is indeed a feature added to 8.7 , see https://github.com/coq/coq/pull/253\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337554679/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337554680","html_url":"https://github.com/coq/coq/issues/5573#issuecomment-337554680","issue_url":"https://api.github.com/repos/coq/coq/issues/5573","id":337554680,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1NDY4MA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-06-01T18:58:30Z","updated_at":"2017-10-18T11:05:01Z","author_association":"CONTRIBUTOR","body":"Comment author: @aspiwack\n\nIt's rather amusing. I wonder why it would happen though. I basically let the heap implementation in lib/ do handle the sorting. Items of identical priority don't have guaranteed orders, so the observed behaviour is conform to the semantics. It's still unexpected.\n\nDon't hesitate to suggest a better sorting heuristic.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337554680/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337554681","html_url":"https://github.com/coq/coq/issues/5573#issuecomment-337554681","issue_url":"https://api.github.com/repos/coq/coq/issues/5573","id":337554681,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1NDY4MQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-06-01T20:32:23Z","updated_at":"2017-10-18T11:05:01Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nEmilio, the first-level issue is that it creates churn in the output test-suite.  At a more conceptual level, I'd be okay with having it be the case that adding a constant \"teaches\" Coq that two other constants are more related, but that's not what's happening here; the ordering swaps come because the subordering among similarly-related constants is essentially random.\n\nArnaud, I suggest that priority ties be broken by either the order in which constants were added, or by lexicographic ordering on their names (either full qualified names, or the displayed names).\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337554681/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]