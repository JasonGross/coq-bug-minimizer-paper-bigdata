[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524826","html_url":"https://github.com/coq/coq/issues/3660#issuecomment-337524826","issue_url":"https://api.github.com/repos/coq/coq/issues/3660","id":337524826,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNDgyNg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-09-25T07:37:14Z","updated_at":"2017-10-18T09:33:36Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\n(* File reduced by coq-bug-finder from original input, then from 9554 lines to 295 lines, then from 304 lines to 235 lines, then from 206 lines to 79 lines, then from 67 lines to 55 lines *)\n(* coqc version trunk (September 2014) compiled on Sep 25 2014 2:53:46 with OCaml 4.01.0\n   coqtop version cagnode16:/afs/csail.mit.edu/u/j/jgross/coq-trunk,trunk (bec7e0914f4a7144cd4efa8ffaccc9f72dbdb790) *)\nGeneralizable All Variables.\nDefinition compose {A B C : Type} (g : B -> C) (f : A -> B) := fun x => g (f x).\nNotation \"g 'o' f\" := (compose g f) (at level 40, left associativity) : function_scope.\nOpen Scope function_scope.\nAxiom ap : forall {A B:Type} (f:A -> B) {x y:A} (p:x = y), f x = f y.\nClass IsEquiv {A B : Type} (f : A -> B) := { equiv_inv : B -> A }.\nRecord Equiv A B := { equiv_fun :> A -> B ; equiv_isequiv :> IsEquiv equiv_fun }.\nNotation \"A <~> B\" := (Equiv A B) (at level 85) : equiv_scope.\nAxiom IsHSet : Type -> Type.\nInstance isequiv_compose `{IsEquiv A B f} `{IsEquiv B C g} : IsEquiv (compose g f) | 1000.\nadmit.\nDefined.\nSet Primitive Projections.\nRecord hSet := BuildhSet {setT:> Type; iss :> IsHSet setT}.\nCanonical Structure default_HSet:= fun T P => (@ BuildhSet T P).\nGlobal Instance isequiv_ap_setT X Y : IsEquiv (@ ap _ _ setT X Y).\nadmit.\nDefined.\nLocal Open Scope equiv_scope.\nAxiom equiv_path : forall (A B : Type) (p : A = B), A <~> B.\nGoal forall (C D : hSet), IsEquiv (fun x : C = D => (equiv_path C D (ap setT x))).\n  intros.\n  change (IsEquiv (equiv_path C D o @ ap _ _ setT C D)).\n  apply @ isequiv_compose; [ | admit ].\n  solve [ apply isequiv_ap_setT ].\n  Undo.\n  typeclasses eauto.\n(* Toplevel input, characters 15-32:\nError:\nTactic failure:  typeclasses eauto failed on:\n                                                C : hSet\n                                                D : hSet\n                                                ============================\n                                                 IsEquiv (ap setT). *)\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524826/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524828","html_url":"https://github.com/coq/coq/issues/3660#issuecomment-337524828","issue_url":"https://api.github.com/repos/coq/coq/issues/3660","id":337524828,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNDgyOA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-09-27T19:14:27Z","updated_at":"2017-10-18T09:33:36Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nThat one was cute, in primitive projection mode this was trying the default canonical structure (and failing) too early, before comparing the different setT's.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524828/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]