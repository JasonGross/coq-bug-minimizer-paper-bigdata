[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548300","html_url":"https://github.com/coq/coq/issues/5146#issuecomment-337548300","issue_url":"https://api.github.com/repos/coq/coq/issues/5146","id":337548300,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0ODMwMA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-10-17T23:39:37Z","updated_at":"2017-10-18T10:44:31Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nThe reification alone takes about 10 minutes in the attached example.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548300/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548301","html_url":"https://github.com/coq/coq/issues/5146#issuecomment-337548301","issue_url":"https://api.github.com/repos/coq/coq/issues/5146","id":337548301,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0ODMwMQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-10-17T23:39:43Z","updated_at":"2017-10-18T10:44:31Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nCreated attachment 773\nnsatz being slow at reification\n\n> Attached file: [slow_nsatz.v](https://coq.inria.fr/bugfiles/attachment.cgi?id=773) (text/plain, 63345 bytes)\n> Description:   nsatz being slow at reification\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548301/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548303","html_url":"https://github.com/coq/coq/issues/5146#issuecomment-337548303","issue_url":"https://api.github.com/repos/coq/coq/issues/5146","id":337548303,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0ODMwMw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-10-17T23:42:53Z","updated_at":"2017-10-18T10:44:31Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nCreated attachment 774\nAlternate version that just does reification and doesn't try to solve it.\n\n> Attached file: [slow_nsatz.v~](https://coq.inria.fr/bugfiles/attachment.cgi?id=774) (text/plain, 63346 bytes)\n> Description:   Alternate version that just does reification and doesn't try to solve it.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548303/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548304","html_url":"https://github.com/coq/coq/issues/5146#issuecomment-337548304","issue_url":"https://api.github.com/repos/coq/coq/issues/5146","id":337548304,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0ODMwNA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-10-18T08:59:31Z","updated_at":"2017-10-18T10:44:31Z","author_association":"CONTRIBUTOR","body":"Comment author: @ppedrot\n\nMost of the time seems to be passed in evar normalization, most precisely because of the function Proofview.contained_in_info. Investigating.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548304/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548305","html_url":"https://github.com/coq/coq/issues/5146#issuecomment-337548305","issue_url":"https://api.github.com/repos/coq/coq/issues/5146","id":337548305,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0ODMwNQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-10-18T13:02:07Z","updated_at":"2017-10-18T10:44:31Z","author_association":"CONTRIBUTOR","body":"Comment author: @ppedrot\n\nI'm not sure I fully understand the typeclass algorithm, so I'm assigning this bug to Matthieu. The root of the problem comes from line 1041 in Class_tactics:\n\n  let dep' = info.search_dep || Proofview.unifiable s' (Goal.goal gl') gls in\n\nwhich keeps nf-evarizing the various goals at hand. I don't know if the proper solution is to cache the result or to be more clever not to normalize. I'll have a look at a few possible solutions in parallel.\n\nAn alternative way would be to get rid of the typeclass-based reification of Nsatz. It does not seem to scale, and for performance-sensitive code such as this one it may be reasonable to switch to ML.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548305/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548306","html_url":"https://github.com/coq/coq/issues/5146#issuecomment-337548306","issue_url":"https://api.github.com/repos/coq/coq/issues/5146","id":337548306,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0ODMwNg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-10-18T14:03:56Z","updated_at":"2017-10-18T10:44:32Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nHmm, yes dependency information should be cached at some point. A quick workaround would be to switch to the 8.5 version of the code for this.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548306/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548307","html_url":"https://github.com/coq/coq/issues/5146#issuecomment-337548307","issue_url":"https://api.github.com/repos/coq/coq/issues/5146","id":337548307,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0ODMwNw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-10-18T14:44:11Z","updated_at":"2017-10-18T10:44:32Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nHmm, this could certainly be done more efficiently by nf'ing the goals ones before the DISPATCH below and having a variant of unifiable that does not do nf_evar_info. Then we'd check the dependencies statically when we see the created subgoals, and not dynamically after each subgoal is solved. Actually there's quite a big bug currently because the nf_evar_info will be done on the previously instantiated subgoals!\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548307/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548308","html_url":"https://github.com/coq/coq/issues/5146#issuecomment-337548308","issue_url":"https://api.github.com/repos/coq/coq/issues/5146","id":337548308,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0ODMwOA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-10-18T19:40:27Z","updated_at":"2017-10-18T10:44:32Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nHere's some code that does it all in Ltac, with no typeclass resolution, and \nit's still slow, though not nearly as slow (this one only takes 106 seconds).  \n(Perhaps the version in the standard library should be replaced by something \nlike this?)  What's taking time in this version?\n\n(** override this for more reification; if extra reification fails; invoke \n[fail_cont]  *)\n(** N.B. We do almost everything in continuation-passing-style so that we can \nmorally return two values while taking advantage of uconstr (there's no way to \nreturn a uconstr pair and get the components out) *)\nLtac do_reify_extra Rr lvar lterm cont fail_cont :=\n  fail_cont Rr lvar lterm cont.\nLtac do_reify_binop do_reify PEop Rr lvar x y cont :=\n  do_reify Rr lvar x\n           ltac:(fun lvar rx\n                 => do_reify Rr lvar y\n                             ltac:(fun lvar ry\n                                   => let ret := uconstr:(PEop rx ry) in\n                                      cont lvar ret)).\nLtac do_reify_unop do_reify PEop Rr lvar x cont :=\n  do_reify Rr lvar x\n           ltac:(fun lvar rx\n                 => let ret := uconstr:(PEop rx) in\n                    cont lvar ret).\nLtac do_reify_var i Rr lvar lterm cont :=\n  (* grumble, grumble, we can't do Ltac matching against uconstr, so we have to \nuse [constr] in this function *)\n  lazymatch lvar with\n  | nil\n    => let new_lvar := constr:(cons lterm nil) in\n       let ret := uconstr:(@ PEX Z (Pos.of_succ_nat i)) in\n       cont new_lvar ret\n  | cons lterm ?lvars\n    => let ret := uconstr:(@ PEX Z (Pos.of_succ_nat i)) in\n       cont lvar ret\n  | cons ?x ?xs\n    => do_reify_var\n         uconstr:(S i) Rr xs lterm\n                       ltac:(fun lvar ret\n                             => cont constr:(cons x lvar) ret)\n  end.\nLtac do_reify Rr lvar lterm cont :=\n  lazymatch type of Rr with\n  | @ Ring ?T ?ring0 ?ring1 ?add ?mul ?sub ?opp ?ring_eq ?ops\n    => lazymatch lterm with\n       | ring0 => let ret := uconstr:(PEc 0%Z) in\n                  cont lvar ret\n       | @ zero _ (@ zero_notation _ ring0 _ _ _ _ _ _ _)\n         => let ret := uconstr:(PEc 0%Z) in\n            cont lvar ret\n       | ring1 => let ret := uconstr:(PEc 1%Z) in\n                  cont lvar ret\n       | @ one _ (@ one_notation _ _ ring1 _ _ _ _ _ _)\n         => let ret := uconstr:(PEc 1%Z) in\n            cont lvar ret\n       | pow_N ?x ?n\n         => do_reify Rr lvar x\n                     ltac:(fun lvar rx\n                           => let ret := uconstr:(@ PEpow _ rx n) in\n                              cont lvar ret)\n       | add ?x ?y\n         => do_reify_binop do_reify uconstr:(@ PEadd _) Rr lvar x y cont\n       | @ addition _ (@ add_notation _ _ _ add _ _ _ _ _) ?x ?y\n         => do_reify_binop do_reify uconstr:(@ PEadd _) Rr lvar x y cont\n       | sub ?x ?y\n         => do_reify_binop do_reify uconstr:(@ PEsub _) Rr lvar x y cont\n       | @ subtraction _ (@ sub_notation _ _ _ _ _ sub _ _ _) ?x ?y\n         => do_reify_binop do_reify uconstr:(@ PEsub _) Rr lvar x y cont\n       | opp ?x\n         => do_reify_unop do_reify uconstr:(@ PEopp _) Rr lvar x cont\n       | @ opposite _ (@ opp_notation _ _ _ _ _ _ opp _ _) ?x\n         => do_reify_unop do_reify uconstr:(@ PEopp _) Rr lvar x cont\n       | @ multiplication Z _ _ ?z ?t2 (* | 9 *)\n         => do_reify_unop do_reify uconstr:(@ PEmul _ (PEc z)) Rr lvar t2 cont\n       | mul ?x ?y (* | 10 *)\n         => do_reify_binop do_reify uconstr:(@ PEmul _) Rr lvar x y cont\n       | @ multiplication T T (@ mul_notation _ _ _ _ mul _ _ _ _) _ ?x ?y\n         => do_reify_binop do_reify uconstr:(@ PEmul _) Rr lvar x y cont\n       | Z0 (* | 11 *)\n         => let ret := uconstr:(PEc Z0) in\n            cont lvar ret\n       | Zpos ?x (* | 11 *)\n         => let ret := uconstr:(PEc (Zpos x)) in\n            cont lvar ret\n       | Zneg ?x (* | 11 *)\n         => let ret := uconstr:(PEc (Zneg x)) in\n            cont lvar ret\n       | ?lterm\n         => do_reify_extra Rr lvar lterm cont ltac:(do_reify_var O)\n       end\n  end.\nLtac do_reifylist Rr lvar lterm cont :=\n  lazymatch lterm with\n  | nil => let ret := uconstr:(@ nil (PExpr Z)) in\n           cont lvar ret\n  | cons ?x ?xs\n    => do_reify Rr lvar x\n                ltac:(fun lvar rx\n                      => do_reifylist Rr lvar xs\n                                      ltac:(fun lvar rxs\n                                            => let ret := uconstr:(cons rx rxs) \nin\n                                               cont lvar ret))\n  end.\nLtac list_reifyl lterm :=\n  let R := lazymatch type of lterm with list ?R => R end in\n  let Rr := constr:(_ : Ring (T:=R)) in\n  do_reifylist Rr (@ nil R) lterm\n               ltac:(fun lvar lexpr\n                     => constr:((lvar, lexpr))).\nLtac nsatz0 r0 :=\n  let radicalmax := constr:(6%N) in\n  let info := constr:(1%Z) in\n  let lparam := constr:(@ nil Q) in\n  let lvar := constr:(@ nil Q) in\n  let nparam := eval compute in (Z.of_nat (List.length lparam)) in\n      match goal with\n        |- ?g => let lb := lterm_goal g in\n                 let k := match lvar with\n                          |(@ nil _) =>\n                           match lparam with\n                           |(@ nil _) =>\n                            let r := list_reifyl lb in r\n                           end end in pose k as r0 end.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548308/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548309","html_url":"https://github.com/coq/coq/issues/5146#issuecomment-337548309","issue_url":"https://api.github.com/repos/coq/coq/issues/5146","id":337548309,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0ODMwOQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-10-18T19:40:31Z","updated_at":"2017-10-18T10:44:32Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nCreated attachment 776\nslow example with Ltac reification for nsatz\n\n> Attached file: [slow_nsatz_no_tc.v](https://coq.inria.fr/bugfiles/attachment.cgi?id=776) (text/plain, 69683 bytes)\n> Description:   slow example with Ltac reification for nsatz\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548309/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548310","html_url":"https://github.com/coq/coq/issues/5146#issuecomment-337548310","issue_url":"https://api.github.com/repos/coq/coq/issues/5146","id":337548310,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0ODMxMA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-10-18T19:53:41Z","updated_at":"2017-10-18T10:44:32Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nAnd here's an even faster version, at about 27 seconds, which does away with \nthe typechecked list of variables and instead passes around the specialized \nversion of [list_rect], as an Ltac function (i.e., it takes continuations for \nthe nil case and for the cons case), so that we only have to typecheck each \nvariable a single time.  I'm curious what's taking time here, and also if \nretypechecking of terms in Ltac (or whatever is happening) can be sped up \nuniformly:\n\n(** override this for more reification; if extra reification fails; invoke \n[fail_cont]  *)\n(** N.B. We do almost everything in continuation-passing-style so that we can  \nmorally return two values while taking advantage of uconstr (there's no way to  \nreturn a uconstr pair and get the components out) *)\nLtac do_reify_extra Rr lvar lterm cont fail_cont :=\n  fail_cont Rr lvar lterm cont.\nLtac do_reify_binop do_reify PEop Rr lvar x y cont :=\n  do_reify Rr lvar x\n           ltac:(fun lvar rx\n                 => do_reify Rr lvar y\n                             ltac:(fun lvar ry\n                                   => let ret := uconstr:(PEop rx ry) in\n                                      cont lvar ret)).\nLtac do_reify_unop do_reify PEop Rr lvar x cont :=\n  do_reify Rr lvar x\n           ltac:(fun lvar rx\n                 => let ret := uconstr:(PEop rx) in\n                    cont lvar ret).\nLtac do_reify_var i Rr lvar_elim lterm cont :=\n  lvar_elim\n    ltac:(fun _ (* nil case *) =>\n            let lterm := constr:(lterm) in\n            let new_lvar := ltac:(fun nil_case cons_case\n                                  => cons_case lterm lvar_elim) in\n            let ret := uconstr:(@ PEX Z (Pos.of_succ_nat i)) in\n            cont new_lvar ret)\n           ltac:(fun x xs_elim =>\n                   lazymatch x with\n                   | lterm\n                     => let ret := uconstr:(@ PEX Z (Pos.of_succ_nat i)) in\n                        cont lvar_elim ret\n                   | _\n                     => let Si := uconstr:(S i) in\n                        do_reify_var\n                          Si Rr xs_elim lterm\n                          ltac:(fun lvar ret\n                                => let new_lvar_elim := ltac:(fun nil_case \ncons_case\n                                                              => cons_case x \nxs_elim) in\n                                   cont new_lvar_elim ret)\n                   end).\nLtac do_reify Rr lvar lterm cont :=\n  lazymatch type of Rr with\n  | @ Ring ?T ?ring0 ?ring1 ?add ?mul ?sub ?opp ?ring_eq ?ops\n    => lazymatch lterm with\n       | ring0 => let ret := uconstr:(PEc 0%Z) in\n                  cont lvar ret\n       | @ zero _ (@ zero_notation _ ring0 _ _ _ _ _ _ _)\n         => let ret := uconstr:(PEc 0%Z) in\n            cont lvar ret\n       | ring1 => let ret := uconstr:(PEc 1%Z) in\n                  cont lvar ret\n       | @ one _ (@ one_notation _ _ ring1 _ _ _ _ _ _)\n         => let ret := uconstr:(PEc 1%Z) in\n            cont lvar ret\n       | pow_N ?x ?n\n         => do_reify Rr lvar x\n                     ltac:(fun lvar rx\n                           => let ret := uconstr:(@ PEpow _ rx n) in\n                              cont lvar ret)\n       | add ?x ?y\n         => do_reify_binop do_reify uconstr:(@ PEadd _) Rr lvar x y cont\n       | @ addition _ (@ add_notation _ _ _ add _ _ _ _ _) ?x ?y\n         => do_reify_binop do_reify uconstr:(@ PEadd _) Rr lvar x y cont\n       | sub ?x ?y\n         => do_reify_binop do_reify uconstr:(@ PEsub _) Rr lvar x y cont\n       | @ subtraction _ (@ sub_notation _ _ _ _ _ sub _ _ _) ?x ?y\n         => do_reify_binop do_reify uconstr:(@ PEsub _) Rr lvar x y cont\n       | opp ?x\n         => do_reify_unop do_reify uconstr:(@ PEopp _) Rr lvar x cont\n       | @ opposite _ (@ opp_notation _ _ _ _ _ _ opp _ _) ?x\n         => do_reify_unop do_reify uconstr:(@ PEopp _) Rr lvar x cont\n       | @ multiplication Z _ _ ?z ?t2 (* | 9 *)\n         => do_reify_unop do_reify uconstr:(@ PEmul _ (PEc z)) Rr lvar t2 cont\n       | mul ?x ?y (* | 10 *)\n         => do_reify_binop do_reify uconstr:(@ PEmul _) Rr lvar x y cont\n       | @ multiplication T T (@ mul_notation _ _ _ _ mul _ _ _ _) _ ?x ?y\n         => do_reify_binop do_reify uconstr:(@ PEmul _) Rr lvar x y cont\n       | Z0 (* | 11 *)\n         => let ret := uconstr:(PEc Z0) in\n            cont lvar ret\n       | Zpos ?x (* | 11 *)\n         => let ret := uconstr:(PEc (Zpos x)) in\n            cont lvar ret\n       | Zneg ?x (* | 11 *)\n         => let ret := uconstr:(PEc (Zneg x)) in\n            cont lvar ret\n       | ?lterm\n         => do_reify_extra Rr lvar lterm cont ltac:(do_reify_var O)\n       end\n  end.\nLtac do_reifylist Rr lvar lterm cont :=\n  lazymatch lterm with\n  | nil => let ret := uconstr:(@ nil (PExpr Z)) in\n           cont lvar ret\n  | cons ?x ?xs\n    => do_reify Rr lvar x\n                ltac:(fun lvar rx\n                      => do_reifylist Rr lvar xs\n                                      ltac:(fun lvar rxs\n                                            => let ret := uconstr:(cons rx rxs) \nin\n                                               cont lvar ret))\n  end.\nLtac list_elim_to_list T ls_elim :=\n  ls_elim ltac:(fun _ => uconstr:(@ nil T))\n                 ltac:(fun x xs_elim\n                       => let xs := list_elim_to_list T xs_elim in\n                          uconstr:(@ cons T x xs)).\n\nLtac list_reifyl lterm :=\n  let R := lazymatch type of lterm with list ?R => R end in\n  let Rr := constr:(_ : Ring (T:=R)) in\n  do_reifylist\n    Rr ltac:(fun nil_case cons_case => nil_case ())\n              lterm\n              ltac:(fun lvar lexpr\n                    => let lvar := list_elim_to_list R lvar in\n                       constr:((lvar, lexpr))).\nLtac nsatz0 r0 :=\n  let radicalmax := constr:(6%N) in\n  let info := constr:(1%Z) in\n  let lparam := constr:(@ nil Q) in\n  let lvar := constr:(@ nil Q) in\n  let nparam := eval compute in (Z.of_nat (List.length lparam)) in\n      match goal with\n        |- ?g => let lb := lterm_goal g in\n                 let k := match lvar with\n                          |(@ nil _) =>\n                           match lparam with\n                           |(@ nil _) =>\n                            let r := list_reifyl lb in r\n                           end end in pose k as r0 end.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548310/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548312","html_url":"https://github.com/coq/coq/issues/5146#issuecomment-337548312","issue_url":"https://api.github.com/repos/coq/coq/issues/5146","id":337548312,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0ODMxMg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-10-18T19:53:45Z","updated_at":"2017-10-18T10:44:32Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nCreated attachment 777\nfaster version of ltac-only nsatz reification\n\n> Attached file: [slow_nsatz_no_tc.v](https://coq.inria.fr/bugfiles/attachment.cgi?id=777) (text/plain, 70672 bytes)\n> Description:   faster version of ltac-only nsatz reification\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548312/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548314","html_url":"https://github.com/coq/coq/issues/5146#issuecomment-337548314","issue_url":"https://api.github.com/repos/coq/coq/issues/5146","id":337548314,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0ODMxNA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-10-19T11:59:47Z","updated_at":"2017-10-18T10:44:32Z","author_association":"CONTRIBUTOR","body":"Comment author: @ppedrot\n\n(In reply to Jason Gross from comment [BZ#10](https://github.com/coq/coq/issues?q=is%3Aissue%20%22Original%20bug%20ID%3A%20BZ%2310%22))\n> faster version of ltac-only nsatz reification\n\nThis stack overflows on my machine...\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548314/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548316","html_url":"https://github.com/coq/coq/issues/5146#issuecomment-337548316","issue_url":"https://api.github.com/repos/coq/coq/issues/5146","id":337548316,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0ODMxNg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-10-19T16:49:38Z","updated_at":"2017-10-18T10:44:33Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nInteresting...  I've downloaded the file I attached and run it on my machine, \nand it runs fine... maybe it's a machine difference?\n\n$ uname -a\nLinux jgross-Leopard-WS 4.4.0-38-generic [BZ#57](https://github.com/coq/coq/issues?q=is%3Aissue%20%22Original%20bug%20ID%3A%20BZ%2357%22)-Ubuntu SMP Tue Sep 6 15:42:33 UTC \n2016 x86_64 x86_64 x86_64 GNU/Linux\n$ lsb_release -a\nNo LSB modules are available.\nDistributor ID:\tUbuntu\nDescription:\tUbuntu 16.04.1 LTS\nRelease:\t16.04\nCodename:\txenial\n$ echo | coqtop\nWelcome to Coq jgross-Leopard-WS:/home/jgross/Downloads/coq/coq-v8.6,v8.6 \n(dff1450d43909e8aeaf8ce2db8bc19be42ee1ab1)\n\nCoq < Coq < \n$ /usr/bin/time -f \"COQC (user: %U mem: %M ko)\" coqc -q slow_nsatz_no_tc_1.v \nFinished transaction in 28.502 secs (28.46u,0.048s) (successful)\ntotal time:      0.012s\n\n tactic                                   local  total   calls       max \n────────────────────────────────────────┴──────┴──────┴───────┴─────────┘\n─pose (r0 := k) ------------------------ 100.0% 100.0%       1    0.012s\n─nsatz0 --------------------------------   0.0%   0.0%       1    0.000s\n\n tactic                                   local  total   calls       max \n────────────────────────────────────────┴──────┴──────┴───────┴─────────┘\n─pose (r0 := k) ------------------------ 100.0% 100.0%       1    0.012s\n─nsatz0 --------------------------------   0.0%   0.0%       1    0.000s\n\nCOQC (user: 31.48 mem: 948456 ko)\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548316/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548318","html_url":"https://github.com/coq/coq/issues/5146#issuecomment-337548318","issue_url":"https://api.github.com/repos/coq/coq/issues/5146","id":337548318,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0ODMxOA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-11-18T08:45:03Z","updated_at":"2017-10-18T10:44:33Z","author_association":"CONTRIBUTOR","body":"Comment author: @maximedenes\n\nWhile it would be interesting to track down the inefficiencies in type class resolution, the proper fix here is probably to implement the reification in ML.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548318/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/396404124","html_url":"https://github.com/coq/coq/issues/5146#issuecomment-396404124","issue_url":"https://api.github.com/repos/coq/coq/issues/5146","id":396404124,"node_id":"MDEyOklzc3VlQ29tbWVudDM5NjQwNDEyNA==","user":{"login":"maximedenes","id":647105,"node_id":"MDQ6VXNlcjY0NzEwNQ==","avatar_url":"https://avatars.githubusercontent.com/u/647105?v=4","gravatar_id":"","url":"https://api.github.com/users/maximedenes","html_url":"https://github.com/maximedenes","followers_url":"https://api.github.com/users/maximedenes/followers","following_url":"https://api.github.com/users/maximedenes/following{/other_user}","gists_url":"https://api.github.com/users/maximedenes/gists{/gist_id}","starred_url":"https://api.github.com/users/maximedenes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maximedenes/subscriptions","organizations_url":"https://api.github.com/users/maximedenes/orgs","repos_url":"https://api.github.com/users/maximedenes/repos","events_url":"https://api.github.com/users/maximedenes/events{/privacy}","received_events_url":"https://api.github.com/users/maximedenes/received_events","type":"User","site_admin":false},"created_at":"2018-06-11T22:13:26Z","updated_at":"2018-06-11T22:13:26Z","author_association":"MEMBER","body":"Why is this labeled as a standard library issue?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/396404124/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/396410071","html_url":"https://github.com/coq/coq/issues/5146#issuecomment-396410071","issue_url":"https://api.github.com/repos/coq/coq/issues/5146","id":396410071,"node_id":"MDEyOklzc3VlQ29tbWVudDM5NjQxMDA3MQ==","user":{"login":"SkySkimmer","id":2461932,"node_id":"MDQ6VXNlcjI0NjE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/2461932?v=4","gravatar_id":"","url":"https://api.github.com/users/SkySkimmer","html_url":"https://github.com/SkySkimmer","followers_url":"https://api.github.com/users/SkySkimmer/followers","following_url":"https://api.github.com/users/SkySkimmer/following{/other_user}","gists_url":"https://api.github.com/users/SkySkimmer/gists{/gist_id}","starred_url":"https://api.github.com/users/SkySkimmer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SkySkimmer/subscriptions","organizations_url":"https://api.github.com/users/SkySkimmer/orgs","repos_url":"https://api.github.com/users/SkySkimmer/repos","events_url":"https://api.github.com/users/SkySkimmer/events{/privacy}","received_events_url":"https://api.github.com/users/SkySkimmer/received_events","type":"User","site_admin":false},"created_at":"2018-06-11T22:43:34Z","updated_at":"2018-06-11T22:43:34Z","author_association":"CONTRIBUTOR","body":"nsatz is part of the stdlib no?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/396410071/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/396496350","html_url":"https://github.com/coq/coq/issues/5146#issuecomment-396496350","issue_url":"https://api.github.com/repos/coq/coq/issues/5146","id":396496350,"node_id":"MDEyOklzc3VlQ29tbWVudDM5NjQ5NjM1MA==","user":{"login":"Zimmi48","id":1108325,"node_id":"MDQ6VXNlcjExMDgzMjU=","avatar_url":"https://avatars.githubusercontent.com/u/1108325?v=4","gravatar_id":"","url":"https://api.github.com/users/Zimmi48","html_url":"https://github.com/Zimmi48","followers_url":"https://api.github.com/users/Zimmi48/followers","following_url":"https://api.github.com/users/Zimmi48/following{/other_user}","gists_url":"https://api.github.com/users/Zimmi48/gists{/gist_id}","starred_url":"https://api.github.com/users/Zimmi48/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Zimmi48/subscriptions","organizations_url":"https://api.github.com/users/Zimmi48/orgs","repos_url":"https://api.github.com/users/Zimmi48/repos","events_url":"https://api.github.com/users/Zimmi48/events{/privacy}","received_events_url":"https://api.github.com/users/Zimmi48/received_events","type":"User","site_admin":false},"created_at":"2018-06-12T07:40:36Z","updated_at":"2018-06-12T07:40:36Z","author_association":"MEMBER","body":"Components were chosen by bug reporters in the Bugzilla era. They are not always the best ones.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/396496350/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/396496679","html_url":"https://github.com/coq/coq/issues/5146#issuecomment-396496679","issue_url":"https://api.github.com/repos/coq/coq/issues/5146","id":396496679,"node_id":"MDEyOklzc3VlQ29tbWVudDM5NjQ5NjY3OQ==","user":{"login":"maximedenes","id":647105,"node_id":"MDQ6VXNlcjY0NzEwNQ==","avatar_url":"https://avatars.githubusercontent.com/u/647105?v=4","gravatar_id":"","url":"https://api.github.com/users/maximedenes","html_url":"https://github.com/maximedenes","followers_url":"https://api.github.com/users/maximedenes/followers","following_url":"https://api.github.com/users/maximedenes/following{/other_user}","gists_url":"https://api.github.com/users/maximedenes/gists{/gist_id}","starred_url":"https://api.github.com/users/maximedenes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maximedenes/subscriptions","organizations_url":"https://api.github.com/users/maximedenes/orgs","repos_url":"https://api.github.com/users/maximedenes/repos","events_url":"https://api.github.com/users/maximedenes/events{/privacy}","received_events_url":"https://api.github.com/users/maximedenes/received_events","type":"User","site_admin":false},"created_at":"2018-06-12T07:41:48Z","updated_at":"2018-06-12T07:41:48Z","author_association":"MEMBER","body":"> nsatz is part of the stdlib no?\r\n\r\nI think this is too coarse grained, otherwise tactics, ltac and others are also part of the stdlib...","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/396496679/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]