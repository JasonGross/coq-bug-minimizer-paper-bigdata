[{"url":"https://api.github.com/repos/coq/coq/issues/comments/349107205","html_url":"https://github.com/coq/coq/issues/6313#issuecomment-349107205","issue_url":"https://api.github.com/repos/coq/coq/issues/6313","id":349107205,"node_id":"MDEyOklzc3VlQ29tbWVudDM0OTEwNzIwNQ==","user":{"login":"herbelin","id":460771,"node_id":"MDQ6VXNlcjQ2MDc3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/460771?v=4","gravatar_id":"","url":"https://api.github.com/users/herbelin","html_url":"https://github.com/herbelin","followers_url":"https://api.github.com/users/herbelin/followers","following_url":"https://api.github.com/users/herbelin/following{/other_user}","gists_url":"https://api.github.com/users/herbelin/gists{/gist_id}","starred_url":"https://api.github.com/users/herbelin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/herbelin/subscriptions","organizations_url":"https://api.github.com/users/herbelin/orgs","repos_url":"https://api.github.com/users/herbelin/repos","events_url":"https://api.github.com/users/herbelin/events{/privacy}","received_events_url":"https://api.github.com/users/herbelin/received_events","type":"User","site_admin":false},"created_at":"2017-12-04T21:12:47Z","updated_at":"2017-12-04T21:12:47Z","author_association":"MEMBER","body":"Hi @JasonGross. I don't think this has to do with pattern-matching in particular. It is basically that processing goals is sequential and that `shelve` considers the goals and their dependencies at  the point it is itself called. For instance, the following pattern-matching-free example exhibits the same behavior:\r\n```coq\r\nInductive foo := a | b | c.\r\nGoal foo -> foo.\r\n  intro x.\r\n  simple refine (foo_rect _ _ ltac:(shelve) _ x).\r\n```\r\nAs for why the goals opened until `shelve` is called are considered shelvable, i.e. dependent, I don't understand why at once. And why `unshelve` does not work on them, I don't know either. I would say it is a bug as we are not supposed to loose evars from the shelf, but I don't know to which extent it comes from the tricky interaction of `ltac:(shelve)` within the scope of `refine`.\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/349107205/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/349582117","html_url":"https://github.com/coq/coq/issues/6313#issuecomment-349582117","issue_url":"https://api.github.com/repos/coq/coq/issues/6313","id":349582117,"node_id":"MDEyOklzc3VlQ29tbWVudDM0OTU4MjExNw==","user":{"login":"herbelin","id":460771,"node_id":"MDQ6VXNlcjQ2MDc3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/460771?v=4","gravatar_id":"","url":"https://api.github.com/users/herbelin","html_url":"https://github.com/herbelin","followers_url":"https://api.github.com/users/herbelin/followers","following_url":"https://api.github.com/users/herbelin/following{/other_user}","gists_url":"https://api.github.com/users/herbelin/gists{/gist_id}","starred_url":"https://api.github.com/users/herbelin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/herbelin/subscriptions","organizations_url":"https://api.github.com/users/herbelin/orgs","repos_url":"https://api.github.com/users/herbelin/repos","events_url":"https://api.github.com/users/herbelin/events{/privacy}","received_events_url":"https://api.github.com/users/herbelin/received_events","type":"User","site_admin":false},"created_at":"2017-12-06T09:24:30Z","updated_at":"2017-12-06T09:24:30Z","author_association":"MEMBER","body":"Actually, this was a \"critical\" bug of calling `ltac` within `refine`. Even a simpler\r\n```coq\r\nInductive foo := a | b | c.\r\nGoal foo -> foo.\r\n  intro x.\r\n  simple refine (foo_rect (fun _ => foo) ?[a] ltac:(exact b) ?[c] x).\r\n```\r\nis buggy since `?[a]` is lost (in the sense of not being anymore tracked as either focussed or on the shelve).\r\n\r\nI'm surprised that we didn't fall on it yet. See a fix at #6328.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/349582117/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]