[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337511145","html_url":"https://github.com/coq/coq/issues/2833#issuecomment-337511145","issue_url":"https://api.github.com/repos/coq/coq/issues/2833","id":337511145,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUxMTE0NQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2012-07-01T00:44:07Z","updated_at":"2017-10-18T08:54:35Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nI'm not sure whether this is a bug in Coq, or in Proof General.  (The Proof General bug submission page is currently broken (it gives a 500 error), though, so I'm reporting it here, only.)\n\nGiven the following file*:\n\nRequire Import Program Omega Bool.\n\nLemma bar : 128 * 128 + 128 = 16512.\n  compute; trivial.\nQed.\n\nLemma baz : 128 * 128 + 128 = 16512.\n  compute; trivial.\nQed.\n\nLemma qux : 128 * 128 + 128 = 16512.\n  compute; trivial.\nQed.\n\nLemma foo : forall x : Type, x = x.\n  auto.\nQed.\nPrint foo.\nPrint foo.\n\nTell Coq to evaluate the entire thing, then, after it evaluates the [Require Import], tell it to not evaluate [foo] (ctrl + c, ctrl + enter on the [Lemma foo] line), then quickly change [Type] to [nat] before it finishes the proof of [qux], and then tell it to evaluate down to [Print foo], again.  When I [Print foo], it shows the original definition (with [Type]), rather than the new definition (with [nat]).\n\n\n\n*This will only work on a sufficiently slow computer with a sufficiently fast person.  You may need to add more filler theorems, or increase the size of the numbers, so that it slows down enough to change the word before it gets there.  I'm doing this in emacs (GNU Emacs 23.1.50.1 (i386-mingw-nt6.1.7601) of 2009-11-03 on LENNART-69DE564 (patched)) running Proof General (Version 4.1), and I have an HP running Windows 7 x64 with 4 GB of RAM and an AMD Turion(tm) X2 Ultra Dual-Core Mobile ZM-87  2.40 GHz.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337511145/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337511148","html_url":"https://github.com/coq/coq/issues/2833#issuecomment-337511148","issue_url":"https://api.github.com/repos/coq/coq/issues/2833","id":337511148,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUxMTE0OA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2012-07-06T21:50:01Z","updated_at":"2017-10-18T08:54:35Z","author_association":"CONTRIBUTOR","body":"Comment author: @Matafou\n\n\n> Tell Coq to evaluate the entire thing, then, after it evaluates the [Require\n> Import], tell it to not evaluate [foo] (ctrl + c, ctrl + enter on the [Lemma\n> foo] line)\n\nYou cannot tell ProofGeneral to \"not evaluate\" a command that has been put in the queue. The bug is that from a user perspective, one can think that hitting ctrl-c ctrl-enter at that moment does that, but it doesn't. Indeed the queue seems to be emptied (the queud region becomes white again) but it is not.\n\nThis misleading display is deeply linked to the proofgenral achitecture. I don't think it is worth fixing it. Plese just keep in mind it is not possible to remove things from the queue (unless you interrupt coq with ctrl-c ctrl-c). You can only backtrack after the commands are finished.\n\nBest regards,\nPierre\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337511148/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]