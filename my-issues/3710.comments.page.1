[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337525586","html_url":"https://github.com/coq/coq/issues/3710#issuecomment-337525586","issue_url":"https://api.github.com/repos/coq/coq/issues/3710","id":337525586,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNTU4Ng==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-10-09T08:24:27Z","updated_at":"2017-10-18T09:35:46Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\n(* File reduced by coq-bug-finder from original input, then from 13477 lines to 1457 lines, then from 1553 lines to 1586 lines, then \\\nfrom 1574 lines to 823 lines, then from 837 lines to 802 lines, then from 793 lines to 657 lines, then from 661 lines to 233 lines, t\\\nhen from 142 lines to 65 lines *)\n(* coqc version trunk (October 2014) compiled on Oct 8 2014 13:38:17 with OCaml 4.01.0\n   coqtop version cagnode16:/afs/csail.mit.edu/u/j/jgross/coq-trunk,trunk (335cf2860bfd9e714d14228d75a52fd2c88db386) *)\nSet Universe Polymorphism.\nSet Primitive Projections.\nSet Implicit Arguments.\nRecord sigT {A} (P : A -> Type) := existT { projT1 : A ; projT2 : P projT1 }.\nNotation \"{ x : A & P }\" := (sigT (fun x:A => P)) : type_scope.\nDefinition relation (A : Type) := A -> A -> Type.\nClass Reflexive {A} (R : relation A) := reflexivity : forall x : A, R x x.\nNotation \"( x ; y )\" := (existT _ x y).\nNotation \"x .1\" := (projT1 x) (at level 3, format \"x '.1'\").\nReserved Infix \"o\" (at level 40, left associativity).\nDelimit Scope category_scope with category.\nRecord PreCategory :=\n  { object :> Type;\n    morphism : object -> object -> Type;\n    compose : forall s d d', morphism d d' -> morphism s d -> morphism s d' }.\nDelimit Scope functor_scope with functor.\nRecord Functor (C D : PreCategory) := { object_of :> C -> D }.\nLocal Open Scope category_scope.\nClass Isomorphic {C : PreCategory} (s d : C) := {}.\nAxiom composeF : forall C D E (G : Functor D E) (F : Functor C D), Functor C E.\nInfix \"o\" := composeF : functor_scope.\nLocal Open Scope functor_scope.\nDefinition sub_pre_cat {P : PreCategory -> Type} : PreCategory.\n  exact (@ Build_PreCategory\n           { C : PreCategory & P C }\n           (fun C D => Functor C.1 D.1)\n           (fun _ _ _ F G => F o G)).\nDefined.\nRecord NaturalTransformation C D (F G : Functor C D) := { components_of :> forall c, morphism D (F c) (G c) }.\nAxiom composeT : forall C D (F F' F'' : Functor C D) (T' : NaturalTransformation F' F'') (T : NaturalTransformation F F'),\n                   NaturalTransformation F F''.\nDefinition functor_category (C D : PreCategory) : PreCategory.\n  exact (@ Build_PreCategory (Functor C D)\n                            (@ NaturalTransformation C D)\n                            (@ composeT C D)).\nDefined.\nLocal Notation \"C -> D\" := (functor_category C D) : category_scope.\nDefinition NaturalIsomorphism (C D : PreCategory) F G : Type := @ Isomorphic (C -> D) F G.\nContext `{P : PreCategory -> Type}.\nLocal Notation cat := (@ sub_pre_cat P).\nGoal forall (s d d' : cat) (m1 : morphism cat d d') (m2 : morphism cat s d),\n       NaturalIsomorphism (m1 o m2) (m1 o m2)%functor.\n  exact (fun _ _ _ _ _ => reflexivity _).\n(* Toplevel input, characters 15-54:\nAnomaly: variable o unbound. Please report. *)\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337525586/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337525587","html_url":"https://github.com/coq/coq/issues/3710#issuecomment-337525587","issue_url":"https://api.github.com/repos/coq/coq/issues/3710","id":337525587,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNTU4Nw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-10-15T12:10:27Z","updated_at":"2017-10-18T09:35:46Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nThis is fixed in trunk, it was a printing problem (error messages where not printed in the right environment).\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337525587/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]