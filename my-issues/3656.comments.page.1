[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524782","html_url":"https://github.com/coq/coq/issues/3656#issuecomment-337524782","issue_url":"https://api.github.com/repos/coq/coq/issues/3656","id":337524782,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNDc4Mg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-09-23T15:31:56Z","updated_at":"2021-09-10T13:13:56Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\r\n\r\nHere is some code that should not loop:\r\n```\r\nSet Primitive Projections.\r\nRecord hSet : Type := BuildhSet { setT : Type;  iss : True }.\r\nLtac head_hnf_under_binders x :=\r\n  match eval hnf in x with\r\n    | ?f _ => head_hnf_under_binders f\r\n    | (fun y => ?f y) => head_hnf_under_binders f\r\n    | ?y => y\r\n  end.\r\nGoal True.\r\n  let x := head_hnf_under_binders setT in pose x.\r\n```\r\nBut it does.\r\n\r\nThis also behaves wrongly:\r\n```\r\nSet Primitive Projections.\r\nRecord hSet : Type := BuildhSet { setT : Type;  iss : True }.\r\nLtac head_hnf_under_binders x :=\r\n  match eval hnf in x with\r\n    | ?f _ => head_hnf_under_binders f\r\n    | (fun y => ?f y) => head_hnf_under_binders f\r\n    | ?y => y\r\n  end.\r\nGoal setT = setT.\r\n  progress unfold setT. (* should not succeed *)\r\n  match goal with\r\n    | |- (fun h => setT h) = (fun h => setT h) => fail 1 \"should not eta-expand\"\r\n    | _ => idtac\r\n  end. (* should not fail *)\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524782/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524783","html_url":"https://github.com/coq/coq/issues/3656#issuecomment-337524783","issue_url":"https://api.github.com/repos/coq/coq/issues/3656","id":337524783,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNDc4Mw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-09-23T21:40:18Z","updated_at":"2017-10-18T09:33:27Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nFixed in trunk, by not letting unfold work on primitive projections (maintains the illusion that the constant and primitive application versions are the same). Similarly hnf/simpl do not ever produce the eta expansion, only unfolding when enough arguments are given.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524783/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524784","html_url":"https://github.com/coq/coq/issues/3656#issuecomment-337524784","issue_url":"https://api.github.com/repos/coq/coq/issues/3656","id":337524784,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNDc4NA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-09-27T17:53:37Z","updated_at":"2017-10-18T09:33:27Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nIn the new version with unfolded versions of primitive projections, the unfold is accepted (gives you an expanded version), but the syntactic match fails because unfolded and folded versions of the same projection are not syntactically equal.\nPatches to come once I check the test-suite.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524784/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]