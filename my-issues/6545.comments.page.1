[{"url":"https://api.github.com/repos/coq/coq/issues/comments/435925022","html_url":"https://github.com/coq/coq/issues/6545#issuecomment-435925022","issue_url":"https://api.github.com/repos/coq/coq/issues/6545","id":435925022,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNTkyNTAyMg==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2018-11-05T15:50:54Z","updated_at":"2018-11-05T15:50:54Z","author_association":"MEMBER","body":"It's retyping the term.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/435925022/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/435927457","html_url":"https://github.com/coq/coq/issues/6545#issuecomment-435927457","issue_url":"https://api.github.com/repos/coq/coq/issues/6545","id":435927457,"node_id":"MDEyOklzc3VlQ29tbWVudDQzNTkyNzQ1Nw==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2018-11-05T15:57:14Z","updated_at":"2018-11-05T15:57:14Z","author_association":"MEMBER","body":"More precisely, this seems to be due to a econstr-to-constr conversion in the type-checking of template-polymorphic inductive types. You're manipulating huge products, which are template-polymorphic, so you're hitting right in the algorithmic worst case.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/435927457/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/583877252","html_url":"https://github.com/coq/coq/issues/6545#issuecomment-583877252","issue_url":"https://api.github.com/repos/coq/coq/issues/6545","id":583877252,"node_id":"MDEyOklzc3VlQ29tbWVudDU4Mzg3NzI1Mg==","user":{"login":"SkySkimmer","id":2461932,"node_id":"MDQ6VXNlcjI0NjE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/2461932?v=4","gravatar_id":"","url":"https://api.github.com/users/SkySkimmer","html_url":"https://github.com/SkySkimmer","followers_url":"https://api.github.com/users/SkySkimmer/followers","following_url":"https://api.github.com/users/SkySkimmer/following{/other_user}","gists_url":"https://api.github.com/users/SkySkimmer/gists{/gist_id}","starred_url":"https://api.github.com/users/SkySkimmer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SkySkimmer/subscriptions","organizations_url":"https://api.github.com/users/SkySkimmer/orgs","repos_url":"https://api.github.com/users/SkySkimmer/repos","events_url":"https://api.github.com/users/SkySkimmer/events{/privacy}","received_events_url":"https://api.github.com/users/SkySkimmer/received_events","type":"User","site_admin":false},"created_at":"2020-02-09T18:29:51Z","updated_at":"2020-02-09T18:29:51Z","author_association":"CONTRIBUTOR","body":"I don't think it's about econstr, this seems solely about template polymorphism and retyping.\r\nFor instance if you do\r\n~~~coq\r\nLemma foo: let n := 21 in twos n nat = twos n nat.\r\n  lazy [twos].\r\n  exact eq_refl.\r\nTime  Qed.\r\n~~~\r\nit takes a while even if you avoid template poly by adding `Axiom prod : Set -> Set -> Set.` at the beginning.\r\nHowever avoiding template poly makes the second `display` much quicker.\r\nBasically retyping on a stack of template poly types is close to full typing.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/583877252/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/583887647","html_url":"https://github.com/coq/coq/issues/6545#issuecomment-583887647","issue_url":"https://api.github.com/repos/coq/coq/issues/6545","id":583887647,"node_id":"MDEyOklzc3VlQ29tbWVudDU4Mzg4NzY0Nw==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2020-02-09T20:11:19Z","updated_at":"2020-02-09T20:11:19Z","author_association":"MEMBER","body":"> Basically retyping on a stack of template poly types is close to full typing.\r\n\r\nWhich is were true polymorphic inductive types shine... But you have to pay the cost at node creation instead.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/583887647/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/930355633","html_url":"https://github.com/coq/coq/issues/6545#issuecomment-930355633","issue_url":"https://api.github.com/repos/coq/coq/issues/6545","id":930355633,"node_id":"IC_kwDOABUDh843dBmx","user":{"login":"SkySkimmer","id":2461932,"node_id":"MDQ6VXNlcjI0NjE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/2461932?v=4","gravatar_id":"","url":"https://api.github.com/users/SkySkimmer","html_url":"https://github.com/SkySkimmer","followers_url":"https://api.github.com/users/SkySkimmer/followers","following_url":"https://api.github.com/users/SkySkimmer/following{/other_user}","gists_url":"https://api.github.com/users/SkySkimmer/gists{/gist_id}","starred_url":"https://api.github.com/users/SkySkimmer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SkySkimmer/subscriptions","organizations_url":"https://api.github.com/users/SkySkimmer/orgs","repos_url":"https://api.github.com/users/SkySkimmer/repos","events_url":"https://api.github.com/users/SkySkimmer/events{/privacy}","received_events_url":"https://api.github.com/users/SkySkimmer/received_events","type":"User","site_admin":false},"created_at":"2021-09-29T16:53:04Z","updated_at":"2021-09-29T16:53:04Z","author_association":"CONTRIBUTOR","body":"Probably wontfix until the death of templates (may be correlated with the death of the universe)","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/930355633/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]