[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337523785","html_url":"https://github.com/coq/coq/issues/3594#issuecomment-337523785","issue_url":"https://api.github.com/repos/coq/coq/issues/3594","id":337523785,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMzc4NQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-09-08T16:21:23Z","updated_at":"2020-10-24T23:48:16Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\r\n```coq\r\n(* File reduced by coq-bug-finder from original input, then from 8752 lines to 735 lines, then from 735 lines to 310 lines, then from 228 lines to 105 lines, then from 98 lines to 41 lines *)\r\n(* coqc version trunk (September 2014) compiled on Sep 6 2014 6:15:6 with OCaml 4.01.0\r\n   coqtop version cagnode17:/afs/csail.mit.edu/u/j/jgross/coq-trunk,trunk (3ea6d6888105edd5139ae0a4d8f8ecdb586aff6c) *)\r\nNotation idmap := (fun x => x).\r\nAxiom path_forall : forall {A : Type} {P : A -> Type} (f g : forall x : A, P x), (forall x, f x = g x) -> f = g.\r\nLocal Set Primitive Projections.\r\nRecord PreCategory := { object :> Type ; morphism : object -> object -> Type }.\r\nBind Scope category_scope with PreCategory.\r\nSet Implicit Arguments.\r\nDelimit Scope functor_scope with functor.\r\nRecord Functor (C D : PreCategory) := {}.\r\nDefinition opposite (C : PreCategory) : PreCategory := @ Build_PreCategory C (fun s d => morphism C d s).\r\nNotation \"C ^op\" := (opposite C) (at level 3, format \"C '^op'\") : category_scope.\r\nDefinition oppositeF C D (F : Functor C D) : Functor C^op D^op := Build_Functor (C^op) (D^op).\r\nLocal Notation \"F ^op\" := (oppositeF F) (at level 3, format \"F ^op\") : functor_scope.\r\nAxiom oppositeF_involutive : forall C D (F : Functor C D), ((F^op)^op)%functor = F.\r\nLocal Open Scope functor_scope.\r\nGoal forall C D : PreCategory,\r\n       (fun c : Functor C^op D^op => (c^op)^op) = idmap.\r\n  intros.\r\n  exact (path_forall (fun F : Functor C^op D^op => (F^op)^op) _ (@ oppositeF_involutive _ _)).\r\n  Undo.\r\n  Unset Printing Notations.\r\n  exact (path_forall (fun F : Functor C^op _ => (F^op)^op) _ (@ oppositeF_involutive _ _)). (* Toplevel input, characters 22-101:\r\nError:\r\nIn environment\r\nC : PreCategory\r\nD : PreCategory\r\nThe term\r\n \"path_forall\r\n    (fun F : Functor (opposite C) (opposite D) => oppositeF (oppositeF F))\r\n    (fun F : Functor (opposite C) (opposite D) => F)\r\n    (oppositeF_involutive (D:=opposite D))\" has type\r\n \"eq (fun F : Functor (opposite C) (opposite D) => oppositeF (oppositeF F))\r\n    (fun F : Functor (opposite C) (opposite D) => F)\"\r\nwhile it is expected to have type\r\n \"eq (fun c : Functor (opposite C) (opposite D) => oppositeF (oppositeF c))\r\n    (fun x : Functor (opposite C) (opposite D) => x)\"\r\n(cannot unify \"{|\r\n               object := opposite D;\r\n               morphism := fun s d : opposite D => morphism (opposite D) d s |}\"\r\nand \"opposite D\").\r\n *)\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337523785/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337523786","html_url":"https://github.com/coq/coq/issues/3594#issuecomment-337523786","issue_url":"https://api.github.com/repos/coq/coq/issues/3594","id":337523786,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMzc4Ng==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-09-11T11:31:29Z","updated_at":"2017-10-18T09:30:32Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nFixed in trunk.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337523786/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]