[{"url":"https://api.github.com/repos/coq/coq/issues/comments/955794016","html_url":"https://github.com/coq/coq/issues/15099#issuecomment-955794016","issue_url":"https://api.github.com/repos/coq/coq/issues/15099","id":955794016,"node_id":"IC_kwDOABUDh844-EJg","user":{"login":"SkySkimmer","id":2461932,"node_id":"MDQ6VXNlcjI0NjE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/2461932?v=4","gravatar_id":"","url":"https://api.github.com/users/SkySkimmer","html_url":"https://github.com/SkySkimmer","followers_url":"https://api.github.com/users/SkySkimmer/followers","following_url":"https://api.github.com/users/SkySkimmer/following{/other_user}","gists_url":"https://api.github.com/users/SkySkimmer/gists{/gist_id}","starred_url":"https://api.github.com/users/SkySkimmer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SkySkimmer/subscriptions","organizations_url":"https://api.github.com/users/SkySkimmer/orgs","repos_url":"https://api.github.com/users/SkySkimmer/repos","events_url":"https://api.github.com/users/SkySkimmer/events{/privacy}","received_events_url":"https://api.github.com/users/SkySkimmer/received_events","type":"User","site_admin":false},"created_at":"2021-10-31T21:23:17Z","updated_at":"2021-10-31T21:23:17Z","author_association":"CONTRIBUTOR","body":"That error should probably be an anomaly tbh, I don't think there's a non-bug way to get it. (note it's not the same error as the \"undeclared universe\" from eg `Check Type@{u}.` without `Unset Strict Universe Declaration.`)","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/955794016/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/955794957","html_url":"https://github.com/coq/coq/issues/15099#issuecomment-955794957","issue_url":"https://api.github.com/repos/coq/coq/issues/15099","id":955794957,"node_id":"IC_kwDOABUDh844-EYN","user":{"login":"SkySkimmer","id":2461932,"node_id":"MDQ6VXNlcjI0NjE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/2461932?v=4","gravatar_id":"","url":"https://api.github.com/users/SkySkimmer","html_url":"https://github.com/SkySkimmer","followers_url":"https://api.github.com/users/SkySkimmer/followers","following_url":"https://api.github.com/users/SkySkimmer/following{/other_user}","gists_url":"https://api.github.com/users/SkySkimmer/gists{/gist_id}","starred_url":"https://api.github.com/users/SkySkimmer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SkySkimmer/subscriptions","organizations_url":"https://api.github.com/users/SkySkimmer/orgs","repos_url":"https://api.github.com/users/SkySkimmer/repos","events_url":"https://api.github.com/users/SkySkimmer/events{/privacy}","received_events_url":"https://api.github.com/users/SkySkimmer/received_events","type":"User","site_admin":false},"created_at":"2021-10-31T21:30:12Z","updated_at":"2021-10-31T21:30:12Z","author_association":"CONTRIBUTOR","body":"The reason it wasn't made an anomaly may be because it's a kernel error, and philosophically we could think that the kernel should be able to handle badly constructed input without anomaly. However the practical result is that we get more confusing error output.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/955794957/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/957426088","html_url":"https://github.com/coq/coq/issues/15099#issuecomment-957426088","issue_url":"https://api.github.com/repos/coq/coq/issues/15099","id":957426088,"node_id":"IC_kwDOABUDh845ESmo","user":{"login":"SkySkimmer","id":2461932,"node_id":"MDQ6VXNlcjI0NjE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/2461932?v=4","gravatar_id":"","url":"https://api.github.com/users/SkySkimmer","html_url":"https://github.com/SkySkimmer","followers_url":"https://api.github.com/users/SkySkimmer/followers","following_url":"https://api.github.com/users/SkySkimmer/following{/other_user}","gists_url":"https://api.github.com/users/SkySkimmer/gists{/gist_id}","starred_url":"https://api.github.com/users/SkySkimmer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SkySkimmer/subscriptions","organizations_url":"https://api.github.com/users/SkySkimmer/orgs","repos_url":"https://api.github.com/users/SkySkimmer/repos","events_url":"https://api.github.com/users/SkySkimmer/events{/privacy}","received_events_url":"https://api.github.com/users/SkySkimmer/received_events","type":"User","site_admin":false},"created_at":"2021-11-02T12:17:38Z","updated_at":"2021-11-02T12:17:38Z","author_association":"CONTRIBUTOR","body":"Further reduced \r\n~~~coq\r\nRequire Setoid.\r\n\r\nDeclare Scope category_theory_scope.\r\nOpen Scope category_theory_scope.\r\nRequire Import Coq.Classes.CMorphisms.\r\nSet Primitive Projections.\r\nSet Universe Polymorphism.\r\n\r\nClass Setoid A := {\r\n  equiv : crelation A;\r\n  setoid_equiv :> Equivalence equiv\r\n}.\r\n\r\nNotation \"f ≈ g\" := (equiv f g) (at level 79) : category_theory_scope.\r\n\r\nReserved Infix \"~>\" (at level 90, right associativity).\r\n\r\nClass Category := {\r\n  obj : Type;\r\n\r\n  hom : obj -> obj -> Type where \"a ~> b\" := (hom a b);\r\n  homset :> forall X Y, Setoid (X ~> Y);\r\n\r\n  id {x} : x ~> x;\r\n\r\n}.\r\n\r\nDelimit Scope category_scope with category.\r\nDelimit Scope object_scope with object.\r\n\r\nNotation \"x ~> y\" := (@hom _%category x%object y%object)\r\n  (at level 90, right associativity) : homset_scope.\r\n\r\nCoercion obj : Category >-> Sortclass.\r\nOpen Scope homset_scope.\r\n\r\nClass Functor {C D : Category} := {\r\n  fobj : C -> D;\r\n  fmap {x y : C} (f : x ~> y) : fobj x ~> fobj y;\r\n\r\n  fmap_respects :> forall x y, Proper (equiv ==> equiv) (@fmap x y);\r\n\r\n  fmap_id {x : C} : fmap (@id C x) ≈ id;\r\n}.\r\nDeclare Scope functor_type_scope.\r\nOpen Scope functor_type_scope.\r\n\r\nNotation \"C ⟶ D\" := (@Functor C%category D%category)\r\n  (at level 90, right associativity) : functor_type_scope.\r\n\r\nHint Rewrite @fmap_id : categories.\r\n\r\nLtac cat_simpl :=\r\n  simpl; intros;\r\n  autorewrite with categories;\r\n  try reflexivity.\r\n\r\nObligation Tactic := cat_simpl.\r\n\r\nProgram Definition Compose {C D E : Category}\r\n        (F : D ⟶ E) (G : C ⟶ D) : C ⟶ E := {|\r\n  fobj := fun x => fobj (fobj x);\r\n  fmap := fun _ _ f => fmap (fmap f)\r\n|}.\r\n\r\nNext Obligation.\r\nAdmitted.\r\n~~~\r\n(Require Setoid can be replaced by `(* -*- coq-prog-args: (\"-top\" \"Coq.Classes.Foo\"); -*- *)`)","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/957426088/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/958460836","html_url":"https://github.com/coq/coq/issues/15099#issuecomment-958460836","issue_url":"https://api.github.com/repos/coq/coq/issues/15099","id":958460836,"node_id":"IC_kwDOABUDh845IPOk","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2021-11-02T23:57:11Z","updated_at":"2021-11-02T23:57:11Z","author_association":"MEMBER","body":"Here's an even smaller example:\r\n```coq\r\nRequire Setoid.\r\nRequire Import Coq.Classes.CMorphisms.\r\nSet Primitive Projections.\r\nSet Universe Polymorphism.\r\n\r\nClass Category := {\r\n  obj : Type;\r\n  hom : obj -> obj -> Type\r\n}.\r\n\r\nClass Functor {C : Category} := {\r\n  fmap_id : True;\r\n  fmap_respects :> Type;\r\n}.\r\n\r\nAxiom admit : forall {T}, T.\r\nLtac cat_simpl :=\r\n  cbv beta;\r\n  try solve [ intros;\r\n              lazymatch goal with\r\n              | |- Type => fail\r\n              | _ => refine (let x := @trans_co_eq_inv_arrow_morphism\r\n                                        (@hom _ admit admit) admit admit admit admit admit admit admit admit admit in\r\n                            admit)\r\n              end ].\r\n\r\nObligation Tactic := cat_simpl.\r\nProgram Definition Compose {E : Category} : @Functor E := {| fmap_id := _ |}.\r\nNext Obligation.\r\nAdmitted.\r\n```\r\n\r\n@SkySkimmer Do you have an explanation of what's going on here?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/958460836/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/958719088","html_url":"https://github.com/coq/coq/issues/15099#issuecomment-958719088","issue_url":"https://api.github.com/repos/coq/coq/issues/15099","id":958719088,"node_id":"IC_kwDOABUDh845JORw","user":{"login":"SkySkimmer","id":2461932,"node_id":"MDQ6VXNlcjI0NjE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/2461932?v=4","gravatar_id":"","url":"https://api.github.com/users/SkySkimmer","html_url":"https://github.com/SkySkimmer","followers_url":"https://api.github.com/users/SkySkimmer/followers","following_url":"https://api.github.com/users/SkySkimmer/following{/other_user}","gists_url":"https://api.github.com/users/SkySkimmer/gists{/gist_id}","starred_url":"https://api.github.com/users/SkySkimmer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SkySkimmer/subscriptions","organizations_url":"https://api.github.com/users/SkySkimmer/orgs","repos_url":"https://api.github.com/users/SkySkimmer/repos","events_url":"https://api.github.com/users/SkySkimmer/events{/privacy}","received_events_url":"https://api.github.com/users/SkySkimmer/received_events","type":"User","site_admin":false},"created_at":"2021-11-03T07:52:19Z","updated_at":"2021-11-03T07:52:19Z","author_association":"CONTRIBUTOR","body":"See related PR, a universe substitution is missing in the Admitted path.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/958719088/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]