[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337532180","html_url":"https://github.com/coq/coq/issues/4095#issuecomment-337532180","issue_url":"https://api.github.com/repos/coq/coq/issues/4095","id":337532180,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzMjE4MA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-02-25T23:54:44Z","updated_at":"2020-07-09T09:09:37Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\r\n\r\nThis code worked in 8.4pl5, and does not work in 8.5beta1.  I haven't looked into it too carefully to figure out whether or not it should actually work:\r\n```coq\r\n(* File reduced by coq-bug-finder from original input, then from 5752 lines to 3828 lines, then from 2707 lines to 558 lines, then from 472 lines to 168 lines, then from 110 lines to 101 lines, then from 96 lines to 77 lines, then from 80 lines to 64 lines, then from 92 lines to 79 lines *)\r\n(* coqc version 8.5beta1 (February 2015) compiled on Feb 23 2015 18:32:3 with OCaml 4.01.0\r\n   coqtop version cagnode15:/afs/csail.mit.edu/u/j/jgross/coq-8.5,v8.5 (ebfc19d792492417b129063fb511aa423e9d9e08) *)\r\nRequire Import Coq.Setoids.Setoid.\r\nGeneralizable All Variables.\r\nAxiom admit : forall {T}, T.\r\nClass Equiv (A : Type) := equiv : relation A.\r\nClass type (A : Type) {e : Equiv A} := eq_equiv : Equivalence equiv.\r\nClass ILogicOps Frm := { lentails: relation Frm;\r\n                         ltrue: Frm;\r\n                         land: Frm -> Frm -> Frm;\r\n                         lor: Frm -> Frm -> Frm }.\r\nInfix \"|--\"  := lentails (at level 79, no associativity).\r\nClass ILogic Frm {ILOps: ILogicOps Frm} := { lentailsPre:> PreOrder lentails }.\r\nDefinition lequiv `{ILogic Frm} P Q := P |-- Q /\\ Q |-- P.\r\nInfix \"-|-\"  := lequiv (at level 85, no associativity).\r\nInstance lequiv_inverse_lentails `{ILogic Frm} : subrelation lequiv (inverse lentails) := admit.\r\nRecord ILFunFrm (T : Type) `{e : Equiv T} `{ILOps : ILogicOps Frm} := mkILFunFrm { ILFunFrm_pred :> T -> Frm }.\r\nSection ILogic_Fun.\r\n  Context (T: Type) `{TType: type T}.\r\n  Context `{IL: ILogic Frm}.\r\n  Local Instance ILFun_Ops : ILogicOps (@ ILFunFrm T _ Frm _) := admit.\r\n  Definition ILFun_ILogic : ILogic (@ ILFunFrm T _ Frm _) := admit.\r\nEnd ILogic_Fun.\r\nImplicit Arguments ILFunFrm [[ILOps] [e]].\r\nInstance ILogicOps_Prop : ILogicOps Prop | 2 := {| lentails P Q := (P : Prop) -> Q;\r\n                                                   ltrue        := True;\r\n                                                   land     P Q := P /\\ Q;\r\n                                                   lor      P Q := P \\/ Q |}.\r\nAxiom Action : Set.\r\nDefinition Actions := list Action.\r\nInstance ActionsEquiv : Equiv Actions := { equiv a1 a2 := a1 = a2 }.\r\nDefinition OPred := ILFunFrm Actions Prop.\r\nLocal Existing Instance ILFun_Ops.\r\nLocal Existing Instance ILFun_ILogic.\r\nDefinition catOP (P Q: OPred) : OPred := admit.\r\nAdd Parametric Morphism : catOP with signature lentails ==> lentails ==> lentails as catOP_entails_m.\r\nadmit.\r\nDefined.\r\nDefinition catOPA (P Q R : OPred) : catOP (catOP P Q) R -|- catOP P (catOP Q R) := admit.\r\nClass IsPointed (T : Type) := point : T.\r\nNotation IsPointed_OPred P := (IsPointed (exists x : Actions, (P : OPred) x)).\r\nRecord PointedOPred := mkPointedOPred {\r\n                           OPred_pred :> OPred;\r\n                           OPred_inhabited: IsPointed_OPred OPred_pred\r\n                         }.\r\nExisting Instance OPred_inhabited.\r\nCanonical Structure default_PointedOPred O `{IsPointed_OPred O} : PointedOPred\r\n  := {| OPred_pred := O ; OPred_inhabited := _ |}.\r\nInstance IsPointed_catOP `{IsPointed_OPred P, IsPointed_OPred Q} : IsPointed_OPred (catOP P Q) := admit.\r\nGoal forall (T : Type) (O0 : T -> OPred) (O1 : T -> PointedOPred)\r\n            (tr : T -> T) (O2 : PointedOPred) (x : T)\r\n            (H : forall x0 : T, catOP (O0 x0) (O1 (tr x0)) |-- O1 x0),\r\n     exists e1 e2,\r\n       catOP (O0 e1) (OPred_pred e2) |-- catOP (O1 x) O2.\r\n  intros; do 2 esplit.\r\n  rewrite <- catOPA.\r\n  lazymatch goal with\r\n  | |- ?R (?f ?a ?b) (?f ?a' ?b') =>\r\n    let P := constr:(fun H H' => @ Morphisms.proper_prf (OPred -> OPred -> OPred)\r\n         (@ Morphisms.respectful OPred (OPred -> OPred)\r\n            (@ lentails OPred\r\n               (@ ILFun_Ops Actions ActionsEquiv Prop ILogicOps_Prop))\r\n            (@ lentails OPred\r\n               (@ ILFun_Ops Actions ActionsEquiv Prop ILogicOps_Prop) ==>\r\n             @ lentails OPred\r\n               (@ ILFun_Ops Actions ActionsEquiv Prop ILogicOps_Prop))) catOP\r\n         catOP_entails_m_Proper a a' H b b' H') in\r\n    pose P;\r\n    refine (P _ _)\r\n  end.\r\n  Undo.\r\n  lazymatch goal with\r\n  | |- ?R (?f ?a ?b) (?f ?a' ?b') =>\r\n    let P := constr:(fun H H' => Morphisms.proper_prf a a' H b b' H') in\r\n    idtac\r\n  end. (* Toplevel input, characters 15-182:\r\nError: Cannot infer an instance of type\r\n\"PointedOPred\" for the variable p in environment:\r\nT : Type\r\nO0 : T -> OPred\r\nO1 : T -> PointedOPred\r\ntr : T -> T\r\nO2 : PointedOPred\r\nx0 : T\r\nH : forall x0 : T, catOP (O0 x0) (O1 (tr x0)) |-- O1 x0 *)\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337532180/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337532182","html_url":"https://github.com/coq/coq/issues/4095#issuecomment-337532182","issue_url":"https://api.github.com/repos/coq/coq/issues/4095","id":337532182,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzMjE4Mg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-10-29T09:56:54Z","updated_at":"2017-10-18T09:54:47Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nFixed in my doctcs branch, should be in 8.6beta1 (leaving open until merge, as per Maxime's advice).\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337532182/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337532183","html_url":"https://github.com/coq/coq/issues/4095#issuecomment-337532183","issue_url":"https://api.github.com/repos/coq/coq/issues/4095","id":337532183,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzMjE4Mw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-11-15T14:06:44Z","updated_at":"2017-10-18T09:54:48Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nThis will fail also in 8.6beta1, as it used to backtrack on a solution with a shelved goal and we are allowing them like in 8.5 now.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337532183/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337532185","html_url":"https://github.com/coq/coq/issues/4095#issuecomment-337532185","issue_url":"https://api.github.com/repos/coq/coq/issues/4095","id":337532185,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzMjE4NQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-07-25T16:09:36Z","updated_at":"2017-10-18T09:54:48Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nBoth in this an 3513, canonical structure resolution creates an unsolvable typeclass constraint that makes a latter proof-search diverge. Creating the evar with unresolvable store during unification does not help...\nWith the legacy resolution, unification through w_unify.ml created a meta during the canonical structure resolution, which prevented the simple apply of typeclass resolution from succeeding, as there was an unsolved dependent meta. This is not the case currently, unless we make the evar unresolvable in evarconv during canonical structure resolution, and propagate unresolvability in Evd.restrict as well,\nand check unresolvability in goals created by application of a hint during resolution.\nBut that's not correct either, because we do want to launch resolution on the evars marked \"unresolvable\" by the tactic actually. So all in all I think this is invalid code, the default_PointedOPred structure launches a resolution for ISPointed_OPred which is resolved by OPred_inhabited which diverges\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337532185/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/654208400","html_url":"https://github.com/coq/coq/issues/4095#issuecomment-654208400","issue_url":"https://api.github.com/repos/coq/coq/issues/4095","id":654208400,"node_id":"MDEyOklzc3VlQ29tbWVudDY1NDIwODQwMA==","user":{"login":"maximedenes","id":647105,"node_id":"MDQ6VXNlcjY0NzEwNQ==","avatar_url":"https://avatars.githubusercontent.com/u/647105?v=4","gravatar_id":"","url":"https://api.github.com/users/maximedenes","html_url":"https://github.com/maximedenes","followers_url":"https://api.github.com/users/maximedenes/followers","following_url":"https://api.github.com/users/maximedenes/following{/other_user}","gists_url":"https://api.github.com/users/maximedenes/gists{/gist_id}","starred_url":"https://api.github.com/users/maximedenes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maximedenes/subscriptions","organizations_url":"https://api.github.com/users/maximedenes/orgs","repos_url":"https://api.github.com/users/maximedenes/repos","events_url":"https://api.github.com/users/maximedenes/events{/privacy}","received_events_url":"https://api.github.com/users/maximedenes/received_events","type":"User","site_admin":false},"created_at":"2020-07-06T12:37:35Z","updated_at":"2020-07-06T12:37:35Z","author_association":"MEMBER","body":"@mattam82 what's the status of this bug? The issue is open, but a test case can be found in `test-suite/bugs/closed`. I'm asking because this is one of the things that breaks in the future_goals / shelve clean up I'm working on.\r\n\r\nIs https://github.com/coq/coq/blob/3244b9c6e4159042bae0cd2ad48aba77928d7b2d/test-suite/bugs/closed/bug_4095.v#L74 expected to succeed or fail?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/654208400/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/654215796","html_url":"https://github.com/coq/coq/issues/4095#issuecomment-654215796","issue_url":"https://api.github.com/repos/coq/coq/issues/4095","id":654215796,"node_id":"MDEyOklzc3VlQ29tbWVudDY1NDIxNTc5Ng==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2020-07-06T12:52:42Z","updated_at":"2020-07-06T12:53:36Z","author_association":"MEMBER","body":"According to git history, it was fixed by https://github.com/coq/coq/commit/0ab187ee578f0ef49ecf484278b8d3569630ee48  / https://github.com/coq/coq/pull/339 which was then partially reverted in https://github.com/coq/coq/pull/358","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/654215796/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/654219611","html_url":"https://github.com/coq/coq/issues/4095#issuecomment-654219611","issue_url":"https://api.github.com/repos/coq/coq/issues/4095","id":654219611,"node_id":"MDEyOklzc3VlQ29tbWVudDY1NDIxOTYxMQ==","user":{"login":"maximedenes","id":647105,"node_id":"MDQ6VXNlcjY0NzEwNQ==","avatar_url":"https://avatars.githubusercontent.com/u/647105?v=4","gravatar_id":"","url":"https://api.github.com/users/maximedenes","html_url":"https://github.com/maximedenes","followers_url":"https://api.github.com/users/maximedenes/followers","following_url":"https://api.github.com/users/maximedenes/following{/other_user}","gists_url":"https://api.github.com/users/maximedenes/gists{/gist_id}","starred_url":"https://api.github.com/users/maximedenes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maximedenes/subscriptions","organizations_url":"https://api.github.com/users/maximedenes/orgs","repos_url":"https://api.github.com/users/maximedenes/repos","events_url":"https://api.github.com/users/maximedenes/events{/privacy}","received_events_url":"https://api.github.com/users/maximedenes/received_events","type":"User","site_admin":false},"created_at":"2020-07-06T13:00:03Z","updated_at":"2020-07-06T13:00:03Z","author_association":"MEMBER","body":"Lol, thanks @JasonGross, according to my comments on GitHub, I've been confused by that PR since 2016.\r\n\r\n#358 adds a `Fail` without moving the test case. The patch I'm working on makes it fail (that is, makes the command succeed). It is bad or good?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/654219611/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/654224356","html_url":"https://github.com/coq/coq/issues/4095#issuecomment-654224356","issue_url":"https://api.github.com/repos/coq/coq/issues/4095","id":654224356,"node_id":"MDEyOklzc3VlQ29tbWVudDY1NDIyNDM1Ng==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2020-07-06T13:07:22Z","updated_at":"2020-07-06T13:07:22Z","author_association":"MEMBER","body":"It restores compatibility with 8.4pl6.  That's good, right?\r\n\r\n(As I said in the initial comment, \"I haven't looked into it too carefully to figure out whether or not it should actually work\".  So I think it's probably fine to change the behavior of this test-case, as long as the change in behavior is deliberate / principled, and documented in CHANGES.)","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/654224356/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/654378207","html_url":"https://github.com/coq/coq/issues/4095#issuecomment-654378207","issue_url":"https://api.github.com/repos/coq/coq/issues/4095","id":654378207,"node_id":"MDEyOklzc3VlQ29tbWVudDY1NDM3ODIwNw==","user":{"login":"mattam82","id":98373,"node_id":"MDQ6VXNlcjk4Mzcz","avatar_url":"https://avatars.githubusercontent.com/u/98373?v=4","gravatar_id":"","url":"https://api.github.com/users/mattam82","html_url":"https://github.com/mattam82","followers_url":"https://api.github.com/users/mattam82/followers","following_url":"https://api.github.com/users/mattam82/following{/other_user}","gists_url":"https://api.github.com/users/mattam82/gists{/gist_id}","starred_url":"https://api.github.com/users/mattam82/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattam82/subscriptions","organizations_url":"https://api.github.com/users/mattam82/orgs","repos_url":"https://api.github.com/users/mattam82/repos","events_url":"https://api.github.com/users/mattam82/events{/privacy}","received_events_url":"https://api.github.com/users/mattam82/received_events","type":"User","site_admin":false},"created_at":"2020-07-06T17:48:45Z","updated_at":"2020-07-06T17:48:45Z","author_association":"MEMBER","body":"We'd have to see why it succeeds now. It sounds like the behavior that changed with your patch is then that (more?) shelved subgoals are allowed to remain after typeclass resolution.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/654378207/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/654379404","html_url":"https://github.com/coq/coq/issues/4095#issuecomment-654379404","issue_url":"https://api.github.com/repos/coq/coq/issues/4095","id":654379404,"node_id":"MDEyOklzc3VlQ29tbWVudDY1NDM3OTQwNA==","user":{"login":"mattam82","id":98373,"node_id":"MDQ6VXNlcjk4Mzcz","avatar_url":"https://avatars.githubusercontent.com/u/98373?v=4","gravatar_id":"","url":"https://api.github.com/users/mattam82","html_url":"https://github.com/mattam82","followers_url":"https://api.github.com/users/mattam82/followers","following_url":"https://api.github.com/users/mattam82/following{/other_user}","gists_url":"https://api.github.com/users/mattam82/gists{/gist_id}","starred_url":"https://api.github.com/users/mattam82/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattam82/subscriptions","organizations_url":"https://api.github.com/users/mattam82/orgs","repos_url":"https://api.github.com/users/mattam82/repos","events_url":"https://api.github.com/users/mattam82/events{/privacy}","received_events_url":"https://api.github.com/users/mattam82/received_events","type":"User","site_admin":false},"created_at":"2020-07-06T17:51:22Z","updated_at":"2020-07-06T17:51:22Z","author_association":"MEMBER","body":"Or the contrary: the unresolvability status is kept correctly, avoinding diverging proof search as I described in the comment above https://github.com/coq/coq/issues/4095#issuecomment-337532185. In that case I think we might have solved the issue :)","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/654379404/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]