[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337525294","html_url":"https://github.com/coq/coq/issues/3690#issuecomment-337525294","issue_url":"https://api.github.com/repos/coq/coq/issues/3690","id":337525294,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNTI5NA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-10-01T22:11:10Z","updated_at":"2018-07-13T13:01:23Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\r\n```coq\r\n\r\nSet Printing Universes.\r\nSet Universe Polymorphism.\r\nDefinition foo (a := Type) (b := Type) (c := Type) := Type.\r\nPrint foo.\r\n(* foo =\r\nlet a := Type@ {Top.1} in\r\nlet b := Type@ {Top.2} in let c := Type@ {Top.3} in Type@ {Top.4}\r\n     : Type@ {Top.4+1}\r\n(* Top.1\r\n   Top.2\r\n   Top.3\r\n   Top.4 |=  *) *)\r\nCheck @ foo. (* foo@ {Top.5 Top.6 Top.7\r\nTop.8}\r\n     : Type@ {Top.8+1}\r\n(* Top.5\r\n   Top.6\r\n   Top.7\r\n   Top.8 |=  *) *)\r\nDefinition bar := Eval compute in foo.\r\nCheck @ bar. (* bar@ {Top.13 Top.14 Top.15\r\nTop.16}\r\n     : Type@ {Top.16+1}\r\n(* Top.13\r\n   Top.14\r\n   Top.15\r\n   Top.16 |=  *) *)\r\n(* The following should fail, since [bar] should only need one universe. *)\r\nCheck @ bar@ {i i i i}.\r\nDefinition baz (a := Type) (b := Type : a) (c := Type : b) := a -> c.\r\nDefinition qux := Eval compute in baz.\r\nCheck @ qux. (* qux@ {Top.24 Top.25\r\nTop.26}\r\n     : Type@ {max(Top.24+1, Top.26+1)}\r\n(* Top.24\r\n   Top.25\r\n   Top.26 |= Top.25 < Top.24\r\n              Top.26 < Top.25\r\n               *) *)\r\nPrint qux. (* qux =\r\nType@ {Top.21} -> Type@ {Top.23}\r\n     : Type@ {max(Top.21+1, Top.23+1)}\r\n(* Top.21\r\n   Top.22\r\n   Top.23 |= Top.22 < Top.21\r\n              Top.23 < Top.22\r\n               *) *)\r\nFail Check @ qux@ {Set Set}.\r\nFail Check @ qux@ {Set Set Set}.\r\n(* [qux] should only need two universes *)\r\nFail Check @ qux@ {i j k}.  (* Error: The command has not failed!, but I think this is suboptimal *)\r\nCheck @ qux@ {i j}.\r\n\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337525294/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337525295","html_url":"https://github.com/coq/coq/issues/3690#issuecomment-337525295","issue_url":"https://api.github.com/repos/coq/coq/issues/3690","id":337525295,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNTI5NQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-02-16T21:05:47Z","updated_at":"2017-10-18T09:34:59Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nThere is no way to minimize i < j < k to i < k for now even if j doesn't appear anywhere else. I'm hoping a more feature-rich universe and constraint language will solve this nicely (max and +n treated directly).\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337525295/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/415314593","html_url":"https://github.com/coq/coq/issues/3690#issuecomment-415314593","issue_url":"https://api.github.com/repos/coq/coq/issues/3690","id":415314593,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNTMxNDU5Mw==","user":{"login":"SkySkimmer","id":2461932,"node_id":"MDQ6VXNlcjI0NjE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/2461932?v=4","gravatar_id":"","url":"https://api.github.com/users/SkySkimmer","html_url":"https://github.com/SkySkimmer","followers_url":"https://api.github.com/users/SkySkimmer/followers","following_url":"https://api.github.com/users/SkySkimmer/following{/other_user}","gists_url":"https://api.github.com/users/SkySkimmer/gists{/gist_id}","starred_url":"https://api.github.com/users/SkySkimmer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SkySkimmer/subscriptions","organizations_url":"https://api.github.com/users/SkySkimmer/orgs","repos_url":"https://api.github.com/users/SkySkimmer/repos","events_url":"https://api.github.com/users/SkySkimmer/events{/privacy}","received_events_url":"https://api.github.com/users/SkySkimmer/received_events","type":"User","site_admin":false},"created_at":"2018-08-23T07:08:32Z","updated_at":"2018-08-23T07:08:32Z","author_association":"CONTRIBUTOR","body":">There is no way to minimize i < j < k to i < k for now even if j doesn't appear anywhere else. I'm hoping a more feature-rich universe and constraint language will solve this nicely (max and +n treated directly).\r\n\r\nThe new `restrict` can do it, we just need to swap the order of restrict and reduction.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/415314593/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]