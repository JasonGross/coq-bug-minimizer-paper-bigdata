[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530697","html_url":"https://github.com/coq/coq/issues/4006#issuecomment-337530697","issue_url":"https://api.github.com/repos/coq/coq/issues/4006","id":337530697,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzMDY5Nw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-02-07T00:35:01Z","updated_at":"2017-10-18T09:50:27Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\n$ cat foo.v\nTheorem bar : Set.\nProof using .\n  idtac.\n  Opaque plus.\n  fail.\nQed.\n\n$ coqc -quick foo\nError: Tactic failure.\n\n$ coqtop\nWelcome to Coq cagnode15:/afs/csail.mit.edu/u/j/jgross/coq-trunk,trunk (9e6b28c04ad98369a012faf3bd4d630cf123a473)\n\nCoq <\n\n\nI thought there was some logic to allow [Opaque] to be run on the slave and the master separately?\n\nAnyway, here's a file for the test-suite, that should succeed:\n\n(* -*- coq-prog-args: (\"-emacs\" \"-quick\") -*- *)\nTheorem bar : Set.\nProof using .\n  idtac.\n  Opaque plus.\n  fail.\nQed.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530697/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530698","html_url":"https://github.com/coq/coq/issues/4006#issuecomment-337530698","issue_url":"https://api.github.com/repos/coq/coq/issues/4006","id":337530698,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzMDY5OA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-02-07T09:48:24Z","updated_at":"2017-10-18T09:50:28Z","author_association":"CONTRIBUTOR","body":"Comment author: @gares\n\nYou are right, the static analysis of the document thinks you are nesting\nproofs while you are not.  I'll look at it on Monday.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530698/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530699","html_url":"https://github.com/coq/coq/issues/4006#issuecomment-337530699","issue_url":"https://api.github.com/repos/coq/coq/issues/4006","id":337530699,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzMDY5OQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-02-07T22:56:06Z","updated_at":"2017-10-18T09:50:28Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nHere's another one that fails where I think it should succeed:\n\nTheorem bar : Set.\nProof using .\n  idtac.\n  Ltac t := idtac.\n  t.\n  fail.\nQed.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530699/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530700","html_url":"https://github.com/coq/coq/issues/4006#issuecomment-337530700","issue_url":"https://api.github.com/repos/coq/coq/issues/4006","id":337530700,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzMDcwMA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-02-08T09:48:51Z","updated_at":"2017-10-18T09:50:28Z","author_association":"CONTRIBUTOR","body":"Comment author: @gares\n\nBoth work now, but they are exceptions to the rule: only proofs made of tactics only can be deferred.  Between Proof and Qed only lowercase stuff.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530700/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530702","html_url":"https://github.com/coq/coq/issues/4006#issuecomment-337530702","issue_url":"https://api.github.com/repos/coq/coq/issues/4006","id":337530702,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzMDcwMg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-02-08T19:29:51Z","updated_at":"2017-10-18T09:50:28Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nI'm curious why not almost all things can be classed into \"do only on the slave\" or \"do on both\"?  (Exceptions I see, which can probably break async even when not inside a proof: [Back], [BackTo], [Undo], [Backtrack].)  For example, it seems like the following vernaculars can be classed straightforwardly:\n\nOnly on the slave:\n- [Check]\n- [Print]\n- [About]\n- [Info]\n- [Compute]\n- [Focus]\n- [Grab Existential Variables]\n- [Unshelve]\n- [Guarded]\n- [Search] and it's variants\n- [Show]\n- [Eval]\n- [Time]/[Timeout]/[Fail] with something only on the slave\n\nI've not tested if the following work, but if they do, they should be only on the slave:\n\n- [Arguments <anything which isn't a global constant>]\n- [Opaque]/[Transparent] applied to anything which isn't a global constant\n- [Hint] (resolve, extern, whatever) applied to anything which isn't a global constant\n- [Bind Scope] mentioning anything which isn't a global constant\n- [Notation] mentioning anything which isn't a global constant\n\n\n\nOn both the slave and master (at least, assuming they currently work in the middle of a proof):\n- [Arguments <global constant>]\n- [Opaque]/[Transparent] <global constant>\n- [Hint] on global constants\n- [Bind Scope] on global constants\n- Nested Definitions/Theorems/Instances/Axioms/etc.\n- [Notation] mentioning only global constants\n- [Open Scope]/[Close Scope]\n- [CreateHintDb]\n- [Delimit Scope]\n- [Import]/[Export]/[Require]\n- [Generalizable Variables]\n- [Set] / [Unset]\n- [Coercion]\n- [Ltac]\n- [Strategy]\n\n\n\nSome of these things can legitimately go in a proof, at least until there are more local ways of doing things.  In particular, things adjusting display (scopes, printing options), and opacity ([Strategy], [Opaque], [Transparent], [Arguments] directives) seem hard to remove from some proofs.\n\nIt might be nice to have a list of the exceptions somewhere in the refman.  (Should this be a separate issue?)\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530702/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530703","html_url":"https://github.com/coq/coq/issues/4006#issuecomment-337530703","issue_url":"https://api.github.com/repos/coq/coq/issues/4006","id":337530703,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzMDcwMw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-02-08T20:45:06Z","updated_at":"2017-10-18T09:50:28Z","author_association":"CONTRIBUTOR","body":"Comment author: @gares\n\nWith respect to the first group: Coq 8.5 has a notion of document that is being checked. Coq 8.4 had not, and many interfaces suffer from that. I guess that you are used to write Check or Set Printing all in the middle\nof a proof in PG, because this is the only thing you can do.  But these commands are morally directive for the system, not sentences part of the text you are writing.  CoqIDE uses a side channel to set these options or fire the queries and this is the way to go.  Not all interfaces have a side channel, and some particular documents like tutorials need the system to let one stick options and queries in the middle of the document, so it is supported, but how this plays with -quick is not something I want to document, since I may want to change it.\n\nFor the second group, I was too strict, of course some non-capital commands are morally proof commands, like Grab Ex Variables, and these are fully supported.\n\nThe third group is what I call \"side effects\".  They are mostly supported but\nI don't want to document which are and which are not allowed\nin a proof to be delegated.  By default, they are not.  Simple rule.\n\nOf course, if you look at the sources you will find the classification function\nso you can know which are supported (or you can just try).  But I don't want\nbugs or feature requests like \"support this, support that\".  These commands\nshould not be in a proof.\nAs you say there are few exceptions that are legit, but not in their current \"global side effect: form.  E.g. Opaque may be legit, but its effect lasts (today)\nafter the proof end.  If its semantics is turned in \"make X opaque until the end of the proof\" then I'm happy writing in the doc that it is supported.  I can't change the\nsemantics of Opaque making it \"less global\" because It would break compatibility.\nLast time I checked, all the commands you considered as legit are in fact supported,\nbut I'd love them to have a \"local\" variant, so I'm not writing they are supported,\nthe their \"local variant\" will have no reason to exist.\n\nBest,\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530703/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]