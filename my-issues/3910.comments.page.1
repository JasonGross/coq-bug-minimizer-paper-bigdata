[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337529117","html_url":"https://github.com/coq/coq/issues/3910#issuecomment-337529117","issue_url":"https://api.github.com/repos/coq/coq/issues/3910","id":337529117,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyOTExNw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-01-11T09:32:16Z","updated_at":"2018-03-30T23:36:40Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\r\n```coq\r\n\r\n(* File reduced by coq-bug-finder from original input, then from 2352 lines to 162 lines, then from 138 lines to 50 lines *)\r\n(* coqc version trunk (January 2015) compiled on Jan 10 2015 10:54:47 with OCaml 4.01.0\r\n   coqtop version cagnode15:/afs/csail.mit.edu/u/j/jgross/coq-trunk,trunk (b858f939f33dc4bc4c8e470ed62310ef15c59a99) *)\r\n\r\nNotation compose g f := (fun x => g (f x)).\r\nNotation \"g 'o' f\" := (compose g f) (at level 40, left associativity) : function_scope.\r\nOpen Scope function_scope.\r\nInductive paths {A : Type} (a : A) : A -> Type := idpath : paths a a.\r\nArguments idpath {A a} , [A] a.\r\nNotation \"x = y :> A\" := (@ paths A x y) : type_scope.\r\nNotation \"x = y\" := (x = y :>_) : type_scope.\r\nDefinition ap {A B:Type} (f:A -> B) {x y:A} (p:x = y) : f x = f y := match p with idpath => idpath end.\r\nClass IsEquiv {A B : Type} (f : A -> B) := { equiv_inv : B -> A }.\r\nNotation \"f ^-1\" := (@ equiv_inv _ _ f _) (at level 3, format \"f '^-1'\") : equiv_scope.\r\nLocal Open Scope equiv_scope.\r\nGeneralizable Variables A B C f g.\r\nGlobal Instance isequiv_compose `{IsEquiv A B f} `{IsEquiv B C g}\r\n: IsEquiv (compose g f) | 1000\r\n  := Build_IsEquiv A C (compose g f) (compose f^-1 g^-1).\r\nDefinition isequiv_homotopic {A B} (f : A -> B) {g : A -> B} `{IsEquiv A B f} (h : forall x, f x = g x) : IsEquiv g\r\n  := Build_IsEquiv _ _ g (f ^-1).\r\nGlobal Instance isequiv_inverse {A B} (f : A -> B) `{IsEquiv A B f} : IsEquiv f^-1 | 10000\r\n  := Build_IsEquiv B A f^-1 f.\r\nAxiom eisretr : forall {A B} (f : A -> B) `{IsEquiv A B f} x, f (f^-1 x) = x.\r\nDefinition cancelR_isequiv {A B C} (f : A -> B) {g : B -> C}\r\n           `{IsEquiv A B f} `{IsEquiv A C (g o f)}\r\n: IsEquiv g.\r\nProof.\r\n  assert (IsEquiv g) by admit.\r\n  refine (isequiv_homotopic (compose (compose g f) f^-1)\r\n                            (fun b => ap g (eisretr f b))).\r\n  all:(try exact _; exact _).\r\n  Undo.\r\n  Fail all:((try exact _; exact _) || match goal with |- ?G => fail \"foo\" G end). (* wtf? The command has indeed failed with message:\r\n=> Error: Tactic failure: foo (IsEquiv (fun x : B => g (f (f^-1 x)))). *)\r\n  Fail all:solve [ try exact _; exact _ ]. (* The command has indeed failed with message:\r\n=> Error: No applicable tactic. *)\r\n```\r\n\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337529117/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337529118","html_url":"https://github.com/coq/coq/issues/3910#issuecomment-337529118","issue_url":"https://api.github.com/repos/coq/coq/issues/3910","id":337529118,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyOTExOA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-01-12T06:35:05Z","updated_at":"2017-10-18T09:45:56Z","author_association":"CONTRIBUTOR","body":"Comment author: @aspiwack\n\nThis one is subtle.\nYou have two goals. The first one has an evar in it, which happens to be the second goal. Your succeeding command is \"try exact _ ; exact _\".\n\nWhat happens, is that the first \"exact _\" fails on the first goal, but succeeds on the second, thus instantiating the evar. Since it's in a \"try\", we are left with a single goal, which is then solved by \"exact _\".\n\nTo see the problem, note that this command fails:\n  all:[>try exact _; exact _ ..].\nIndeed, now we apply both tactic in the first goal, then both tactics in the second goal. The order in which the evars are solved is different, and this leads to failure.\n\nAll the backtracking tactics such as solve or ||, are implicitly applied inside a [> ..]. There may be some global backtracking tactics in the future, but I believe it is too late now to include them in v8.5.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337529118/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337529119","html_url":"https://github.com/coq/coq/issues/3910#issuecomment-337529119","issue_url":"https://api.github.com/repos/coq/coq/issues/3910","id":337529119,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyOTExOQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-01-12T06:38:47Z","updated_at":"2017-10-18T09:45:56Z","author_association":"CONTRIBUTOR","body":"Comment author: @aspiwack\n\n*** Bug [BZ#3909](https://github.com/coq/coq/issues?q=is%3Aissue%20%22Original%20bug%20ID%3A%20BZ%233909%22) has been marked as a duplicate of this bug. ***\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337529119/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/388588234","html_url":"https://github.com/coq/coq/issues/3910#issuecomment-388588234","issue_url":"https://api.github.com/repos/coq/coq/issues/3910","id":388588234,"node_id":"MDEyOklzc3VlQ29tbWVudDM4ODU4ODIzNA==","user":{"login":"SkySkimmer","id":2461932,"node_id":"MDQ6VXNlcjI0NjE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/2461932?v=4","gravatar_id":"","url":"https://api.github.com/users/SkySkimmer","html_url":"https://github.com/SkySkimmer","followers_url":"https://api.github.com/users/SkySkimmer/followers","following_url":"https://api.github.com/users/SkySkimmer/following{/other_user}","gists_url":"https://api.github.com/users/SkySkimmer/gists{/gist_id}","starred_url":"https://api.github.com/users/SkySkimmer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SkySkimmer/subscriptions","organizations_url":"https://api.github.com/users/SkySkimmer/orgs","repos_url":"https://api.github.com/users/SkySkimmer/repos","events_url":"https://api.github.com/users/SkySkimmer/events{/privacy}","received_events_url":"https://api.github.com/users/SkySkimmer/received_events","type":"User","site_admin":false},"created_at":"2018-05-12T22:38:51Z","updated_at":"2018-05-12T22:38:51Z","author_association":"CONTRIBUTOR","body":"Seems like a subtlety of the semantics more than a bug.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/388588234/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]