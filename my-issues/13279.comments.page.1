[{"url":"https://api.github.com/repos/coq/coq/issues/comments/718185643","html_url":"https://github.com/coq/coq/issues/13279#issuecomment-718185643","issue_url":"https://api.github.com/repos/coq/coq/issues/13279","id":718185643,"node_id":"MDEyOklzc3VlQ29tbWVudDcxODE4NTY0Mw==","user":{"login":"SkySkimmer","id":2461932,"node_id":"MDQ6VXNlcjI0NjE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/2461932?v=4","gravatar_id":"","url":"https://api.github.com/users/SkySkimmer","html_url":"https://github.com/SkySkimmer","followers_url":"https://api.github.com/users/SkySkimmer/followers","following_url":"https://api.github.com/users/SkySkimmer/following{/other_user}","gists_url":"https://api.github.com/users/SkySkimmer/gists{/gist_id}","starred_url":"https://api.github.com/users/SkySkimmer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SkySkimmer/subscriptions","organizations_url":"https://api.github.com/users/SkySkimmer/orgs","repos_url":"https://api.github.com/users/SkySkimmer/repos","events_url":"https://api.github.com/users/SkySkimmer/events{/privacy}","received_events_url":"https://api.github.com/users/SkySkimmer/received_events","type":"User","site_admin":false},"created_at":"2020-10-28T20:20:55Z","updated_at":"2020-10-28T20:20:55Z","author_association":"CONTRIBUTOR","body":"Simpler test\r\n~~~coq\r\nAxiom reflect : Prop.\r\nModule M.\r\n  Class reflect := do_reflect : reflect.\r\nEnd M.\r\n~~~","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/718185643/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/718188075","html_url":"https://github.com/coq/coq/issues/13279#issuecomment-718188075","issue_url":"https://api.github.com/repos/coq/coq/issues/13279","id":718188075,"node_id":"MDEyOklzc3VlQ29tbWVudDcxODE4ODA3NQ==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2020-10-28T20:25:42Z","updated_at":"2020-10-28T20:26:06Z","author_association":"MEMBER","body":"Part of the point, though, is that I don't want the class to be recursive, I want it to be non-recursive (as if I had written `Class reflect' := do_reflect : reflect` or whatever)","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/718188075/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/718576863","html_url":"https://github.com/coq/coq/issues/13279#issuecomment-718576863","issue_url":"https://api.github.com/repos/coq/coq/issues/13279","id":718576863,"node_id":"MDEyOklzc3VlQ29tbWVudDcxODU3Njg2Mw==","user":{"login":"Zimmi48","id":1108325,"node_id":"MDQ6VXNlcjExMDgzMjU=","avatar_url":"https://avatars.githubusercontent.com/u/1108325?v=4","gravatar_id":"","url":"https://api.github.com/users/Zimmi48","html_url":"https://github.com/Zimmi48","followers_url":"https://api.github.com/users/Zimmi48/followers","following_url":"https://api.github.com/users/Zimmi48/following{/other_user}","gists_url":"https://api.github.com/users/Zimmi48/gists{/gist_id}","starred_url":"https://api.github.com/users/Zimmi48/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Zimmi48/subscriptions","organizations_url":"https://api.github.com/users/Zimmi48/orgs","repos_url":"https://api.github.com/users/Zimmi48/repos","events_url":"https://api.github.com/users/Zimmi48/events{/privacy}","received_events_url":"https://api.github.com/users/Zimmi48/received_events","type":"User","site_admin":false},"created_at":"2020-10-29T10:04:42Z","updated_at":"2020-10-29T10:04:42Z","author_association":"MEMBER","body":"The issue AFAIU is that `Class`, despite not supporting recursive definitions, is parsed, and partly interpreted, using the same mechanism as `Inductive`, leading to this confusion.\r\n\r\nThe same is true with `Record`:\r\n\r\n``` coq\r\nDefinition foo := Prop.\r\nRecord foo := { i : foo }.\r\n(* Records declared with the keywords Record or Structure cannot be recursive.\r\nYou can, however, define recursive records using the Inductive or CoInductive command. *)\r\n```\r\n\r\nIn this case though, despite the limitation (since records cannot be recursive, we could have hoped that `foo` would be interpreted as the previously defined `foo`), the error message is clear.\r\n\r\nIt's not clear whether the limitation should be lifted, or the error message for the `Class` command should simply be improved. I'm leaning on the latter solution, partly because it'll create less risk of confusion, and partly because it's a simpler change.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/718576863/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/718580336","html_url":"https://github.com/coq/coq/issues/13279#issuecomment-718580336","issue_url":"https://api.github.com/repos/coq/coq/issues/13279","id":718580336,"node_id":"MDEyOklzc3VlQ29tbWVudDcxODU4MDMzNg==","user":{"login":"Zimmi48","id":1108325,"node_id":"MDQ6VXNlcjExMDgzMjU=","avatar_url":"https://avatars.githubusercontent.com/u/1108325?v=4","gravatar_id":"","url":"https://api.github.com/users/Zimmi48","html_url":"https://github.com/Zimmi48","followers_url":"https://api.github.com/users/Zimmi48/followers","following_url":"https://api.github.com/users/Zimmi48/following{/other_user}","gists_url":"https://api.github.com/users/Zimmi48/gists{/gist_id}","starred_url":"https://api.github.com/users/Zimmi48/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Zimmi48/subscriptions","organizations_url":"https://api.github.com/users/Zimmi48/orgs","repos_url":"https://api.github.com/users/Zimmi48/repos","events_url":"https://api.github.com/users/Zimmi48/events{/privacy}","received_events_url":"https://api.github.com/users/Zimmi48/received_events","type":"User","site_admin":false},"created_at":"2020-10-29T10:07:17Z","updated_at":"2020-10-29T10:07:17Z","author_association":"MEMBER","body":"PS:\r\n\r\n```coq\r\nDefinition foo := Prop.\r\nClass foo := { i : foo }.\r\n(* Records declared with the keywords Record or Structure cannot be recursive.\r\nYou can, however, define recursive records using the Inductive or CoInductive command. *)\r\n```\r\n\r\n(same error message: it should probably be tweaked for `Class`)","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/718580336/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]