[{"url":"https://api.github.com/repos/coq/coq/issues/comments/674097443","html_url":"https://github.com/coq/coq/issues/10934#issuecomment-674097443","issue_url":"https://api.github.com/repos/coq/coq/issues/10934","id":674097443,"node_id":"MDEyOklzc3VlQ29tbWVudDY3NDA5NzQ0Mw==","user":{"login":"Blaisorblade","id":289960,"node_id":"MDQ6VXNlcjI4OTk2MA==","avatar_url":"https://avatars.githubusercontent.com/u/289960?v=4","gravatar_id":"","url":"https://api.github.com/users/Blaisorblade","html_url":"https://github.com/Blaisorblade","followers_url":"https://api.github.com/users/Blaisorblade/followers","following_url":"https://api.github.com/users/Blaisorblade/following{/other_user}","gists_url":"https://api.github.com/users/Blaisorblade/gists{/gist_id}","starred_url":"https://api.github.com/users/Blaisorblade/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Blaisorblade/subscriptions","organizations_url":"https://api.github.com/users/Blaisorblade/orgs","repos_url":"https://api.github.com/users/Blaisorblade/repos","events_url":"https://api.github.com/users/Blaisorblade/events{/privacy}","received_events_url":"https://api.github.com/users/Blaisorblade/received_events","type":"User","site_admin":false},"created_at":"2020-08-14T14:18:35Z","updated_at":"2020-08-14T14:18:35Z","author_association":"CONTRIBUTOR","body":"I've seen a similar problem: `repeat` doesn't work correctly when using `terms`, but does when using `choice` — if `hints` reused code from `terms`, that might relate to this bug.\r\n\r\nIt's as if `terms` used mutable state that isn't reset correctly inside a single `rewrite_strat` call.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/674097443/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/674862003","html_url":"https://github.com/coq/coq/issues/10934#issuecomment-674862003","issue_url":"https://api.github.com/repos/coq/coq/issues/10934","id":674862003,"node_id":"MDEyOklzc3VlQ29tbWVudDY3NDg2MjAwMw==","user":{"login":"mattam82","id":98373,"node_id":"MDQ6VXNlcjk4Mzcz","avatar_url":"https://avatars.githubusercontent.com/u/98373?v=4","gravatar_id":"","url":"https://api.github.com/users/mattam82","html_url":"https://github.com/mattam82","followers_url":"https://api.github.com/users/mattam82/followers","following_url":"https://api.github.com/users/mattam82/following{/other_user}","gists_url":"https://api.github.com/users/mattam82/gists{/gist_id}","starred_url":"https://api.github.com/users/mattam82/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattam82/subscriptions","organizations_url":"https://api.github.com/users/mattam82/orgs","repos_url":"https://api.github.com/users/mattam82/repos","events_url":"https://api.github.com/users/mattam82/events{/privacy}","received_events_url":"https://api.github.com/users/mattam82/received_events","type":"User","site_admin":false},"created_at":"2020-08-17T12:50:39Z","updated_at":"2020-08-17T12:50:39Z","author_association":"MEMBER","body":"I was quite surprised by the issue but finally pinned it down: the result of `rewrite_strat` is beta normalized (for compatibility with rewrite/setoid_rewrite), but this does not happen during the tactic run (by default). So, after the first topdown run, the fold_right is reduced, but produces beta-redexes that prevent the other rewrites by fst_pair to trigger. \r\nTo resolve the problem, one must use `rewrite_strat (topdown ((hints mydb) ; eval cbv beta)` or a similar strategy that reduces the beta redexes right away. Note that `rewrite_strat` has special support for reductions: they won't appear in proof terms. E.g.\r\n```coq\r\nGoal forall x, (fun x y => x + y) x 0 = 0.\r\nintros x.\r\nrewrite_strat (topdown (progress (eval cbv beta))).\r\n```\r\nThis simplifies the goal without leaving a trace in the proof term. `eval` always succeeds so it must be guarded by a `progress` here.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/674862003/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/674862967","html_url":"https://github.com/coq/coq/issues/10934#issuecomment-674862967","issue_url":"https://api.github.com/repos/coq/coq/issues/10934","id":674862967,"node_id":"MDEyOklzc3VlQ29tbWVudDY3NDg2Mjk2Nw==","user":{"login":"mattam82","id":98373,"node_id":"MDQ6VXNlcjk4Mzcz","avatar_url":"https://avatars.githubusercontent.com/u/98373?v=4","gravatar_id":"","url":"https://api.github.com/users/mattam82","html_url":"https://github.com/mattam82","followers_url":"https://api.github.com/users/mattam82/followers","following_url":"https://api.github.com/users/mattam82/following{/other_user}","gists_url":"https://api.github.com/users/mattam82/gists{/gist_id}","starred_url":"https://api.github.com/users/mattam82/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattam82/subscriptions","organizations_url":"https://api.github.com/users/mattam82/orgs","repos_url":"https://api.github.com/users/mattam82/repos","events_url":"https://api.github.com/users/mattam82/events{/privacy}","received_events_url":"https://api.github.com/users/mattam82/received_events","type":"User","site_admin":false},"created_at":"2020-08-17T12:52:36Z","updated_at":"2020-08-17T12:52:36Z","author_association":"MEMBER","body":"It is up for debate if the confusing compatibility strategy should be kept for `rewrite_strat`. I think a flag could be useful there.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/674862967/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/674865553","html_url":"https://github.com/coq/coq/issues/10934#issuecomment-674865553","issue_url":"https://api.github.com/repos/coq/coq/issues/10934","id":674865553,"node_id":"MDEyOklzc3VlQ29tbWVudDY3NDg2NTU1Mw==","user":{"login":"mattam82","id":98373,"node_id":"MDQ6VXNlcjk4Mzcz","avatar_url":"https://avatars.githubusercontent.com/u/98373?v=4","gravatar_id":"","url":"https://api.github.com/users/mattam82","html_url":"https://github.com/mattam82","followers_url":"https://api.github.com/users/mattam82/followers","following_url":"https://api.github.com/users/mattam82/following{/other_user}","gists_url":"https://api.github.com/users/mattam82/gists{/gist_id}","starred_url":"https://api.github.com/users/mattam82/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattam82/subscriptions","organizations_url":"https://api.github.com/users/mattam82/orgs","repos_url":"https://api.github.com/users/mattam82/repos","events_url":"https://api.github.com/users/mattam82/events{/privacy}","received_events_url":"https://api.github.com/users/mattam82/received_events","type":"User","site_admin":false},"created_at":"2020-08-17T12:58:28Z","updated_at":"2020-08-17T12:58:35Z","author_association":"MEMBER","body":"\r\n\r\n> I've seen a similar problem: `repeat` doesn't work correctly when using `terms`, but does when using `choice` — if `hints` reused code from `terms`, that might relate to this bug.\r\n> \r\n> It's as if `terms` used mutable state that isn't reset correctly inside a single `rewrite_strat` call.\r\n\r\nThe implementation of terms actually has a state (to count occcurrencecs) but that should only be used and visible when calling rewrite_strat through `setoid_rewrite/rewrite` (i.e the state is used to pass information for a single rewrite rule only). Can you check if the behavior you're seeing is due to beta-normalization or not?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/674865553/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/674878358","html_url":"https://github.com/coq/coq/issues/10934#issuecomment-674878358","issue_url":"https://api.github.com/repos/coq/coq/issues/10934","id":674878358,"node_id":"MDEyOklzc3VlQ29tbWVudDY3NDg3ODM1OA==","user":{"login":"Blaisorblade","id":289960,"node_id":"MDQ6VXNlcjI4OTk2MA==","avatar_url":"https://avatars.githubusercontent.com/u/289960?v=4","gravatar_id":"","url":"https://api.github.com/users/Blaisorblade","html_url":"https://github.com/Blaisorblade","followers_url":"https://api.github.com/users/Blaisorblade/followers","following_url":"https://api.github.com/users/Blaisorblade/following{/other_user}","gists_url":"https://api.github.com/users/Blaisorblade/gists{/gist_id}","starred_url":"https://api.github.com/users/Blaisorblade/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Blaisorblade/subscriptions","organizations_url":"https://api.github.com/users/Blaisorblade/orgs","repos_url":"https://api.github.com/users/Blaisorblade/repos","events_url":"https://api.github.com/users/Blaisorblade/events{/privacy}","received_events_url":"https://api.github.com/users/Blaisorblade/received_events","type":"User","site_admin":false},"created_at":"2020-08-17T13:22:26Z","updated_at":"2020-08-17T13:22:48Z","author_association":"CONTRIBUTOR","body":"👍 on the flag, but the current behavior should be deprecated since this issue seems pretty important.\r\n\r\n> Can you check if the behavior you're seeing is due to beta-normalization or not?\r\n\r\nIt seems yes. But it's still unclear why that's only needed for `terms` but not when using `choice one_term one_term` — does `one_term` (defined as in the [manual](https://coq.github.io/doc/v8.12/refman/addendum/generalized-rewriting.html#coq:tacn.rewrite-strat)) implicitly force beta-reduction?\r\n\r\nEquivalent calls (sorry this isn't minimized):\r\n```coq\r\nrewrite_strat (topdown (choice except_0_exist (choice except_0_and except_0_idemp))).\r\nrewrite_strat (topdown (terms except_0_exist except_0_and except_0_idemp; eval cbv beta)).\r\nrepeat rewrite_strat (topdown (terms except_0_exist except_0_and except_0_idemp)).\r\n```\r\n\r\nNot equivalent (does only one rewrite):\r\n```coq\r\nrewrite_strat (topdown (terms except_0_exist except_0_and except_0_idemp)).\r\n```","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/674878358/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/674911429","html_url":"https://github.com/coq/coq/issues/10934#issuecomment-674911429","issue_url":"https://api.github.com/repos/coq/coq/issues/10934","id":674911429,"node_id":"MDEyOklzc3VlQ29tbWVudDY3NDkxMTQyOQ==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2020-08-17T14:22:00Z","updated_at":"2020-08-17T14:22:00Z","author_association":"MEMBER","body":"I agree that a flag would be useful, and I think perhaps we should take it a step further: add a flag for always reducing and beta redexes that appear in the immediate output of rewriting (if it's non-trivial to only reduce new beta redexes, it's fine to beta reduce the whole term).  I think this should be the default behavior (almost everything in Coq is modulo beta anyway), but it should be possible to turn off.\r\n\r\nAlso, the explicit reductions don't always work, see https://github.com/coq/coq/issues/10923","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/674911429/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/674913297","html_url":"https://github.com/coq/coq/issues/10934#issuecomment-674913297","issue_url":"https://api.github.com/repos/coq/coq/issues/10934","id":674913297,"node_id":"MDEyOklzc3VlQ29tbWVudDY3NDkxMzI5Nw==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2020-08-17T14:25:19Z","updated_at":"2020-08-17T14:25:19Z","author_association":"MEMBER","body":"Also,\r\n\r\n> eval always succeeds so it must be guarded by a progress here.\r\n\r\nWhy is this the case?  Why doesn't progress commute with topdown on strategies that always succeed?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/674913297/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]