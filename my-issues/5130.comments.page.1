[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548051","html_url":"https://github.com/coq/coq/issues/5130#issuecomment-337548051","issue_url":"https://api.github.com/repos/coq/coq/issues/5130","id":337548051,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0ODA1MQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-10-09T18:16:32Z","updated_at":"2022-01-10T20:19:37Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\r\n\r\nThere's currently no way to attach opacity status to a module, as demonstrated \r\nby the following example:\r\n```coq\r\nLtac check_opaque_id :=\r\n  tryif let v := eval unfold id in id in idtac then fail else idtac.\r\nLtac check_transparent_id :=\r\n  tryif check_opaque_id then fail else idtac.\r\n\r\nGoal True. check_transparent_id. Abort.\r\nModule LocalQualid.\r\n  Local Opaque id.\r\nEnd LocalQualid.\r\nGoal True. check_transparent_id. Abort.\r\nModule ImportLocalQualid.\r\n  Import LocalQualid.\r\n  Goal True. check_transparent_id. Abort. (* good *)\r\nEnd ImportLocalQualid.\r\n\r\nGoal True. check_transparent_id. Abort.\r\nModule NoQualid.\r\n  Opaque id.\r\nEnd NoQualid.\r\nGoal True. check_transparent_id. Abort.\r\nModule ImportNoQualid.\r\n  Import NoQualid.\r\n  Goal True. Fail check_opaque_id. Abort. (* probably wrong; should not need \r\nfail *)\r\nEnd ImportNoQualid.\r\n\r\nGoal True. check_transparent_id. Abort.\r\nModule GlobalQualid.\r\n  Global Opaque id.\r\nEnd GlobalQualid.\r\nGoal True. Fail check_transparent_id. Abort. (* wrong; should not need fail *)\r\nLocal Transparent id.\r\nModule ImportGlobalQualid.\r\n  Import GlobalQualid.\r\n  Goal True. Fail check_opaque_id. Abort. (* very wrong; should not need fail *)\r\nEnd ImportGlobalQualid.\r\n```\r\nWhen combined with things like bug [BZ#2972](https://github.com/coq/coq/issues?q=is%3Aissue%20%22Original%20bug%20ID%3A%20BZ%232972%22) ([simpl] sometimes ignores [simpl \r\nnever], and variants where it ignores [simpl never] but not [Opaque]), this \r\nmeans that we can't actually control reduction behavior for a set of constants \r\nby inserting directives in a module to be imported.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548051/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]