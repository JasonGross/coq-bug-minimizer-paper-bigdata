[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337522276","html_url":"https://github.com/coq/coq/issues/3503#issuecomment-337522276","issue_url":"https://api.github.com/repos/coq/coq/issues/3503","id":337522276,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMjI3Ng==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-08-08T19:50:44Z","updated_at":"2017-10-18T09:26:27Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nSet Primitive Projections.\nRecord prod A B := pair { fst : A ; snd : B }.\n\nCheck fst _ _ (@ pair Type Type Set Set) : Type.\nGoal forall x : prod Set Set, fst _ _ x = fst _ _ x.\nProof.\n  intros x.\n  (* 1 subgoals\n, subgoal 1 (ID 13)\n\n  x : prod Set Set\n  ============================\n   fst Set Set x = fst Set Set x\n(dependent evars:)\n\n *)\n  unfold fst. (* 1 subgoals\n, subgoal 1 (ID 14)\n\n  x : prod Set Set\n  ============================\n   fst x = fst x\n(dependent evars:)\n *)\n  Fail match goal with\n    | |- fst = _ => idtac \"1\"\n    | |- fst _ = _ => idtac \"2\"\n    | |- fst _ _ = _ => idtac \"3\"\n    | |- fst _ _ _ = _ => idtac \"4\"\n    | |- @ fst = _ => idtac \"@ 1\"\n    | |- @ fst _ = _ => idtac \"@ 2\"\n    | |- @ fst _ _ = _ => idtac \"@ 3\"\n    | |- @ fst _ _ _ = _ => idtac \"@ 4\"\n  end. (* Error: No matching clauses for match. *)\n  Fail match goal with\n    | |- ?f _ = _ => idtac\n  end. (* Error: No matching clauses for match. *)\n\n\nIt's not clear to me what's most consistent here.  My first idea is that both [fst _ _ _] and [@ fst _ _ _] (which mean the same thing here, I believe) should match the goal, and there should be an [Unset Eta Expanded Projection Conflation] or something that disables the behavior.  Alternatively, it seems like doing Ltac matching up to equivalence classes of identifiers would fix this problem (possibly modulo beta?)\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337522276/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337522278","html_url":"https://github.com/coq/coq/issues/3503#issuecomment-337522278","issue_url":"https://api.github.com/repos/coq/coq/issues/3503","id":337522278,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMjI3OA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-08-09T19:37:56Z","updated_at":"2017-10-18T09:26:28Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nI added a case to matching so that it works as you expect, in the first match goal. For the second one it's not doable without a major change to matching as we'd need typing information do instantiate \"f\" with a sensible value and matching is purely syntactic right now.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337522278/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337522280","html_url":"https://github.com/coq/coq/issues/3503#issuecomment-337522280","issue_url":"https://api.github.com/repos/coq/coq/issues/3503","id":337522280,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMjI4MA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-08-10T23:51:12Z","updated_at":"2017-10-18T09:26:28Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nHere's a crazy idea: what if, when trying to match [?f _] against, e.g., [fst x] we instantiate [f] with [(fun A B (dummy real : A * B) => @ fst A B real) x] and then had Coq beta reduce it later?\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337522280/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337522282","html_url":"https://github.com/coq/coq/issues/3503#issuecomment-337522282","issue_url":"https://api.github.com/repos/coq/coq/issues/3503","id":337522282,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMjI4Mg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-08-28T10:56:04Z","updated_at":"2017-10-18T09:26:28Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nThis is now fixed.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337522282/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]