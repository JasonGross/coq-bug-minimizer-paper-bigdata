[{"url":"https://api.github.com/repos/coq/coq/issues/comments/407161434","html_url":"https://github.com/coq/coq/issues/8125#issuecomment-407161434","issue_url":"https://api.github.com/repos/coq/coq/issues/8125","id":407161434,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNzE2MTQzNA==","user":{"login":"Zimmi48","id":1108325,"node_id":"MDQ6VXNlcjExMDgzMjU=","avatar_url":"https://avatars.githubusercontent.com/u/1108325?v=4","gravatar_id":"","url":"https://api.github.com/users/Zimmi48","html_url":"https://github.com/Zimmi48","followers_url":"https://api.github.com/users/Zimmi48/followers","following_url":"https://api.github.com/users/Zimmi48/following{/other_user}","gists_url":"https://api.github.com/users/Zimmi48/gists{/gist_id}","starred_url":"https://api.github.com/users/Zimmi48/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Zimmi48/subscriptions","organizations_url":"https://api.github.com/users/Zimmi48/orgs","repos_url":"https://api.github.com/users/Zimmi48/repos","events_url":"https://api.github.com/users/Zimmi48/events{/privacy}","received_events_url":"https://api.github.com/users/Zimmi48/received_events","type":"User","site_admin":false},"created_at":"2018-07-23T18:46:24Z","updated_at":"2018-07-23T18:46:24Z","author_association":"MEMBER","body":"cc @maximedenes @cpitclaudel ","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/407161434/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/407165448","html_url":"https://github.com/coq/coq/issues/8125#issuecomment-407165448","issue_url":"https://api.github.com/repos/coq/coq/issues/8125","id":407165448,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNzE2NTQ0OA==","user":{"login":"cpitclaudel","id":8181630,"node_id":"MDQ6VXNlcjgxODE2MzA=","avatar_url":"https://avatars.githubusercontent.com/u/8181630?v=4","gravatar_id":"","url":"https://api.github.com/users/cpitclaudel","html_url":"https://github.com/cpitclaudel","followers_url":"https://api.github.com/users/cpitclaudel/followers","following_url":"https://api.github.com/users/cpitclaudel/following{/other_user}","gists_url":"https://api.github.com/users/cpitclaudel/gists{/gist_id}","starred_url":"https://api.github.com/users/cpitclaudel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cpitclaudel/subscriptions","organizations_url":"https://api.github.com/users/cpitclaudel/orgs","repos_url":"https://api.github.com/users/cpitclaudel/repos","events_url":"https://api.github.com/users/cpitclaudel/events{/privacy}","received_events_url":"https://api.github.com/users/cpitclaudel/received_events","type":"User","site_admin":false},"created_at":"2018-07-23T18:59:55Z","updated_at":"2018-07-23T18:59:55Z","author_association":"CONTRIBUTOR","body":"Nice idea.  The place to modify is this:\r\n\r\n```\r\nclass WarningObject(NotationObject):\r\n    \"\"\"An warning raised by a Coq command or tactic..\r\n\r\n    Do not mistake this for ``.. warning::``; this directive is for warning\r\n    messages produced by Coq.\r\n\r\n\r\n    Example::\r\n\r\n       .. warn:: Ambiguous path\r\n\r\n          When the coercion :token:`qualid` is added to the inheritance graph, non\r\n          valid coercion paths are ignored.\r\n    \"\"\"\r\n    subdomain = \"warn\"\r\n    index_suffix = \"(warn)\"\r\n    annotation = \"Warning\"\r\n\r\n    # Generate names automatically\r\n    def _name_from_signature(self, signature):\r\n        return stringify_with_ellipses(signature)\r\n```\r\n\r\nIf the names are unique, it would make sense t use them here, too, so you'd remove `_name_from_signature` and give each exception an explicit `:name:` instead.  To also allow for categories, you'd change the `option_spec` to this:\r\n\r\n```\r\n    option_spec = {\r\n        'name': directives.unchanged,\r\n        'category': directives.unchanged,\r\n        'undocumented': directives.flag\r\n    }\r\n```\r\n\r\nFinally you'd change the way exceptions are rendered:\r\n\r\n```\r\n    def _render_signature(self, signature, signode):\r\n        super()._render_signature(self, signature, signode)\r\n        signode.append(â€¦ some nodes here for the name and category)\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/407165448/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]