[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337543331","html_url":"https://github.com/coq/coq/issues/4803#issuecomment-337543331","issue_url":"https://api.github.com/repos/coq/coq/issues/4803","id":337543331,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0MzMzMQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-06-09T13:46:22Z","updated_at":"2021-10-05T13:56:45Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\r\n\r\nHere is code that should work:\r\n```coq\r\n(* -*- coq-prog-args: (\"-emacs\" \"-compat\" \"8.4\") -*- *)\r\n(*Suppose a user wants to declare a new list-like notation with support for singletons in both 8.4 and 8.5.  If they use*)\r\nRequire Import Coq.Lists.List.\r\nRequire Import Coq.Vectors.Vector.\r\nImport ListNotations.\r\nImport VectorNotations.\r\nSet Implicit Arguments.\r\nInductive mylist T := mynil | mycons (_ : T) (_ : mylist T).\r\nArguments mynil {_}, _.\r\n\r\nDelimit Scope mylist_scope with mylist.\r\nBind Scope mylist_scope with mylist.\r\nDelimit Scope vector_scope with vector.\r\n\r\nNotation \" [ ] \" := mynil (format \"[ ]\") : mylist_scope.\r\nNotation \" [ x ] \" := (mycons x mynil) : mylist_scope.\r\nNotation \" [ x ; .. ; y ] \" := (mycons x .. (mycons y mynil) ..) : mylist_scope.\r\n(* these two should be in the std lib *)\r\nNotation \" [ x ; .. ; y ] \" := (VectorDef.cons _ x _ .. (VectorDef.cons _ y _ (nil _)) ..) : vector_scope.\r\nNotation \" [ x ; .. ; y ] \" := (cons x .. (cons y nil) ..) : list_scope.\r\n\r\nRemove Notation \" [ x ; y ; ... ; z ] \". (* should be added to -compat 8.4 *)\r\n\r\n(** All of these should work fine in -compat 8.4 mode, just as they do in Coq 8.4.  There needs to be a way to specify notations above so that all of these [Check]s go through in both 8.4 and 8.5 *)\r\nCheck [ ]%mylist : mylist _.\r\nCheck [ ]%list : list _.\r\nCheck []%vector : Vector.t _ _.\r\nCheck [ _ ]%mylist : mylist _.\r\nCheck [ _ ]%list : list _.\r\nCheck [ _ ]%vector : Vector.t _ _.\r\nCheck [ _ ; _ ]%list : list _.\r\nCheck [ _ ; _ ]%vector : Vector.t _ _.\r\nCheck [ _ ; _ ]%mylist : mylist _. (* fails without removing the notation *)\r\nCheck [ _ ; _ ; _ ]%list : list _.\r\nCheck [ _ ; _ ; _ ]%vector : Vector.t _ _.\r\nCheck [ _ ; _ ; _ ]%mylist : mylist _. (* fails without removing the notation *)\r\nCheck [ _ ; _ ; _ ; _ ]%list : list _.\r\nCheck [ _ ; _ ; _ ; _ ]%vector : Vector.t _ _.\r\nCheck [ _ ; _ ; _ ; _ ]%mylist : mylist _. (* fails without removing the notation *)\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337543331/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]