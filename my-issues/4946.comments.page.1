[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337545290","html_url":"https://github.com/coq/coq/issues/4946#issuecomment-337545290","issue_url":"https://api.github.com/repos/coq/coq/issues/4946","id":337545290,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0NTI5MA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-07-18T17:29:41Z","updated_at":"2017-10-18T10:35:01Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nHere is code that should work.  Only the first module works, because [pf] has \ntype [0 < y] in the first module, but [0 < x] in the second module.\n\nRequire Import Coq.omega.Omega.\nModule nprim.\n  Unset Primitive Projections.\n  Class R := { x : nat ; y := x ; pf : 0 < y }.\n  Goal forall v : R, 0 < y.\n  Proof.\n    intros; pose proof pf.\n    match goal with H : 0 < y |- 0 < y => idtac end.\n    omega.\n  Qed.\nEnd nprim.\n\nModule prim.\n  Set Primitive Projections.\n  Class R := { x : nat ; y := x ; pf : 0 < y }.\n  Goal forall v : R, 0 < y.\n  Proof.\n    intros; pose proof pf.\n    match goal with H : 0 < y |- 0 < y => idtac end. (* fails *)\n    omega. (* fails, because omega doesn't unfold things *)\n  Qed.\nEnd prim.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337545290/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/399030136","html_url":"https://github.com/coq/coq/issues/4946#issuecomment-399030136","issue_url":"https://api.github.com/repos/coq/coq/issues/4946","id":399030136,"node_id":"MDEyOklzc3VlQ29tbWVudDM5OTAzMDEzNg==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2018-06-21T09:03:00Z","updated_at":"2018-06-21T09:03:00Z","author_association":"MEMBER","body":"Not that hard to fix, I think. Hopefully people are not relying on the current behaviour.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/399030136/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/478042573","html_url":"https://github.com/coq/coq/issues/4946#issuecomment-478042573","issue_url":"https://api.github.com/repos/coq/coq/issues/4946","id":478042573,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODA0MjU3Mw==","user":{"login":"SkySkimmer","id":2461932,"node_id":"MDQ6VXNlcjI0NjE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/2461932?v=4","gravatar_id":"","url":"https://api.github.com/users/SkySkimmer","html_url":"https://github.com/SkySkimmer","followers_url":"https://api.github.com/users/SkySkimmer/followers","following_url":"https://api.github.com/users/SkySkimmer/following{/other_user}","gists_url":"https://api.github.com/users/SkySkimmer/gists{/gist_id}","starred_url":"https://api.github.com/users/SkySkimmer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SkySkimmer/subscriptions","organizations_url":"https://api.github.com/users/SkySkimmer/orgs","repos_url":"https://api.github.com/users/SkySkimmer/repos","events_url":"https://api.github.com/users/SkySkimmer/events{/privacy}","received_events_url":"https://api.github.com/users/SkySkimmer/received_events","type":"User","site_admin":false},"created_at":"2019-03-29T15:33:40Z","updated_at":"2019-03-29T15:33:40Z","author_association":"CONTRIBUTOR","body":">Not that hard to fix, I think. Hopefully people are not relying on the current behaviour.\r\n\r\nReally? It seems like the fundamental issue is that with emulated records, a `:=` projection has the same status as a regular one (they're both constants) whereas with primitive records only the `:=` projections are constants, preventing them from being interleaved with the regular projections.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/478042573/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]