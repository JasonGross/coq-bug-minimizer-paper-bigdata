[{"url":"https://api.github.com/repos/coq/coq/issues/comments/624995522","html_url":"https://github.com/coq/coq/issues/12270#issuecomment-624995522","issue_url":"https://api.github.com/repos/coq/coq/issues/12270","id":624995522,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNDk5NTUyMg==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2020-05-07T02:39:52Z","updated_at":"2020-05-07T02:39:52Z","author_association":"MEMBER","body":"Ah, my performance analysis cannot be (entirely) right, as `Record` is quadratic even when I `Set Primitive Projections`:\r\n![image](https://user-images.githubusercontent.com/396076/81248170-c5fc0000-8fe9-11ea-8985-9d4498576ac7.png)","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/624995522/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/624996869","html_url":"https://github.com/coq/coq/issues/12270#issuecomment-624996869","issue_url":"https://api.github.com/repos/coq/coq/issues/12270","id":624996869,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNDk5Njg2OQ==","user":{"login":"andres-erbsen","id":918403,"node_id":"MDQ6VXNlcjkxODQwMw==","avatar_url":"https://avatars.githubusercontent.com/u/918403?v=4","gravatar_id":"","url":"https://api.github.com/users/andres-erbsen","html_url":"https://github.com/andres-erbsen","followers_url":"https://api.github.com/users/andres-erbsen/followers","following_url":"https://api.github.com/users/andres-erbsen/following{/other_user}","gists_url":"https://api.github.com/users/andres-erbsen/gists{/gist_id}","starred_url":"https://api.github.com/users/andres-erbsen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andres-erbsen/subscriptions","organizations_url":"https://api.github.com/users/andres-erbsen/orgs","repos_url":"https://api.github.com/users/andres-erbsen/repos","events_url":"https://api.github.com/users/andres-erbsen/events{/privacy}","received_events_url":"https://api.github.com/users/andres-erbsen/received_events","type":"User","site_admin":false},"created_at":"2020-05-07T02:44:58Z","updated_at":"2020-05-07T02:44:58Z","author_association":"CONTRIBUTOR","body":"does it still define compatibility constants?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/624996869/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/624998501","html_url":"https://github.com/coq/coq/issues/12270#issuecomment-624998501","issue_url":"https://api.github.com/repos/coq/coq/issues/12270","id":624998501,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNDk5ODUwMQ==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2020-05-07T02:51:15Z","updated_at":"2020-05-07T02:51:15Z","author_association":"MEMBER","body":"Yes, but if I'm reading https://github.com/coq/coq/blob/325a644b3f5a5f8c1a86191004576e7c763ae9f3/vernac/record.ml#L337-L349 and https://github.com/coq/coq/blob/325a644b3f5a5f8c1a86191004576e7c763ae9f3/kernel/names.ml#L758-L768 correctly, the \"compatibility constants\" are just definitions which are `fun x => primproj x`, and thus should take constant time per projection to build and define.  (But @mattam82 probably has the definitive answer here; I might be reading the code wrong.)","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/624998501/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/625105683","html_url":"https://github.com/coq/coq/issues/12270#issuecomment-625105683","issue_url":"https://api.github.com/repos/coq/coq/issues/12270","id":625105683,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNTEwNTY4Mw==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2020-05-07T08:20:13Z","updated_at":"2020-05-07T08:20:13Z","author_association":"MEMBER","body":"Record definition is largely dominated by term hashconsing. As you conjecture, the outliers correspond to garbage collection, which explains the reproducibility.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/625105683/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/625442639","html_url":"https://github.com/coq/coq/issues/12270#issuecomment-625442639","issue_url":"https://api.github.com/repos/coq/coq/issues/12270","id":625442639,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNTQ0MjYzOQ==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2020-05-07T19:08:40Z","updated_at":"2020-05-07T19:08:40Z","author_association":"MEMBER","body":"Huh.  And I guess hashconsing is linear in the size of the term being hashconsed.\r\n\r\n@ppedrot That doesn't explain the quadratic factor in primitive record definition.  What dominates there?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/625442639/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/625502997","html_url":"https://github.com/coq/coq/issues/12270#issuecomment-625502997","issue_url":"https://api.github.com/repos/coq/coq/issues/12270","id":625502997,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNTUwMjk5Nw==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2020-05-07T21:18:46Z","updated_at":"2020-05-07T21:18:46Z","author_association":"MEMBER","body":"For the primitive record definition, the major contributor is the function `Constrintern.extract_ids` which builds the set of identifiers from the environment in O(n). Since it's performed n times, this results in O(n²).","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/625502997/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/625509321","html_url":"https://github.com/coq/coq/issues/12270#issuecomment-625509321","issue_url":"https://api.github.com/repos/coq/coq/issues/12270","id":625509321,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNTUwOTMyMQ==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2020-05-07T21:34:36Z","updated_at":"2020-05-07T21:34:36Z","author_association":"MEMBER","body":"Note that #9710 is likely to fix the non-primitive quadratic cost, or at least seriously mitigate it. For the primitive case, I don't know how to fix this in a reasonable way, but the timings seem reasonable to me. It's not common to build record types with several thousand fields...","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/625509321/reactions","total_count":2,"+1":1,"-1":0,"laugh":0,"hooray":1,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/625510638","html_url":"https://github.com/coq/coq/issues/12270#issuecomment-625510638","issue_url":"https://api.github.com/repos/coq/coq/issues/12270","id":625510638,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNTUxMDYzOA==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2020-05-07T21:38:05Z","updated_at":"2020-05-07T21:38:05Z","author_association":"MEMBER","body":"Sure, fixing this quadratic factor is not high priority, and #9710 seems pretty great.\r\n\r\nWould you be willing to explain the primitive code path a bit more?  Why is `Constrintern.extract_ids` called `n` times on an environment of size `n`?  Is it extracting all the ids from the global environment?  Or, oh, is this in order to typecheck the types of the fields of the record, it needs to extract the names and types of the previous fields?  It seems like this should be doable in an incremental way....","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/625510638/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/625512095","html_url":"https://github.com/coq/coq/issues/12270#issuecomment-625512095","issue_url":"https://api.github.com/repos/coq/coq/issues/12270","id":625512095,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNTUxMjA5NQ==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2020-05-07T21:41:53Z","updated_at":"2020-05-07T21:41:53Z","author_association":"MEMBER","body":"> Or, oh, is this in order to typecheck the types of the fields of the record, it needs to extract the names and types of the previous fields?\r\n\r\nIndeed.\r\n\r\n>  It seems like this should be doable in an incremental way....\r\n\r\nI also believe that this should be done that way, but unfortunately the API doesn't let you do that. It would require exporting a function even more low-level than the one considered \"low-level\" part of the API. This is not impossible, but it'd be a bit ugly.\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/625512095/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/625512543","html_url":"https://github.com/coq/coq/issues/12270#issuecomment-625512543","issue_url":"https://api.github.com/repos/coq/coq/issues/12270","id":625512543,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNTUxMjU0Mw==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2020-05-07T21:43:12Z","updated_at":"2020-05-07T21:43:12Z","author_association":"MEMBER","body":"Ah, okay.  Maybe someday?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/625512543/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]