[{"url":"https://api.github.com/repos/coq/coq/issues/comments/727229488","html_url":"https://github.com/coq/coq/issues/12467#issuecomment-727229488","issue_url":"https://api.github.com/repos/coq/coq/issues/12467","id":727229488,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNzIyOTQ4OA==","user":{"login":"herbelin","id":460771,"node_id":"MDQ6VXNlcjQ2MDc3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/460771?v=4","gravatar_id":"","url":"https://api.github.com/users/herbelin","html_url":"https://github.com/herbelin","followers_url":"https://api.github.com/users/herbelin/followers","following_url":"https://api.github.com/users/herbelin/following{/other_user}","gists_url":"https://api.github.com/users/herbelin/gists{/gist_id}","starred_url":"https://api.github.com/users/herbelin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/herbelin/subscriptions","organizations_url":"https://api.github.com/users/herbelin/orgs","repos_url":"https://api.github.com/users/herbelin/repos","events_url":"https://api.github.com/users/herbelin/events{/privacy}","received_events_url":"https://api.github.com/users/herbelin/received_events","type":"User","site_admin":false},"created_at":"2020-11-14T16:16:42Z","updated_at":"2020-11-14T16:16:42Z","author_association":"MEMBER","body":"Note that the following works:\r\n```\r\nNotation \"'WITH' ( x1 : t1 ) , x2t2 , .. , xntn  'PRE'  [ ] P 'POST' [ ] Q\" :=\r\n  ((fun x1 : t1 => (fun x2t2 => .. (fun xntn => (pair .. (pair x1 x2t2) .. xntn)) .. )),\r\n   (fun x1 : t1 => (fun x2t2 => .. (fun xntn => P) .. )),\r\n   (fun x1 : t1 => (fun x2t2 => .. (fun xntn => Q) .. )))\r\n    (at level 200, x1 at level 0, x2t2 closed binder, P at level 100, Q at level 100, only parsing).\r\nCheck WITH (x : nat) , (y : nat) , (z : nat) PRE [] (x, y, z) POST [] (z, y, x).\r\n```\r\n... but I guess it is on purpose that you want to parse `x2t2` as a term! Will think about it.\r\n\r\nNote for myself: we probably want to also support `x2t2 ident`/`x2t2 name` and `x2t2 pattern`. This would require to have in `NtnTypeBinderList` the same kind of parsing annotations as in `NtnTypeBinder`. Waiting first for #11841 and #13265 to be merged before coming back to this.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/727229488/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/727234820","html_url":"https://github.com/coq/coq/issues/12467#issuecomment-727234820","issue_url":"https://api.github.com/repos/coq/coq/issues/12467","id":727234820,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNzIzNDgyMA==","user":{"login":"Zimmi48","id":1108325,"node_id":"MDQ6VXNlcjExMDgzMjU=","avatar_url":"https://avatars.githubusercontent.com/u/1108325?v=4","gravatar_id":"","url":"https://api.github.com/users/Zimmi48","html_url":"https://github.com/Zimmi48","followers_url":"https://api.github.com/users/Zimmi48/followers","following_url":"https://api.github.com/users/Zimmi48/following{/other_user}","gists_url":"https://api.github.com/users/Zimmi48/gists{/gist_id}","starred_url":"https://api.github.com/users/Zimmi48/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Zimmi48/subscriptions","organizations_url":"https://api.github.com/users/Zimmi48/orgs","repos_url":"https://api.github.com/users/Zimmi48/repos","events_url":"https://api.github.com/users/Zimmi48/events{/privacy}","received_events_url":"https://api.github.com/users/Zimmi48/received_events","type":"User","site_admin":false},"created_at":"2020-11-14T16:56:00Z","updated_at":"2020-11-14T16:56:00Z","author_association":"MEMBER","body":"But an anomaly is not just a limitation, it is a bug since it means an exception is escaping from somewhere...","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/727234820/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/727238541","html_url":"https://github.com/coq/coq/issues/12467#issuecomment-727238541","issue_url":"https://api.github.com/repos/coq/coq/issues/12467","id":727238541,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNzIzODU0MQ==","user":{"login":"herbelin","id":460771,"node_id":"MDQ6VXNlcjQ2MDc3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/460771?v=4","gravatar_id":"","url":"https://api.github.com/users/herbelin","html_url":"https://github.com/herbelin","followers_url":"https://api.github.com/users/herbelin/followers","following_url":"https://api.github.com/users/herbelin/following{/other_user}","gists_url":"https://api.github.com/users/herbelin/gists{/gist_id}","starred_url":"https://api.github.com/users/herbelin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/herbelin/subscriptions","organizations_url":"https://api.github.com/users/herbelin/orgs","repos_url":"https://api.github.com/users/herbelin/repos","events_url":"https://api.github.com/users/herbelin/events{/privacy}","received_events_url":"https://api.github.com/users/herbelin/received_events","type":"User","site_admin":false},"created_at":"2020-11-14T17:24:04Z","updated_at":"2020-11-14T17:24:04Z","author_association":"MEMBER","body":"Would you like I make a PR to turn the anomaly into an error... well if you want... But let's wait first for #11841 and #13265 being merged and it will become probably as quick to address the general case. There are enough other anomalies to address in the meantime.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/727238541/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/727243393","html_url":"https://github.com/coq/coq/issues/12467#issuecomment-727243393","issue_url":"https://api.github.com/repos/coq/coq/issues/12467","id":727243393,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNzI0MzM5Mw==","user":{"login":"Zimmi48","id":1108325,"node_id":"MDQ6VXNlcjExMDgzMjU=","avatar_url":"https://avatars.githubusercontent.com/u/1108325?v=4","gravatar_id":"","url":"https://api.github.com/users/Zimmi48","html_url":"https://github.com/Zimmi48","followers_url":"https://api.github.com/users/Zimmi48/followers","following_url":"https://api.github.com/users/Zimmi48/following{/other_user}","gists_url":"https://api.github.com/users/Zimmi48/gists{/gist_id}","starred_url":"https://api.github.com/users/Zimmi48/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Zimmi48/subscriptions","organizations_url":"https://api.github.com/users/Zimmi48/orgs","repos_url":"https://api.github.com/users/Zimmi48/repos","events_url":"https://api.github.com/users/Zimmi48/events{/privacy}","received_events_url":"https://api.github.com/users/Zimmi48/received_events","type":"User","site_admin":false},"created_at":"2020-11-14T17:59:57Z","updated_at":"2020-11-14T17:59:57Z","author_association":"MEMBER","body":"> Would you like I make a PR to turn the anomaly into an error... well if you want...\r\n\r\nAs a general principle yes, anomalies should be avoided while limitations are of a lesser priority.\r\n\r\nBut of course, there is no specific emergency for *this one*.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/727243393/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]