[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337550886","html_url":"https://github.com/coq/coq/issues/5323#issuecomment-337550886","issue_url":"https://api.github.com/repos/coq/coq/issues/5323","id":337550886,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1MDg4Ng==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-01-22T05:35:04Z","updated_at":"2017-10-18T10:53:07Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\n(* -*- mode: coq; coq-prog-args: (\"-emacs\" \"-R\" \"src\" \"Crypto\" \"-R\" \"Bedrock\" \n\"Bedrock\" \"-R\" \"coqprime/Coqprime\" \"Coqprime\" \"-top\" \"I\\\nnterpretations\") -*- *)\n(* File reduced by coq-bug-finder from original input, then from 440 lines to \n147 lines, then from 452 lines to 178 lines, then from \\\n204 lines to 76 lines, then from 102 lines to 44 lines, then from 482 lines to \n129 lines, then from 223 lines to 132 lines, then from\\\n 237 lines to 134 lines, then from 183 lines to 135 lines, then from 149 lines \nto 135 lines, then from 112 lines to 46 lines, then fr\\\nom 60 lines to 47 lines, then from 54 lines to 24 lines, then from 38 lines to \n25 lines *)\n(* coqc version 8.6rc1 (December 2016) compiled on Dec 8 2016 13:43:59 with \nOCaml 4.02.3\n   coqtop version 8.6rc1 (December 2016) *)\n\nInductive flat_type := Unit | Prod (A B : flat_type).\nInductive exprf (op : flat_type -> flat_type -> Type) {var : Type} : flat_type \n-> Type :=\n| Op {t1 tR} (opc : op t1 tR) (args : exprf op t1) : exprf op tR.\nInductive op : flat_type -> flat_type -> Type := .\nArguments Op {_ _ _ _} _ _.\nDefinition bound_op {var}\n           {src2 dst2}\n           (opc2 : op src2 dst2)\n  : forall (args2 : exprf op (var:=var) src2), Op opc2 args2 = Op opc2 args2\n  := match opc2 return (forall args2, Op opc2 args2 = Op opc2 args2) with end.\n(* Error:\nIn environment\nvar : Type\nsrc2 : flat_type\ndst2 : flat_type\nopc2 : op src2 dst2\nf : flat_type\nf0 : flat_type\nopc0 : op f f0\nargs2 : exprf op ?t1\nUnable to unify \"op f f0\" with \"op ?t1 ?tR\". *)\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337550886/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337550887","html_url":"https://github.com/coq/coq/issues/5323#issuecomment-337550887","issue_url":"https://api.github.com/repos/coq/coq/issues/5323","id":337550887,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1MDg4Nw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-01-22T14:02:52Z","updated_at":"2017-10-18T10:53:07Z","author_association":"CONTRIBUTOR","body":"Comment author: @herbelin\n\nHere is a slightly reduced example:\n\nInductive exprf (op : unit -> Type) : Type :=\n| A : exprf op\n| Op tR (opc : op tR) (args : exprf op) : exprf op.\nInductive op : unit -> Type := .\nDefinition bound_op (dst2 : unit) (opc2 : op dst2)\n  : forall (args2 : exprf op), Op op dst2 opc2 args2 = A op\n  := match opc2 in op h return (forall args2 : exprf ?[U], Op ?[V] ?[I] opc2 args2 = A op) with end.\n\nIt was working in 8.4. What happens is the following:\n\nThe constraint\n\nop h <= ?V ?I\n\nis generated in typing Op of opc2. Then ?V = ?U and ?U = op are generated by typing args2 in Op and identifying the return type to the external type. The latter also gives that ?I is either dst2 or h.\n\nThe problem is then in \"solve_unif_constraints_with_heuristics\": ?I is tried to be instantiated with dst2, while for some reason \"op h <= ?V ?I\" has not yet been simplified into \"op h <= op ?I\". Not using the instance of ?V, it is not seen that ?I cannot be instantiated with dst2. So the instantiation by dst2 is done and it fails too late when trying to again unify \"op h <= ?V ?I\".\n\nI don't know when it started to fail, but I suspect that it was related to some postponing of the higher-order problem (namely here \"op h <= ?V ?I\"). The best place where I see a solution is at the time of setting ?V := ?U and ?U := op. It should be noticed that the pending higher-order problems is reducible.\n\nThat's all I can say at the current time.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337550887/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337550889","html_url":"https://github.com/coq/coq/issues/5323#issuecomment-337550889","issue_url":"https://api.github.com/repos/coq/coq/issues/5323","id":337550889,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1MDg4OQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-01-23T03:59:11Z","updated_at":"2017-10-18T10:53:07Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nBisecting with my coq-bisect script gives:\n\ne2fa65fccb9d55ea0b6bd5873155abf436785b1f is the first bad commit\ncommit e2fa65fccb9d55ea0b6bd5873155abf436785b1f\nAuthor: Hugo Herbelin <Hugo.Herbelin@ inria.fr>\nDate:   Mon Nov 3 19:31:43 2014 +0100\n\n    When solving ?id{args} = ?id'{args'}, give preference to ?id:=?id' if\n    possible, which is the \"natural\" way to orient an equation. At least\n    it matters for matching subterms against patterns, so that it is the\n    pattern variables which are substituted if ever the subterm has itself\n    existential variables, as in:\n\n    Goal exists x, S x = x.\n    eexists.\n    destruct (S _).\n\n:040000 040000 d0a3026aa6942ce3d1aed2b16912a5dacd769c7b \ncf07e179eeaa8d687fb2f477b5905ddf5e60a3ce M      pretyping\n:040000 040000 4b37ce869206ce42e110267037bc12b4b8d20c64 \n64a608fb8d6f120284bf3f1121f5f24ca7ce8dd8 M      test-suite\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337550889/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337550890","html_url":"https://github.com/coq/coq/issues/5323#issuecomment-337550890","issue_url":"https://api.github.com/repos/coq/coq/issues/5323","id":337550890,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1MDg5MA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-01-23T09:54:49Z","updated_at":"2017-10-18T10:53:08Z","author_association":"CONTRIBUTOR","body":"Comment author: @herbelin\n\nThanks for bisecting. However, the success of unification should morally not be dependent in itself on the order in which evar-evar problems are oriented. This report allowed me to find at least a bug in the way pending conversion problems are reconsidered. I pushed a fix in branch v8.5 (a6f687852c).\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337550890/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]