[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337545803","html_url":"https://github.com/coq/coq/issues/4978#issuecomment-337545803","issue_url":"https://api.github.com/repos/coq/coq/issues/4978","id":337545803,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0NTgwMw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-07-29T23:39:32Z","updated_at":"2021-09-29T14:58:28Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\r\n\r\nThe result of [Check (_ : Reflexive _).] depends on what I've imported.\r\n```coq\r\nRequire Import Coq.Classes.RelationClasses.\r\nCheck (_ : Reflexive _). (* iff_Reflexive : Reflexive iff *)\r\nRequire Import Coq.Classes.Equivalence.\r\nCheck (_ : Reflexive _). (* equiv_reflexive relation_equivalence_equivalence : \r\nReflexive equiv\r\n     : Reflexive equiv *)\r\n```\r\n\r\nWhen I do [Check (_ : Reflexive _)], I should *always* get the [eq] instance.  \r\nThis is a frequent pain point, and frequently incurs massive slowdowns in \r\n[setoid_rewrite] because something other than [eq] is being inferred for a \r\nuseless [Reflexive] relation, causing typeclass resolution to go off into the \r\nweeds.\r\n\r\nOne way to do this is to allow negative priorities, and stick [eq_Reflexive] at \r\npriority -1.\r\n\r\nThis will cause backwards incompatibilities, but the current standard library \r\nseems flawed, given the current algorithm.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337545803/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337545805","html_url":"https://github.com/coq/coq/issues/4978#issuecomment-337545805","issue_url":"https://api.github.com/repos/coq/coq/issues/4978","id":337545805,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0NTgwNQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-08-18T18:27:43Z","updated_at":"2017-10-18T10:36:33Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nActually, fixing those priorities didn't break a single contrib, so I pushed \nthis. Needs 8.5 compatibility and CHANGES mention still.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337545805/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337545806","html_url":"https://github.com/coq/coq/issues/4978#issuecomment-337545806","issue_url":"https://api.github.com/repos/coq/coq/issues/4978","id":337545806,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0NTgwNg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-08-18T19:38:41Z","updated_at":"2017-10-18T10:36:33Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nThanks for fixing that one!\n\nThere are some other instances that need fixing:\n\nFor CRelationClasses.Reflexive ->   apply @ equiv_reflexive(level 0, id 0)\n                                    exact CRelationClasses.iffT_Reflexive(level \n0, id 0)\n                                    exact \nCRelationClasses.arrow_Reflexive(level 0, id 0)\n                                    exact CRelationClasses.iff_Reflexive(level \n0, id 0)\n                                    exact CRelationClasses.impl_Reflexive(level \n0, id 0)\n\nFor RelationClasses.Reflexive ->   apply @ setoid_refl(level 0, id 0)\n                                   exact RelationClasses.iff_Reflexive(level 0, \nid 0)\n                                   exact RelationClasses.impl_Reflexive(level \n0, id 0)\n\n\nThe list was obtained via:\n(* echo -n \"Require Import \"; for i in $(git ls-files */vo.itarget); do (cat \n$i; echo) | sed s'/^\\(.*\\).vo/Coq.'\"$(echo \"$i\" | sed s'|/|.|g' | sed \ns'/theories.//g' | sed s'/plugins.//g' | sed s'/vo.itarget//g')\"'\\1/g'; done |  \nsed s'|/|.|g' | tr '\\n' ' '; echo \".\" *)\nRequire Import Coq.btauto.Algebra Coq.btauto.Reflect Coq.btauto.Btauto \nCoq.derive.Derive Coq.extraction.ExtrHaskellBasic \nCoq.extraction.ExtrHaskellNatNum Coq.extraction.ExtrHaskellNatInt \nCoq.extraction.ExtrHaskellNatInteger Coq.extraction.ExtrHaskellZNum \nCoq.extraction.ExtrHaskellZInt Coq.extraction.ExtrHaskellZInteger \nCoq.extraction.ExtrHaskellString Coq.extraction.ExtrOcamlBasic \nCoq.extraction.ExtrOcamlIntConv Coq.extraction.ExtrOcamlBigIntConv \nCoq.extraction.ExtrOcamlNatInt Coq.extraction.ExtrOcamlNatBigInt \nCoq.extraction.ExtrOcamlZInt Coq.extraction.ExtrOcamlZBigInt \nCoq.extraction.ExtrOcamlString Coq.fourier.Fourier_util Coq.fourier.Fourier \nCoq.funind.Recdef Coq.micromega.EnvRing Coq.micromega.Env \nCoq.micromega.OrderedRing Coq.micromega.Psatz Coq.micromega.QMicromega \nCoq.micromega.Refl Coq.micromega.RingMicromega Coq.micromega.RMicromega \nCoq.micromega.Tauto Coq.micromega.VarMap Coq.micromega.ZCoeff \nCoq.micromega.ZMicromega Coq.micromega.Lia Coq.nsatz.Nsatz \nCoq.omega.OmegaLemmas Coq.omega.OmegaPlugin Coq.omega.OmegaTactic \nCoq.omega.Omega Coq.omega.PreOmega Coq.quote.Quote Coq.romega.ReflOmegaCore \nCoq.romega.ROmega Coq.rtauto.Bintree Coq.rtauto.Rtauto \nCoq.setoid_ring.ArithRing Coq.setoid_ring.BinList Coq.setoid_ring.Field_tac \nCoq.setoid_ring.Field_theory Coq.setoid_ring.Field Coq.setoid_ring.InitialRing \nCoq.setoid_ring.NArithRing Coq.setoid_ring.RealField Coq.setoid_ring.Ring_base \nCoq.setoid_ring.Ring_polynom Coq.setoid_ring.Ring_tac \nCoq.setoid_ring.Ring_theory Coq.setoid_ring.Ring Coq.setoid_ring.ZArithRing \nCoq.setoid_ring.Algebra_syntax Coq.setoid_ring.Cring Coq.setoid_ring.Ncring \nCoq.setoid_ring.Ncring_polynom Coq.setoid_ring.Ncring_initial \nCoq.setoid_ring.Ncring_tac Coq.setoid_ring.Rings_Z Coq.setoid_ring.Rings_R \nCoq.setoid_ring.Rings_Q Coq.setoid_ring.Integral_domain \nCoq.ssrmatching.ssrmatching Coq.Arith.PeanoNat Coq.Arith.Arith_base \nCoq.Arith.Arith Coq.Arith.Between Coq.Arith.Bool_nat Coq.Arith.Compare_dec \nCoq.Arith.Compare Coq.Arith.Div2 Coq.Arith.EqNat Coq.Arith.Euclid \nCoq.Arith.Even Coq.Arith.Factorial Coq.Arith.Gt Coq.Arith.Le Coq.Arith.Lt \nCoq.Arith.Max Coq.Arith.Minus Coq.Arith.Min Coq.Arith.Mult Coq.Arith.Peano_dec \nCoq.Arith.Plus Coq.Arith.Wf_nat Coq.Bool.BoolEq Coq.Bool.Bool Coq.Bool.Bvector \nCoq.Bool.DecBool Coq.Bool.IfProp Coq.Bool.Sumbool Coq.Bool.Zerob \nCoq.Classes.DecidableClass Coq.Classes.Equivalence Coq.Classes.EquivDec \nCoq.Classes.Init Coq.Classes.Morphisms_Prop Coq.Classes.Morphisms_Relations \nCoq.Classes.Morphisms Coq.Classes.RelationClasses Coq.Classes.SetoidClass \nCoq.Classes.SetoidDec Coq.Classes.SetoidTactics Coq.Classes.RelationPairs \nCoq.Classes.CRelationClasses Coq.Classes.CMorphisms Coq.Classes.CEquivalence \nCoq.Compat.AdmitAxiom Coq.Compat.Coq84 Coq.Compat.Coq85 Coq.Compat.Coq86 \nCoq.FSets.FMapAVL Coq.FSets.FMapFacts Coq.FSets.FMapFullAVL \nCoq.FSets.FMapInterface Coq.FSets.FMapList Coq.FSets.FMapPositive \nCoq.FSets.FMaps Coq.FSets.FMapWeakList Coq.FSets.FSetCompat Coq.FSets.FSetAVL \nCoq.FSets.FSetPositive Coq.FSets.FSetBridge Coq.FSets.FSetDecide \nCoq.FSets.FSetEqProperties Coq.FSets.FSetFacts Coq.FSets.FSetInterface \nCoq.FSets.FSetList Coq.FSets.FSetProperties Coq.FSets.FSets \nCoq.FSets.FSetToFiniteSet Coq.FSets.FSetWeakList Coq.Init.Datatypes \nCoq.Init.Logic_Type Coq.Init.Logic Coq.Init.Notations Coq.Init.Peano \nCoq.Init.Prelude Coq.Init.Specif Coq.Init.Tactics Coq.Init.Wf Coq.Init.Nat \nCoq.Init.Tauto Coq.Lists.ListSet Coq.Lists.ListTactics Coq.Lists.List \nCoq.Lists.ListDec Coq.Lists.SetoidList Coq.Lists.SetoidPermutation \nCoq.Lists.StreamMemo Coq.Lists.Streams Coq.Logic.Berardi Coq.Logic.ChoiceFacts \nCoq.Logic.ClassicalChoice Coq.Logic.ClassicalDescription \nCoq.Logic.ClassicalEpsilon Coq.Logic.ClassicalFacts \nCoq.Logic.Classical_Pred_Type Coq.Logic.Classical_Prop \nCoq.Logic.ClassicalUniqueChoice Coq.Logic.Classical \nCoq.Logic.ConstructiveEpsilon Coq.Logic.Decidable Coq.Logic.Description \nCoq.Logic.Diaconescu Coq.Logic.Epsilon Coq.Logic.Eqdep_dec Coq.Logic.EqdepFacts \nCoq.Logic.Eqdep Coq.Logic.WeakFan Coq.Logic.WKL \nCoq.Logic.FunctionalExtensionality Coq.Logic.ExtensionalityFacts \nCoq.Logic.Hurkens Coq.Logic.IndefiniteDescription Coq.Logic.JMeq \nCoq.Logic.ProofIrrelevanceFacts Coq.Logic.ProofIrrelevance \nCoq.Logic.RelationalChoice Coq.Logic.SetIsType Coq.Logic.FinFun \nCoq.MSets.MSetGenTree Coq.MSets.MSetAVL Coq.MSets.MSetRBT Coq.MSets.MSetDecide \nCoq.MSets.MSetEqProperties Coq.MSets.MSetFacts Coq.MSets.MSetInterface \nCoq.MSets.MSetList Coq.MSets.MSetProperties Coq.MSets.MSets \nCoq.MSets.MSetToFiniteSet Coq.MSets.MSetWeakList Coq.MSets.MSetPositive \nCoq.NArith.BinNatDef Coq.NArith.BinNat Coq.NArith.NArith Coq.NArith.Ndec \nCoq.NArith.Ndigits Coq.NArith.Ndist Coq.NArith.Nnat Coq.NArith.Ndiv_def \nCoq.NArith.Nsqrt_def Coq.NArith.Ngcd_def Coq.Numbers.BinNums \nCoq.Numbers.BigNumPrelude Coq.Numbers.Cyclic.Abstract.CyclicAxioms \nCoq.Numbers.Cyclic.Abstract.NZCyclic Coq.Numbers.Cyclic.DoubleCyclic.DoubleAdd \nCoq.Numbers.Cyclic.DoubleCyclic.DoubleBase \nCoq.Numbers.Cyclic.DoubleCyclic.DoubleCyclic \nCoq.Numbers.Cyclic.DoubleCyclic.DoubleDivn1 \nCoq.Numbers.Cyclic.DoubleCyclic.DoubleDiv \nCoq.Numbers.Cyclic.DoubleCyclic.DoubleLift \nCoq.Numbers.Cyclic.DoubleCyclic.DoubleMul \nCoq.Numbers.Cyclic.DoubleCyclic.DoubleSqrt \nCoq.Numbers.Cyclic.DoubleCyclic.DoubleSub \nCoq.Numbers.Cyclic.DoubleCyclic.DoubleType Coq.Numbers.Cyclic.Int31.Int31 \nCoq.Numbers.Cyclic.Int31.Cyclic31 Coq.Numbers.Cyclic.Int31.Ring31 \nCoq.Numbers.Cyclic.ZModulo.ZModulo Coq.Numbers.Integer.Abstract.ZAddOrder \nCoq.Numbers.Integer.Abstract.ZAdd Coq.Numbers.Integer.Abstract.ZAxioms \nCoq.Numbers.Integer.Abstract.ZBase Coq.Numbers.Integer.Abstract.ZLt \nCoq.Numbers.Integer.Abstract.ZMulOrder Coq.Numbers.Integer.Abstract.ZMul \nCoq.Numbers.Integer.Abstract.ZSgnAbs Coq.Numbers.Integer.Abstract.ZDivFloor \nCoq.Numbers.Integer.Abstract.ZDivTrunc Coq.Numbers.Integer.Abstract.ZDivEucl \nCoq.Numbers.Integer.Abstract.ZMaxMin Coq.Numbers.Integer.Abstract.ZParity \nCoq.Numbers.Integer.Abstract.ZPow Coq.Numbers.Integer.Abstract.ZGcd \nCoq.Numbers.Integer.Abstract.ZLcm Coq.Numbers.Integer.Abstract.ZBits \nCoq.Numbers.Integer.Abstract.ZProperties Coq.Numbers.Integer.BigZ.BigZ \nCoq.Numbers.Integer.BigZ.ZMake Coq.Numbers.Integer.Binary.ZBinary \nCoq.Numbers.Integer.NatPairs.ZNatPairs Coq.Numbers.Integer.SpecViaZ.ZSig \nCoq.Numbers.Integer.SpecViaZ.ZSigZAxioms Coq.Numbers.NaryFunctions \nCoq.Numbers.NatInt.NZAddOrder Coq.Numbers.NatInt.NZAdd \nCoq.Numbers.NatInt.NZAxioms Coq.Numbers.NatInt.NZBase \nCoq.Numbers.NatInt.NZMulOrder Coq.Numbers.NatInt.NZMul \nCoq.Numbers.NatInt.NZOrder Coq.Numbers.NatInt.NZProperties \nCoq.Numbers.NatInt.NZDomain Coq.Numbers.NatInt.NZParity \nCoq.Numbers.NatInt.NZDiv Coq.Numbers.NatInt.NZPow Coq.Numbers.NatInt.NZSqrt \nCoq.Numbers.NatInt.NZLog Coq.Numbers.NatInt.NZGcd Coq.Numbers.NatInt.NZBits \nCoq.Numbers.Natural.Abstract.NAddOrder Coq.Numbers.Natural.Abstract.NAdd \nCoq.Numbers.Natural.Abstract.NAxioms Coq.Numbers.Natural.Abstract.NBase \nCoq.Numbers.Natural.Abstract.NDefOps Coq.Numbers.Natural.Abstract.NIso \nCoq.Numbers.Natural.Abstract.NMulOrder Coq.Numbers.Natural.Abstract.NOrder \nCoq.Numbers.Natural.Abstract.NStrongRec Coq.Numbers.Natural.Abstract.NSub \nCoq.Numbers.Natural.Abstract.NProperties Coq.Numbers.Natural.Abstract.NDiv \nCoq.Numbers.Natural.Abstract.NMaxMin Coq.Numbers.Natural.Abstract.NParity \nCoq.Numbers.Natural.Abstract.NPow Coq.Numbers.Natural.Abstract.NSqrt \nCoq.Numbers.Natural.Abstract.NLog Coq.Numbers.Natural.Abstract.NGcd \nCoq.Numbers.Natural.Abstract.NLcm Coq.Numbers.Natural.Abstract.NBits \nCoq.Numbers.Natural.BigN.BigN Coq.Numbers.Natural.BigN.Nbasic \nCoq.Numbers.Natural.BigN.NMake_gen Coq.Numbers.Natural.BigN.NMake \nCoq.Numbers.Natural.Binary.NBinary Coq.Numbers.Natural.Peano.NPeano \nCoq.Numbers.Natural.SpecViaZ.NSigNAxioms Coq.Numbers.Natural.SpecViaZ.NSig \nCoq.Numbers.NumPrelude Coq.Numbers.Rational.BigQ.BigQ \nCoq.Numbers.Rational.BigQ.QMake Coq.Numbers.Rational.SpecViaQ.QSig \nCoq.PArith.BinPosDef Coq.PArith.BinPos Coq.PArith.Pnat Coq.PArith.POrderedType \nCoq.PArith.PArith Coq.Program.Basics Coq.Program.Combinators \nCoq.Program.Equality Coq.Program.Program Coq.Program.Subset Coq.Program.Syntax \nCoq.Program.Tactics Coq.Program.Utils Coq.Program.Wf Coq.QArith.Qabs \nCoq.QArith.QArith_base Coq.QArith.QArith Coq.QArith.Qcanon Coq.QArith.Qfield \nCoq.QArith.Qpower Coq.QArith.Qreals Coq.QArith.Qreduction Coq.QArith.Qring \nCoq.QArith.Qround Coq.QArith.QOrderedType Coq.QArith.Qminmax Coq.Reals.Alembert \nCoq.Reals.AltSeries Coq.Reals.ArithProp Coq.Reals.Binomial \nCoq.Reals.Cauchy_prod Coq.Reals.Cos_plus Coq.Reals.Cos_rel Coq.Reals.DiscrR \nCoq.Reals.Exp_prop Coq.Reals.Integration Coq.Reals.Machin Coq.Reals.MVT \nCoq.Reals.NewtonInt Coq.Reals.PartSum Coq.Reals.PSeries_reg \nCoq.Reals.Ranalysis1 Coq.Reals.Ranalysis2 Coq.Reals.Ranalysis3 \nCoq.Reals.Ranalysis4 Coq.Reals.Ranalysis5 Coq.Reals.Ranalysis \nCoq.Reals.Ranalysis_reg Coq.Reals.Ratan Coq.Reals.Raxioms Coq.Reals.Rbase \nCoq.Reals.Rbasic_fun Coq.Reals.Rcomplete Coq.Reals.Rdefinitions \nCoq.Reals.Rderiv Coq.Reals.Reals Coq.Reals.Rfunctions Coq.Reals.Rgeom \nCoq.Reals.RiemannInt_SF Coq.Reals.RiemannInt Coq.Reals.R_Ifp Coq.Reals.RIneq \nCoq.Reals.Rlimit Coq.Reals.RList Coq.Reals.Rlogic Coq.Reals.Rpow_def \nCoq.Reals.Rpower Coq.Reals.Rprod Coq.Reals.Rseries Coq.Reals.Rsigma \nCoq.Reals.Rsqrt_def Coq.Reals.R_sqrt Coq.Reals.R_sqr Coq.Reals.Rtopology \nCoq.Reals.Rtrigo_alt Coq.Reals.Rtrigo_calc Coq.Reals.Rtrigo_def \nCoq.Reals.Rtrigo_fun Coq.Reals.Rtrigo_reg Coq.Reals.Rtrigo1 Coq.Reals.Rtrigo \nCoq.Reals.SeqProp Coq.Reals.SeqSeries Coq.Reals.SplitAbsolu \nCoq.Reals.SplitRmult Coq.Reals.Sqrt_reg Coq.Reals.ROrderedType \nCoq.Reals.Rminmax Coq.Relations.Operators_Properties \nCoq.Relations.Relation_Definitions Coq.Relations.Relation_Operators \nCoq.Relations.Relations Coq.Setoids.Setoid Coq.Sets.Classical_sets \nCoq.Sets.Constructive_sets Coq.Sets.Cpo Coq.Sets.Ensembles \nCoq.Sets.Finite_sets_facts Coq.Sets.Finite_sets Coq.Sets.Image \nCoq.Sets.Infinite_sets Coq.Sets.Integers Coq.Sets.Multiset \nCoq.Sets.Partial_Order Coq.Sets.Permut Coq.Sets.Powerset_Classical_facts \nCoq.Sets.Powerset_facts Coq.Sets.Powerset Coq.Sets.Relations_1_facts \nCoq.Sets.Relations_1 Coq.Sets.Relations_2_facts Coq.Sets.Relations_2 \nCoq.Sets.Relations_3_facts Coq.Sets.Relations_3 Coq.Sets.Uniset \nCoq.Sorting.Heap Coq.Sorting.Permutation Coq.Sorting.PermutSetoid \nCoq.Sorting.PermutEq Coq.Sorting.Sorted Coq.Sorting.Sorting \nCoq.Sorting.Mergesort Coq.Strings.Ascii Coq.Strings.String \nCoq.Structures.Equalities Coq.Structures.EqualitiesFacts Coq.Structures.Orders \nCoq.Structures.OrdersEx Coq.Structures.OrdersFacts Coq.Structures.OrdersLists \nCoq.Structures.OrdersTac Coq.Structures.OrdersAlt Coq.Structures.GenericMinMax \nCoq.Structures.DecidableType Coq.Structures.DecidableTypeEx \nCoq.Structures.OrderedTypeAlt Coq.Structures.OrderedTypeEx \nCoq.Structures.OrderedType Coq.Unicode.Utf8 Coq.Unicode.Utf8_core \nCoq.Vectors.Fin Coq.Vectors.VectorDef Coq.Vectors.VectorSpec \nCoq.Vectors.VectorEq Coq.Vectors.Vector Coq.Wellfounded.Disjoint_Union \nCoq.Wellfounded.Inclusion Coq.Wellfounded.Inverse_Image \nCoq.Wellfounded.Lexicographic_Exponentiation \nCoq.Wellfounded.Lexicographic_Product Coq.Wellfounded.Transitive_Closure \nCoq.Wellfounded.Union Coq.Wellfounded.Wellfounded Coq.Wellfounded.Well_Ordering \nCoq.ZArith.auxiliary Coq.ZArith.BinIntDef Coq.ZArith.BinInt Coq.ZArith.Int \nCoq.ZArith.Wf_Z Coq.ZArith.Zabs Coq.ZArith.ZArith_base Coq.ZArith.ZArith_dec \nCoq.ZArith.ZArith Coq.ZArith.Zdigits Coq.ZArith.Zbool Coq.ZArith.Zcompare \nCoq.ZArith.Zcomplements Coq.ZArith.Zdiv Coq.ZArith.Zeven Coq.ZArith.Zgcd_alt \nCoq.ZArith.Zpow_alt Coq.ZArith.Zhints Coq.ZArith.Zlogarithm Coq.ZArith.Zmax \nCoq.ZArith.Zminmax Coq.ZArith.Zmin Coq.ZArith.Zmisc Coq.ZArith.Znat \nCoq.ZArith.Znumtheory Coq.ZArith.Zquot Coq.ZArith.Zorder Coq.ZArith.Zpow_def \nCoq.ZArith.Zpower Coq.ZArith.Zpow_facts Coq.ZArith.Zsqrt_compat Coq.ZArith.Zwf \nCoq.ZArith.Zeuclid.\nRequire Coq.QArith.Qcabs.\nPrint Hint *.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337545806/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]