[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337522424","html_url":"https://github.com/coq/coq/issues/3512#issuecomment-337522424","issue_url":"https://api.github.com/repos/coq/coq/issues/3512","id":337522424,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMjQyNA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-08-12T21:00:41Z","updated_at":"2017-10-18T09:26:54Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nFor any inductive type [T] with at least one constructor (possibly only those declared when [Set Weak Eta Rule] was on, or something), I would like the conversion machinery to have the following judgmental rule:\n\n  forall (x : T),\n       x â‰¡ \n         match x return T with\n           | constructor_1 a1 ... an => constructor_1 a1 ... an\n           | ...\n           | constructor_m a1 ... ap => constructor_m a1 ... ap\n         end\n\n(Possibly also for [fix] and recursive inductive types.)\n\n\nIf I understand correctly, this should not require a type-directed conversion engine, because the rule is entirely syntactic, and you can look up the type based on the constructors in the [match] (of which there will be at least one).\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337522424/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337522425","html_url":"https://github.com/coq/coq/issues/3512#issuecomment-337522425","issue_url":"https://api.github.com/repos/coq/coq/issues/3512","id":337522425,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMjQyNQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-08-12T21:03:37Z","updated_at":"2017-10-18T09:26:54Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nNote that this is strictly weaker than the standard eta rule, which talks about applying a constructor to the eliminators, where-as this rule talks about applying the eliminator to a variable and the appropriate constructors in the branches.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337522425/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337522427","html_url":"https://github.com/coq/coq/issues/3512#issuecomment-337522427","issue_url":"https://api.github.com/repos/coq/coq/issues/3512","id":337522427,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMjQyNw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-11-21T15:46:20Z","updated_at":"2017-10-18T09:26:54Z","author_association":"CONTRIBUTOR","body":"Comment author: @ppedrot\n\nI assume this feature request is far too fundamental to be put here in the bugtracker. It requires an important change in the theory of Coq. If you have both a argument for its soundness and a working patch, well, it may get merged... Until then, I believe we can close this bug.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337522427/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]