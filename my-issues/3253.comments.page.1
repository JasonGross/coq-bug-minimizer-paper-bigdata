[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337518161","html_url":"https://github.com/coq/coq/issues/3253#issuecomment-337518161","issue_url":"https://api.github.com/repos/coq/coq/issues/3253","id":337518161,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUxODE2MQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-03-10T08:32:49Z","updated_at":"2022-05-17T13:39:41Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\r\n~~~coq\r\n(* File reduced by coq-bug-finder from 185 lines to 174 lines. *)\r\nRequire Import Coq.Classes.Morphisms Coq.Classes.RelationClasses Coq.Program.Program Coq.Setoids.Setoid.\r\n\r\nGlobal Set Implicit Arguments.\r\n\r\nAxiom admit : False.\r\nLtac admit := abstract destruct admit.\r\n\r\nReserved Infix \"~>\" (at level 70).\r\nDelimit Scope bundled_comp_scope with bundled_comp.\r\nGlobal Open Scope bundled_comp_scope.\r\n\r\nClass Context :=\r\n  { names : Type;\r\n    dom : names -> Type;\r\n    cod : names -> Type }.\r\n\r\nInductive Comp `{ctx : Context} : Type -> Type :=\r\n| Return : forall A, A -> Comp A\r\n| Bind : forall A B, Comp A -> (A -> Comp B) -> Comp B\r\n| Pick : forall A, (A -> Prop) -> Comp A\r\n| Call : forall name : names, dom name -> Comp (cod name).\r\n\r\nClass LookupContext :=\r\n  { LContext :> Context;\r\n    lookup : forall name, dom name -> Comp (cod name) }.\r\n\r\nCoercion LContext : LookupContext >-> Context.\r\n\r\nRecord BundledComp A :=\r\n  Bundle { CompContext : LookupContext;\r\n           Unbundle :> Comp A }.\r\n\r\nNotation \"``[ c 'with' l ]``\" := (@ Bundle _ l c) (only parsing) : bundled_comp_scope.\r\n\r\nAxiom computes_to : forall `{ctx : LookupContext}, forall A, Comp A -> A -> Prop.\r\n\r\nNotation \"c ~> v\" := (computes_to c v).\r\n\r\nDefinition refine {A}\r\n           {oldCtx newCtx : LookupContext}\r\n           (old : @ Comp oldCtx A)\r\n           (new : @ Comp newCtx A)\r\n  := forall v, new ~> v -> old ~> v.\r\n\r\nDefinition refineBundled {A} (old new : BundledComp A)\r\n  := refine old new.\r\n\r\nDefinition refineEquiv {A}\r\n           {oldCtx newCtx : LookupContext}\r\n           (old : @ Comp oldCtx A)\r\n           (new : @ Comp newCtx A)\r\n  := refine old new /\\ refine new old.\r\n\r\nDefinition refineBundledEquiv {A} (old new : BundledComp A)\r\n  := refineEquiv old new.\r\n\r\nLocal Obligation Tactic := admit.\r\n\r\nGlobal Program Instance refine_PreOrder A `{LookupContext} : PreOrder (@ refine A _ _).\r\nGlobal Program Instance refineBundled_PreOrder A : PreOrder (@ refineBundled A).\r\n\r\nAdd Parametric Morphism `{LookupContext} A B\r\n: (@ Bind _ A B)\r\n    with signature\r\n    (@ refine A _ _)\r\n      ==> (pointwise_relation _ (@ refine B _ _))\r\n      ==> (@ refine B _ _)\r\n      as refine_bind.\r\nadmit.\r\nDefined.\r\n\r\nLtac equate_evar_context :=\r\n  unfold refineBundledEquiv, refineBundled; simpl;\r\n  lazymatch goal with\r\n| [ |- @ refineEquiv ?A ?ctx1 (@ CompContext ?B ?e) ?v1 ?v2 ]\r\n  => is_evar e; refine (_ : @ refineEquiv A ctx1 (@ CompContext B {| CompContext := ctx1 |}) v1 v2)\r\n| [ |- @ refine ?A ?ctx1 (@ CompContext ?B ?e) ?v1 ?v2 ]\r\n  => is_evar e; refine (_ : @ refine A ctx1 (@ CompContext B {| CompContext := ctx1 |}) v1 v2)\r\nend;\r\n  simpl.\r\n\r\nLocal Open Scope type_scope.\r\n\r\nDefinition Build_ADTContext\r\n           (rep : Type)\r\n           (indices : Context)\r\n: Context :=\r\n  {| names := names;\r\n     dom idx := rep * dom idx;\r\n     cod idx := rep * cod idx |}.\r\n\r\nDefinition methodTypeUnbundled (Ty : Type)\r\n           (indices : Context)\r\n           (idx : names)\r\n\r\n           (ctx := Build_ADTContext Ty indices)\r\n  := Ty\r\n     -> dom idx\r\n     -> Comp (Ty * cod idx)  .\r\n\r\nDefinition methodType (Ty : Type)\r\n           (indices : Context)\r\n           (idx : names)\r\n  := Ty\r\n     -> dom idx\r\n     -> BundledComp (Ty * cod idx) .\r\n\r\nRecord ADT :=\r\n  {\r\n    Rep : Type;\r\n    MethodNames : Context;\r\n    ADTContext : Context := Build_ADTContext Rep MethodNames;\r\n    UnbundledMethods : forall idx, methodTypeUnbundled Rep MethodNames idx\r\n  }.\r\n\r\nDefinition ADTLookupContext (A : ADT) : LookupContext\r\n  := {| LContext := ADTContext A;\r\n        lookup idx state_value := UnbundledMethods A idx (fst state_value) (snd state_value) |}.\r\n\r\nDefinition Methods (A : ADT) (i : names)\r\n: methodType (Rep A) (MethodNames A) i\r\n  := fun m x => ``[ UnbundledMethods A i m x with ADTLookupContext A ]`` .\r\n\r\nGoal forall (Rep0 : Type) (MethodNames0 : Context)\r\n            (UnbundledMethods0 : forall idx : @ names MethodNames0,\r\n                                   methodTypeUnbundled Rep0 MethodNames0 idx)\r\n            (idx : @ names MethodNames0) (r_n : Rep0) (n : @ dom MethodNames0 idx),\r\n       @ refineBundled (prod Rep0 (@ cod MethodNames0 idx))\r\n                      (@ Bundle (prod Rep0 (@ cod MethodNames0 idx))\r\n                               (ADTLookupContext (@ Build_ADT Rep0 MethodNames0 UnbundledMethods0))\r\n                               (@ Bind (ADTContext (@ Build_ADT Rep0 MethodNames0 UnbundledMethods0))\r\n                                      (prod Rep0 (@ cod MethodNames0 idx))\r\n                                      (prod Rep0 (@ cod MethodNames0 idx)) (UnbundledMethods0 idx r_n n)\r\n                                      (fun r_o' : prod Rep0 (@ cod MethodNames0 idx) =>\r\n                                         @ Pick\r\n                                           (ADTContext (@ Build_ADT Rep0 MethodNames0 UnbundledMethods0))\r\n                                           (prod Rep0 (@ cod MethodNames0 idx))\r\n                                           (fun r_n' : prod Rep0 (@ cod MethodNames0 idx) =>\r\n                                              and\r\n                                                (@ eq Rep0 (@ fst Rep0 (@ cod MethodNames0 idx) r_o')\r\n                                                     (@ fst Rep0 (@ cod MethodNames0 idx) r_n'))\r\n                                                (@ eq (@ cod MethodNames0 idx)\r\n                                                     (@ snd Rep0 (@ cod MethodNames0 idx) r_o')\r\n                                                     (@ snd Rep0 (@ cod MethodNames0 idx) r_n'))))))\r\n                      (Methods (@ Build_ADT Rep0 MethodNames0 UnbundledMethods0) idx r_n n).\r\nintros.\r\n\r\netransitivity;\r\n  [ equate_evar_context | ].\r\n\r\nassert (H : forall x : prod Rep0 (@ cod MethodNames0 idx),\r\n              @ refine (prod Rep0 (@ cod MethodNames0 idx))\r\n                      (ADTLookupContext (@ Build_ADT Rep0 MethodNames0 UnbundledMethods0))\r\n                      (ADTLookupContext (@ Build_ADT Rep0 MethodNames0 UnbundledMethods0))\r\n                      (@ Pick (ADTContext (@ Build_ADT Rep0 MethodNames0 UnbundledMethods0))\r\n                             (prod Rep0 (@ cod MethodNames0 idx))\r\n                             (fun v : prod Rep0 (@ cod MethodNames0 idx) =>\r\n                                and\r\n                                  (@ eq Rep0 (@ fst Rep0 (@ cod MethodNames0 idx) x)\r\n                                       (@ fst Rep0 (@ cod MethodNames0 idx) v))\r\n                                  (@ eq (@ cod MethodNames0 idx)\r\n                                       (@ snd Rep0 (@ cod MethodNames0 idx) x)\r\n                                       (@ snd Rep0 (@ cod MethodNames0 idx) v))))\r\n                      (@ Return\r\n                         (ADTContext (@ Build_ADT Rep0 MethodNames0 UnbundledMethods0))\r\n                         (prod Rep0 (@ cod MethodNames0 idx))\r\n                         (@ pair Rep0 (@ cod MethodNames0 idx)\r\n                                (@ fst Rep0 (@ cod MethodNames0 idx) x)\r\n                                (@ snd Rep0 (@ cod MethodNames0 idx) x)))) by admit.\r\neapply refine_bind; [ reflexivity | intro ].\r\nFail Fail setoid_rewrite H at 1.\r\nsetoid_rewrite H. (** Toplevel input, characters 15-31:\r\nError:\r\nTactic failure:setoid rewrite failed: Unable to satisfy the rewriting constraints.\r\n\r\nCould not find an instance for \"Proper (refine ==> refine ==> flip impl)\r\n                                  refine\" in environment:\r\n\r\nRep0 : Type\r\nMethodNames0 : Context\r\nUnbundledMethods0 : forall idx : names,\r\n                    methodTypeUnbundled Rep0 MethodNames0 idx\r\nidx : names\r\nr_n : Rep0\r\nn : dom idx\r\nH : forall x : Rep0 * cod idx,\r\n    refine (Pick (fun v : Rep0 * cod idx => fst x = fst v /\\ snd x = snd v))\r\n      (Return (fst x, snd x))\r\na : Rep0 * cod idx\r\ndo_subrelation := do_subrelation : apply_subrelation\r\n\r\n.\r\n *)\r\n~~~\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337518161/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337518166","html_url":"https://github.com/coq/coq/issues/3253#issuecomment-337518166","issue_url":"https://api.github.com/repos/coq/coq/issues/3253","id":337518166,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUxODE2Ng==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-02-16T09:20:40Z","updated_at":"2017-10-18T09:14:29Z","author_association":"CONTRIBUTOR","body":"Comment author: @silene\n\nI cannot get the script to pass the \"eapply refine_bind\" step. I also tried to apply it to the second goal, but it did not work either. If you have another testcase, please submit it.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337518166/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337518167","html_url":"https://github.com/coq/coq/issues/3253#issuecomment-337518167","issue_url":"https://api.github.com/repos/coq/coq/issues/3253","id":337518167,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUxODE2Nw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-04-17T01:43:18Z","updated_at":"2017-10-18T09:14:29Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nI'm not sure what version of Coq you're running, but the example works fine (gives the appropriate error on [setoid_rewrite]) in both 8.4pl6 and 8.5.  Do you want me to set up a repo with a travis build showing the problem?\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337518167/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/1047253532","html_url":"https://github.com/coq/coq/issues/3253#issuecomment-1047253532","issue_url":"https://api.github.com/repos/coq/coq/issues/3253","id":1047253532,"node_id":"IC_kwDOABUDh84-a9Ic","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2022-02-21T21:56:27Z","updated_at":"2022-02-21T21:56:27Z","author_association":"MEMBER","body":"@JasonGross was this fixed by the recent changes around setoid_rewrite? In any case the example doesn't compile on a recent Coq, as it seems that some instances are missing.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/1047253532/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/1128884881","html_url":"https://github.com/coq/coq/issues/3253#issuecomment-1128884881","issue_url":"https://api.github.com/repos/coq/coq/issues/3253","id":1128884881,"node_id":"IC_kwDOABUDh85DSWqR","user":{"login":"SkySkimmer","id":2461932,"node_id":"MDQ6VXNlcjI0NjE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/2461932?v=4","gravatar_id":"","url":"https://api.github.com/users/SkySkimmer","html_url":"https://github.com/SkySkimmer","followers_url":"https://api.github.com/users/SkySkimmer/followers","following_url":"https://api.github.com/users/SkySkimmer/following{/other_user}","gists_url":"https://api.github.com/users/SkySkimmer/gists{/gist_id}","starred_url":"https://api.github.com/users/SkySkimmer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SkySkimmer/subscriptions","organizations_url":"https://api.github.com/users/SkySkimmer/orgs","repos_url":"https://api.github.com/users/SkySkimmer/repos","events_url":"https://api.github.com/users/SkySkimmer/events{/privacy}","received_events_url":"https://api.github.com/users/SkySkimmer/received_events","type":"User","site_admin":false},"created_at":"2022-05-17T13:40:24Z","updated_at":"2022-05-17T13:40:24Z","author_association":"CONTRIBUTOR","body":"I edited to something which compiles on master, the issue is still present.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/1128884881/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]