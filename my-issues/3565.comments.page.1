[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337523247","html_url":"https://github.com/coq/coq/issues/3565#issuecomment-337523247","issue_url":"https://api.github.com/repos/coq/coq/issues/3565","id":337523247,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMzI0Nw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-09-02T02:37:11Z","updated_at":"2017-10-18T09:29:13Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\n(* File reduced by coq-bug-finder from original input, then from 5104 lines to 163 lines, then from 121 lines to 52 lines *)\n(* coqc version trunk (August 2014) compiled on Aug 31 2014 10:12:32 with OCaml 4.01.0\n   coqtop version cagnode17:/afs/csail.mit.edu/u/j/jgross/coq-trunk,trunk (437b91a3ffd7327975a129b95b24d3f66ad7f3e4) *)\nInductive paths {A : Type} (a : A) : A -> Type := idpath : paths a a.\nArguments idpath {A a} , [A] a.\nNotation \"x = y :> A\" := (@ paths A x y) : type_scope.\nNotation \"x = y\" := (x = y :>_) : type_scope.\nDelimit Scope path_scope with path.\nDefinition concat {A : Type} {x y z : A} (p : x = y) (q : y = z) : x = z := match p, q with idpath, idpath => idpath end.\nDefinition inverse {A : Type} {x y : A} (p : x = y) : y = x := match p with idpath => idpath end.\nNotation \"1\" := idpath : path_scope.\nNotation \"p @  q\" := (concat p q) (at level 20) : path_scope.\nNotation \"p ^\" := (inverse p) (at level 3, format \"p '^'\") : path_scope.\nDefinition ap {A B:Type} (f:A -> B) {x y:A} (p:x = y) : f x = f y := match p with idpath => idpath end.\nDefinition Sect {A B : Type} (s : A -> B) (r : B -> A) := forall x : A, r (s x) = x.\nClass IsEquiv {A B : Type} (f : A -> B) := { equiv_inv : B -> A ; eisretr : Sect equiv_inv f }.\nAxiom path_universe : forall {A B : Type} (f : A -> B) {feq : IsEquiv f}, (A = B).\n\nDefinition Lift : Type@ {i} -> Type@ {j}\n  := Eval hnf in let lt := Type@ {i} : Type@ {j} in fun T => T.\n\nDefinition lift {T} : T -> Lift T := fun x => x.\n\nInstance isembedding_Lift x y : IsEquiv (@ ap _ _ Lift x y).\nProof.\n  refine (Build_IsEquiv _ _ _ _ _).\n  {\n    intro H'.\n    pose proof ((fun H0 => (@ path_universe _ _ (@ lift x) (H0 x) @  H' @  (@ path_universe _ _ (@ lift y) (H0 y))^)))%path as H''.\n    set (id := fun T (x : T) => x).\n    change @ IsEquiv with (id _ (@ IsEquiv)) in *.\n    refine (match H'' _ with idpath => idpath end).\n    subst id; simpl.\n    intro.\n    exact (@ Build_IsEquiv\n             _ _\n             (fun x => x)\n             (fun x => x)\n             (fun _ => idpath)).\n  }\n  {\n    hnf; simpl.\n    intro x0.\n    revert x0.\n    intro x0.\n    pattern x0.\n(* Toplevel input, characters 15-26:\nError: The abstracted term\n\"fun p : Lift x = Lift y =>\n ap Lift\n   match\n     ((path_universe lift @  p) @  (path_universe lift)^)%path in (_ = T)\n     return (x = T)\n   with\n   | 1%path => 1%path\n   end = p\" is not well typed.\nIllegal application:\nThe term \"paths\" of type \"forall A : Type, A -> A -> Type\"\ncannot be applied to the terms\n \"Type\" : \"Type\"\n \"x\" : \"Type\"\n \"T\" : \"Type\"\nThe 3rd term has type \"Type@ {Top.76}\" which should be coercible to\n \"Type@ {Top.77}\".\n *)\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337523247/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337523249","html_url":"https://github.com/coq/coq/issues/3565#issuecomment-337523249","issue_url":"https://api.github.com/repos/coq/coq/issues/3565","id":337523249,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMzI0OQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-09-02T20:00:04Z","updated_at":"2017-10-18T09:29:13Z","author_association":"CONTRIBUTOR","body":"Comment author: @ppedrot\n\nThe faulty one is actually revert which should not succeed. If you try to finish your proof by [admit. Qed.] after the revert, you will get a universe inconsistency.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337523249/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337523250","html_url":"https://github.com/coq/coq/issues/3565#issuecomment-337523250","issue_url":"https://api.github.com/repos/coq/coq/issues/3565","id":337523250,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMzI1MA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-09-02T20:05:30Z","updated_at":"2017-10-18T09:29:13Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nGah.  Why does [refine (match H'' _ with idpath => idpath end).] succeed?  That is the step that causes the universe inconsistency.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337523250/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337523252","html_url":"https://github.com/coq/coq/issues/3565#issuecomment-337523252","issue_url":"https://api.github.com/repos/coq/coq/issues/3565","id":337523252,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMzI1Mg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-09-02T20:11:21Z","updated_at":"2017-10-18T09:29:13Z","author_association":"CONTRIBUTOR","body":"Comment author: @ppedrot\n\nThe refine tactic does not really check that the resulting term is typable...\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337523252/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337523254","html_url":"https://github.com/coq/coq/issues/3565#issuecomment-337523254","issue_url":"https://api.github.com/repos/coq/coq/issues/3565","id":337523254,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMzI1NA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-09-04T09:40:15Z","updated_at":"2017-10-18T09:29:13Z","author_association":"CONTRIBUTOR","body":"Comment author: @aspiwack\n\nWell it trusts the pretyper to avoid typing the term yet a third time. Apparently it does not detect universe inconsistencies, I'll try and ask Matthieu how it could be achieved.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337523254/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337523256","html_url":"https://github.com/coq/coq/issues/3565#issuecomment-337523256","issue_url":"https://api.github.com/repos/coq/coq/issues/3565","id":337523256,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMzI1Ng==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-09-04T16:53:33Z","updated_at":"2017-10-18T09:29:14Z","author_association":"CONTRIBUTOR","body":"Comment author: @aspiwack\n\nAs mysterious as it is, it appears that this particular bug has been fixed in trunk without any conscious action from anybody. The offending refine reports a universe inconsistency as it should.\n\nMatthieu confirms that the pretyping and typing operation all report universe inconsistencies when they arise.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337523256/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]