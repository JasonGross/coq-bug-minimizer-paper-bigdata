[{"url":"https://api.github.com/repos/coq/coq/issues/comments/775991875","html_url":"https://github.com/coq/coq/issues/13838#issuecomment-775991875","issue_url":"https://api.github.com/repos/coq/coq/issues/13838","id":775991875,"node_id":"MDEyOklzc3VlQ29tbWVudDc3NTk5MTg3NQ==","user":{"login":"herbelin","id":460771,"node_id":"MDQ6VXNlcjQ2MDc3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/460771?v=4","gravatar_id":"","url":"https://api.github.com/users/herbelin","html_url":"https://github.com/herbelin","followers_url":"https://api.github.com/users/herbelin/followers","following_url":"https://api.github.com/users/herbelin/following{/other_user}","gists_url":"https://api.github.com/users/herbelin/gists{/gist_id}","starred_url":"https://api.github.com/users/herbelin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/herbelin/subscriptions","organizations_url":"https://api.github.com/users/herbelin/orgs","repos_url":"https://api.github.com/users/herbelin/repos","events_url":"https://api.github.com/users/herbelin/events{/privacy}","received_events_url":"https://api.github.com/users/herbelin/received_events","type":"User","site_admin":false},"created_at":"2021-02-09T14:45:00Z","updated_at":"2021-02-09T14:45:00Z","author_association":"MEMBER","body":"Hi @JasonGross, the factual reason for the failure is the following: since `eq` is not the registered `eq`, `Tactics.prove_symmetry` is called. But the latter (naively) uses some form of `case` on the hypothesis `eq 2 1` in order to prove `eq 1 2`. Thus, it replaces the two occurrences of `1` with `2`, resulting in `eq 2 3` instead of `eq 2 2`. A reflexivity is then supposed to apply but it fails with the message you see...","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/775991875/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/775995267","html_url":"https://github.com/coq/coq/issues/13838#issuecomment-775995267","issue_url":"https://api.github.com/repos/coq/coq/issues/13838","id":775995267,"node_id":"MDEyOklzc3VlQ29tbWVudDc3NTk5NTI2Nw==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2021-02-09T14:49:38Z","updated_at":"2021-02-09T14:49:38Z","author_association":"MEMBER","body":"Huh, interesting.  Perhaps the symmetry prover should generalize over the variables being swapped before trying to prove symmetry? ","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/775995267/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/776000428","html_url":"https://github.com/coq/coq/issues/13838#issuecomment-776000428","issue_url":"https://api.github.com/repos/coq/coq/issues/13838","id":776000428,"node_id":"MDEyOklzc3VlQ29tbWVudDc3NjAwMDQyOA==","user":{"login":"herbelin","id":460771,"node_id":"MDQ6VXNlcjQ2MDc3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/460771?v=4","gravatar_id":"","url":"https://api.github.com/users/herbelin","html_url":"https://github.com/herbelin","followers_url":"https://api.github.com/users/herbelin/followers","following_url":"https://api.github.com/users/herbelin/following{/other_user}","gists_url":"https://api.github.com/users/herbelin/gists{/gist_id}","starred_url":"https://api.github.com/users/herbelin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/herbelin/subscriptions","organizations_url":"https://api.github.com/users/herbelin/orgs","repos_url":"https://api.github.com/users/herbelin/repos","events_url":"https://api.github.com/users/herbelin/events{/privacy}","received_events_url":"https://api.github.com/users/herbelin/received_events","type":"User","site_admin":false},"created_at":"2021-02-09T14:56:47Z","updated_at":"2021-02-09T14:56:47Z","author_association":"MEMBER","body":"Yes, that's a possibility.\r\n\r\n@gares, @ppedrot, does it seem a correct direction to go for you? Should it be then declared as a scheme? ","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/776000428/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/1030903339","html_url":"https://github.com/coq/coq/issues/13838#issuecomment-1030903339","issue_url":"https://api.github.com/repos/coq/coq/issues/13838","id":1030903339,"node_id":"IC_kwDOABUDh849clYr","user":{"login":"Alizter","id":8614547,"node_id":"MDQ6VXNlcjg2MTQ1NDc=","avatar_url":"https://avatars.githubusercontent.com/u/8614547?v=4","gravatar_id":"","url":"https://api.github.com/users/Alizter","html_url":"https://github.com/Alizter","followers_url":"https://api.github.com/users/Alizter/followers","following_url":"https://api.github.com/users/Alizter/following{/other_user}","gists_url":"https://api.github.com/users/Alizter/gists{/gist_id}","starred_url":"https://api.github.com/users/Alizter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Alizter/subscriptions","organizations_url":"https://api.github.com/users/Alizter/orgs","repos_url":"https://api.github.com/users/Alizter/repos","events_url":"https://api.github.com/users/Alizter/events{/privacy}","received_events_url":"https://api.github.com/users/Alizter/received_events","type":"User","site_admin":false},"created_at":"2022-02-06T20:01:20Z","updated_at":"2022-02-06T20:01:20Z","author_association":"CONTRIBUTOR","body":"@herbelin What did you mean by declared as a scheme?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/1030903339/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/1030908076","html_url":"https://github.com/coq/coq/issues/13838#issuecomment-1030908076","issue_url":"https://api.github.com/repos/coq/coq/issues/13838","id":1030908076,"node_id":"IC_kwDOABUDh849cmis","user":{"login":"herbelin","id":460771,"node_id":"MDQ6VXNlcjQ2MDc3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/460771?v=4","gravatar_id":"","url":"https://api.github.com/users/herbelin","html_url":"https://github.com/herbelin","followers_url":"https://api.github.com/users/herbelin/followers","following_url":"https://api.github.com/users/herbelin/following{/other_user}","gists_url":"https://api.github.com/users/herbelin/gists{/gist_id}","starred_url":"https://api.github.com/users/herbelin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/herbelin/subscriptions","organizations_url":"https://api.github.com/users/herbelin/orgs","repos_url":"https://api.github.com/users/herbelin/repos","events_url":"https://api.github.com/users/herbelin/events{/privacy}","received_events_url":"https://api.github.com/users/herbelin/received_events","type":"User","site_admin":false},"created_at":"2022-02-06T20:29:12Z","updated_at":"2022-02-06T20:29:12Z","author_association":"MEMBER","body":"I meant that `Tactics.prove_symmetry` could call `find_scheme Eqschemes.sym_scheme_kind` from the Scheme system to generate the symmetry proof (as if `Set Rewriting Schemes` had been set) rather than trying to prove it naively.\r\n\r\nFor instance:\r\n```\r\nSet Rewriting Schemes.\r\nInductive eq {A} (x : A) : A -> Prop := eq_refl : eq x x.\r\nPrint eq_sym_internal.\r\n(* symmetry has been produced automatically *)\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/1030908076/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]