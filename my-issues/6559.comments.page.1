[{"url":"https://api.github.com/repos/coq/coq/issues/comments/355764065","html_url":"https://github.com/coq/coq/issues/6559#issuecomment-355764065","issue_url":"https://api.github.com/repos/coq/coq/issues/6559","id":355764065,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTc2NDA2NQ==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2018-01-06T18:01:19Z","updated_at":"2018-01-06T18:01:19Z","author_association":"MEMBER","body":"It seems that `fresh` is binding the ltac environment at the location where the function is bound or something?  At least, this works as expected:\r\n```coq\r\nLtac no_unify x y :=\r\n  try (unify x y; fail 1 \"Error: should not unify:\" x \",\" y).\r\nGoal True.\r\n  let myfresh := (fun n fresh' => let v := fresh' n in fresh' v) in\r\n  let x := fresh \"x\" in\r\n  let y := let n := x in myfresh n ltac:(fun n => fresh n) in\r\n  let z := let n := y in myfresh n ltac:(fun n => fresh n) in\r\n  let w := let n := z in myfresh n ltac:(fun n => fresh n) in\r\n  let xc := constr:(fun x y z w : Set => ltac:(exact x)) in\r\n  let yc := constr:(fun x y z w : Set => ltac:(exact y)) in\r\n  let zc := constr:(fun x y z w : Set => ltac:(exact z)) in\r\n  let wc := constr:(fun x y z w : Set => ltac:(exact w)) in\r\n  idtac x y z w xc yc zc wc;\r\n    (no_unify xc yc; no_unify xc zc; no_unify xc wc; no_unify yc zc; no_unify yc wc; no_unify zc wc).\r\n```","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/355764065/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/355764335","html_url":"https://github.com/coq/coq/issues/6559#issuecomment-355764335","issue_url":"https://api.github.com/repos/coq/coq/issues/6559","id":355764335,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTc2NDMzNQ==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2018-01-06T18:05:16Z","updated_at":"2018-01-06T18:05:16Z","author_association":"MEMBER","body":"This is truly terrible.  This works as expected:\r\n```coq\r\nLtac myfresh := fresh.\r\nGoal True.\r\n  let v := myfresh in\r\n  let w := myfresh in\r\n  idtac v w.\r\n```\r\nbut this does not:\r\n```coq\r\nLtac myfresh _ := fresh.\r\nGoal True.\r\n  let v := myfresh () in\r\n  let w := myfresh () in\r\n  idtac v w.\r\n```","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/355764335/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/458263046","html_url":"https://github.com/coq/coq/issues/6559#issuecomment-458263046","issue_url":"https://api.github.com/repos/coq/coq/issues/6559","id":458263046,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1ODI2MzA0Ng==","user":{"login":"andres-erbsen","id":918403,"node_id":"MDQ6VXNlcjkxODQwMw==","avatar_url":"https://avatars.githubusercontent.com/u/918403?v=4","gravatar_id":"","url":"https://api.github.com/users/andres-erbsen","html_url":"https://github.com/andres-erbsen","followers_url":"https://api.github.com/users/andres-erbsen/followers","following_url":"https://api.github.com/users/andres-erbsen/following{/other_user}","gists_url":"https://api.github.com/users/andres-erbsen/gists{/gist_id}","starred_url":"https://api.github.com/users/andres-erbsen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andres-erbsen/subscriptions","organizations_url":"https://api.github.com/users/andres-erbsen/orgs","repos_url":"https://api.github.com/users/andres-erbsen/repos","events_url":"https://api.github.com/users/andres-erbsen/events{/privacy}","received_events_url":"https://api.github.com/users/andres-erbsen/received_events","type":"User","site_admin":false},"created_at":"2019-01-28T19:14:52Z","updated_at":"2019-01-28T19:14:52Z","author_association":"CONTRIBUTOR","body":"I just ran into this in a real use case, and I can only concur that it is truly terrible.\r\n\r\nWould anyone who knows how these things work be willing to take a look and see whether something can be done here?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/458263046/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/458264092","html_url":"https://github.com/coq/coq/issues/6559#issuecomment-458264092","issue_url":"https://api.github.com/repos/coq/coq/issues/6559","id":458264092,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1ODI2NDA5Mg==","user":{"login":"SkySkimmer","id":2461932,"node_id":"MDQ6VXNlcjI0NjE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/2461932?v=4","gravatar_id":"","url":"https://api.github.com/users/SkySkimmer","html_url":"https://github.com/SkySkimmer","followers_url":"https://api.github.com/users/SkySkimmer/followers","following_url":"https://api.github.com/users/SkySkimmer/following{/other_user}","gists_url":"https://api.github.com/users/SkySkimmer/gists{/gist_id}","starred_url":"https://api.github.com/users/SkySkimmer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SkySkimmer/subscriptions","organizations_url":"https://api.github.com/users/SkySkimmer/orgs","repos_url":"https://api.github.com/users/SkySkimmer/repos","events_url":"https://api.github.com/users/SkySkimmer/events{/privacy}","received_events_url":"https://api.github.com/users/SkySkimmer/received_events","type":"User","site_admin":false},"created_at":"2019-01-28T19:17:44Z","updated_at":"2019-01-28T19:17:44Z","author_association":"CONTRIBUTOR","body":"If you have a problem with ltac semantics why not use ltac2? That's literally why it exists.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/458264092/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/458297415","html_url":"https://github.com/coq/coq/issues/6559#issuecomment-458297415","issue_url":"https://api.github.com/repos/coq/coq/issues/6559","id":458297415,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1ODI5NzQxNQ==","user":{"login":"andres-erbsen","id":918403,"node_id":"MDQ6VXNlcjkxODQwMw==","avatar_url":"https://avatars.githubusercontent.com/u/918403?v=4","gravatar_id":"","url":"https://api.github.com/users/andres-erbsen","html_url":"https://github.com/andres-erbsen","followers_url":"https://api.github.com/users/andres-erbsen/followers","following_url":"https://api.github.com/users/andres-erbsen/following{/other_user}","gists_url":"https://api.github.com/users/andres-erbsen/gists{/gist_id}","starred_url":"https://api.github.com/users/andres-erbsen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andres-erbsen/subscriptions","organizations_url":"https://api.github.com/users/andres-erbsen/orgs","repos_url":"https://api.github.com/users/andres-erbsen/repos","events_url":"https://api.github.com/users/andres-erbsen/events{/privacy}","received_events_url":"https://api.github.com/users/andres-erbsen/received_events","type":"User","site_admin":false},"created_at":"2019-01-28T20:54:58Z","updated_at":"2019-01-28T20:54:58Z","author_association":"CONTRIBUTOR","body":"because it is not a part of coq. this is important in two ways\r\n\r\n- an external plugin dependency complicates the build and dev setup. I guess this could be mitigated, for example offering portable binary packages of matching sets of ocamlc+coq+ltac2, but I am not holding my breadth for these. ltac1 and ssrtactics on the other hand are a part of the coq packages of several downstream distributions, so I'm able to rely on the corresponding distribution package maintainers to make sure that these are available. having this not be my problem is already very valuable, and it is even more important for people just trying out a library that just happens to depend on coq (and currently no external coq plugins).\r\n- as an external plugin, the support I would expect to receive for issues with ltac2 is significantly less than what I'd expect for coq itself. both simple statistics (such as community size and developer count) and an informal assessment of the general state of the relevant issue trackers confirm this concern. the support you all provide is the main reason I keep coming back to coq despite its current state of technical debt, and apparently I've been making the call that is worth it. if I was willing to go with fringe tools, I wouldn't be here complaining about tactic language details -- https://github.com/coq/coq/issues/8307 and https://github.com/coq/coq/issues?utf8=✓&q=is%3Aopen+label%3A\"kind%3A+performance\"+author%3Aandres-erbsen make a very good technical case for switching to lean, but l haven't done it because I do not understand the priorities of lean developers and thus lack confidence that my efforts fare well over the next several years.\r\n- in the very immediate term, I wish that ltac2 included alternatives to ltac1 idtac, lazymatch, and using pattern matching to extract open terms. It looks like these features would be some amount of work, but totally tractable given appropriate attention and confidence that this is the right way to go.\r\n\r\nSo, in short, I would love to be using ltac2 instead, but unless we are ready to be talking about merging ltac2 into coq, I think it's really not a trivial matter of \"just use ltac2\".","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/458297415/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/458321702","html_url":"https://github.com/coq/coq/issues/6559#issuecomment-458321702","issue_url":"https://api.github.com/repos/coq/coq/issues/6559","id":458321702,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1ODMyMTcwMg==","user":{"login":"ejgallego","id":7192257,"node_id":"MDQ6VXNlcjcxOTIyNTc=","avatar_url":"https://avatars.githubusercontent.com/u/7192257?v=4","gravatar_id":"","url":"https://api.github.com/users/ejgallego","html_url":"https://github.com/ejgallego","followers_url":"https://api.github.com/users/ejgallego/followers","following_url":"https://api.github.com/users/ejgallego/following{/other_user}","gists_url":"https://api.github.com/users/ejgallego/gists{/gist_id}","starred_url":"https://api.github.com/users/ejgallego/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ejgallego/subscriptions","organizations_url":"https://api.github.com/users/ejgallego/orgs","repos_url":"https://api.github.com/users/ejgallego/repos","events_url":"https://api.github.com/users/ejgallego/events{/privacy}","received_events_url":"https://api.github.com/users/ejgallego/received_events","type":"User","site_admin":false},"created_at":"2019-01-28T22:09:35Z","updated_at":"2019-01-28T22:09:35Z","author_association":"MEMBER","body":"@andres-erbsen Coq-shipped LTAC is likely to see very little updates, just in the name of compatibility, so indeed fixes will happen in new developments such as LTAC2 or whatever else people like to come up with.\r\n\r\nNote that the notion \"part of Coq\" is not so well defined as people tend to think. For example, there are \"parts of Coq\" that are barely maintained [definitively much less than LTAC2]; as you know our CI system helps to avoid bitrot which would be the main problem something living out of the main repos could have.\r\n\r\nIn fact, we have been discussing for quite a while how \"plugins\" and the core libraries should relate, and it is looking more and more likely, given that our toolchain will soon support a compositional build, that we follow a \"Linux drivers\" model and we include most ML plugins in the main repos, while allowing them to be released on their own scheduled cycle.\r\n\r\nIndeed the status of \"technical debt\" is bad, and it is very hard to fix as it requires highly specialized people. Even if we have now 2 engineers helping, they basically work at almost a pro-bono rate [thanks to their love of Coq] as their free-market value would be without any doubt much higher. So indeed, it is very appreciated all the contributions by skilled volunteers.\r\n\r\nA large problem in attracting more contributors is indeed communication. We do our best to expose plans and TTBOMK all dev processes are open to anybody today; however significant developer communication still happens \"in person\" in particular with regards to discussion of plans.\r\n\r\nBut in this sense I am much afraid that one cannot have their cake and eat it; some high profile users like to complain about Coq relying on stale or just plainly made up information, and pretend to influence the development of the tool when nobody of their group is present for example in the Coq Implementors Workshop. ","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/458321702/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/458322915","html_url":"https://github.com/coq/coq/issues/6559#issuecomment-458322915","issue_url":"https://api.github.com/repos/coq/coq/issues/6559","id":458322915,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1ODMyMjkxNQ==","user":{"login":"SkySkimmer","id":2461932,"node_id":"MDQ6VXNlcjI0NjE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/2461932?v=4","gravatar_id":"","url":"https://api.github.com/users/SkySkimmer","html_url":"https://github.com/SkySkimmer","followers_url":"https://api.github.com/users/SkySkimmer/followers","following_url":"https://api.github.com/users/SkySkimmer/following{/other_user}","gists_url":"https://api.github.com/users/SkySkimmer/gists{/gist_id}","starred_url":"https://api.github.com/users/SkySkimmer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SkySkimmer/subscriptions","organizations_url":"https://api.github.com/users/SkySkimmer/orgs","repos_url":"https://api.github.com/users/SkySkimmer/repos","events_url":"https://api.github.com/users/SkySkimmer/events{/privacy}","received_events_url":"https://api.github.com/users/SkySkimmer/received_events","type":"User","site_admin":false},"created_at":"2019-01-28T22:13:17Z","updated_at":"2019-01-28T22:13:17Z","author_association":"CONTRIBUTOR","body":">@andres-erbsen Coq-shipped LTAC is likely to see very little updates, just in the name of compatibility, so indeed fixes will happen in new developments such as LTAC2 or whatever else people like to come up with.\r\n\r\nI think fixes for ltac are still happening, and even new stuff (eg intropattern PRs). However this PR is more about changing the design of the ltac language and there I'm not so hopeful.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/458322915/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/458323190","html_url":"https://github.com/coq/coq/issues/6559#issuecomment-458323190","issue_url":"https://api.github.com/repos/coq/coq/issues/6559","id":458323190,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1ODMyMzE5MA==","user":{"login":"ejgallego","id":7192257,"node_id":"MDQ6VXNlcjcxOTIyNTc=","avatar_url":"https://avatars.githubusercontent.com/u/7192257?v=4","gravatar_id":"","url":"https://api.github.com/users/ejgallego","html_url":"https://github.com/ejgallego","followers_url":"https://api.github.com/users/ejgallego/followers","following_url":"https://api.github.com/users/ejgallego/following{/other_user}","gists_url":"https://api.github.com/users/ejgallego/gists{/gist_id}","starred_url":"https://api.github.com/users/ejgallego/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ejgallego/subscriptions","organizations_url":"https://api.github.com/users/ejgallego/orgs","repos_url":"https://api.github.com/users/ejgallego/repos","events_url":"https://api.github.com/users/ejgallego/events{/privacy}","received_events_url":"https://api.github.com/users/ejgallego/received_events","type":"User","site_admin":false},"created_at":"2019-01-28T22:14:18Z","updated_at":"2019-01-28T22:14:18Z","author_association":"MEMBER","body":"> I think fixes for ltac are still happening, and even new stuff (eg intropattern PRs). However this PR is more about changing the design of the ltac language and there I'm not so hopeful.\r\n\r\nYeah I mean like design updates, obviously things that can make LTAC better and don't create compatibility problems are always welcome, but there are not so many things like that I'm afraid.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/458323190/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/458341135","html_url":"https://github.com/coq/coq/issues/6559#issuecomment-458341135","issue_url":"https://api.github.com/repos/coq/coq/issues/6559","id":458341135,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1ODM0MTEzNQ==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2019-01-28T23:16:31Z","updated_at":"2019-01-28T23:16:31Z","author_association":"MEMBER","body":"I am generally a big fan of compatibility, but I would not mind seeing compatibility broken to fix this issue.  (In particular, I don't care much about compatibility of autogenerated names.  Especially not ones that were autogenerated by `fresh`.  Especially especially not ones that were autogenerated by `fresh` but were not, in fact, fresh.)","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/458341135/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/458342128","html_url":"https://github.com/coq/coq/issues/6559#issuecomment-458342128","issue_url":"https://api.github.com/repos/coq/coq/issues/6559","id":458342128,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1ODM0MjEyOA==","user":{"login":"ejgallego","id":7192257,"node_id":"MDQ6VXNlcjcxOTIyNTc=","avatar_url":"https://avatars.githubusercontent.com/u/7192257?v=4","gravatar_id":"","url":"https://api.github.com/users/ejgallego","html_url":"https://github.com/ejgallego","followers_url":"https://api.github.com/users/ejgallego/followers","following_url":"https://api.github.com/users/ejgallego/following{/other_user}","gists_url":"https://api.github.com/users/ejgallego/gists{/gist_id}","starred_url":"https://api.github.com/users/ejgallego/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ejgallego/subscriptions","organizations_url":"https://api.github.com/users/ejgallego/orgs","repos_url":"https://api.github.com/users/ejgallego/repos","events_url":"https://api.github.com/users/ejgallego/events{/privacy}","received_events_url":"https://api.github.com/users/ejgallego/received_events","type":"User","site_admin":false},"created_at":"2019-01-28T23:20:25Z","updated_at":"2019-01-28T23:20:25Z","author_association":"MEMBER","body":"I guess if you can fix without creating massive havoc the patch would be welcome.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/458342128/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/458422941","html_url":"https://github.com/coq/coq/issues/6559#issuecomment-458422941","issue_url":"https://api.github.com/repos/coq/coq/issues/6559","id":458422941,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1ODQyMjk0MQ==","user":{"login":"aspiwack","id":1413217,"node_id":"MDQ6VXNlcjE0MTMyMTc=","avatar_url":"https://avatars.githubusercontent.com/u/1413217?v=4","gravatar_id":"","url":"https://api.github.com/users/aspiwack","html_url":"https://github.com/aspiwack","followers_url":"https://api.github.com/users/aspiwack/followers","following_url":"https://api.github.com/users/aspiwack/following{/other_user}","gists_url":"https://api.github.com/users/aspiwack/gists{/gist_id}","starred_url":"https://api.github.com/users/aspiwack/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aspiwack/subscriptions","organizations_url":"https://api.github.com/users/aspiwack/orgs","repos_url":"https://api.github.com/users/aspiwack/repos","events_url":"https://api.github.com/users/aspiwack/events{/privacy}","received_events_url":"https://api.github.com/users/aspiwack/received_events","type":"User","site_admin":false},"created_at":"2019-01-29T06:28:51Z","updated_at":"2019-01-29T06:28:51Z","author_association":"CONTRIBUTOR","body":"This is truly curious. I have no idea why this is happening. The semantic of Ltac function is a bit clumsy, if I remember correctly, but I didn't think that could happen.\r\n\r\nIt probably shouldn't be assigned to me though. I can assist a little, but I don't nearly have the bandwidth to fix this myself. (it's probably not easy, either).","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/458422941/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/518333544","html_url":"https://github.com/coq/coq/issues/6559#issuecomment-518333544","issue_url":"https://api.github.com/repos/coq/coq/issues/6559","id":518333544,"node_id":"MDEyOklzc3VlQ29tbWVudDUxODMzMzU0NA==","user":{"login":"andres-erbsen-sifive","id":51132047,"node_id":"MDQ6VXNlcjUxMTMyMDQ3","avatar_url":"https://avatars.githubusercontent.com/u/51132047?v=4","gravatar_id":"","url":"https://api.github.com/users/andres-erbsen-sifive","html_url":"https://github.com/andres-erbsen-sifive","followers_url":"https://api.github.com/users/andres-erbsen-sifive/followers","following_url":"https://api.github.com/users/andres-erbsen-sifive/following{/other_user}","gists_url":"https://api.github.com/users/andres-erbsen-sifive/gists{/gist_id}","starred_url":"https://api.github.com/users/andres-erbsen-sifive/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andres-erbsen-sifive/subscriptions","organizations_url":"https://api.github.com/users/andres-erbsen-sifive/orgs","repos_url":"https://api.github.com/users/andres-erbsen-sifive/repos","events_url":"https://api.github.com/users/andres-erbsen-sifive/events{/privacy}","received_events_url":"https://api.github.com/users/andres-erbsen-sifive/received_events","type":"User","site_admin":false},"created_at":"2019-08-05T17:52:02Z","updated_at":"2019-08-05T17:52:02Z","author_association":"NONE","body":"Calling fresh through a function seems to even ignore names allocated through `fresh`, not just that function. So I am guessing that some \"names allocated during Ltac expression evaluation so far\" data structure is being threaded through the implementation, and an empty copy is passed in when evaluating an ltac function application. This might mean that this issue is fixable without drastically changing semantics (although all this is pure little-informed speculation...).\r\n\r\n```coq\r\n  Ltac myfresh x := let __ := match constr:(Set) with _ => idtac \"FRESH\" x end in fresh.\r\n  Goal True.\r\n    let z := fresh in\r\n    (* pose I as z; *)\r\n    let v := myfresh 1 in (* FRESH 1 *)\r\n    let w := myfresh 2 in (* FRESH 2 *)\r\n    idtac z w v. (* H H H *)\r\n  Abort.\r\n\r\n  Goal True.\r\n    let z := fresh in\r\n    pose I as z;\r\n    let v := myfresh 1 in (* FRESH 1 *)\r\n    let w := myfresh 2 in (* FRESH 2 *)\r\n    idtac z w v. (* H H0 H0 *)\r\n  Abort.\r\n```","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/518333544/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/518572321","html_url":"https://github.com/coq/coq/issues/6559#issuecomment-518572321","issue_url":"https://api.github.com/repos/coq/coq/issues/6559","id":518572321,"node_id":"MDEyOklzc3VlQ29tbWVudDUxODU3MjMyMQ==","user":{"login":"gares","id":1013846,"node_id":"MDQ6VXNlcjEwMTM4NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1013846?v=4","gravatar_id":"","url":"https://api.github.com/users/gares","html_url":"https://github.com/gares","followers_url":"https://api.github.com/users/gares/followers","following_url":"https://api.github.com/users/gares/following{/other_user}","gists_url":"https://api.github.com/users/gares/gists{/gist_id}","starred_url":"https://api.github.com/users/gares/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gares/subscriptions","organizations_url":"https://api.github.com/users/gares/orgs","repos_url":"https://api.github.com/users/gares/repos","events_url":"https://api.github.com/users/gares/events{/privacy}","received_events_url":"https://api.github.com/users/gares/received_events","type":"User","site_admin":false},"created_at":"2019-08-06T08:42:07Z","updated_at":"2019-08-06T08:42:56Z","author_association":"MEMBER","body":"In any case this fix is not going in 8.10, and 8.11 will include ltac2, so the question is: does this bug also affect ltac2?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/518572321/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/518836264","html_url":"https://github.com/coq/coq/issues/6559#issuecomment-518836264","issue_url":"https://api.github.com/repos/coq/coq/issues/6559","id":518836264,"node_id":"MDEyOklzc3VlQ29tbWVudDUxODgzNjI2NA==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2019-08-06T20:43:20Z","updated_at":"2019-08-06T20:43:30Z","author_association":"MEMBER","body":"@gares Thankfully no, for a good notion of no. \"Fresh\" doesn't mean much, it's always fresh w.r.t. some set of variables, so Ltac2 provides an API that lets you define that set explicitly. Atop of that you can define your own gensym using a mutable reference defined at the beginning of your tactic.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/518836264/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/518967217","html_url":"https://github.com/coq/coq/issues/6559#issuecomment-518967217","issue_url":"https://api.github.com/repos/coq/coq/issues/6559","id":518967217,"node_id":"MDEyOklzc3VlQ29tbWVudDUxODk2NzIxNw==","user":{"login":"gares","id":1013846,"node_id":"MDQ6VXNlcjEwMTM4NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1013846?v=4","gravatar_id":"","url":"https://api.github.com/users/gares","html_url":"https://github.com/gares","followers_url":"https://api.github.com/users/gares/followers","following_url":"https://api.github.com/users/gares/following{/other_user}","gists_url":"https://api.github.com/users/gares/gists{/gist_id}","starred_url":"https://api.github.com/users/gares/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gares/subscriptions","organizations_url":"https://api.github.com/users/gares/orgs","repos_url":"https://api.github.com/users/gares/repos","events_url":"https://api.github.com/users/gares/events{/privacy}","received_events_url":"https://api.github.com/users/gares/received_events","type":"User","site_admin":false},"created_at":"2019-08-07T06:58:14Z","updated_at":"2019-08-07T06:58:14Z","author_association":"MEMBER","body":"Ok, so to me this is a candidate for a won't fix label. We planned to freeze ltac1 for a long time, maybe 8.11 can be that time given that an alternative will be provided.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/518967217/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]