[{"url":"https://api.github.com/repos/coq/coq/issues/comments/470867782","html_url":"https://github.com/coq/coq/issues/9717#issuecomment-470867782","issue_url":"https://api.github.com/repos/coq/coq/issues/9717","id":470867782,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDg2Nzc4Mg==","user":{"login":"aspiwack","id":1413217,"node_id":"MDQ6VXNlcjE0MTMyMTc=","avatar_url":"https://avatars.githubusercontent.com/u/1413217?v=4","gravatar_id":"","url":"https://api.github.com/users/aspiwack","html_url":"https://github.com/aspiwack","followers_url":"https://api.github.com/users/aspiwack/followers","following_url":"https://api.github.com/users/aspiwack/following{/other_user}","gists_url":"https://api.github.com/users/aspiwack/gists{/gist_id}","starred_url":"https://api.github.com/users/aspiwack/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aspiwack/subscriptions","organizations_url":"https://api.github.com/users/aspiwack/orgs","repos_url":"https://api.github.com/users/aspiwack/repos","events_url":"https://api.github.com/users/aspiwack/events{/privacy}","received_events_url":"https://api.github.com/users/aspiwack/received_events","type":"User","site_admin":false},"created_at":"2019-03-08T09:43:06Z","updated_at":"2019-03-08T09:43:06Z","author_association":"CONTRIBUTOR","body":"Mmm… that was a while ago. I probably wrote the documentation, then realised something was wrong with `+` and “fixed” it.\r\n\r\nThe other thing in this commit is the interaction between `+`-in-ltac and Ltac's error thing. I'm really not sure why I decided the goal needed to be independent. Maybe there was an interaction with Ltac's errors? Or maybe it was just for `+` to behave uniformly with `||`. Principle of least surprise?\r\n\r\nMy preference is for no tactic to focus, and focusing be explicit. Though I'll admit that in the case of `||` and `+`, it gets a bit verbose. So maybe I just wanted to raise the usability of `+` to the casual Ltac user.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/470867782/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/470872761","html_url":"https://github.com/coq/coq/issues/9717#issuecomment-470872761","issue_url":"https://api.github.com/repos/coq/coq/issues/9717","id":470872761,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDg3Mjc2MQ==","user":{"login":"Zimmi48","id":1108325,"node_id":"MDQ6VXNlcjExMDgzMjU=","avatar_url":"https://avatars.githubusercontent.com/u/1108325?v=4","gravatar_id":"","url":"https://api.github.com/users/Zimmi48","html_url":"https://github.com/Zimmi48","followers_url":"https://api.github.com/users/Zimmi48/followers","following_url":"https://api.github.com/users/Zimmi48/following{/other_user}","gists_url":"https://api.github.com/users/Zimmi48/gists{/gist_id}","starred_url":"https://api.github.com/users/Zimmi48/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Zimmi48/subscriptions","organizations_url":"https://api.github.com/users/Zimmi48/orgs","repos_url":"https://api.github.com/users/Zimmi48/repos","events_url":"https://api.github.com/users/Zimmi48/events{/privacy}","received_events_url":"https://api.github.com/users/Zimmi48/received_events","type":"User","site_admin":false},"created_at":"2019-03-08T09:59:55Z","updated_at":"2019-03-08T09:59:55Z","author_association":"MEMBER","body":"Wouldn't this be too disruptive to change this now in Ltac1 and doesn't Ltac2 solves the issue?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/470872761/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/470872881","html_url":"https://github.com/coq/coq/issues/9717#issuecomment-470872881","issue_url":"https://api.github.com/repos/coq/coq/issues/9717","id":470872881,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDg3Mjg4MQ==","user":{"login":"Zimmi48","id":1108325,"node_id":"MDQ6VXNlcjExMDgzMjU=","avatar_url":"https://avatars.githubusercontent.com/u/1108325?v=4","gravatar_id":"","url":"https://api.github.com/users/Zimmi48","html_url":"https://github.com/Zimmi48","followers_url":"https://api.github.com/users/Zimmi48/followers","following_url":"https://api.github.com/users/Zimmi48/following{/other_user}","gists_url":"https://api.github.com/users/Zimmi48/gists{/gist_id}","starred_url":"https://api.github.com/users/Zimmi48/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Zimmi48/subscriptions","organizations_url":"https://api.github.com/users/Zimmi48/orgs","repos_url":"https://api.github.com/users/Zimmi48/repos","events_url":"https://api.github.com/users/Zimmi48/events{/privacy}","received_events_url":"https://api.github.com/users/Zimmi48/received_events","type":"User","site_admin":false},"created_at":"2019-03-08T10:00:19Z","updated_at":"2019-03-08T10:00:19Z","author_association":"MEMBER","body":"(in which case, this only becomes a documentation issue indeed)","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/470872881/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/471143822","html_url":"https://github.com/coq/coq/issues/9717#issuecomment-471143822","issue_url":"https://api.github.com/repos/coq/coq/issues/9717","id":471143822,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MTE0MzgyMg==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2019-03-09T04:16:44Z","updated_at":"2019-03-09T04:16:44Z","author_association":"MEMBER","body":"Indeed, Ltac2 fixes this issue.  I am not sure if it would be disruptive; I suspect the number of users who are (a) using `+` and (b) relying on its semantics of focusing are small (in part because so many tactics focus)\r\n\r\nHowever, I do see a possible issue: do I understand correctly that the following succeeds today but would fail if `+` did not have `tclINDEPENDENT`?\r\n```coq\r\nGoal True /\\ 0 = 0.\r\n  split; (exact I + exact eq_refl).\r\n```\r\n\r\nAnyway, I have opened #9719 to request the variants of this and a couple other primitives which are non-focusing.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/471143822/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/471204934","html_url":"https://github.com/coq/coq/issues/9717#issuecomment-471204934","issue_url":"https://api.github.com/repos/coq/coq/issues/9717","id":471204934,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MTIwNDkzNA==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2019-03-09T17:43:33Z","updated_at":"2019-03-09T17:43:33Z","author_association":"MEMBER","body":"@JasonGross IIRC, `exact` also focuses so it doesn't matter if you remove the `tclINDEPENDENT` from `+` in your example.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/471204934/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/471327826","html_url":"https://github.com/coq/coq/issues/9717#issuecomment-471327826","issue_url":"https://api.github.com/repos/coq/coq/issues/9717","id":471327826,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MTMyNzgyNg==","user":{"login":"Zimmi48","id":1108325,"node_id":"MDQ6VXNlcjExMDgzMjU=","avatar_url":"https://avatars.githubusercontent.com/u/1108325?v=4","gravatar_id":"","url":"https://api.github.com/users/Zimmi48","html_url":"https://github.com/Zimmi48","followers_url":"https://api.github.com/users/Zimmi48/followers","following_url":"https://api.github.com/users/Zimmi48/following{/other_user}","gists_url":"https://api.github.com/users/Zimmi48/gists{/gist_id}","starred_url":"https://api.github.com/users/Zimmi48/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Zimmi48/subscriptions","organizations_url":"https://api.github.com/users/Zimmi48/orgs","repos_url":"https://api.github.com/users/Zimmi48/repos","events_url":"https://api.github.com/users/Zimmi48/events{/privacy}","received_events_url":"https://api.github.com/users/Zimmi48/received_events","type":"User","site_admin":false},"created_at":"2019-03-10T17:49:11Z","updated_at":"2019-03-10T17:49:11Z","author_association":"MEMBER","body":"If you want, you can always open a PR removing this tclINDEPENDENT and see what happens in the test-suite and the CI.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/471327826/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":{"id":15581,"slug":"octobox","node_id":"MDM6QXBwMTU1ODE=","owner":{"login":"octobox","id":24639960,"node_id":"MDEyOk9yZ2FuaXphdGlvbjI0NjM5OTYw","avatar_url":"https://avatars.githubusercontent.com/u/24639960?v=4","gravatar_id":"","url":"https://api.github.com/users/octobox","html_url":"https://github.com/octobox","followers_url":"https://api.github.com/users/octobox/followers","following_url":"https://api.github.com/users/octobox/following{/other_user}","gists_url":"https://api.github.com/users/octobox/gists{/gist_id}","starred_url":"https://api.github.com/users/octobox/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/octobox/subscriptions","organizations_url":"https://api.github.com/users/octobox/orgs","repos_url":"https://api.github.com/users/octobox/repos","events_url":"https://api.github.com/users/octobox/events{/privacy}","received_events_url":"https://api.github.com/users/octobox/received_events","type":"Organization","site_admin":false},"name":"Octobox","description":"## Untangle your GitHub Notifications\r\n\r\nOctobox helps you manage your notifications in the same way Gmail helps you manage your email. Built for developer workflows centred around GitHub issues, pull requests, comments and commits, Octobox makes sure you never miss another mention or misplace another issue. \r\n\r\nInstall the Octobox app on public repos for free, for private repo plans see https://octobox.io/pricing\r\n\r\n![Screenshot of  Octobox](https://raw.githubusercontent.com/octobox/octobox/master/app/assets/images/screenshot.png)","external_url":"https://octobox.io","html_url":"https://github.com/apps/octobox","created_at":"2018-08-03T09:33:18Z","updated_at":"2019-02-26T15:35:37Z","permissions":{"issues":"write","metadata":"read","pull_requests":"write","statuses":"read"},"events":["issues","issue_comment","label","milestone","public","pull_request","pull_request_review","pull_request_review_comment","repository","status","watch"]}},{"url":"https://api.github.com/repos/coq/coq/issues/comments/471377751","html_url":"https://github.com/coq/coq/issues/9717#issuecomment-471377751","issue_url":"https://api.github.com/repos/coq/coq/issues/9717","id":471377751,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MTM3Nzc1MQ==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2019-03-11T01:43:25Z","updated_at":"2019-03-11T01:43:25Z","author_association":"MEMBER","body":"@ppedrot I think you are mistaken about Ltac semantics here:\r\n```coq\r\nRequire Import Ltac2.Ltac2.\r\nRequire Import Ltac2.Control.\r\nRequire Import Ltac2.Notations.\r\n\r\nGoal True /\\ 0 = 0.\r\n  split; Control.plus (fun _ => exact I) (fun _ => exact eq_refl).\r\n  (* Error:\r\nThe term \"eq_refl\" has type \"?x = ?x\" while it is expected to have type \"True\".\r\n *)\r\n```","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/471377751/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/471383947","html_url":"https://github.com/coq/coq/issues/9717#issuecomment-471383947","issue_url":"https://api.github.com/repos/coq/coq/issues/9717","id":471383947,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MTM4Mzk0Nw==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2019-03-11T02:29:00Z","updated_at":"2019-03-11T02:29:00Z","author_association":"MEMBER","body":"I believe this is because even though `exact I` focuses, the multi-goal tactic `exact I` (equivalent to `[ > .. exact I ]`) fails on the two goals, and so we backtrack into the second tactic for all goals at once.\r\n\r\nThis does break some things (pipeline [here](https://gitlab.com/coq/coq/pipelines/51163838)).  Perhaps this example should be added to the test-suite, if the test-suite (pipeline [here](https://gitlab.com/coq/coq/-/jobs/174975857)) is not currently broken by this change.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/471383947/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/471438542","html_url":"https://github.com/coq/coq/issues/9717#issuecomment-471438542","issue_url":"https://api.github.com/repos/coq/coq/issues/9717","id":471438542,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MTQzODU0Mg==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2019-03-11T07:57:40Z","updated_at":"2019-03-11T07:57:40Z","author_association":"MEMBER","body":"@JasonGross You're right indeed, I was mistaken.\r\n\r\nRegarding `Tacticals.tclOR`, I think it is a very bad idea to have an ML definition that shares the same name and a compatible type with a different one (`Proofview.tclOR` namely) while not having the same semantics. I'd rather remove it altogether and inline the specific use cases where we rely on that one, while reusing directly the other one for Ltac.\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/471438542/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/471449732","html_url":"https://github.com/coq/coq/issues/9717#issuecomment-471449732","issue_url":"https://api.github.com/repos/coq/coq/issues/9717","id":471449732,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MTQ0OTczMg==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2019-03-11T08:39:57Z","updated_at":"2019-03-11T08:39:57Z","author_association":"MEMBER","body":"> I think it is a very bad idea to have an ML definition that shares the same name and a compatible type with a different one (Proofview.tclOR namely) while not having the same semantics.\r\n\r\nI agree\r\n\r\n> while reusing directly the other one for Ltac.\r\n\r\nAre you proposing now that Ltac's `+` should lose `tclINDEPENDENT`?  I've changed my mind on this, after seeing the behavior I mention above, and think that the Ltac default with `+` should be focusing.  (I do think there should be another tactical we have access to for the non-focusing version, but it's going to be a pain to track all the points where things are not focused and use `[ > tac.. ]`.  And I suspect it will confuse beginners.  I think having all focusing be explicit in Ltac2, modulo compatibility notations though, is probably fine.)","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/471449732/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/471451667","html_url":"https://github.com/coq/coq/issues/9717#issuecomment-471451667","issue_url":"https://api.github.com/repos/coq/coq/issues/9717","id":471451667,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MTQ1MTY2Nw==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2019-03-11T08:46:30Z","updated_at":"2019-03-11T08:46:30Z","author_association":"MEMBER","body":"> I've changed my mind on this, after seeing the behavior I mention above, and think that the Ltac default with + should be focusing.\r\n\r\nI don't have a particular preference for that, as long as there is a way to access the non-focussing one (or we drop Ltac1 altogether). My comment was assuming you were going to perform the change.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/471451667/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/471453274","html_url":"https://github.com/coq/coq/issues/9717#issuecomment-471453274","issue_url":"https://api.github.com/repos/coq/coq/issues/9717","id":471453274,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MTQ1MzI3NA==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2019-03-11T08:52:03Z","updated_at":"2019-03-11T08:52:03Z","author_association":"MEMBER","body":"I did perform the change, and it broke a bunch of things; see the CI for https://github.com/coq/coq/issues/9734 .  I am also pretty bad at naming things (my current leading name for the non-focusing one is an infix `g+`...).  I would prefer you or someone else submitting the PR.  I won't have time to make a decent PR for a couple of weeks, but I'll see if I can do it at the beginning of April if no-one else does before then.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/471453274/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/471765853","html_url":"https://github.com/coq/coq/issues/9717#issuecomment-471765853","issue_url":"https://api.github.com/repos/coq/coq/issues/9717","id":471765853,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MTc2NTg1Mw==","user":{"login":"gares","id":1013846,"node_id":"MDQ6VXNlcjEwMTM4NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1013846?v=4","gravatar_id":"","url":"https://api.github.com/users/gares","html_url":"https://github.com/gares","followers_url":"https://api.github.com/users/gares/followers","following_url":"https://api.github.com/users/gares/following{/other_user}","gists_url":"https://api.github.com/users/gares/gists{/gist_id}","starred_url":"https://api.github.com/users/gares/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gares/subscriptions","organizations_url":"https://api.github.com/users/gares/orgs","repos_url":"https://api.github.com/users/gares/repos","events_url":"https://api.github.com/users/gares/events{/privacy}","received_events_url":"https://api.github.com/users/gares/received_events","type":"User","site_admin":false},"created_at":"2019-03-11T22:31:19Z","updated_at":"2019-03-11T22:31:19Z","author_association":"MEMBER","body":"Hem, what about the distributivity law?\r\nAnyway, I propose tclCHOICE, for the non focusing one.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/471765853/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]