[{"url":"https://api.github.com/repos/coq/coq/issues/comments/1028185714","html_url":"https://github.com/coq/coq/issues/15593#issuecomment-1028185714","issue_url":"https://api.github.com/repos/coq/coq/issues/15593","id":1028185714,"node_id":"IC_kwDOABUDh849SN5y","user":{"login":"SkySkimmer","id":2461932,"node_id":"MDQ6VXNlcjI0NjE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/2461932?v=4","gravatar_id":"","url":"https://api.github.com/users/SkySkimmer","html_url":"https://github.com/SkySkimmer","followers_url":"https://api.github.com/users/SkySkimmer/followers","following_url":"https://api.github.com/users/SkySkimmer/following{/other_user}","gists_url":"https://api.github.com/users/SkySkimmer/gists{/gist_id}","starred_url":"https://api.github.com/users/SkySkimmer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SkySkimmer/subscriptions","organizations_url":"https://api.github.com/users/SkySkimmer/orgs","repos_url":"https://api.github.com/users/SkySkimmer/repos","events_url":"https://api.github.com/users/SkySkimmer/events{/privacy}","received_events_url":"https://api.github.com/users/SkySkimmer/received_events","type":"User","site_admin":false},"created_at":"2022-02-02T17:37:33Z","updated_at":"2022-02-02T17:37:33Z","author_association":"CONTRIBUTOR","body":"Could you use Lemma + parameter syntax instead of Goal + intros? Much more readable imo","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/1028185714/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/1028265917","html_url":"https://github.com/coq/coq/issues/15593#issuecomment-1028265917","issue_url":"https://api.github.com/repos/coq/coq/issues/15593","id":1028265917,"node_id":"IC_kwDOABUDh849She9","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2022-02-02T19:00:36Z","updated_at":"2022-02-02T19:00:36Z","author_association":"MEMBER","body":"> Could you use Lemma + parameter syntax instead of Goal + intros? Much more readable imo\r\n\r\nUpdated the code block","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/1028265917/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/1028290103","html_url":"https://github.com/coq/coq/issues/15593#issuecomment-1028290103","issue_url":"https://api.github.com/repos/coq/coq/issues/15593","id":1028290103,"node_id":"IC_kwDOABUDh849SnY3","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2022-02-02T19:37:03Z","updated_at":"2022-02-02T19:37:03Z","author_association":"MEMBER","body":"> what's the slowness in pattern selection?\r\n\r\nVery well-known fact that setoid_rewrite pattern selection relies on full-blown conversion on closed terms (which is crazy). This is basically impossible to change without breaking everything out there, although there is #15508 which attempts to provide a knob to selectively disable the craziest possible conversion problems. But it's sorcerer's apprentice tier, in my opinion. Relatedly, see #15466.\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/1028290103/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/1028481765","html_url":"https://github.com/coq/coq/issues/15593#issuecomment-1028481765","issue_url":"https://api.github.com/repos/coq/coq/issues/15593","id":1028481765,"node_id":"IC_kwDOABUDh849TWLl","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2022-02-03T00:19:11Z","updated_at":"2022-02-03T00:19:11Z","author_association":"MEMBER","body":"This is not `setoid_rewrite`, though, because I'm not using `at` anywhere, only `in`.  This is just plain `rewrite`, which should not be modulo conversion, right?  Furthermore, the head symbol in every `rewrite` lemma is `ident_interp`, which only appears in the goal as an argument to higher-order functions, and does not appear unapplied anywhere.  Hence assuming we are not performing conversion on the head of the application (which we should not be, as this is not `setoid_rewrite`), failure should be nearly instantaneous.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/1028481765/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/1028766190","html_url":"https://github.com/coq/coq/issues/15593#issuecomment-1028766190","issue_url":"https://api.github.com/repos/coq/coq/issues/15593","id":1028766190,"node_id":"IC_kwDOABUDh849Ubnu","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2022-02-03T09:13:01Z","updated_at":"2022-02-03T09:13:01Z","author_association":"MEMBER","body":"> This is not setoid_rewrite, though, because I'm not using at anywhere, only in\r\n\r\nIndeed, you're right. That said, the Leibniz rewrite also sets `modulo_conv_on_closed_terms` to `Some` so it will try to perform conversion as well. It's a bit less violent than the setoid variant because it does not set the `modulo_betaiota` flag, but still. Note also that  `Set Keyed Unification` makes your example a bit more than twice faster.\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/1028766190/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/1028859894","html_url":"https://github.com/coq/coq/issues/15593#issuecomment-1028859894","issue_url":"https://api.github.com/repos/coq/coq/issues/15593","id":1028859894,"node_id":"IC_kwDOABUDh849Uyf2","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2022-02-03T10:51:13Z","updated_at":"2022-02-03T10:51:13Z","author_association":"MEMBER","body":"I confirm that removing the up-to-conversion flag in Leibniz rewrite makes this example much faster (from ~3.5s to ~0.6s on my machine).","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/1028859894/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/1029347208","html_url":"https://github.com/coq/coq/issues/15593#issuecomment-1029347208","issue_url":"https://api.github.com/repos/coq/coq/issues/15593","id":1029347208,"node_id":"IC_kwDOABUDh849WpeI","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2022-02-03T19:55:41Z","updated_at":"2022-02-03T19:55:41Z","author_association":"MEMBER","body":"What's responsible for the diff between `Set Keyed Unification` and \"up-to-conversion flag\"?  (Does #15508 expose this?)","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/1029347208/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/1029425959","html_url":"https://github.com/coq/coq/issues/15593#issuecomment-1029425959","issue_url":"https://api.github.com/repos/coq/coq/issues/15593","id":1029425959,"node_id":"IC_kwDOABUDh849W8sn","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2022-02-03T21:38:26Z","updated_at":"2022-02-03T21:38:26Z","author_association":"MEMBER","body":"These are two orthogonal things.\r\n- Keyed unification makes the pattern selection faster because it skips some unification subproblems, by first using a syntactic criterion, even before calling unification proper.\r\n- Up-to-conversion is always on for rewriting, is slow in general, and #15508 does not expose anything for the Leibniz rewrite tactic.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/1029425959/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/1029434377","html_url":"https://github.com/coq/coq/issues/15593#issuecomment-1029434377","issue_url":"https://api.github.com/repos/coq/coq/issues/15593","id":1029434377,"node_id":"IC_kwDOABUDh849W-wJ","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2022-02-03T21:50:01Z","updated_at":"2022-02-03T21:50:01Z","author_association":"MEMBER","body":"The syntactic criterion will fix slowness in cases where there is no match of the head symbol applied to terms, right?\r\n\r\nCan up-to-conversion for Leibniz rewrite be exposed?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/1029434377/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/1029436732","html_url":"https://github.com/coq/coq/issues/15593#issuecomment-1029436732","issue_url":"https://api.github.com/repos/coq/coq/issues/15593","id":1029436732,"node_id":"IC_kwDOABUDh849W_U8","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2022-02-03T21:53:26Z","updated_at":"2022-02-03T21:53:26Z","author_association":"MEMBER","body":"> The syntactic criterion will fix slowness in cases where there is no match of the head symbol applied to terms, right?\r\n\r\nThat's my understanding.\r\n\r\n> Can up-to-conversion for Leibniz rewrite be exposed?\r\n\r\nYes, it's not very hard to do.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/1029436732/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]