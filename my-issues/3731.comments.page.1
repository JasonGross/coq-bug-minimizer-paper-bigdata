[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337526028","html_url":"https://github.com/coq/coq/issues/3731#issuecomment-337526028","issue_url":"https://api.github.com/repos/coq/coq/issues/3731","id":337526028,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNjAyOA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-10-14T02:41:24Z","updated_at":"2017-10-18T09:36:50Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nParameter addr : Type.\nParameter valu : Type.\nParameter z : addr.\nParameter addr2valu : addr -> valu.\nParameter valu2addr : valu -> addr.\nAxiom addr2valu2addr : forall a, valu2addr (addr2valu a) = a.\nHint Rewrite addr2valu2addr.\n\nRequire Import Setoid.\n\nTheorem t (f : (nat -> Type) -> nat -> Type) : forall x:nat, f (fun _ => (valu2addr (addr2valu z)) = z) x.\nProof.\n  rewrite addr2valu2addr.\n  Undo.\n  setoid_rewrite addr2valu2addr. (*\nToplevel input, characters 15-44:\nError:\nTactic failure:setoid rewrite failed: Unable to satisfy the rewriting constraints.\nUnable to satisfy the following constraints:\nEVARS:\n ?28==[f (do_subrelation:=Morphisms.do_subrelation)\n        |- Morphisms.Proper\n             (Morphisms.pointwise_relation nat ?24 ==>\n              Basics.flip Basics.impl) Morphisms.forall_def]\n        (internal placeholder)\n ?27==[f x |- Morphisms.ProperProxy ?25 x] (internal placeholder)\n ?26==[f (do_subrelation:=Morphisms.do_subrelation) x\n        |- Morphisms.Proper\n             (Morphisms.pointwise_relation nat ?20 ==> ?25 ==> ?24) f]\n        (internal placeholder)\n ?25==[f |- relation nat] (internal placeholder)\n ?24==[f |- relation Type] (internal placeholder)\n ?23==[f x H |- Morphisms.ProperProxy ?21 z] (internal placeholder)\n ?22==[f (do_subrelation:=Morphisms.do_subrelation) x H\n        |- Morphisms.Proper (eq ==> ?21 ==> ?20) eq] (internal placeholder)\n ?21==[f |- relation addr] (internal placeholder)\n ?20==[f |- relation Prop] (internal placeholder)\n\nMETAS:\n 445[a] := z : addr  [type is checked]\n .\n*)\n\n\nI think [setoid_rewrite] should succeed whenever [rewrite] does.  The error message from [setoid_rewrite] is also mostly incomprehensible.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337526028/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337526030","html_url":"https://github.com/coq/coq/issues/3731#issuecomment-337526030","issue_url":"https://api.github.com/repos/coq/coq/issues/3731","id":337526030,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNjAzMA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-10-14T09:10:02Z","updated_at":"2017-10-18T09:36:50Z","author_association":"CONTRIBUTOR","body":"Comment author: @ppedrot\n\nI have a branch I intend to push to allow setoid_rewrite to work purely with evars. In this branch, I get the following error instead:\n\nError: Illegal application: \nThe term \"@ CRelationClasses.flip\" of type \n\"forall A B C : Type, (A -> B -> C) -> B -> A -> C\"\ncannot be applied to the terms\n \"Type\" : \"Type\"\n \"Type\" : \"Type\"\n \"?X7\" : \"Type\"\n \"CRelationClasses.arrow\" : \"Type -> Type -> Type\"\nThe 4th term has type \"Type -> Type -> Type\" which should be coercible to \n\"Type -> Type -> ?X7\".\n\nSounds like a unification problem...\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337526030/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337526031","html_url":"https://github.com/coq/coq/issues/3731#issuecomment-337526031","issue_url":"https://api.github.com/repos/coq/coq/issues/3731","id":337526031,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNjAzMQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-11-03T18:54:19Z","updated_at":"2017-10-18T09:36:51Z","author_association":"CONTRIBUTOR","body":"Comment author: @zeldovich\n\nCreated attachment 516\nSimpler test case\n\nAttached is a simpler test case that appears to trigger the same issue.  In particular, using the latest version of coq trunk (commit c4f270f5), this program:\n\n  Require Import Setoid.\n\n  Theorem t (f : (unit -> nat) -> Prop) :\n    f (fun _ => 0 + 1).\n  Proof.\n    rewrite plus_O_n.\n    Undo.\n    setoid_rewrite plus_O_n.\n\nproduces this error:\n\n  Error:\n  Tactic failure: setoid rewrite failed: Unable to satisfy the rewriting constraints.\n  Unable to satisfy the following constraints:\n  In environment:\n  f : (unit -> nat) -> Prop\n  do_subrelation := Morphisms.do_subrelation : Morphisms.apply_subrelation\n  \n  ?p : \"Morphisms.Proper (Morphisms.pointwise_relation unit eq ==> Basics.flip Basics.impl) f\"\n  .\n\n> Attached file: [setoid-rewrite-simpler.v](https://coq.inria.fr/bugfiles/attachment.cgi?id=516) (text/plain, 148 bytes)\n> Description:   Simpler test case\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337526031/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337526033","html_url":"https://github.com/coq/coq/issues/3731#issuecomment-337526033","issue_url":"https://api.github.com/repos/coq/coq/issues/3731","id":337526033,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNjAzMw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-11-03T19:22:52Z","updated_at":"2017-10-18T09:36:51Z","author_association":"CONTRIBUTOR","body":"Comment author: @zeldovich\n\nPerhaps this has something to do with functional extensionality?  I was able to make the setoid_rewrite in my last example go through by manually proving the rewriting constraint that setoid_rewrite seemed to want -- but doing so required relying on functional extensionality:\n\n  Require Import Setoid.\n  Require Import FunctionalExtensionality.\n\n  Theorem t (f : (unit -> nat) -> Prop) :\n    f (fun _ => 0 + 1).\n  Proof.\n    rewrite plus_O_n.\n    Undo.\n\n    assert (Morphisms.Proper (Morphisms.pointwise_relation unit eq ==> Basics.flip Basics.impl) f).\n    unfold Basics.flip.\n    unfold Basics.impl.\n    unfold Morphisms.pointwise_relation.\n    unfold Morphisms.Proper.\n    unfold Morphisms.respectful.\n    intros.\n    assert (x=y); subst; auto.\n    apply functional_extensionality; auto.\n\n    setoid_rewrite plus_O_n.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337526033/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337526034","html_url":"https://github.com/coq/coq/issues/3731#issuecomment-337526034","issue_url":"https://api.github.com/repos/coq/coq/issues/3731","id":337526034,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNjAzNA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-11-03T19:40:34Z","updated_at":"2017-10-18T09:36:51Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nThat does seem to be the issue.  I think setoid_rewrite needs to be taught that functional extensionality isn't needed in this case, because the term being rewritten doesn't mention the binder and we're using Leibniz equality.  I don't know enough about the guts of setoid_rewrite to know which instances we have to give (probably something involving [subrelation], or changing [subrelation_tac] in [Coq.Classes.Morphisms])...\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337526034/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337526037","html_url":"https://github.com/coq/coq/issues/3731#issuecomment-337526037","issue_url":"https://api.github.com/repos/coq/coq/issues/3731","id":337526037,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNjAzNw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-02-16T22:01:44Z","updated_at":"2017-10-18T09:36:51Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nIndeed that's one case where rewrite is better than setoid_rewrite, and it's by design: the setoid_rewrite tactic is compositional on the term, it doesn't consider the fact that eq has a more powerful eliminator that works for any context (if no capture happens). On the other hand, if you assume funext you get all rewriting under binders, even with capture directly. Improving the setoid_rewrite message is hard, as it's really a failure of proof search.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337526037/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]