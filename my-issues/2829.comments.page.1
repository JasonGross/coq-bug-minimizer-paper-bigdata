[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337511066","html_url":"https://github.com/coq/coq/issues/2829#issuecomment-337511066","issue_url":"https://api.github.com/repos/coq/coq/issues/2829","id":337511066,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUxMTA2Ng==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2012-06-25T23:55:48Z","updated_at":"2017-12-08T14:23:41Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\r\n\r\nUniverse inconsistency errors involve cycles in the graph Coq keeps of consistency checks on universe variables.  The current error message, even with [Set Printing Universes], is something like \"(cannot enforce Category.2 <= Top.3)\", and is not very helpful.  It would be nice to also see the line of code where each of the universe variables was introduced (so that I know what \"Category.2\" and \"Top.3\" are) and also see the first line of code where these two variables became related.\r\n\r\nAlternatively (perhaps more usefully), it would be nice to be able to give [Print Universes] some extra arguments to tell it to include the line number & file name of every edge it prints out, and to restrict its output to only inequalities involving certain variables.  So, for example, I might want\r\n```\r\n[Print Universes \"Category.2\" \"Top.3\".]\r\nto give me something like\r\nCategory.2 introduced on line 8 of Category.v:\r\n  Morphism : Object -> Object -> Type (* Category.2 *);\r\nTop.3 introduced on line 10 of (the current file):\r\n  SMorphism : SObject -> SObject -> Type (* Top.3 *);\r\nTop.3 < Category.2  (introduced on line a of file b)\r\n      < Top.31  (introduced on line c of file d)\r\n      <= Category.3  (introduced on line e of file f)\r\n      <= Coq.Init.Logic.17  (introduced on line g of file h)\r\n```","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337511066/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337511067","html_url":"https://github.com/coq/coq/issues/2829#issuecomment-337511067","issue_url":"https://api.github.com/repos/coq/coq/issues/2829","id":337511067,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUxMTA2Nw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-07-02T07:37:00Z","updated_at":"2017-10-18T08:54:24Z","author_association":"CONTRIBUTOR","body":"Comment author: @jwiegley\n\n+1.  I was just bitten by this today, when a module hierarchy contained a universe inconsistency somewhere, but I had no clue where, except to know which modules might be involved from the Set Printing Universes option.\n\nIf there were a way to have Coq print each completed definition as it processes a file (as Common Lisp does, for example), this would provide a workaround to this bug for the time being.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337511067/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337511068","html_url":"https://github.com/coq/coq/issues/2829#issuecomment-337511068","issue_url":"https://api.github.com/repos/coq/coq/issues/2829","id":337511068,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUxMTA2OA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-07-02T07:38:16Z","updated_at":"2017-10-18T08:54:24Z","author_association":"CONTRIBUTOR","body":"Comment author: @jwiegley\n\nScratch the second part, these are already completed definitions involved.  I second Jason's approach.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337511068/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/350265818","html_url":"https://github.com/coq/coq/issues/2829#issuecomment-350265818","issue_url":"https://api.github.com/repos/coq/coq/issues/2829","id":350265818,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MDI2NTgxOA==","user":{"login":"SkySkimmer","id":2461932,"node_id":"MDQ6VXNlcjI0NjE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/2461932?v=4","gravatar_id":"","url":"https://api.github.com/users/SkySkimmer","html_url":"https://github.com/SkySkimmer","followers_url":"https://api.github.com/users/SkySkimmer/followers","following_url":"https://api.github.com/users/SkySkimmer/following{/other_user}","gists_url":"https://api.github.com/users/SkySkimmer/gists{/gist_id}","starred_url":"https://api.github.com/users/SkySkimmer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SkySkimmer/subscriptions","organizations_url":"https://api.github.com/users/SkySkimmer/orgs","repos_url":"https://api.github.com/users/SkySkimmer/repos","events_url":"https://api.github.com/users/SkySkimmer/events{/privacy}","received_events_url":"https://api.github.com/users/SkySkimmer/received_events","type":"User","site_admin":false},"created_at":"2017-12-08T13:42:02Z","updated_at":"2017-12-08T13:42:02Z","author_association":"CONTRIBUTOR","body":"I tried making something at https://github.com/SkySkimmer/coq/tree/auto-name-univs to give names to universes of monomorphic constants automatically based on #890, but it feels too hacky to use.\r\nWith it,\r\n```coq\r\nRequire Bool.\r\nPrint Universes.\r\n```\r\nprints\r\nhttps://gist.github.com/SkySkimmer/e0b9e1b11ad0856ee14a946053825ee9\r\nsample\r\n```\r\nidentity_rect_r.0 <= Coq.Init.Logic_Type.2\r\n                  <= identity.0\r\nidentity_rec_r.0 <= Coq.Init.Logic_Type.2\r\n                 <= identity.0\r\nidentity_ind_r.0 <= Coq.Init.Logic_Type.2\r\n                 <= identity.0\r\nCoq.Init.Logic_Type.2 <= identity.0\r\nCompSpec2Type.0 <= CompSpecT.0\r\n                <= CompSpec.0\r\napp.0 <= list.0\r\nlength.0 <= list.0\r\nprod_curry.1 <= prod.1\r\nprod_curry.0 <= prod.0\r\nprod_uncurry.1 <= prod.1\r\nprod_uncurry.0 <= prod.0\r\ninjective_projections.1 <= Coq.Init.Datatypes.28\r\n                        <= prod.1\r\n                        <= eq_ind_r.0\r\n                        <= eq.0\r\ninjective_projections.0 <= Coq.Init.Datatypes.27\r\n                        <= prod.0\r\n                        <= eq_ind_r.0\r\n                        <= eq.0\r\nsurjective_pairing.1 <= Coq.Init.Datatypes.28\r\n                     <= prod.1\r\n                     <= eq.0\r\nsurjective_pairing.0 <= Coq.Init.Datatypes.27\r\n                     <= prod.0\r\n                     <= eq.0\r\nCoq.Init.Datatypes.28 <= prod.1\r\nCoq.Init.Datatypes.27 <= prod.0\r\noption_map.1 <= option.0\r\noption_map.0 <= option.0\r\nCoq.Init.Specif.426 <= option.0\r\nrew_sig2.1 <= Coq.Init.Specif.21\r\n           <= sig_of_sig2.0\r\n           <= Coq.Init.Specif.16\r\n           <= sig2.0\r\n           <= Coq.Init.Logic.9\r\n           <= eq.0\r\nrew_sig2.0 <= eq.0\r\neq_sig2_nondep.0 <= eq_sig2.0\r\n                 <= Coq.Init.Specif.21\r\n                 <= sig_of_sig2.0\r\n                 <= Coq.Init.Specif.16\r\n                 <= sig2.0\r\n                 <= rew_const.0\r\n                 <= eq.0\r\neq_sig2_hprop_iff.0 <= eq_sig2_hprop.0\r\n                    <= sig_of_sig2.0\r\n                    <= sig2.0\r\n                    <= sig.0\r\n                    <= Coq.Init.Logic.10\r\n                    <= eq.0\r\neq_sig2_ind.0 <= eq_sig2_rec.0\r\n              <= sig2.0\r\n              <= eq.0\r\neq_sig2_rec.0 <= eq_sig2_rect.0\r\n              <= sig2.0\r\n              <= eq.0\r\neq_sig2_rect.0 <= eq_sig2.0\r\n               <= proj3_sig_eq.0\r\n               <= proj2_sig_of_sig2_eq.0\r\n               <= proj1_sig_of_sig2_eq.0\r\n               <= Coq.Init.Specif.21\r\n```","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/350265818/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/350352837","html_url":"https://github.com/coq/coq/issues/2829#issuecomment-350352837","issue_url":"https://api.github.com/repos/coq/coq/issues/2829","id":350352837,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MDM1MjgzNw==","user":{"login":"herbelin","id":460771,"node_id":"MDQ6VXNlcjQ2MDc3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/460771?v=4","gravatar_id":"","url":"https://api.github.com/users/herbelin","html_url":"https://github.com/herbelin","followers_url":"https://api.github.com/users/herbelin/followers","following_url":"https://api.github.com/users/herbelin/following{/other_user}","gists_url":"https://api.github.com/users/herbelin/gists{/gist_id}","starred_url":"https://api.github.com/users/herbelin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/herbelin/subscriptions","organizations_url":"https://api.github.com/users/herbelin/orgs","repos_url":"https://api.github.com/users/herbelin/repos","events_url":"https://api.github.com/users/herbelin/events{/privacy}","received_events_url":"https://api.github.com/users/herbelin/received_events","type":"User","site_admin":false},"created_at":"2017-12-08T19:37:12Z","updated_at":"2017-12-08T19:37:12Z","author_association":"MEMBER","body":"Why do you say \"too hacky\"? To me it looks wonderful. At worst, maybe just the `<=` could be aligned.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/350352837/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/350354961","html_url":"https://github.com/coq/coq/issues/2829#issuecomment-350354961","issue_url":"https://api.github.com/repos/coq/coq/issues/2829","id":350354961,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MDM1NDk2MQ==","user":{"login":"SkySkimmer","id":2461932,"node_id":"MDQ6VXNlcjI0NjE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/2461932?v=4","gravatar_id":"","url":"https://api.github.com/users/SkySkimmer","html_url":"https://github.com/SkySkimmer","followers_url":"https://api.github.com/users/SkySkimmer/followers","following_url":"https://api.github.com/users/SkySkimmer/following{/other_user}","gists_url":"https://api.github.com/users/SkySkimmer/gists{/gist_id}","starred_url":"https://api.github.com/users/SkySkimmer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SkySkimmer/subscriptions","organizations_url":"https://api.github.com/users/SkySkimmer/orgs","repos_url":"https://api.github.com/users/SkySkimmer/repos","events_url":"https://api.github.com/users/SkySkimmer/events{/privacy}","received_events_url":"https://api.github.com/users/SkySkimmer/received_events","type":"User","site_admin":false},"created_at":"2017-12-08T19:46:25Z","updated_at":"2017-12-08T19:46:25Z","author_association":"CONTRIBUTOR","body":"I mean the implementation. Anything which does `Id.of_string_soft` is iffy.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/350354961/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/350361002","html_url":"https://github.com/coq/coq/issues/2829#issuecomment-350361002","issue_url":"https://api.github.com/repos/coq/coq/issues/2829","id":350361002,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MDM2MTAwMg==","user":{"login":"herbelin","id":460771,"node_id":"MDQ6VXNlcjQ2MDc3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/460771?v=4","gravatar_id":"","url":"https://api.github.com/users/herbelin","html_url":"https://github.com/herbelin","followers_url":"https://api.github.com/users/herbelin/followers","following_url":"https://api.github.com/users/herbelin/following{/other_user}","gists_url":"https://api.github.com/users/herbelin/gists{/gist_id}","starred_url":"https://api.github.com/users/herbelin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/herbelin/subscriptions","organizations_url":"https://api.github.com/users/herbelin/orgs","repos_url":"https://api.github.com/users/herbelin/repos","events_url":"https://api.github.com/users/herbelin/events{/privacy}","received_events_url":"https://api.github.com/users/herbelin/received_events","type":"User","site_admin":false},"created_at":"2017-12-08T20:13:24Z","updated_at":"2017-12-08T20:13:24Z","author_association":"MEMBER","body":"If the generated names were of the form `prod.u0`, `prod.u1`, ... or otherwise maybe `prod.u`, `prod.v`, ... could you then avoid `Id.of_string_soft`?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/350361002/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/350362026","html_url":"https://github.com/coq/coq/issues/2829#issuecomment-350362026","issue_url":"https://api.github.com/repos/coq/coq/issues/2829","id":350362026,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MDM2MjAyNg==","user":{"login":"SkySkimmer","id":2461932,"node_id":"MDQ6VXNlcjI0NjE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/2461932?v=4","gravatar_id":"","url":"https://api.github.com/users/SkySkimmer","html_url":"https://github.com/SkySkimmer","followers_url":"https://api.github.com/users/SkySkimmer/followers","following_url":"https://api.github.com/users/SkySkimmer/following{/other_user}","gists_url":"https://api.github.com/users/SkySkimmer/gists{/gist_id}","starred_url":"https://api.github.com/users/SkySkimmer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SkySkimmer/subscriptions","organizations_url":"https://api.github.com/users/SkySkimmer/orgs","repos_url":"https://api.github.com/users/SkySkimmer/repos","events_url":"https://api.github.com/users/SkySkimmer/events{/privacy}","received_events_url":"https://api.github.com/users/SkySkimmer/received_events","type":"User","site_admin":false},"created_at":"2017-12-08T20:18:25Z","updated_at":"2017-12-08T20:18:25Z","author_association":"CONTRIBUTOR","body":"I tried something like that but it ended up erroring with \"universe already exists\" on the Qed for Init/Logic eq_ex2_uncurried. I don't quite understand why.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/350362026/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/430995514","html_url":"https://github.com/coq/coq/issues/2829#issuecomment-430995514","issue_url":"https://api.github.com/repos/coq/coq/issues/2829","id":430995514,"node_id":"MDEyOklzc3VlQ29tbWVudDQzMDk5NTUxNA==","user":{"login":"SkySkimmer","id":2461932,"node_id":"MDQ6VXNlcjI0NjE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/2461932?v=4","gravatar_id":"","url":"https://api.github.com/users/SkySkimmer","html_url":"https://github.com/SkySkimmer","followers_url":"https://api.github.com/users/SkySkimmer/followers","following_url":"https://api.github.com/users/SkySkimmer/following{/other_user}","gists_url":"https://api.github.com/users/SkySkimmer/gists{/gist_id}","starred_url":"https://api.github.com/users/SkySkimmer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SkySkimmer/subscriptions","organizations_url":"https://api.github.com/users/SkySkimmer/orgs","repos_url":"https://api.github.com/users/SkySkimmer/repos","events_url":"https://api.github.com/users/SkySkimmer/events{/privacy}","received_events_url":"https://api.github.com/users/SkySkimmer/received_events","type":"User","site_admin":false},"created_at":"2018-10-18T12:49:05Z","updated_at":"2018-10-18T12:49:05Z","author_association":"CONTRIBUTOR","body":">I tried making something at https://github.com/SkySkimmer/coq/tree/auto-name-univs to give names to universes of monomorphic constants automatically based on #890, but it feels too hacky to use.\r\n\r\nSee #8760","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/430995514/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]