[{"url":"https://api.github.com/repos/coq/coq/issues/comments/625503620","html_url":"https://github.com/coq/coq/issues/12278#issuecomment-625503620","issue_url":"https://api.github.com/repos/coq/coq/issues/12278","id":625503620,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNTUwMzYyMA==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2020-05-07T21:20:10Z","updated_at":"2020-05-07T21:20:10Z","author_association":"MEMBER","body":"Very strangely, if I insert calls to `ltac1:(optimize_heap)` before each of the `Control.time` calls, that does smooth out the curve, but it does it by *increasing* the amount of time the call takes (e.g., the user time for `refine` on 7400 jumps from 4.961s to 11.152s.......","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/625503620/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/625513277","html_url":"https://github.com/coq/coq/issues/12278#issuecomment-625513277","issue_url":"https://api.github.com/repos/coq/coq/issues/12278","id":625513277,"node_id":"MDEyOklzc3VlQ29tbWVudDYyNTUxMzI3Nw==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2020-05-07T21:45:18Z","updated_at":"2020-05-07T21:45:18Z","author_association":"MEMBER","body":"Ah, but if I insert `optimize_heap` just before each loop, then the timing discrepencies go away, and there is not a big jump (in fact `refine` gets faster).  As suggested by @Blaisorblade at https://gitter.im/coq/coq?at=5eb47b87347bd61630607bef, it's probably because GC is thrashing the cache at inopportune times.  So I will consider this question resolved.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/625513277/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]