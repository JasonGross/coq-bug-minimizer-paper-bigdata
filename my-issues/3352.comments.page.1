[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337519830","html_url":"https://github.com/coq/coq/issues/3352#issuecomment-337519830","issue_url":"https://api.github.com/repos/coq/coq/issues/3352","id":337519830,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUxOTgzMA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-05-29T16:29:15Z","updated_at":"2017-10-18T09:19:10Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nHere is some code that works in 8.4, but fails in trunk:\n\n(* File reduced by coq-bug-finder from original input, then from 7725 lines to 78 lines, then from 51 lines to 13 lines *)\nSet Universe Polymorphism.\nInductive Empty : Set := .\nRecord IsHProp (A : Type) := { foo : True }.\nDefinition hprop_Empty : IsHProp Empty := {| foo := I |}.\nGoal let U := Type in let gt := Set : U in IsHProp (Empty : U).\nsimpl.\nSet Printing Universes.\nexact hprop_Empty. (* Toplevel input, characters 21-32:\nError:\nThe term \"hprop_Empty\" has type \"IsHProp (* Set *) Empty\"\nwhile it is expected to have type \"IsHProp (* Top.17 *) Empty\"\n(Universe inconsistency: Cannot enforce Top.17 = Set because Set < Top.17)). *)\nDefined.\n\n\nI'm not sure what the general rule should be; intuitively, I want [IsHProp (* Set *) Foo] to mean [IsHProp (* U >= Set *) Foo].  (I think this worked in HoTT/coq, too.)  Morally, [IsHProp] has no universe level associated with it distinct from that of its argument, you should never get a universe inconsistency from unifying [IsHProp A] with [IsHProp A].  (The issue is tricker when IsHProp uses [A] elsewhere, as in:\n\n(* -*- coq-prog-args: (\"-emacs\" \"-indices-matter\") -*- *)\n(* File reduced by coq-bug-finder from original input, then from 7725 lines to 78 lines, then from 51 lines to 13 lines *)\nSet Universe Polymorphism.\nInductive paths {A} (a : A) : A -> Type := idpath : paths a a where \"x = y\" := (@ paths _ x y) : type_scope.\nInductive Empty : Set := .\nRecord Contr (A : Type) := { center : A }.\nRecord IsHProp (A : Type) := { foo : forall x y : A, Contr (x = y) }.\nDefinition hprop_Empty : IsHProp Empty := {| foo x y := match x : Empty with end |}.\nGoal let U := Type in let gt := Set : U in IsHProp (Empty : U).\nsimpl.\nSet Printing Universes.\nexact hprop_Empty.\n\n\nIt seems that here you need to actually do variance analysis.  So maybe the fact that it was accepted in 8.4 and HoTT/coq was a bug?)\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337519830/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337519833","html_url":"https://github.com/coq/coq/issues/3352#issuecomment-337519833","issue_url":"https://api.github.com/repos/coq/coq/issues/3352","id":337519833,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUxOTgzMw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-10-07T15:00:53Z","updated_at":"2017-10-18T09:19:11Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nThis is not a bug in either versions. It's just that IsHProp was template universe-polymorphic in 8.4 (and somewhat similar in HoTT/coq too) and that allows the arbitrary unification of IsHProp (A : Type@ {i}) and IsHProp (A : Type@ {j}) even though i and j might be incompatible. I don't know how this can be justified semantically though... \nIn fully polymorphic mode, you can declare hprop_Empty : IsHProp@ {i} Empty so that you get the expected \"any i >= Set\". Even in universe polymorphic mode, you could use \"Monomorphic Inductive/Record\" to get the old behavior.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337519833/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]