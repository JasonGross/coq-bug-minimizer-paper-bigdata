[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337541616","html_url":"https://github.com/coq/coq/issues/4673#issuecomment-337541616","issue_url":"https://api.github.com/repos/coq/coq/issues/4673","id":337541616,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0MTYxNg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-04-17T01:40:10Z","updated_at":"2017-10-18T10:22:57Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nHere is code that works in 8.4pl6 but fails in 8.5 with \"Error: Tactic failure: setoid rewrite failed: Nothing to rewrite.\"\n\n(* -*- mode: coq; coq-prog-args: (\"-emacs\" \"-R\" \".\" \"Fiat\" \"-top\" \"BooleanRecognizerOptimized\" \"-R\" \".\" \"Top\") -*- *)\n(* File reduced by coq-bug-finder from original input, then from 2407 lines to 22 lines, then from 528 lines to 35 lines, then from 331 lines to 42 lines, then from 56 lines to 42 lines, then from 63 lines to 46 lines, then from 60 lines to 46 lines *)\n(* coqc version 8.5 (February 2016) compiled on Feb 21 2016 15:26:16 with OCaml 4.02.3\n   coqtop version 8.5 (February 2016) *)\nAxiom proof_admitted : False.\nTactic Notation \"admit\" := case proof_admitted.\nRequire Coq.Lists.List.\nImport Coq.Lists.List.\nImport Coq.Classes.Morphisms.\n\nDefinition list_caset A (P : list A -> Type) (N : P nil) (C : forall x xs, P (x::xs))\n           ls\n  : P ls\n  := match ls with\n     | nil => N\n     | x::xs => C x xs\n     end.\n\nGlobal Instance list_caset_Proper' {A P}\n  : Proper (eq\n              ==> pointwise_relation _ (pointwise_relation _ eq)\n              ==> eq\n              ==> eq)\n           (@ list_caset A (fun _ => P)).\nadmit.\nDefined.\nGlobal Instance list_caset_Proper'' {A P}\n  : (Proper (eq ==> pointwise_relation _ (pointwise_relation _ eq) ==> forall_relation (fun _ => eq))\n   (list_caset A (fun _ => P))).\nAdmitted.\nGoal    forall (Char : Type) (P : forall _ : list bool, Prop) (l : list bool) (l0 : forall _ : forall _ : Char, bool, list bool)\n               (T : Type) (T0 : forall _ : T, Type) (t : T),\n    let predata := t in\n    forall (splitdata : T0 predata) (l5 : forall _ : T0 t, list nat) (T1 : Type) (b : forall (_ : T1) (_ : Char), bool)\n           (T2 : Type) (a11 : T2) (xs : list T2) (T3 : Type) (i0 : T3) (P0 : Set) (b1 : forall (_ : nat) (_ : P0), bool)\n           (l2 : forall (_ : forall _ : T1, list bool) (_ : forall _ : P0, list bool) (_ : T2), list bool)\n           (l1 : forall (_ : forall _ : forall _ : Char, bool, list bool) (_ : forall _ : P0, list bool) (_ : T3), list bool)\n           (_ : forall NT : forall _ : P0, list bool, @ eq (list bool) (l1 l0 NT i0) (l2 (fun f : T1 => l0 (b f)) NT a11)),\n      P\n        (@ list_caset T2 (fun _ : list T2 => list bool) l\n                     (fun (_ : T2) (_ : list T2) => l1 l0 (fun a9 : P0 => @ map nat bool (fun x0 : nat => b1 x0 a9) (l5 splitdata)) i0\\\n) xs).\n  intros.\n  subst predata;\n  let H := match goal with H : forall _, _ = _ |- _ => H end in\n  setoid_rewrite H || fail 0 \"too early\".\n  Undo.\n  let H := match goal with H : forall _, _ = _ |- _ => H end in\n  setoid_rewrite H.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337541616/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337541617","html_url":"https://github.com/coq/coq/issues/4673#issuecomment-337541617","issue_url":"https://api.github.com/repos/coq/coq/issues/4673","id":337541617,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0MTYxNw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-07-25T12:29:44Z","updated_at":"2017-10-18T10:22:57Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nIndeed the unification routine called in >=8.5 is slightly different and obeys \na different flag, which shouldn't\npreclude unfolding lets actually, testing the fix here (along with 4679 on 8.5):\n\nhttps://ci.inria.fr/coq/view/coq-contribs/job/coq-contribs/301/console\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337541617/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337541619","html_url":"https://github.com/coq/coq/issues/4673#issuecomment-337541619","issue_url":"https://api.github.com/repos/coq/coq/issues/4673","id":337541619,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0MTYxOQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-07-29T18:07:27Z","updated_at":"2017-10-18T10:22:57Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nFixed the regression in 8.5, will be in the next pl.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337541619/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]