[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337532255","html_url":"https://github.com/coq/coq/issues/4100#issuecomment-337532255","issue_url":"https://api.github.com/repos/coq/coq/issues/4100","id":337532255,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzMjI1NQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-03-02T20:37:29Z","updated_at":"2017-10-18T09:55:01Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nIf [progress rewrite foo] gives me an anomaly, then, on branch v8.5, [match goal with _ => progress rewrite foo | _ => idtac end] succeeds.  Is this intended?  (I think it was not the case in 8.4, and am not sure how I feel about it.)\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337532255/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337532258","html_url":"https://github.com/coq/coq/issues/4100#issuecomment-337532258","issue_url":"https://api.github.com/repos/coq/coq/issues/4100","id":337532258,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzMjI1OA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-03-02T21:07:44Z","updated_at":"2017-10-18T09:55:01Z","author_association":"CONTRIBUTOR","body":"Comment author: @ppedrot\n\nDo you have a practical example we can fiddle with?\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337532258/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337532259","html_url":"https://github.com/coq/coq/issues/4100#issuecomment-337532259","issue_url":"https://api.github.com/repos/coq/coq/issues/4100","id":337532259,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzMjI1OQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-03-02T21:13:34Z","updated_at":"2017-10-18T09:55:01Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nCan you reproduce it with bug [BZ#4097](https://github.com/coq/coq/issues?q=is%3Aissue%20%22Original%20bug%20ID%3A%20BZ%234097%22) at fc1b3ef9d7270938cd83c524aae0383093b7a4b5 (which I think is only one or two commits in the past), e.g., by changing the [:= foo] to a [. exact foo]?  I'm working on reproducing a test case for another \"Anomaly: Uncaught exception Retyping.RetypeError(3). Please report.\" on an [apply path_forall], but it's still at 8000 lines, at the moment.\n\nAnother note: the error message for anomalies now includes things like:\nFile \"./theories/categories/Adjoint/Composition/IdentityLaws.v\", line 40, characters 4-40:\nIn nested Ltac calls to \"LawsTactic.law_t\" and\n\"rewrite !transport_forall_constant\", last call failed.\nAnomaly: Uncaught exception Retyping.RetypeError(3). Please report.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337532259/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337532261","html_url":"https://github.com/coq/coq/issues/4100#issuecomment-337532261","issue_url":"https://api.github.com/repos/coq/coq/issues/4100","id":337532261,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzMjI2MQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-03-02T21:16:59Z","updated_at":"2017-10-18T09:55:01Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nHere's an example (from bug [BZ#3459](https://github.com/coq/coq/issues?q=is%3Aissue%20%22Original%20bug%20ID%3A%20BZ%233459%22)):\n\nGoal 1 = 2.\n  match goal with\n    | [ |- context G[2] ] => let y := constr:(fun x => $(let r := constr:(@ eq Set x x) in\n                                                         clear x;\n                                                         exact r)$) in\n                             pose y\n  end.\n  (* [P := fun _ : Set => x = x : Set -> Prop] *)\n  match goal with\n    | _ => simpl in *\n    | _ => idtac\n  end. (* success *)\n  match goal with\n    | _ => simpl in *\n  end.\n (* Anomaly: Uncaught exception Not_found(_). Please report. *)\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337532261/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337532262","html_url":"https://github.com/coq/coq/issues/4100#issuecomment-337532262","issue_url":"https://api.github.com/repos/coq/coq/issues/4100","id":337532262,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzMjI2Mg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-03-03T11:17:09Z","updated_at":"2017-10-18T09:55:01Z","author_association":"CONTRIBUTOR","body":"Comment author: @ppedrot\n\nActually, I believe it does _not_ catch anomalies, but rather only uncaught exceptions. Unfortunately, uncaught exceptions are only turned into an anomaly at toplevel, so there is no way to discriminate between a wild uncaught exception and a legitimate one while computing something, in particular in the tactic monad. I think it would require a lot of engineering to detect the boundaries of validity of an exception.\n\nAnyway, the issue of tracing exceptions is a recurring one in Coq codebase. We should seriously do something about it, but the working static exception checkers in OCaml are virtually inexistent...\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337532262/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/353595913","html_url":"https://github.com/coq/coq/issues/4100#issuecomment-353595913","issue_url":"https://api.github.com/repos/coq/coq/issues/4100","id":353595913,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MzU5NTkxMw==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2017-12-22T13:12:35Z","updated_at":"2017-12-22T13:12:35Z","author_association":"MEMBER","body":"I'll unluckily close this bug as a WONTFIX, as it depends on the specific anomaly. We should strive for preventing stray exceptions in Coq, but that's a goal way beyond this report.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/353595913/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]