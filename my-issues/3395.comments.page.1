[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337520549","html_url":"https://github.com/coq/coq/issues/3395#issuecomment-337520549","issue_url":"https://api.github.com/repos/coq/coq/issues/3395","id":337520549,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMDU0OQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-06-23T00:23:42Z","updated_at":"2017-11-18T23:49:41Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\r\n\r\nStealing from Bug [BZ#3263](https://github.com/coq/coq/issues?q=is%3Aissue%20%22Original%20bug%20ID%3A%20BZ%233263%22):\r\n\r\n```coq\r\n(* File reduced by coq-bug-finder from originally 10918 lines, then 3649 lines to 3177 lines, then from 3189 lines to 3164 lines, then from 2653 lines to 2496 lines,  2653 lines, then from 1642 lines to 651 lines, then from 736 lines to 473 lines, then from 433 lines to 275 lines, then from 258 lines to 235 lines. *)\r\nGeneralizable All Variables.\r\nSet Implicit Arguments.\r\n\r\nArguments fst {_ _} _.\r\nArguments snd {_ _} _.\r\n\r\nAxiom cheat : forall {T}, T.\r\n\r\nReserved Notation \"g 'o' f\" (at level 40, left associativity).\r\n\r\nInductive paths {A : Type} (a : A) : A -> Type := idpath : paths a a.\r\nArguments idpath {A a} , [A] a.\r\nNotation \"x = y\" := (paths x y) : type_scope.\r\n\r\nDefinition symmetry {A : Type} {x y : A} (p : x = y) : y = x\r\n  := match p with idpath => idpath end.\r\n\r\nDelimit Scope morphism_scope with morphism.\r\nDelimit Scope category_scope with category.\r\nDelimit Scope object_scope with object.\r\nRecord PreCategory (object : Type) :=\r\n  Build_PreCategory' {\r\n      object :> Type := object;\r\n      morphism : object -> object -> Type;\r\n      identity : forall x, morphism x x;\r\n      compose : forall s d d',\r\n                  morphism d d'\r\n                  -> morphism s d\r\n                  -> morphism s d'\r\n                              where \"f 'o' g\" := (compose f g);\r\n      associativity : forall x1 x2 x3 x4\r\n                             (m1 : morphism x1 x2)\r\n                             (m2 : morphism x2 x3)\r\n                             (m3 : morphism x3 x4),\r\n                        (m3 o m2) o m1 = m3 o (m2 o m1);\r\n      associativity_sym : forall x1 x2 x3 x4\r\n                                 (m1 : morphism x1 x2)\r\n                                 (m2 : morphism x2 x3)\r\n                                 (m3 : morphism x3 x4),\r\n                            m3 o (m2 o m1) = (m3 o m2) o m1;\r\n      left_identity : forall a b (f : morphism a b), identity b o f = f;\r\n      right_identity : forall a b (f : morphism a b), f o identity a = f;\r\n      identity_identity : forall x, identity x o identity x = identity x\r\n    }.\r\nBind Scope category_scope with PreCategory.\r\nArguments PreCategory {_}.\r\nArguments identity {_} [!C%category] x%object : rename.\r\n\r\nArguments compose {_} [!C%category s%object d%object d'%object] m1%morphism m2%morphism : rename.\r\n\r\nInfix \"o\" := compose : morphism_scope.\r\n\r\nDelimit Scope functor_scope with functor.\r\nLocal Open Scope morphism_scope.\r\nRecord Functor `(C : @ PreCategory objC, D : @ PreCategory objD) :=\r\n  {\r\n    object_of :> C -> D;\r\n    morphism_of : forall s d, morphism C s d\r\n                              -> morphism D (object_of s) (object_of d);\r\n    composition_of : forall s d d'\r\n                            (m1 : morphism C s d) (m2: morphism C d d'),\r\n                       morphism_of _ _ (m2 o m1)\r\n                       = (morphism_of _ _ m2) o (morphism_of _ _ m1);\r\n    identity_of : forall x, morphism_of _ _ (identity x)\r\n                            = identity (object_of x)\r\n  }.\r\nBind Scope functor_scope with Functor.\r\n\r\nArguments morphism_of {_} [C%category] {_} [D%category] F%functor [s%object d%object] m%morphism : rename, simpl nomatch.\r\n\r\nNotation \"F '_1' m\" := (morphism_of F m) (at level 10, no associativity) : morphism_scope.\r\n\r\nClass IsIsomorphism `{C : @ PreCategory objC} {s d} (m : morphism C s d) :=\r\n  {\r\n    morphism_inverse : morphism C d s;\r\n    left_inverse : morphism_inverse o m = identity _;\r\n    right_inverse : m o morphism_inverse = identity _\r\n  }.\r\n\r\nDefinition opposite `(C : @ PreCategory objC) : PreCategory\r\n  := @ Build_PreCategory'\r\n       C\r\n       (fun s d => morphism C d s)\r\n       (identity (C := C))\r\n       (fun _ _ _ m1 m2 => m2 o m1)\r\n       (fun _ _ _ _ _ _ _ => @ associativity_sym _ _ _ _ _ _ _ _ _)\r\n       (fun _ _ _ _ _ _ _ => @ associativity _ _ _ _ _ _ _ _ _)\r\n       (fun _ _ => @ right_identity _ _ _ _)\r\n       (fun _ _ => @ left_identity _ _ _ _)\r\n       (@ identity_identity _ C).\r\n\r\nNotation \"C ^op\" := (opposite C) (at level 3) : category_scope.\r\n\r\nDefinition prod `(C : @ PreCategory objC, D : @ PreCategory objD) : @ PreCategory (objC * objD).\r\n  refine (@ Build_PreCategory'\r\n            (C * D)%type\r\n            (fun s d => (morphism C (fst s) (fst d)\r\n                         * morphism D (snd s) (snd d))%type)\r\n            (fun x => (identity (fst x), identity (snd x)))\r\n            (fun s d d' m2 m1 => (fst m2 o fst m1, snd m2 o snd m1))\r\n            _\r\n            _\r\n            _\r\n            _\r\n            _); admit.\r\nDefined.\r\nInfix \"*\" := prod : category_scope.\r\n\r\nDefinition compose_functor `(C : @ PreCategory objC, D : @ PreCategory objD, E : @ PreCategory objE) (G : Functor D E) (F : Functor C D) : Functor C E\r\n  := Build_Functor\r\n       C E\r\n       (fun c => G (F c))\r\n       (fun _ _ m => morphism_of G (morphism_of F m))\r\n       cheat\r\n       cheat.\r\n\r\nInfix \"o\" := compose_functor : functor_scope.\r\n\r\nRecord NaturalTransformation `(C : @ PreCategory objC, D : @ PreCategory objD) (F G : Functor C D) :=\r\n  Build_NaturalTransformation' {\r\n      components_of :> forall c, morphism D (F c) (G c);\r\n      commutes : forall s d (m : morphism C s d),\r\n                   components_of d o F _1 m = G _1 m o components_of s;\r\n\r\n      commutes_sym : forall s d (m : C.(morphism) s d),\r\n                       G _1 m o components_of s = components_of d o F _1 m\r\n    }.\r\nDefinition functor_category `(C : @ PreCategory objC, D : @ PreCategory objD) : PreCategory\r\n  := @ Build_PreCategory' (Functor C D)\r\n                         (@ NaturalTransformation _ C _ D)\r\n                         cheat\r\n                         cheat\r\n                         cheat\r\n                         cheat\r\n                         cheat\r\n                         cheat\r\n                         cheat.\r\n\r\nDefinition opposite_functor `(F : @ Functor objC C objD D) : Functor C^op D^op\r\n  := Build_Functor (C^op) (D^op)\r\n                   (object_of F)\r\n                   (fun s d => morphism_of F (s := d) (d := s))\r\n                   (fun d' d s m1 m2 => composition_of F s d d' m2 m1)\r\n                   (identity_of F).\r\n\r\nDefinition opposite_invL `(F : @ Functor objC C^op objD D) : Functor C D^op\r\n  := Build_Functor C (D^op)\r\n                   (object_of F)\r\n                   (fun s d => morphism_of F (s := d) (d := s))\r\n                   (fun d' d s m1 m2 => composition_of F s d d' m2 m1)\r\n                   (identity_of F).\r\nNotation \"F ^op\" := (opposite_functor F) : functor_scope.\r\n\r\nNotation \"F ^op'L\" := (opposite_invL F) (at level 3) : functor_scope.\r\nDefinition fst `{C : @ PreCategory objC, D : @ PreCategory objD} : Functor (C * D) C\r\n  := Build_Functor (C * D) C\r\n                   (@ fst _ _)\r\n                   (fun _ _ => @ fst _ _)\r\n                   (fun _ _ _ _ _ => idpath)\r\n                   (fun _ => idpath).\r\n\r\nDefinition snd `{C : @ PreCategory objC, D : @ PreCategory objD} : Functor (C * D) D\r\n  := Build_Functor (C * D) D\r\n                   (@ snd _ _)\r\n                   (fun _ _ => @ snd _ _)\r\n                   (fun _ _ _ _ _ => idpath)\r\n                   (fun _ => idpath).\r\nDefinition prod_functor `(F : @ Functor objC C objD D, F' : @ Functor objC C objD' D')\r\n: Functor C (D * D')\r\n  := Build_Functor\r\n       C (D * D')\r\n       (fun c => (F c, F' c))\r\n       (fun s d m => (F _1 m, F' _1 m))%morphism\r\n       cheat\r\n       cheat.\r\nDefinition pair `(F : @ Functor objC C objD D, F' : @ Functor objC' C' objD' D') : Functor (C * C') (D * D')\r\n  := (prod_functor (F o fst) (F' o snd))%functor.\r\nNotation cat_of obj :=\r\n  (@ Build_PreCategory' obj\r\n                       (fun x y => forall _ : x, y)\r\n                       (fun _ x => x)\r\n                       (fun _ _ _ f g x => f (g x))%core\r\n                       (fun _ _ _ _ _ _ _ => idpath)\r\n                       (fun _ _ _ _ _ _ _ => idpath)\r\n                       (fun _ _ _ => idpath)\r\n                       (fun _ _ _ => idpath)\r\n                       (fun _ => idpath)).\r\n\r\nDefinition hom_functor `(C : @ PreCategory objC) : Functor (C^op * C) (cat_of Type)\r\n  := Build_Functor _ _ cheat cheat cheat cheat.\r\n\r\nDefinition induced_hom_natural_transformation `(F : @ Functor objC C objD D)\r\n: NaturalTransformation (hom_functor C) (hom_functor D o pair F^op F)\r\n  := Build_NaturalTransformation' _ _ cheat cheat cheat.\r\n\r\nClass IsFullyFaithful `(F : @ Functor objC C objD D)\r\n  := is_fully_faithful\r\n     : forall x y : C,\r\n         IsIsomorphism (induced_hom_natural_transformation F (x, y)).\r\n\r\nDefinition coyoneda `(A : @ PreCategory objA) : Functor A^op (@ functor_category _ A _ (cat_of Type))\r\n  := cheat.\r\n\r\nDefinition yoneda `(A : @ PreCategory objA) : Functor A (@ functor_category _ A^op _ (cat_of Type))\r\n  := (((coyoneda A^op)^op'L)^op'L)%functor.\r\nDefinition coyoneda_embedding `(A : @ PreCategory objA) : @ IsFullyFaithful _ _ _ _ (@ coyoneda _ A).\r\nAdmitted.\r\n\r\nDefinition yoneda_embedding_fast `(A : @ PreCategory objA) : @ IsFullyFaithful _ _ _ _ (@ yoneda _ A).\r\nProof.\r\n  intros a b.\r\n  pose proof (coyoneda_embedding A^op a b) as CYE.\r\n  unfold yoneda.\r\n  Time let t := (type of CYE) in\r\n  let t' := (eval simpl in t) in pose proof ((fun (x : t) => (x : t')) CYE) as CYE'. (* Finished transaction in 0. secs (0.216013u,0.004s) *)\r\n  Time let t := match goal with |- ?G => constr:(G) end in\r\n  let t' := (eval simpl in t) in exact ((fun (x : t') => (x : t)) CYE'). (* Finished transaction in 0. secs (0.248016u,0.s) in 8.4, but 11-12s in trunk *)\r\nTime Defined. (* Finished transaction in 1. secs (0.432027u,0.s) in 8.4, but takes ~11-12s in trunk  *)\r\n\r\nDefinition yoneda_embedding `(A : @ PreCategory objA) : @ IsFullyFaithful _ _ _ _ (@ yoneda _ A).\r\nProof.\r\n  intros a b.\r\n  pose proof (coyoneda_embedding A^op a b) as CYE.\r\n  unfold yoneda; simpl in *.\r\n  Time exact CYE. (* Finished transaction in 0. secs (0.012001u,0.s) in 8.4, but ~11-12s in trunk *)\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337520549/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337520551","html_url":"https://github.com/coq/coq/issues/3395#issuecomment-337520551","issue_url":"https://api.github.com/repos/coq/coq/issues/3395","id":337520551,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMDU1MQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-07-18T14:00:54Z","updated_at":"2017-10-18T09:21:15Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nCreated attachment 491\nScript to run with git bisect\n\nI tried to trace this to a commit (script attached), but found, very mysteriously, that if I compile Coq myself (v8.4 or trunk), I get the slow timings, but if I use the precompiled version of Coq for Windows, I get the fast times.\n\n> Attached file: [test.sh](https://coq.inria.fr/bugfiles/attachment.cgi?id=491) (text/plain, 13644 bytes)\n> Description:   Script to run with git bisect\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337520551/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337520553","html_url":"https://github.com/coq/coq/issues/3395#issuecomment-337520553","issue_url":"https://api.github.com/repos/coq/coq/issues/3395","id":337520553,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMDU1Mw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-07-19T19:46:45Z","updated_at":"2017-10-18T09:21:16Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nThis is simply due the the fact that admit doesn't make an opaque subdefinition in trunk, resulting in very slow failures of the conversion. Using abstract admit instead results in the same behavior as 8.4. I'm not sure about the different behaviors you encounter with different 8.4 versions though. Not marking it resolved yet.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337520553/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337520554","html_url":"https://github.com/coq/coq/issues/3395#issuecomment-337520554","issue_url":"https://api.github.com/repos/coq/coq/issues/3395","id":337520554,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMDU1NA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-07-20T14:42:04Z","updated_at":"2020-10-22T18:47:26Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\r\n\r\nFascinating.  There was a script with this behavior with no admits in it, I think, though.\r\n\r\nIn any case, here's another example where there's a factor of 100 slowdown in the slow direction of unification, only in trunk, and I've already replaced [admit] with [abstract admit]:\r\n\r\n```coq\r\n(* File reduced by coq-bug-finder from original input, then from 8772 lines to 758 lines, then from 727 lines to 589 lines, then from 593 lines to 579 lines *)\r\nAxiom ADMIT : False. Ltac admit := destruct ADMIT.\r\nSet Universe Polymorphism.\r\nDefinition relation (A : Type) := A -> A -> Type.\r\n\r\nClass Reflexive {A} (R : relation A) :=\r\n  reflexivity : forall x : A, R x x.\r\n\r\nClass Symmetric {A} (R : relation A) :=\r\n  symmetry : forall x y, R x y -> R y x.\r\n\r\nClass Transitive {A} (R : relation A) :=\r\n  transitivity : forall x y z, R x y -> R y z -> R x z.\r\n\r\nTactic Notation \"etransitivity\" open_constr(y) :=\r\n  let R := match goal with |- ?R ?x ?z => constr:(R) end in\r\n  let x := match goal with |- ?R ?x ?z => constr:(x) end in\r\n  let z := match goal with |- ?R ?x ?z => constr:(z) end in\r\n  refine (@ transitivity _ R _ x y z _ _).\r\n\r\nTactic Notation \"etransitivity\" := etransitivity _.\r\nReserved Infix \"o\" (at level 40, left associativity).\r\n\r\nInductive paths {A : Type} (a : A) : A -> Type := idpath : paths a a where \"x = y\" := (@ paths _ x y) : type_scope.\r\nArguments idpath {A a} , [A] a.\r\n\r\nDelimit Scope path_scope with path.\r\nLocal Open Scope path_scope.\r\n\r\nDefinition concat {A : Type} {x y z : A} (p : x = y) (q : y = z) : x = z :=\r\n  match p, q with idpath, idpath => idpath end.\r\n\r\nInstance transitive_paths {A} : Transitive (@ paths A) | 0 := @ concat A.\r\n\r\nDefinition inverse {A : Type} {x y : A} (p : x = y) : y = x\r\n  := match p with idpath => idpath end.\r\n\r\nInstance symmetric_paths {A} : Symmetric (@ paths A) | 0 := @ inverse A.\r\n\r\nNotation \"1\" := idpath : path_scope.\r\n\r\nNotation \"p @  q\" := (concat p q) (at level 20) : path_scope.\r\n\r\nNotation \"p ^\" := (inverse p) (at level 3) : path_scope.\r\n\r\nDefinition transport {A : Type} (P : A -> Type) {x y : A} (p : x = y) (u : P x) : P y :=\r\n  match p with idpath => u end.\r\n\r\nDefinition ap {A B:Type} (f:A -> B) {x y:A} (p:x = y) : f x = f y\r\n  := match p with idpath => idpath end.\r\n\r\nDefinition Sect {A B : Type} (s : A -> B) (r : B -> A) :=\r\n  forall x : A, r (s x) = x.\r\n\r\nClass IsEquiv {A B : Type} (f : A -> B) := BuildIsEquiv {\r\n                                               equiv_inv : B -> A ;\r\n                                               eisretr : Sect equiv_inv f;\r\n                                               eissect : Sect f equiv_inv;\r\n                                               eisadj : forall x : A, eisretr (f x) = ap f (eissect x)\r\n                                             }.\r\n\r\nNotation \"f ^-1\" := (@ equiv_inv _ _ f _) (at level 3) : equiv_scope.\r\nSet Implicit Arguments.\r\n\r\nDelimit Scope morphism_scope with morphism.\r\nDelimit Scope category_scope with category.\r\nDelimit Scope object_scope with object.\r\n\r\nRecord PreCategory :=\r\n  Build_PreCategory {\r\n      object :> Type;\r\n      morphism : object -> object -> Type;\r\n\r\n      identity : forall x, morphism x x;\r\n      compose : forall s d d',\r\n                  morphism d d'\r\n                  -> morphism s d\r\n                  -> morphism s d'\r\n                              where \"f 'o' g\" := (compose f g);\r\n\r\n      associativity : forall x1 x2 x3 x4\r\n                             (m1 : morphism x1 x2)\r\n                             (m2 : morphism x2 x3)\r\n                             (m3 : morphism x3 x4),\r\n                        (m3 o m2) o m1 = m3 o (m2 o m1);\r\n      left_identity : forall a b (f : morphism a b), identity b o f = f;\r\n      right_identity : forall a b (f : morphism a b), f o identity a = f\r\n    }.\r\nBind Scope morphism_scope with morphism.\r\nArguments identity [!C%category] x%object : rename.\r\nArguments compose [!C%category s%object d%object d'%object] m1%morphism m2%morphism : rename.\r\n\r\nHint Resolve @ left_identity @ right_identity @ associativity : category morphism.\r\nInfix \"o\" := compose : morphism_scope.\r\nNotation \"1\" := (identity _) : morphism_scope.\r\n\r\nDelimit Scope functor_scope with functor.\r\n\r\nLocal Open Scope morphism_scope.\r\n\r\nSection Functor.\r\n  Variable C : PreCategory.\r\n  Variable D : PreCategory.\r\n\r\n  Record Functor :=\r\n    {\r\n      object_of :> C -> D;\r\n      morphism_of : forall s d, morphism C s d\r\n                                -> morphism D (object_of s) (object_of d);\r\n      composition_of : forall s d d'\r\n                              (m1 : morphism C s d) (m2: morphism C d d'),\r\n                         morphism_of _ _ (m2 o m1)\r\n                         = (morphism_of _ _ m2) o (morphism_of _ _ m1);\r\n      identity_of : forall x, morphism_of _ _ (identity x)\r\n                              = identity (object_of x)\r\n    }.\r\nEnd Functor.\r\n\r\nBind Scope functor_scope with Functor.\r\nArguments morphism_of [C%category] [D%category] F%functor [s%object d%object] m%morphism : rename, simpl nomatch.\r\nNotation \"F '_1' m\" := (morphism_of F m) (at level 10, no associativity) : morphism_scope.\r\nGeneralizable All Variables.\r\n\r\nLocal Open Scope category_scope.\r\n\r\nClass IsIsomorphism {C : PreCategory} {s d} (m : morphism C s d) :=\r\n  {\r\n    morphism_inverse : morphism C d s;\r\n    left_inverse : morphism_inverse o m = identity _;\r\n    right_inverse : m o morphism_inverse = identity _\r\n  }.\r\n\r\nLocal Notation \"m ^-1\" := (morphism_inverse (m := m)) : morphism_scope.\r\n\r\nClass Isomorphic {C : PreCategory} s d :=\r\n  {\r\n    morphism_isomorphic :> morphism C s d;\r\n    isisomorphism_isomorphic :> IsIsomorphism morphism_isomorphic\r\n  }.\r\n\r\nCoercion morphism_isomorphic : Isomorphic >-> morphism.\r\nCoercion isisomorphism_isomorphic : Isomorphic >-> IsIsomorphism.\r\n\r\nLocal Infix \"<~=~>\" := Isomorphic (at level 70, no associativity) : category_scope.\r\n\r\nSection iso_equiv_relation.\r\n  Variable C : PreCategory.\r\n\r\n  Global Instance isisomorphism_identity (x : C) : IsIsomorphism (identity x)\r\n    := {| morphism_inverse := identity x;\r\n          left_inverse := left_identity C x x (identity x);\r\n          right_inverse := right_identity C x x (identity x) |}.\r\n\r\n  Definition isisomorphism_inverse `(@ IsIsomorphism C x y m) : IsIsomorphism m^-1\r\n    := {| morphism_inverse := m;\r\n          left_inverse := right_inverse;\r\n          right_inverse := left_inverse |}.\r\n\r\n  Local Ltac iso_comp_t inv_lemma :=\r\n    etransitivity; [ | apply inv_lemma ];\r\n    instantiate;\r\n    first [ rewrite -> ?associativity; apply ap\r\n          | rewrite <- ?associativity; apply ap ];\r\n    first [ rewrite -> ?associativity; rewrite inv_lemma\r\n          | rewrite <- ?associativity; rewrite inv_lemma ];\r\n    auto with morphism.\r\n\r\n  Global Instance isisomorphism_compose `(@ IsIsomorphism C y z m0) `(@ IsIsomorphism C x y m1)\r\n  : IsIsomorphism (m0 o m1).\r\n  Proof.\r\n    exists (m1^-1 o m0^-1);\r\n    [ abstract iso_comp_t @ left_inverse\r\n    | abstract iso_comp_t @ right_inverse ].\r\n  Defined.\r\n\r\n  Global Instance isomorphic_refl : Reflexive (@ Isomorphic C)\r\n    := fun x : C => {| morphism_isomorphic := identity x |}.\r\n\r\n  Definition idtoiso (x y : C) (H : x = y) : Isomorphic x y\r\n    := match H in (_ = y0) return (x <~=~> y0) with\r\n         | 1%path => reflexivity x\r\n       end.\r\nEnd iso_equiv_relation.\r\n\r\nSection composition.\r\n  Variable C : PreCategory.\r\n  Variable D : PreCategory.\r\n  Variable E : PreCategory.\r\n  Variable G : Functor D E.\r\n  Variable F : Functor C D.\r\n\r\n  Local Notation c_object_of c := (G (F c)) (only parsing).\r\n  Local Notation c_morphism_of m := (morphism_of G (morphism_of F m)) (only parsing).\r\n  Definition compose_composition_of s d d'\r\n             (m1 : morphism C s d) (m2 : morphism C d d')\r\n  : c_morphism_of (m2 o m1) = c_morphism_of m2 o c_morphism_of m1\r\n    := transport (@ paths _ (c_morphism_of (m2 o m1)))\r\n                 (composition_of G _ _ _ _ _)\r\n                 (ap (@ morphism_of _ _ G _ _) (composition_of F _ _ _ m1 m2)).\r\n\r\n  Definition compose_identity_of x\r\n  : c_morphism_of (identity x) = identity (c_object_of x)\r\n    := transport (@ paths _ _)\r\n                 (identity_of G _)\r\n                 (ap (@ morphism_of _ _ G _ _) (identity_of F x)).\r\n\r\n  Definition composeF : Functor C E\r\n    := Build_Functor\r\n         C E\r\n         (fun c => G (F c))\r\n         (fun _ _ m => morphism_of G (morphism_of F m))\r\n         compose_composition_of\r\n         compose_identity_of.\r\nEnd composition.\r\nInfix \"o\" := composeF : functor_scope.\r\n\r\nDefinition identityF C : Functor C C\r\n  := Build_Functor C C\r\n                   (fun x => x)\r\n                   (fun _ _ x => x)\r\n                   (fun _ _ _ _ _ => idpath)\r\n                   (fun _ => idpath).\r\nNotation \"1\" := (identityF _) : functor_scope.\r\n\r\nDelimit Scope natural_transformation_scope with natural_transformation.\r\n\r\nSection NaturalTransformation.\r\n  Variable C : PreCategory.\r\n  Variable D : PreCategory.\r\n  Variables F G : Functor C D.\r\n\r\n  Record NaturalTransformation :=\r\n    Build_NaturalTransformation' {\r\n        components_of :> forall c, morphism D (F c) (G c);\r\n        commutes : forall s d (m : morphism C s d),\r\n                     components_of d o F _1 m = G _1 m o components_of s;\r\n\r\n        commutes_sym : forall s d (m : C.(morphism) s d),\r\n                         G _1 m o components_of s = components_of d o F _1 m\r\n      }.\r\n\r\n  Definition Build_NaturalTransformation CO COM\r\n    := Build_NaturalTransformation'\r\n         CO\r\n         COM\r\n         (fun _ _ _ => symmetry _ _ (COM _ _ _)).\r\nEnd NaturalTransformation.\r\n\r\nSection compose.\r\n  Variable C : PreCategory.\r\n  Variable D : PreCategory.\r\n  Variables F F' F'' : Functor C D.\r\n\r\n  Variable T' : NaturalTransformation F' F''.\r\n  Variable T : NaturalTransformation F F'.\r\n\r\n  Local Notation CO c := (T' c o T c).\r\n\r\n  Definition compose_commutes s d (m : morphism C s d)\r\n  : CO d o morphism_of F m = morphism_of F'' m o CO s\r\n    := (associativity _ _ _ _ _ _ _ _)\r\n         @  ap (fun x => _ o x) (commutes T _ _ m)\r\n         @  (associativity _ _ _ _ _ _ _ _)^\r\n       @  ap (fun x => x o _) (commutes T' _ _ m)\r\n         @  (associativity _ _ _ _ _ _ _ _).\r\n\r\n  Definition compose_commutes_sym s d (m : morphism C s d)\r\n  : morphism_of F'' m o CO s = CO d o morphism_of F m\r\n    := (associativity _ _ _ _ _ _ _ _)^\r\n       @  ap (fun x => x o _) (commutes_sym T' _ _ m)\r\n         @  (associativity _ _ _ _ _ _ _ _)\r\n         @  ap (fun x => _ o x) (commutes_sym T _ _ m)\r\n         @  (associativity _ _ _ _ _ _ _ _)^.\r\n\r\n         Definition composeT\r\n       : NaturalTransformation F F''\r\n           := Build_NaturalTransformation' F F''\r\n                                           (fun c => CO c)\r\n                                           compose_commutes\r\n                                           compose_commutes_sym.\r\nEnd compose.\r\n\r\nSection whisker.\r\n  Variable C : PreCategory.\r\n  Variable D : PreCategory.\r\n  Variable E : PreCategory.\r\n\r\n  Section L.\r\n    Variable F : Functor D E.\r\n    Variables G G' : Functor C D.\r\n    Variable T : NaturalTransformation G G'.\r\n\r\n    Local Notation CO c := (morphism_of F (T c)).\r\n\r\n    Definition whisker_l_commutes s d (m : morphism C s d)\r\n    : F _1 (T d) o (F o G) _1 m = (F o G') _1 m o F _1 (T s).\r\n      abstract admit.\r\n    Defined.\r\n\r\n    Definition whisker_l\r\n      := Build_NaturalTransformation\r\n           (F o G) (F o G')\r\n           (fun c => CO c)\r\n           whisker_l_commutes.\r\n  End L.\r\n\r\n  Section R.\r\n    Variables F F' : Functor D E.\r\n    Variable T : NaturalTransformation F F'.\r\n    Variable G : Functor C D.\r\n\r\n    Local Notation CO c := (T (G c)).\r\n\r\n    Definition whisker_r_commutes s d (m : morphism C s d)\r\n    : T (G d) o (F o G) _1 m = (F' o G) _1 m o T (G s).\r\n      abstract admit.\r\n    Defined.\r\n\r\n    Definition whisker_r\r\n      := Build_NaturalTransformation\r\n           (F o G) (F' o G)\r\n           (fun c => CO c)\r\n           whisker_r_commutes.\r\n  End R.\r\nEnd whisker.\r\nInfix \"o\" := composeT : natural_transformation_scope.\r\nInfix \"oL\" := whisker_l (at level 40, left associativity) : natural_transformation_scope.\r\nInfix \"oR\" := whisker_r (at level 40, left associativity) : natural_transformation_scope.\r\n\r\nSection identity'.\r\n  Variable C : PreCategory.\r\n  Variable D : PreCategory.\r\n\r\n  Section generalized.\r\n    Variables F G : Functor C D.\r\n    Hypothesis HO : object_of F = object_of G.\r\n    Hypothesis HM : transport (fun GO => forall s d,\r\n                                           morphism C s d\r\n                                           -> morphism D (GO s) (GO d))\r\n                              HO\r\n                              (morphism_of F)\r\n                    = morphism_of G.\r\n\r\n    Local Notation CO c := (transport (fun GO => morphism D (F c) (GO c))\r\n                                      HO\r\n                                      (identity (F c))).\r\n\r\n    Definition generalized_identity_commutes s d (m : morphism C s d)\r\n    : CO d o morphism_of F m = morphism_of G m o CO s.\r\n    Proof.\r\n      case HM.\r\n      case HO.\r\n      exact (left_identity _ _ _ _ @  (right_identity _ _ _ _)^).\r\n    Defined.\r\n\r\n    Definition generalized_identity_commutes_sym s d (m : morphism C s d)\r\n    : morphism_of G m o CO s = CO d o morphism_of F m.\r\n      abstract admit.\r\n    Defined.\r\n\r\n    Definition generalized_identity\r\n    : NaturalTransformation F G\r\n      := Build_NaturalTransformation'\r\n           F G\r\n           (fun c => CO c)\r\n           generalized_identity_commutes\r\n           generalized_identity_commutes_sym.\r\n  End generalized.\r\n\r\n  Definition identityT (F : Functor C D)\r\n  : NaturalTransformation F F\r\n    := Build_NaturalTransformation\r\n         F F (fun _ => 1%morphism) (fun _ _ _ => left_identity _ _ _ _ @  (right_identity _ _ _ _)^).\r\nEnd identity'.\r\nNotation \"1\" := (identityT _) : natural_transformation_scope.\r\nLocal Open Scope natural_transformation_scope.\r\n\r\nSection natural_transformation_identity.\r\n  Variable C : PreCategory.\r\n  Variable D : PreCategory.\r\n\r\n  Lemma left_identityT (F F' : Functor C D)\r\n        (T : NaturalTransformation F F')\r\n  : 1 o T = T.\r\n    abstract admit.\r\n  Defined.\r\n\r\n  Lemma right_identityT (F F' : Functor C D)\r\n        (T : NaturalTransformation F F')\r\n  : T o 1 = T.\r\n    abstract admit.\r\n  Defined.\r\nEnd natural_transformation_identity.\r\n\r\nSection functors.\r\n  Variable B : PreCategory.\r\n  Variable C : PreCategory.\r\n  Variable D : PreCategory.\r\n  Variable E : PreCategory.\r\n  Variable F : Functor D E.\r\n  Variable G : Functor C D.\r\n  Variable H : Functor B C.\r\n\r\n  Local Notation F0 := ((F o G) o H)%functor.\r\n  Local Notation F1 := (F o (G o H))%functor.\r\n\r\n  Definition associator_1 : NaturalTransformation F0 F1\r\n    := Eval simpl in\r\n        generalized_identity F0 F1 idpath idpath.\r\nEnd functors.\r\nDefinition associativityT\r\n           C D F G H I\r\n           (V : @ NaturalTransformation C D F G)\r\n           (U : @ NaturalTransformation C D G H)\r\n           (T : @ NaturalTransformation C D H I)\r\n: (T o U) o V = T o (U o V).\r\n  abstract admit.\r\nDefined.\r\n\r\nSection functor_identity.\r\n\r\n  Variable C : PreCategory.\r\n  Variable D : PreCategory.\r\n\r\n  Section left.\r\n    Variable F : Functor D C.\r\n    Definition left_identity_natural_transformation_2\r\n    : NaturalTransformation F (1 o F)\r\n      := Eval simpl in generalized_identity F (1 o F) idpath idpath.\r\n  End left.\r\n\r\n  Section right.\r\n    Variable F : Functor C D.\r\n    Definition right_identity_natural_transformation_2 : NaturalTransformation F (F o 1)\r\n      := Eval simpl in generalized_identity F (F o 1) idpath idpath.\r\n  End right.\r\nEnd functor_identity.\r\n\r\nSection functor_category.\r\n\r\n  Variable C : PreCategory.\r\n  Variable D : PreCategory.\r\n\r\n  Definition functor_category : PreCategory\r\n    := @ Build_PreCategory (Functor C D)\r\n                          (@ NaturalTransformation C D)\r\n                          (@ identityT C D)\r\n                          (@ composeT C D)\r\n                          (@ associativityT C D)\r\n                          (@ left_identityT C D)\r\n                          (@ right_identityT C D).\r\n\r\nEnd functor_category.\r\n\r\nLocal Notation \"[ C , D ]\" := (functor_category C D) : category_scope.\r\n\r\nDefinition NaturalIsomorphism (C D : PreCategory) F G :=\r\n  @ Isomorphic [ C , D ] F G.\r\n\r\nCoercion natural_transformation_of_natural_isomorphism C D F G\r\n         (T : @ NaturalIsomorphism C D F G)\r\n: NaturalTransformation F G\r\n  := T : morphism _ _ _.\r\n\r\nLocal Infix \"<~=~>\" := NaturalIsomorphism : natural_transformation_scope.\r\n\r\nDefinition isisomorphism_natural_transformation\r\n           C D F G (T : NaturalTransformation F G)\r\n           `{forall x, IsIsomorphism (T x)}\r\n: @ IsIsomorphism [C, D] F G T.\r\n  abstract admit.\r\nDefined.\r\n\r\nHint Immediate isisomorphism_natural_transformation : typeclass_instances.\r\nGlobal Instance isisomorphism_compose2\r\n       `(T' : @ NaturalTransformation C D F' F'')\r\n       `(T : @ NaturalTransformation C D F F')\r\n       `{@ IsIsomorphism [C, D] F' F'' T'}\r\n       `{@ IsIsomorphism [C, D] F F' T}\r\n: @ IsIsomorphism [C, D] F F'' (T' o T)%natural_transformation\r\n  := @ isisomorphism_compose [C, D] _ _ T' _ _ T _.\r\n\r\nGlobal Instance iso_whisker_l C D E\r\n       (F : Functor D E)\r\n       (G G' : Functor C D)\r\n       (T : NaturalTransformation G G')\r\n       `{@ IsIsomorphism [C, D] G G' T}\r\n: @ IsIsomorphism [C, E] (F o G)%functor (F o G')%functor (whisker_l F T).\r\nabstract admit.\r\nDefined.\r\n\r\nGlobal Instance iso_whisker_r C D E\r\n       (F F' : Functor D E)\r\n       (T : NaturalTransformation F F')\r\n       (G : Functor C D)\r\n       `{@ IsIsomorphism [D, E] F F' T}\r\n: @ IsIsomorphism [C, E] (F o G)%functor (F' o G)%functor (whisker_r T G).\r\nabstract admit.\r\nDefined.\r\n\r\nSection pseudofunctor.\r\n  Variable C : PreCategory.\r\n\r\n  Record Pseudofunctor :=\r\n    {\r\n      p_object_of :> C -> PreCategory;\r\n      p_morphism_of : forall s d, morphism C s d\r\n                                  -> Functor (p_object_of s) (p_object_of d);\r\n      p_composition_of : forall s d d'\r\n                                (m1 : morphism C d d') (m2 : morphism C s d),\r\n                           (p_morphism_of _ _ (m1 o m2))\r\n                             <~=~> (p_morphism_of _ _ m1 o p_morphism_of _ _ m2)%functor;\r\n      p_identity_of : forall x, p_morphism_of x x 1 <~=~> 1%functor;\r\n      p_composition_of_coherent\r\n      : forall w x y z\r\n               (f : morphism C w x) (g : morphism C x y) (h : morphism C y z),\r\n          ((associator_1 (p_morphism_of y z h) (p_morphism_of x y g) (p_morphism_of w x f))\r\n             o ((p_composition_of x y z h g oR p_morphism_of w x f)\r\n                  o (p_composition_of w x z (h o g) f)))\r\n          = ((p_morphism_of y z h oL p_composition_of w x y g f)\r\n               o ((p_composition_of w y z h (g o f))\r\n                    o (idtoiso [_, _] (ap (p_morphism_of w z) (associativity C w x y z f g h)) : morphism _ _ _)));\r\n      p_left_identity_of_coherent\r\n      : forall x y (f : morphism C x y),\r\n          ((p_identity_of y oR p_morphism_of x y f)\r\n             o p_composition_of x y y 1 f)\r\n          = ((left_identity_natural_transformation_2 (p_morphism_of x y f))\r\n               o (idtoiso [_, _] (ap (p_morphism_of x y) (left_identity C x y f)) : morphism _ _ _));\r\n      p_right_identity_of_coherent\r\n      : forall x y (f : morphism C x y),\r\n          ((p_morphism_of x y f oL p_identity_of x)\r\n             o p_composition_of x x y f 1)\r\n          = ((right_identity_natural_transformation_2 (p_morphism_of x y f))\r\n               o (idtoiso [_, _] (ap (p_morphism_of x y) (right_identity C x y f)) : morphism _ _ _))\r\n    }.\r\nEnd pseudofunctor.\r\n\r\nSection lemmas.\r\n  Variable C : PreCategory.\r\n  Variable F : Pseudofunctor C.\r\n  Context\r\n    {w x y z}\r\n    {f : Functor (F w) (F z)} {f0 : Functor (F w) (F y)}\r\n    {f1 : Functor (F x) (F y)} {f2 : Functor (F y) (F z)}\r\n    {f3 : Functor (F w) (F x)} {f4 : Functor (F x) (F z)}\r\n    {f5 : Functor (F w) (F z)} {n : f5 <~=~> (f4 o f3)%functor}\r\n    {n0 : f4 <~=~> (f2 o f1)%functor} {n1 : f0 <~=~> (f1 o f3)%functor}\r\n    {n2 : f <~=~> (f2 o f0)%functor}.\r\n\r\n  Lemma p_composition_of_coherent_iso_for_rewrite__isisomorphism_helper'\r\n  : @ IsIsomorphism\r\n      [_, _] _ _\r\n      (n2 ^-1 o (f2 oL n1 ^-1 o (associator_1 f2 f1 f3 o (n0 oR f3 o n))))%natural_transformation.\r\n  Proof.\r\n    unshelve eapply isisomorphism_compose2.\r\n    - unshelve eapply isisomorphism_inverse.\r\n    - unshelve eapply isisomorphism_compose2.\r\n      eapply iso_whisker_l; eapply isisomorphism_inverse.\r\n  Defined.\r\n\r\n  Definition p_composition_of_coherent_iso_for_rewrite__isisomorphism_helper\r\n    := Eval hnf in p_composition_of_coherent_iso_for_rewrite__isisomorphism_helper'.\r\n  Let inv := Eval simpl in @ morphism_inverse _ _ _ _ p_composition_of_coherent_iso_for_rewrite__isisomorphism_helper.\r\n\r\n  Definition p_composition_of_coherent_iso_for_rewrite__isisomorphism_helper__to_inverse\r\n             X\r\n             (H' : X = @ Build_Isomorphic [_, _] _ _ _ p_composition_of_coherent_iso_for_rewrite__isisomorphism_helper)\r\n  : @ morphism_inverse _ _ _ _ X = inv.\r\n  Proof.\r\n    pose (ap (fun i => @ morphism_inverse _ _ _ _ (@ isisomorphism_isomorphic _ _ _ i)) H') as k.\r\n    Time etransitivity; [ exact k | ]; reflexivity. (* 0.071 in trunk, 0.206 s in HoTT/coq, 0.024 in 8.4pl3 *)\r\n    Undo.\r\n    Time etransitivity; [ exact k | ]; match goal with |- ?a = ?b => exact (@ idpath _ b) end. (* 0.994 s in trunk, 0.25s in HoTT/coq, 0.024 in 8.4pl3 *)\r\n    Undo.\r\n    Time etransitivity; [ exact k | ]; match goal with |- ?a = ?b => exact (@ idpath _ a) end. (* 13.224 s in trunk, 2.071 s in HoTT/coq, 0.136 in 8.4pl3,  *)\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337520554/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337520557","html_url":"https://github.com/coq/coq/issues/3395#issuecomment-337520557","issue_url":"https://api.github.com/repos/coq/coq/issues/3395","id":337520557,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMDU1Nw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-12-17T08:51:50Z","updated_at":"2017-10-18T09:21:16Z","author_association":"CONTRIBUTOR","body":"Comment author: @gares\n\nAdmit used to make an (opaque) axiom, now it create a \"match a_hidden_proof_of_false with end\" that does not seem to be that\nbigger (yes you have a copy of the type in the return clause, but\nthat should not cause a slow conversion problem).\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337520557/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337520558","html_url":"https://github.com/coq/coq/issues/3395#issuecomment-337520558","issue_url":"https://api.github.com/repos/coq/coq/issues/3395","id":337520558,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMDU1OA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-06-07T15:50:13Z","updated_at":"2017-10-18T09:21:16Z","author_association":"CONTRIBUTOR","body":"Comment author: @Zimmi48\n\nWhat is the current status of this?\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337520558/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/345209868","html_url":"https://github.com/coq/coq/issues/3395#issuecomment-345209868","issue_url":"https://api.github.com/repos/coq/coq/issues/3395","id":345209868,"node_id":"MDEyOklzc3VlQ29tbWVudDM0NTIwOTg2OA==","user":{"login":"Zimmi48","id":1108325,"node_id":"MDQ6VXNlcjExMDgzMjU=","avatar_url":"https://avatars.githubusercontent.com/u/1108325?v=4","gravatar_id":"","url":"https://api.github.com/users/Zimmi48","html_url":"https://github.com/Zimmi48","followers_url":"https://api.github.com/users/Zimmi48/followers","following_url":"https://api.github.com/users/Zimmi48/following{/other_user}","gists_url":"https://api.github.com/users/Zimmi48/gists{/gist_id}","starred_url":"https://api.github.com/users/Zimmi48/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Zimmi48/subscriptions","organizations_url":"https://api.github.com/users/Zimmi48/orgs","repos_url":"https://api.github.com/users/Zimmi48/repos","events_url":"https://api.github.com/users/Zimmi48/events{/privacy}","received_events_url":"https://api.github.com/users/Zimmi48/received_events","type":"User","site_admin":false},"created_at":"2017-11-17T10:45:53Z","updated_at":"2017-11-17T10:45:53Z","author_association":"MEMBER","body":"If this is a performance bug, I am not sure it really makes sense to have a corresponding test in `test-suite/bugs/opened`. This made my (unrelated, I think) PR fail on AppVeyor: https://ci.appveyor.com/project/coq/coq/build/master~897.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/345209868/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/399028268","html_url":"https://github.com/coq/coq/issues/3395#issuecomment-399028268","issue_url":"https://api.github.com/repos/coq/coq/issues/3395","id":399028268,"node_id":"MDEyOklzc3VlQ29tbWVudDM5OTAyODI2OA==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2018-06-21T08:57:10Z","updated_at":"2018-06-21T08:57:10Z","author_association":"MEMBER","body":"@JasonGross Should we close this bug?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/399028268/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/644713648","html_url":"https://github.com/coq/coq/issues/3395#issuecomment-644713648","issue_url":"https://api.github.com/repos/coq/coq/issues/3395","id":644713648,"node_id":"MDEyOklzc3VlQ29tbWVudDY0NDcxMzY0OA==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2020-06-16T11:49:10Z","updated_at":"2020-06-16T11:49:10Z","author_association":"MEMBER","body":"I believe this should be closed.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/644713648/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]