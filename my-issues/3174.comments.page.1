[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337516688","html_url":"https://github.com/coq/coq/issues/3174#issuecomment-337516688","issue_url":"https://api.github.com/repos/coq/coq/issues/3174","id":337516688,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUxNjY4OA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2013-11-30T23:08:52Z","updated_at":"2017-10-18T09:10:22Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nI want to be able to have modules that disappear at the end of the section/file, similar to how Lets are replaced by their bodies at the end of the section.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337516688/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337516691","html_url":"https://github.com/coq/coq/issues/3174#issuecomment-337516691","issue_url":"https://api.github.com/repos/coq/coq/issues/3174","id":337516691,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUxNjY5MQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2013-12-20T13:25:36Z","updated_at":"2017-10-18T09:10:22Z","author_association":"CONTRIBUTOR","body":"Comment author: @ppedrot\n\nThis seems incompatible with the already overly complex module system, so I assume we will not provide such a feature. If you have a precise use case, we could do something without using modules maybe.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337516691/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337516693","html_url":"https://github.com/coq/coq/issues/3174#issuecomment-337516693","issue_url":"https://api.github.com/repos/coq/coq/issues/3174","id":337516693,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUxNjY5Mw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2013-12-20T20:23:39Z","updated_at":"2017-10-18T09:10:22Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nThis was one idea I had for better namespacing (see also all the bugs I just added to \"see also\").\n\nI will be happy with any story for namespacing that allows me to refer to a constant [opposite] defined in Category/Dual.v using the name [Category.opposite], without needing to rename every constant manually, and without needing files like this:\n\n$ cat Category/Category.v\n(** Since there are only notations in [Category.Notations], we can just export those. *)\nRequire Export Category.Notations.\n\nRequire Category.Core.\nRequire Category.Dual.\nRequire Category.Morphisms.\nRequire Category.Objects.\nRequire Category.Prod.\nRequire Category.Sigma.Sigma.\nRequire Category.Strict.\nRequire Category.Sum.\nRequire Category.Univalent.\n\nInclude Category.Core.\nInclude Category.Dual.\nInclude Category.Morphisms.\nInclude Category.Objects.\nInclude Category.Prod.\n(** We use the [Sigma] folder only to allow us to split up the various files and group conceptually similar lemmas, but not for namespacing.  So we include the main file in it. *)\nInclude Category.Sigma.Sigma.\nInclude Category.Strict.\nInclude Category.Sum.\nInclude Category.Univalent.\n\n(** For the subfolders, we need to re-create the module structure *)\nModule Subcategory.\n  Require Category.Subcategory.Subcategory.\n  Include Category.Subcategory.Subcategory.\nEnd Subcategory.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337516693/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]