[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337550895","html_url":"https://github.com/coq/coq/issues/5324#issuecomment-337550895","issue_url":"https://api.github.com/repos/coq/coq/issues/5324","id":337550895,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1MDg5NQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-01-22T06:33:27Z","updated_at":"2017-10-18T10:53:10Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\n(* -*- mode: coq; coq-prog-args: (\"-emacs\" \"-R\" \"src\" \"Crypto\" \"-R\" \"Bedrock\" \n\"Bedrock\" \"-R\" \"coqprime/Coqprime\" \"Coqprime\" \"-top\" \"Interpretations\") -*- *)\n(* File reduced by coq-bug-finder from original input, then from 440 lines to \n147 lines, then from 452 lines to 178 lines, then from 204 lines to 76 lines, \nthen from 102 lines to 44 lines, then from 482 lines to 129 lines, then from \n223 lines to 132 lines, then from 237 lines to 134 lines, then from 183 lines \nto 135 lines, then from 149 lines to 135 lines, then from 112 lines to 46 \nlines, then from 60 lines to 47 lines, then from 54 lines to 24 lines, then \nfrom 38 lines to 25 lines *)\n(* coqc version 8.6rc1 (December 2016) compiled on Dec 8 2016 13:43:59 with \nOCaml 4.02.3\n   coqtop version 8.6rc1 (December 2016) *)\n\nInductive flat_type := Unit | Prod (A B : flat_type).\nInductive exprf (op : flat_type -> flat_type -> Type) {var : Type} : flat_type \n-> Type :=\n| Op {t1 tR} (opc : op t1 tR) (args : exprf op t1) : exprf op tR.\nInductive op : flat_type -> flat_type -> Type := a : op Unit Unit.\nArguments Op {_ _ _ _} _ _.\nRequire Import AdmitAxiom.\nDefinition bound_op {var}\n           {src2 dst2}\n           (opc2 : op src2 dst2)\n  : forall (args2 : exprf op (var:=var) src2), Op opc2 args2 = Op opc2 args2.\n  refine (let k := match opc2 return (forall args2, Op opc2 args2 = Op opc2 \nargs2) with\n                   | _ => _\n                   end in\n          _).\n  Fail exact k. (* The command has indeed failed with message:\nIn environment\nvar : Type\nsrc2, dst2 : flat_type\nopc2 : op src2 dst2\nk := (?Goal) : forall args2 : exprf op dst2, Op opc2 args2 = Op opc2 args2\nThe term \"k\" has type \"forall args2 : exprf op dst2, Op opc2 args2 = Op opc2 \nargs2\" while it is expected to have type\n \"forall args2 : exprf op src2, Op opc2 args2 = Op opc2 args2\".\n *)\n  clearbody k.\n  admit.\n  Unshelve.\n  exact True.\n  reflexivity.\nDefined. (* Error: Illegal application:\nThe term \"@ Op\" of type\n \"forall (op : flat_type -> flat_type -> Type) (var : Type) (t1 tR : \nflat_type), op t1 tR -> exprf op t1 -> exprf op tR\"\ncannot be applied to the terms\n \"op\" : \"flat_type -> flat_type -> Prop\"\n \"True\" : \"Prop\"\n \"dst2\" : \"flat_type\"\n \"src2\" : \"flat_type\"\n \"opc2\" : \"op src2 dst2\"\n \"args2\" : \"exprf op dst2\"\nThe 5th term has type \"op src2 dst2\" which should be coercible to \"op dst2 \nsrc2\".\n *)\n\n\nThis probably can't be turned into a proof of False, right?\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337550895/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337550896","html_url":"https://github.com/coq/coq/issues/5324#issuecomment-337550896","issue_url":"https://api.github.com/repos/coq/coq/issues/5324","id":337550896,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1MDg5Ng==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-01-22T07:09:04Z","updated_at":"2017-10-18T10:53:10Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nBisecting gives:\n\nade2363e357db3ac3f258e645fe6bba988e7e7dd is the first bad commit\ncommit ade2363e357db3ac3f258e645fe6bba988e7e7dd\nAuthor: Hugo Herbelin <Hugo.Herbelin@ inria.fr>\nDate:   Thu Nov 19 22:49:25 2015 +0100\n\n    About building of substitutions from instances.\n\n    Redefining adjust_subst_to_rel_context from instantiate_context who\n    was hidden in inductiveops.ml, renamed the latter into\n    subst_of_rel_context_instance and moving them to Vars. The new name\n    highlights that the input is an instance (as for applist) and the\n    output a substitution (as for substl). This is a clearer unified\n    interface, centralizing the difficult de-Bruijn job in one place. It\n    saves a couple of List.rev.\n\n:040000 040000 0beffa811e5ec1efbf2de01364278bf2b2b0f86d \n8b2a3a399bac72e71c3e49cf378abf90d48d2563 M      engine\n:040000 040000 0fb23dc3aa950ecdf3ee7fc7ae7e7f5ecc4f2909 \ne8fc30353a0a08826b12050bb2bb5dbec1239eb5 M      kernel\n:040000 040000 8b67a8c362e410ee16216cf67274e4c040c15269 \n4e875efb97d3732e8a6901382a14d63edde624d8 M      pretyping\n\nThough the error message here is a bit more unreadable:\n\nFile \"/home/jgross/Documents/repos/coq-bisect/bug_5324.v\", line 16, characters \n2-163:\nError: Illegal application:\nThe term \"@ Op\" of type\n \"forall (op : forall (_ : flat_type) (_ : flat_type), Type)\n    (var : Type) (t1 tR : flat_type) (_ : op t1 tR)\n    (_ : exprf op t1), exprf op tR\"\ncannot be applied to the terms\n \"?X24@ {__:=var; __:=src2; __:=dst2; __:=opc2; __:=dst2; __:=src2; __:=opc2}\"\n   : \"forall (_ : flat_type) (_ : flat_type), Type\"\n \"?X25@ {__:=var; __:=src2; __:=dst2; __:=opc2; __:=dst2; __:=src2; __:=opc2}\"\n   : \"Type\"\n \"?X26@ {__:=var; __:=src2; __:=dst2; __:=opc2; __:=dst2; __:=src2; __:=opc2}\"\n   : \"flat_type\"\n \"?X23@ {__:=var; __:=src2; __:=dst2; __:=opc2; __:=dst2; __:=src2; __:=opc2;\n        __:=args2}\" : \"flat_type\"\n \"opc2\" : \"op src2 dst2\"\n \"args2\"\n   : \"exprf\n        ?X24@ {__:=var; __:=src2; __:=dst2; __:=opc2; __:=dst2; __:=src2;\n              __:=opc2}\n        ?X26@ {__:=var; __:=src2; __:=dst2; __:=opc2; __:=dst2; __:=src2;\n              __:=opc2}\"\nThe 5th term has type \"op src2 dst2\" which should be coercible to\n \"?X24@ {__:=var; __:=src2; __:=dst2; __:=opc2; __:=dst2; __:=src2; __:=opc2}\n    ?X26@ {__:=var; __:=src2; __:=dst2; __:=opc2; __:=dst2; __:=src2; __:=opc2}\n    ?X23@ {__:=var; __:=src2; __:=dst2; __:=opc2; __:=dst2; __:=src2;\n          __:=opc2; __:=args2}\".\n\n\n\nThe script I used for bisecting is:\n(* -*- mode: coq; coq-prog-args: (\"-emacs\" \"-nois\") -*- *)\n\nRequire Import Coq.Init.Notations.\n\nInductive flat_type := Unit | Prod (A B : flat_type).\nInductive exprf (op : forall x y : flat_type, Type) {var : Type} : forall _ : \nflat_type, Type :=\n| Op {t1 tR} (opc : op t1 tR) (args : exprf op t1) : exprf op tR.\nInductive op : forall x y : flat_type, Type := a : op Unit Unit.\nInductive foo {T} (x : T) := b.\nArguments Op {_ _ _ _} _ _.\nAxiom admit : forall {T}, T.\nDefinition bound_op {var}\n           {src2 dst2}\n           (opc2 : op src2 dst2)\n  : forall (args2 : exprf op (var:=var) src2), foo (Op opc2 args2).\n  refine (let k := match opc2 return (forall args2, foo (Op opc2 args2)) with\n                   | _ => _\n                   end in\n          _); shelve_unifiable.\n  exact k.\n  Unshelve.\n  exact admit.\nDefined.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337550896/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337550897","html_url":"https://github.com/coq/coq/issues/5324#issuecomment-337550897","issue_url":"https://api.github.com/repos/coq/coq/issues/5324","id":337550897,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1MDg5Nw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-01-22T07:18:00Z","updated_at":"2017-10-18T10:53:10Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nInterestingly, in Coq 8.6, the typing error manages to sneak past [refine], \nonly being caught on the subsequent [exact].  Bisecting for this gives \n5b0b6c92354c34a4f0d5551f88b16264fb08be5f, in which MS made [refine] typecheck \nthe terms only once (which seems right, though it seems strange that a second \ntypechecking pass would catch the bug; can someone explain this?).\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337550897/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337550899","html_url":"https://github.com/coq/coq/issues/5324#issuecomment-337550899","issue_url":"https://api.github.com/repos/coq/coq/issues/5324","id":337550899,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1MDg5OQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-01-22T11:04:44Z","updated_at":"2017-10-18T10:53:10Z","author_association":"CONTRIBUTOR","body":"Comment author: @herbelin\n\n\n\n*** This bug has been marked as a duplicate of bug [BZ#5322](https://github.com/coq/coq/issues?q=is%3Aissue%20%22Original%20bug%20ID%3A%20BZ%235322%22) ***\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337550899/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]