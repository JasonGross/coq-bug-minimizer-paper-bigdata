[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337529756","html_url":"https://github.com/coq/coq/issues/3952#issuecomment-337529756","issue_url":"https://api.github.com/repos/coq/coq/issues/3952","id":337529756,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyOTc1Ng==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-01-24T07:59:39Z","updated_at":"2018-12-06T06:00:07Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\r\n\r\nI would like the following code to work:\r\n```coq\r\nLtac hyp := constr:($(multimatch goal with H : _ |- _ => exact H end)$).\r\nGoal False -> True -> False -> True.\r\n  intros.\r\n  let H := hyp in exact H.\r\n```\r\nThat is, `constr:($(...)$)` should not act like [once], but should have multiple successes.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337529756/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337529757","html_url":"https://github.com/coq/coq/issues/3952#issuecomment-337529757","issue_url":"https://api.github.com/repos/coq/coq/issues/3952","id":337529757,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyOTc1Nw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-01-25T12:22:14Z","updated_at":"2017-10-18T09:47:52Z","author_association":"CONTRIBUTOR","body":"Comment author: @ppedrot\n\nYes, this is something coming for free once we put the pretyper in the monad. There are indeed plans to do it, but I do not have time at all to write this out.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337529757/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337529760","html_url":"https://github.com/coq/coq/issues/3952#issuecomment-337529760","issue_url":"https://api.github.com/repos/coq/coq/issues/3952","id":337529760,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyOTc2MA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-01-26T08:22:02Z","updated_at":"2017-10-18T09:47:53Z","author_association":"CONTRIBUTOR","body":"Comment author: @aspiwack\n\nTo elaborate on Pierre-Marie's reply: such a change would require significant architectural changes in the code. It will not happen soon (if ever: we don't even know if its practical).\n\nFor now, the only way to generate backtracking terms in Ltac is using multimatch \"outside\" (a pleasant, yet unintended consequence of multimatch). It's sufficient for this example, but, obviously, not for every interesting use case. In ml plugins you are less constrained (though I don't know whether it is easy to extend the let-arguments of Ltac).\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337529760/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/345510372","html_url":"https://github.com/coq/coq/issues/3952#issuecomment-345510372","issue_url":"https://api.github.com/repos/coq/coq/issues/3952","id":345510372,"node_id":"MDEyOklzc3VlQ29tbWVudDM0NTUxMDM3Mg==","user":{"login":"SkySkimmer","id":2461932,"node_id":"MDQ6VXNlcjI0NjE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/2461932?v=4","gravatar_id":"","url":"https://api.github.com/users/SkySkimmer","html_url":"https://github.com/SkySkimmer","followers_url":"https://api.github.com/users/SkySkimmer/followers","following_url":"https://api.github.com/users/SkySkimmer/following{/other_user}","gists_url":"https://api.github.com/users/SkySkimmer/gists{/gist_id}","starred_url":"https://api.github.com/users/SkySkimmer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SkySkimmer/subscriptions","organizations_url":"https://api.github.com/users/SkySkimmer/orgs","repos_url":"https://api.github.com/users/SkySkimmer/repos","events_url":"https://api.github.com/users/SkySkimmer/events{/privacy}","received_events_url":"https://api.github.com/users/SkySkimmer/received_events","type":"User","site_admin":false},"created_at":"2017-11-19T11:44:18Z","updated_at":"2017-11-19T11:44:18Z","author_association":"CONTRIBUTOR","body":">Yes, this is something coming for free once we put the pretyper in the monad. There are indeed plans to do it, but I do not have time at all to write this out.\r\n\r\n@ppedrot does the open recursion pretyper in #6090 help with this or is it unrelated?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/345510372/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/345528600","html_url":"https://github.com/coq/coq/issues/3952#issuecomment-345528600","issue_url":"https://api.github.com/repos/coq/coq/issues/3952","id":345528600,"node_id":"MDEyOklzc3VlQ29tbWVudDM0NTUyODYwMA==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2017-11-19T16:15:50Z","updated_at":"2017-11-19T16:15:50Z","author_association":"MEMBER","body":"@SkySkimmer Somewhat unrelated.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/345528600/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/444752813","html_url":"https://github.com/coq/coq/issues/3952#issuecomment-444752813","issue_url":"https://api.github.com/repos/coq/coq/issues/3952","id":444752813,"node_id":"MDEyOklzc3VlQ29tbWVudDQ0NDc1MjgxMw==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2018-12-06T05:27:24Z","updated_at":"2018-12-06T05:27:24Z","author_association":"MEMBER","body":"Any update on this?\r\n\r\nHere's another example that I'd like to work:\r\n```coq\r\nGoal True.\r\n  let v := multimatch constr:(Set) with\r\n           | _ => nat\r\n           | _ => I\r\n           end in\r\n  idtac v;\r\n    exact v. (* nat; I; No more subgoals. *)\r\n  Undo.\r\n  let v := constr:(ltac:(exact nat + exact I)) in\r\n  idtac v;\r\n  exact v. (* fails *)\r\n```\r\n\r\nAnd here's another one that I would like to succeed (because `typeclasses eauto` is multisuccess):\r\n```coq\r\nClass Foo := foo : nat.\r\nInstance:Foo | 10 := O.\r\nInstance:Foo | 100 := S O.\r\nGoal exists v : Foo, v = S O.\r\n  let v := constr:(_ : Foo) in\r\n  idtac v;\r\n    exists v; reflexivity. (* fails *)\r\n```\r\n\r\ncc @andres-erbsen ","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/444752813/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]