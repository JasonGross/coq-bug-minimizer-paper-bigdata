[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337547141","html_url":"https://github.com/coq/coq/issues/5078#issuecomment-337547141","issue_url":"https://api.github.com/repos/coq/coq/issues/5078","id":337547141,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0NzE0MQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-09-11T21:00:48Z","updated_at":"2017-10-18T10:41:04Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nWhat causes this behavior?\n\nTactic Notation \"unfold_hyp\" hyp(H) := cbv delta [H].\nGoal True -> Type.\n  intro H''.\n  unfold_hyp H''. (* success?! *)\n  cbv delta [H'']. (* Error: Cannot coerce H'' to an evaluable reference. *)\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337547141/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337547142","html_url":"https://github.com/coq/coq/issues/5078#issuecomment-337547142","issue_url":"https://api.github.com/repos/coq/coq/issues/5078","id":337547142,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0NzE0Mg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-09-12T05:18:32Z","updated_at":"2017-10-18T10:41:04Z","author_association":"CONTRIBUTOR","body":"Comment author: @silene\n\nI am pretty sure this is a duplicate of another bug, but I cannot find it right now. Basically, \"delta\" requires its arguments to have a body (which kind of makes sense), but the check is performed only at parsing-time, and tactic notations make it possible to subvert this check.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337547142/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337547144","html_url":"https://github.com/coq/coq/issues/5078#issuecomment-337547144","issue_url":"https://api.github.com/repos/coq/coq/issues/5078","id":337547144,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0NzE0NA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-09-12T05:29:48Z","updated_at":"2017-10-18T10:41:05Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nI agree that cbv delta should fail if you hand it something with no body.  I'm still confused about tactic notations, though.\n\nIf your explanation is what's happening, how is it that [Ltac] doesn't have this problem?\n\nLtac mydelta H := cbv delta [H].\nGoal True -> let x := True in True.\n  intros H x.\n  mydelta x. (* success *)\n  mydelta H. (* Error: Ltac variable H is bound to H which cannot be coerced to an evaluable reference. *)\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337547144/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337547146","html_url":"https://github.com/coq/coq/issues/5078#issuecomment-337547146","issue_url":"https://api.github.com/repos/coq/coq/issues/5078","id":337547146,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0NzE0Ng==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-09-13T09:51:03Z","updated_at":"2017-10-18T10:41:05Z","author_association":"CONTRIBUTOR","body":"Comment author: @ppedrot\n\nShort answer: Ltac semantics. The only fix I know of is dumping Ltac once and for all.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337547146/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337547147","html_url":"https://github.com/coq/coq/issues/5078#issuecomment-337547147","issue_url":"https://api.github.com/repos/coq/coq/issues/5078","id":337547147,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0NzE0Nw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-09-13T11:58:15Z","updated_at":"2017-10-18T10:41:05Z","author_association":"CONTRIBUTOR","body":"Comment author: @herbelin\n\nBy curiosity, I investigated this issue. There was actually a bug in testing evaluable local hypotheses which was revealed by, afaicu, a change of the meaning of \"hyp\" in 8.6 (it indeed worked as expected in 8.5). I fixed it.\n\nThe reason the test worked for a direct call to cbv is that for cbv, H'' was seen as a reference before being coerced to an evaluable reference. For Ltac, it was seen as a term before being coerced to an evaluable reference. For \"hyp\", in the notation, it was seen as an ident before being coerced to an evaluable reference (but perhaps only as a term in 8.5). And the bug was in the ident to evaluable coercion.\n\nFor Ltac 2.0, I don't know what is the strategy:\n- Would a check on H being evaluable done by cbv?\n- Would there be an explicit type \"evaluable\" and a check done at the time of being typechecked in this type, with explicit coercions to go from this type to other possible types assignable to an evaluable reference?\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337547147/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337547150","html_url":"https://github.com/coq/coq/issues/5078#issuecomment-337547150","issue_url":"https://api.github.com/repos/coq/coq/issues/5078","id":337547150,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0NzE1MA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-09-13T12:01:20Z","updated_at":"2017-10-18T10:41:05Z","author_association":"CONTRIBUTOR","body":"Comment author: @ppedrot\n\nI would probably favour the second option. I find intellectually satisfying that primitive tactics should have a short specification and should make coffee, while the richest heuristic-using ones are derived from user-side.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337547150/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337547153","html_url":"https://github.com/coq/coq/issues/5078#issuecomment-337547153","issue_url":"https://api.github.com/repos/coq/coq/issues/5078","id":337547153,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0NzE1Mw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-09-13T12:01:44Z","updated_at":"2017-10-18T10:41:06Z","author_association":"CONTRIBUTOR","body":"Comment author: @ppedrot\n\n(In reply to Pierre-Marie Pédrot from comment [BZ#5](https://github.com/coq/coq/issues?q=is%3Aissue%20%22Original%20bug%20ID%3A%20BZ%235%22))\n> I would probably favour the second option. I find intellectually satisfying\n> that primitive tactics should have a short specification and should make\n> coffee, while the richest heuristic-using ones are derived from user-side.\n\nThis reads \"should *not* make coffee\" obviously.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337547153/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]