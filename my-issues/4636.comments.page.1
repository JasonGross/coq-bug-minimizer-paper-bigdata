[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337541107","html_url":"https://github.com/coq/coq/issues/4636#issuecomment-337541107","issue_url":"https://api.github.com/repos/coq/coq/issues/4636","id":337541107,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0MTEwNw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-03-21T20:09:00Z","updated_at":"2017-10-18T10:21:19Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nWhat is [set] doing that makes it so slow?\n\n\nFixpoint fact n := match n with 0 => 1 | S n' => n * fact n' end.\n\nDefinition foo := Eval compute in fact 8.\nGoal fact 8 * 10 = foo * 10.\nProof.\n  unfold foo.\n  Time set (x := fact 8). (* Finished transaction in 14.363 secs (14.359u,0.004s) (successful) *)\n  Time pose (fact 8) as x; change (fact 8) with x. (* Finished transaction in 0.169 secs (0.167u,0.s) (successful) *)\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337541107/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337541108","html_url":"https://github.com/coq/coq/issues/4636#issuecomment-337541108","issue_url":"https://api.github.com/repos/coq/coq/issues/4636","id":337541108,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0MTEwOA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-03-22T11:15:30Z","updated_at":"2017-10-18T10:21:19Z","author_association":"CONTRIBUTOR","body":"Comment author: @ppedrot\n\nLooks like it's calling the unification, which attempts to perform a quadratic unfolding of the constant.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337541108/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337541109","html_url":"https://github.com/coq/coq/issues/4636#issuecomment-337541109","issue_url":"https://api.github.com/repos/coq/coq/issues/4636","id":337541109,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0MTEwOQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-03-22T13:14:40Z","updated_at":"2017-10-18T10:21:19Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nMy understanding of [set] was that it worked on syntactic equality.  Is this not the case?  What's an example where it makes use of unification?\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337541109/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337541110","html_url":"https://github.com/coq/coq/issues/4636#issuecomment-337541110","issue_url":"https://api.github.com/repos/coq/coq/issues/4636","id":337541110,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0MTExMA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-03-22T13:32:10Z","updated_at":"2017-10-18T10:21:19Z","author_association":"CONTRIBUTOR","body":"Comment author: @maximedenes\n\nWell, you can give set a partial term (set X := f _), so syntactic equality is not enough. The inefficiency seems to come from the matching algorithm. In fact, with ssreflect's \"set\" tactic, your example goes through instantly (I just checked).\n\nBringing the matching algorithm of ssreflect to Coq is the goal of a pull request that is currently under discussion: https://github.com/coq/coq/pull/146\n\nIf the pull request is merged, we could plug Coq's \"set\" on this matching algorithm and fix your problem.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337541110/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337541112","html_url":"https://github.com/coq/coq/issues/4636#issuecomment-337541112","issue_url":"https://api.github.com/repos/coq/coq/issues/4636","id":337541112,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0MTExMg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-03-22T13:42:07Z","updated_at":"2017-10-18T10:21:19Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nInteresting.  That seems like a good PR to merge.  What's blocking it?\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337541112/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337541114","html_url":"https://github.com/coq/coq/issues/4636#issuecomment-337541114","issue_url":"https://api.github.com/repos/coq/coq/issues/4636","id":337541114,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0MTExNA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-03-27T21:01:45Z","updated_at":"2017-10-18T10:21:19Z","author_association":"CONTRIBUTOR","body":"Comment author: @herbelin\n\nYes, experimenting the compatibility of ssreflect's algorithm for set (and, ideally, provide at the same time an \"in pattern\" alternative to \"at occurrences\" to select occurrences, with a syntax to be invented) would be interesting, assuming that this is ok to others too. No objection from my side.\n\nOtherwise, to answer Jason's question, I could not resist to look at why it is slow and the answer is that there are two causes for a time polynomial in the size of the goal expression. \n\nThe first one is the occur_meta_or_undefined_evar test in unify_0 in unification.ml which is done on 40320, 40319, 40318, etc. Computing it in advance would solve this inefficiency with all uses of unify_0 taking advantage of it (including maybe ssreflect).\n\nThe second one is a call to closed0 in Find_subterm.replace_term_occ_gen_modulo (commit dbdff037af1 from Matthieu). I don't know if it was supposed to improve efficiency or to prevent incorrect solutions, but its effect on very large expression is bad.\n\nIn particular, as far as I could see, the matching strategy in itself is not concerned, and once these two causes of polynomial time are removed, one gets back a linear time.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337541114/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337541115","html_url":"https://github.com/coq/coq/issues/4636#issuecomment-337541115","issue_url":"https://api.github.com/repos/coq/coq/issues/4636","id":337541115,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0MTExNQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-03-27T21:12:25Z","updated_at":"2017-10-18T10:21:19Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nThanks for looking into this Hugo!\n\nIt would be nice to have this inefficiency solved in 8.5, and it sounds like the PR would be merged into trunk rather than 8.5?\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337541115/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337541116","html_url":"https://github.com/coq/coq/issues/4636#issuecomment-337541116","issue_url":"https://api.github.com/repos/coq/coq/issues/4636","id":337541116,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0MTExNg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-03-29T08:15:06Z","updated_at":"2017-10-18T10:21:19Z","author_association":"CONTRIBUTOR","body":"Comment author: @herbelin\n\n> It would be nice to have this inefficiency solved in 8.5, and it sounds like\n> the PR would be merged into trunk rather than 8.5?\n\nUnfortunately, I'm not so optimistic. I shall discuss with Matthieu about the find_subterm inefficiency which I suspect can be addressed. For the other source of inefficiency, my current diagnosis is that this would not go without either a change of semantics of set (*) or with a quick hack which would just complicate the unification algorithm further or with deeper changes in the unification algorithm which might have an impact on other features, so I would not do that for a bug-fix release.\n\n(*) For instance, an easy possible change would be to renounce to a - in my eyes artificial and useless - feature of set which is that the search is specifically made modulo beta-iota on evar-free subterms as shown below:\n\nGoal 1=0.\nset (n := S ((fun x => 0) 0)).\n(* gives n=0 *)\n\nBut then, even if the latter would look like an improvement to me, I'm reluctant to take such a decision in urgency just because of the inefficiency issue and it looks better to me to seize the opportunity of this report for having a true collective reflection for 8.6 or 8.7 on the subterm selection semantics we want for \"set\" (i.e. what exact amount of reasoning up to conversion we want) where the mathcomp extensive experience has something to say and where some ideas from ssreflect such as supporting matching on the type and selecting specific occurrences by contextual patterns could also be integrated.\n\nSo, in all cases, my analysis is that this would either require complicating in the very short term the unification algorithm what I'm reluctant at, even more that the inefficiency could probably be controlled user-side by avoiding manipulating too large expressions, or by a deeper collective reflection on the semantics of set we want and about the incompatibility price we are ready to pay for it.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337541116/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]