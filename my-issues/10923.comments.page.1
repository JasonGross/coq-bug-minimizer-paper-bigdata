[{"url":"https://api.github.com/repos/coq/coq/issues/comments/752965526","html_url":"https://github.com/coq/coq/issues/10923#issuecomment-752965526","issue_url":"https://api.github.com/repos/coq/coq/issues/10923","id":752965526,"node_id":"MDEyOklzc3VlQ29tbWVudDc1Mjk2NTUyNg==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2020-12-31T14:00:49Z","updated_at":"2020-12-31T14:00:49Z","author_association":"MEMBER","body":"Any chance of this being fixed soon?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/752965526/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/752966301","html_url":"https://github.com/coq/coq/issues/10923#issuecomment-752966301","issue_url":"https://api.github.com/repos/coq/coq/issues/10923","id":752966301,"node_id":"MDEyOklzc3VlQ29tbWVudDc1Mjk2NjMwMQ==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2020-12-31T14:03:18Z","updated_at":"2020-12-31T14:03:18Z","author_association":"MEMBER","body":"I also got an example where it's trying to apply a `Transitive (Basics.flip Basics.impl)` instance to a mix of implications and equalities.  Perhaps there's some bit of code in the rewrite_strat machinery which assumes that every relation on `Prop` is going to be `Basics.flip Basics.impl` or `Basics.impl`?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/752966301/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/752974863","html_url":"https://github.com/coq/coq/issues/10923#issuecomment-752974863","issue_url":"https://api.github.com/repos/coq/coq/issues/10923","id":752974863,"node_id":"MDEyOklzc3VlQ29tbWVudDc1Mjk3NDg2Mw==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2020-12-31T14:33:58Z","updated_at":"2020-12-31T14:33:58Z","author_association":"MEMBER","body":"Interestingly, the typeclass log for the successful example is\r\n```coq\r\nDebug: 1: looking for (Proper (eq ==> ?r ==> Basics.flip Basics.impl) eq) with backtracking\r\nDebug: 1.1: simple apply @trans_co_eq_inv_impl_morphism on (Proper (eq ==> ?r ==> Basics.flip Basics.impl) eq), 1 subgoal(s)\r\nDebug: 1.1-1 : (Transitive eq)\r\nDebug: 1.1-1: looking for (Transitive eq) without backtracking\r\nDebug: 1.1-1.1: simple apply @eq_Transitive on (Transitive eq), 0 subgoal(s)\r\nDebug: 2: looking for (ProperProxy eq v) without backtracking\r\nDebug: 2.1: (*external*) (class_apply @eq_proper_proxy || class_apply @reflexive_proper_proxy) on (ProperProxy eq v), 0 subgoal(s)\r\n```\r\nwhile the typeclass log for the failing example is\r\n```coq\r\nDebug: 1: looking for (Proper (eq ==> ?r0 ==> ?r) eq) with backtracking\r\nDebug: 1.1: simple apply @PER_morphism on (Proper (eq ==> ?r0 ==> ?r) eq), 1 subgoal(s)\r\nDebug: 1.1-1 : (RelationClasses.PER eq)\r\nDebug: 1.1-1: looking for (RelationClasses.PER eq) without backtracking\r\nDebug: 1.1-1.1: simple apply @Equivalence_PER on (RelationClasses.PER eq), 1 subgoal(s)\r\nDebug: 1.1-1.1-1 : (Equivalence eq)\r\nDebug: 1.1-1.1-1: looking for (Equivalence eq) without backtracking\r\nDebug: 1.1-1.1-1.1: simple apply @eq_equivalence on (Equivalence eq), 0 subgoal(s)\r\nDebug: 2: looking for (ProperProxy eq v) without backtracking\r\nDebug: 2.1: (*external*) (class_apply @eq_proper_proxy || class_apply @reflexive_proper_proxy) on (ProperProxy eq v), 0 subgoal(s)\r\n```\r\nSo it seems that `rewrite_strat` kicks off the typeclass search with an underspecified relation when the strategy is sequenced after `eval`...","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/752974863/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/752975078","html_url":"https://github.com/coq/coq/issues/10923#issuecomment-752975078","issue_url":"https://api.github.com/repos/coq/coq/issues/10923","id":752975078,"node_id":"MDEyOklzc3VlQ29tbWVudDc1Mjk3NTA3OA==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2020-12-31T14:34:32Z","updated_at":"2020-12-31T14:34:32Z","author_association":"MEMBER","body":"So here is a simpler example:\r\n```coq\r\nGoal forall x, x + 0 = id x.\r\nProof.\r\n  intros.\r\n  (rewrite_strat eval cbv [id]); (rewrite_strat subterm <- plus_n_O).\r\n  Undo.\r\n  rewrite_strat ((eval cbv [id]); (subterm <- plus_n_O)).\r\n  (* Error: Ltac call to \"rewrite_strat (rewstrategy)\" failed.\r\n       Illegal application (Non-functional construction):\r\nThe expression \"@PER_morphism\" of type \"forall (A : Type) (R : relation A), RelationClasses.PER R -> Proper (R ==> R ==> iff) R\"\r\ncannot be applied to the terms\r\n \"nat\" : \"Set\"\r\n \"eq\" : \"nat -> nat -> Prop\"\r\n \"Equivalence_PER eq_equivalence\" : \"RelationClasses.PER eq\"\r\n \"x + 0\" : \"nat\"\r\n \"x\" : \"nat\"\r\n \"symmetry (plus_n_O x)\" : \"x + 0 = x\"\r\n \"x\" : \"nat\"\r\n \"x\" : \"nat\"\r\n \"eq_proper_proxy x\" : \"ProperProxy eq x\"\r\n \"?e\" : \"x = x\"\r\n*)\r\n```","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/752975078/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/752977891","html_url":"https://github.com/coq/coq/issues/10923#issuecomment-752977891","issue_url":"https://api.github.com/repos/coq/coq/issues/10923","id":752977891,"node_id":"MDEyOklzc3VlQ29tbWVudDc1Mjk3Nzg5MQ==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2020-12-31T14:44:40Z","updated_at":"2020-12-31T14:44:40Z","author_association":"MEMBER","body":"I believe the offending line is\r\nhttps://github.com/coq/coq/blob/88c77bf369a910e72951b69b4e272dd50a982bf7/plugins/ltac/rewrite.ml#L1226\r\nThe issue is that sequencing an `eval` with anything will kick off the next resolution with `None` for the rewrite relation.  In fact, dropping the second component of `cstr` in\r\nhttps://github.com/coq/coq/blob/88c77bf369a910e72951b69b4e272dd50a982bf7/plugins/ltac/rewrite.ml#L1303-L1310\r\nseems unsound in general.\r\n\r\n@mattam82 is this enough debugging for you to know how to fix this issue?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/752977891/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/752981474","html_url":"https://github.com/coq/coq/issues/10923#issuecomment-752981474","issue_url":"https://api.github.com/repos/coq/coq/issues/10923","id":752981474,"node_id":"MDEyOklzc3VlQ29tbWVudDc1Mjk4MTQ3NA==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2020-12-31T14:57:39Z","updated_at":"2020-12-31T14:57:39Z","author_association":"MEMBER","body":"A kludgy work-around is to force all calls to `eval` to leave evidence in the proof term by picking a type that you know will exist in the goal and wrapping the call to `eval` with a dummy rewrite, like so:\r\n```coq\r\nLemma idA_sig : forall {A} (x : A), { y : A | x = y }.\r\nProof. eexists; reflexivity. Qed.\r\nDefinition idA {A} x := proj1_sig (@idA_sig A x).\r\nDefinition insert_idA A x : x = @idA A x := proj2_sig (@idA_sig A x).\r\nDefinition remove_idA A x : @idA A x = x := eq_sym (@insert_idA A x).\r\nDefinition insert_idA_nat x : x = @idA nat x := @insert_idA _ _.\r\nDefinition remove_idA_nat x : @idA nat x = x := @remove_idA _ _.\r\nGoal forall x, x + 0 = id x.\r\nProof.\r\n  intros.\r\n  rewrite_strat (subterm insert_idA_nat; eval cbv [id]; subterm remove_idA); (subterm <- plus_n_O).\r\n```","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/752981474/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/753014678","html_url":"https://github.com/coq/coq/issues/10923#issuecomment-753014678","issue_url":"https://api.github.com/repos/coq/coq/issues/10923","id":753014678,"node_id":"MDEyOklzc3VlQ29tbWVudDc1MzAxNDY3OA==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2020-12-31T17:46:05Z","updated_at":"2020-12-31T17:46:05Z","author_association":"MEMBER","body":"A perhaps-slightly-better workaround is to do both rewrites first:\r\n```coq\r\nRequire Import Coq.Setoids.Setoid.\r\nLemma idA_sig : forall {A} (x : A), { y : A | x = y }.\r\nProof. eexists; reflexivity. Qed.\r\nDefinition idA {A} x := proj1_sig (@idA_sig A x).\r\nDefinition insert_idA A x : x = @idA A x := proj2_sig (@idA_sig A x).\r\nDefinition remove_idA A x : @idA A x = x := eq_sym (@insert_idA A x).\r\nDefinition insert_idA_nat x : x = @idA nat x := @insert_idA _ _.\r\nDefinition remove_idA_nat x : @idA nat x = x := @remove_idA _ _.\r\nGoal forall x, x + 0 = id x.\r\nProof.\r\n  intros.\r\n  rewrite_strat (subterm insert_idA_nat; subterm remove_idA; eval cbv [id]); (subterm <- plus_n_O).\r\n```","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/753014678/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]