[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337521442","html_url":"https://github.com/coq/coq/issues/3455#issuecomment-337521442","issue_url":"https://api.github.com/repos/coq/coq/issues/3455","id":337521442,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMTQ0Mg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-07-24T18:40:12Z","updated_at":"2017-10-18T09:23:59Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nGoal 1 = 2.\nmatch goal with\n  | [ |- context G[2] ] => let x := constr:(fun T (x : T) =>\n                                              $(let G' := context G[x] in\n                                                exact G')$) in\n                           pose x\nend.\n(* I get [P := fun (T : Type) (x : T) => 1 = x : forall T : Type, T -> Set] *)\n\nmatch goal with\n  | [ |- context G[2] ] => let x := constr:(fun T (x : T) =>\n                                              $(let G' := context G[x] in\n                                                exact G')$) in\n                           pose (x _)\nend.\n(* Error: Cannot infer this placeholder. *)\n\nmatch goal with\n  | [ |- context G[2] ] => let x := constr:(fun T (x : T) =>\n                                              $(let G' := context G[x] in\n                                                exact G')$) in\n                           evar (T : Type);\n                             let x' := constr:(x T) in\n                             let x'' := (eval cbv beta delta [T] in x') in\n                             pose x''; subst T\n\nend.\n(* now I get [P := fun x : ?6 => 1 = x : ?6 -> Set] *)\n\nHow do I tell Coq that [?6] can be inferred by retypechecking the term, and that it should do so?\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337521442/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337521443","html_url":"https://github.com/coq/coq/issues/3455#issuecomment-337521443","issue_url":"https://api.github.com/repos/coq/coq/issues/3455","id":337521443,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMTQ0Mw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-07-25T13:53:48Z","updated_at":"2017-10-18T09:23:59Z","author_association":"CONTRIBUTOR","body":"Comment author: @aspiwack\n\nDoes this problem show up without managing to smuggle-in an ill-typed term in the middle of a tactic? Because otherwise, I'm afraid it will probably not be considered urgent. In particular considering that a bug fix may come and just prevent you from writing your first line to begin with.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337521443/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337521445","html_url":"https://github.com/coq/coq/issues/3455#issuecomment-337521445","issue_url":"https://api.github.com/repos/coq/coq/issues/3455","id":337521445,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMTQ0NQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-07-25T13:56:56Z","updated_at":"2017-10-18T09:24:00Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nDoes the following count?  It shows up as\n\nGoal 1 = 2.\nmatch goal with\n  | [ |- context G[2] ] => let y := constr:(fun x =>\n                                              $(let G' := context G[x] in\n                                                exact G')$) in\n                           pose y\nend.\n\ntelling me that it can't infer the type of [x].  I want a way to say \"no, really, you can infer the type of [x]\".\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337521445/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337521446","html_url":"https://github.com/coq/coq/issues/3455#issuecomment-337521446","issue_url":"https://api.github.com/repos/coq/coq/issues/3455","id":337521446,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMTQ0Ng==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-07-25T14:00:35Z","updated_at":"2017-10-18T09:24:00Z","author_association":"CONTRIBUTOR","body":"Comment author: @aspiwack\n\nI see. My guess is that the type inference for the type of [x] happens before the tactics in term are ran. I think the type classes do something about that. Maybe Matthieu could comment?\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337521446/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337521447","html_url":"https://github.com/coq/coq/issues/3455#issuecomment-337521447","issue_url":"https://api.github.com/repos/coq/coq/issues/3455","id":337521447,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMTQ0Nw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-07-25T14:03:23Z","updated_at":"2017-10-18T09:24:00Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nI don't think it's that; the following works fine:\n\nGoal 1 = 2.\nmatch goal with\n  | [ |- context G[2] ] => let y := constr:(fun x => $(exact (@ eq Set x x))$) in\n                           pose y\nend.\n\n\nI think the issue is that [context] doesn't do any typing, and so Coq doesn't know that [x] is used.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337521447/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337521449","html_url":"https://github.com/coq/coq/issues/3455#issuecomment-337521449","issue_url":"https://api.github.com/repos/coq/coq/issues/3455","id":337521449,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMTQ0OQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-08-27T17:54:37Z","updated_at":"2017-10-18T09:24:00Z","author_association":"CONTRIBUTOR","body":"Comment author: @ppedrot\n\nThere is some unification step missing somewhere. The error is raised on the following evarmap, which should be solvable by unification:\n\nsigma: Evd.evar_map = EVARS:\n   ?3==[ |- Type@ {bug.1}] (type of x)\n   ?2==[\n         |- eq nat (CSTR.nat._0._2 CSTR.nat._0._1)\n              (CSTR.nat._0._2 (CSTR.nat._0._2 CSTR.nat._0._1))]\n         (internal placeholder)\n   ?5==[(x : ?3 (* [] *)) |- ?4 (* [x] *)\n         => eq nat (CSTR.nat._0._2 CSTR.nat._0._1) x] (internal placeholder)\n   ?4==[(x : ?3 (* [] *)) |- Type@ {bug.2} => Prop] (internal placeholder)\n  \nIs there any unification guru who knows how to solve this properly? The Evarconv.consider_remaining_unif_problems raises an exception itself...\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337521449/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337521452","html_url":"https://github.com/coq/coq/issues/3455#issuecomment-337521452","issue_url":"https://api.github.com/repos/coq/coq/issues/3455","id":337521452,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMTQ1Mg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-09-05T17:04:07Z","updated_at":"2017-10-18T09:24:00Z","author_association":"CONTRIBUTOR","body":"Comment author: @ppedrot\n\nIndeed context was not retyping the term...\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337521452/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]