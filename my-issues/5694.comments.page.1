[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337556350","html_url":"https://github.com/coq/coq/issues/5694#issuecomment-337556350","issue_url":"https://api.github.com/repos/coq/coq/issues/5694","id":337556350,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1NjM1MA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-08-24T17:02:39Z","updated_at":"2020-10-01T20:52:03Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\r\n```\r\nGoal True.\r\n  simple refine (let H := _ in _); [ shelve | | ]; cycle 1.\r\n  refine (fst H); shelve.\r\n  split. (* stack overflow *)\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337556350/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337556351","html_url":"https://github.com/coq/coq/issues/5694#issuecomment-337556351","issue_url":"https://api.github.com/repos/coq/coq/issues/5694","id":337556351,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1NjM1MQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-08-24T18:37:03Z","updated_at":"2020-10-05T17:18:33Z","author_association":"CONTRIBUTOR","body":"Comment author: @psteckler\r\n\r\nIn engine/evd.ml, in the function \"map_evar_info\", it's a call to \"map_named_val\" that triggers the stack overflow, causing a repeated pattern:\r\n```\r\n[BZ#1095](https://github.com/coq/coq/issues?q=is%3Aissue%20%22Original%20bug%20ID%3A%20BZ%231095%22)63  Pc: 2833948  CArray char 9180\r\n[BZ#1095](https://github.com/coq/coq/issues?q=is%3Aissue%20%22Original%20bug%20ID%3A%20BZ%231095%22)64  Pc: 3105012  Constr char 13233\r\n[BZ#1095](https://github.com/coq/coq/issues?q=is%3Aissue%20%22Original%20bug%20ID%3A%20BZ%231095%22)65  Pc: 2833948  CArray char 9180\r\n[BZ#1095](https://github.com/coq/coq/issues?q=is%3Aissue%20%22Original%20bug%20ID%3A%20BZ%231095%22)66  Pc: 3104300  Constr char 13435\r\n```\r\n\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337556351/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337556353","html_url":"https://github.com/coq/coq/issues/5694#issuecomment-337556353","issue_url":"https://api.github.com/repos/coq/coq/issues/5694","id":337556353,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1NjM1Mw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-08-24T19:09:46Z","updated_at":"2017-10-18T11:10:40Z","author_association":"CONTRIBUTOR","body":"Comment author: @psteckler\n\nIt looks like the function being mapped over terms is Evarutil.nf_evar0.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337556353/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337556355","html_url":"https://github.com/coq/coq/issues/5694#issuecomment-337556355","issue_url":"https://api.github.com/repos/coq/coq/issues/5694","id":337556355,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1NjM1NQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-08-25T06:15:43Z","updated_at":"2020-10-04T18:27:38Z","author_association":"CONTRIBUTOR","body":"Comment author: @silene\r\n\r\nThe stack overflow is expected and there is not much point in trying to prevent it. The real issue is that a cyclic evar was created in the first place. I don't even understand where it comes from.\r\n\r\nFor example,\r\n```\r\n  simple refine (let H := _ in _) ; [..|refine (fst H)]\r\n```\r\ncreates a cyclic evar, while\r\n```\r\n  unshelve refine (let H := _ in _) ; [..|refine (fst H)]\r\n```\r\ndoes not, yet they should have the exact same behavior on such a simple example.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337556355/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/703479756","html_url":"https://github.com/coq/coq/issues/5694#issuecomment-703479756","issue_url":"https://api.github.com/repos/coq/coq/issues/5694","id":703479756,"node_id":"MDEyOklzc3VlQ29tbWVudDcwMzQ3OTc1Ng==","user":{"login":"herbelin","id":460771,"node_id":"MDQ6VXNlcjQ2MDc3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/460771?v=4","gravatar_id":"","url":"https://api.github.com/users/herbelin","html_url":"https://github.com/herbelin","followers_url":"https://api.github.com/users/herbelin/followers","following_url":"https://api.github.com/users/herbelin/following{/other_user}","gists_url":"https://api.github.com/users/herbelin/gists{/gist_id}","starred_url":"https://api.github.com/users/herbelin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/herbelin/subscriptions","organizations_url":"https://api.github.com/users/herbelin/orgs","repos_url":"https://api.github.com/users/herbelin/repos","events_url":"https://api.github.com/users/herbelin/events{/privacy}","received_events_url":"https://api.github.com/users/herbelin/received_events","type":"User","site_admin":false},"created_at":"2020-10-05T08:19:34Z","updated_at":"2020-10-05T08:19:34Z","author_association":"MEMBER","body":"> The stack overflow is expected and there is not much point in trying to prevent it. The real issue is that a cyclic evar was created in the first place. I don't even understand where it comes from.\r\n> \r\n> For example,\r\n> \r\n> ```\r\n>   simple refine (let H := _ in _) ; [..|refine (fst H)]\r\n> ```\r\n> \r\n> creates a cyclic evar, while\r\n> \r\n> ```\r\n>   unshelve refine (let H := _ in _) ; [..|refine (fst H)]\r\n> ```\r\n\r\nFor the record, since unifall-related commit b6dabf6aa5b96cfa3c11038316399f0797d734ac (Sep 2020, after 8.12), the second command does create a loop too.\r\n\r\nDon't know what to expect. Should the `refine (fst H)` fail? Or automatically cut the dependency? On my side, I'm leaning towards the second approach.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/703479756/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/703518857","html_url":"https://github.com/coq/coq/issues/5694#issuecomment-703518857","issue_url":"https://api.github.com/repos/coq/coq/issues/5694","id":703518857,"node_id":"MDEyOklzc3VlQ29tbWVudDcwMzUxODg1Nw==","user":{"login":"silene","id":1674458,"node_id":"MDQ6VXNlcjE2NzQ0NTg=","avatar_url":"https://avatars.githubusercontent.com/u/1674458?v=4","gravatar_id":"","url":"https://api.github.com/users/silene","html_url":"https://github.com/silene","followers_url":"https://api.github.com/users/silene/followers","following_url":"https://api.github.com/users/silene/following{/other_user}","gists_url":"https://api.github.com/users/silene/gists{/gist_id}","starred_url":"https://api.github.com/users/silene/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/silene/subscriptions","organizations_url":"https://api.github.com/users/silene/orgs","repos_url":"https://api.github.com/users/silene/repos","events_url":"https://api.github.com/users/silene/events{/privacy}","received_events_url":"https://api.github.com/users/silene/received_events","type":"User","site_admin":false},"created_at":"2020-10-05T09:35:03Z","updated_at":"2020-10-05T09:35:03Z","author_association":"CONTRIBUTOR","body":"From a user point of view, I do not see any good reason for `refine (fst H)` to fail. Also, note that, even if you make the first `refine` much more precise: `simple refine (let H : prod True _ := _ in _)`, Coq still builds a cyclic evar. This cycle does not make sense to me. The type of the first wildcard (the second component of the type of `H`) should not depend on `H`.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/703518857/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/813042427","html_url":"https://github.com/coq/coq/issues/5694#issuecomment-813042427","issue_url":"https://api.github.com/repos/coq/coq/issues/5694","id":813042427,"node_id":"MDEyOklzc3VlQ29tbWVudDgxMzA0MjQyNw==","user":{"login":"ejgallego","id":7192257,"node_id":"MDQ6VXNlcjcxOTIyNTc=","avatar_url":"https://avatars.githubusercontent.com/u/7192257?v=4","gravatar_id":"","url":"https://api.github.com/users/ejgallego","html_url":"https://github.com/ejgallego","followers_url":"https://api.github.com/users/ejgallego/followers","following_url":"https://api.github.com/users/ejgallego/following{/other_user}","gists_url":"https://api.github.com/users/ejgallego/gists{/gist_id}","starred_url":"https://api.github.com/users/ejgallego/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ejgallego/subscriptions","organizations_url":"https://api.github.com/users/ejgallego/orgs","repos_url":"https://api.github.com/users/ejgallego/repos","events_url":"https://api.github.com/users/ejgallego/events{/privacy}","received_events_url":"https://api.github.com/users/ejgallego/received_events","type":"User","site_admin":false},"created_at":"2021-04-04T14:26:33Z","updated_at":"2021-04-04T14:26:33Z","author_association":"MEMBER","body":"Works in master.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/813042427/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]