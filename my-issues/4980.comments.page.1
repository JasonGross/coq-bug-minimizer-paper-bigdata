[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337545822","html_url":"https://github.com/coq/coq/issues/4980#issuecomment-337545822","issue_url":"https://api.github.com/repos/coq/coq/issues/4980","id":337545822,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0NTgyMg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-08-01T17:48:11Z","updated_at":"2017-10-18T10:36:37Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nI was trying to test Keyed Unification, and could not make it work in the \nfollowing case.  (Perhaps I am just using the wrong keys, though)\n\nAxiom foo : nat -> nat -> nat -> nat -> Prop.\nAxiom bar : nat -> nat -> Prop.\nAxiom H : forall x y, foo (x + y) (x * y) x y = bar x y.\nRequire Import Setoid.\nGoal foo (1 + 2) 2 1 2.\n  rewrite H.\n  Undo.\n  Fail setoid_rewrite H. (* nothing to rewrite *)\nAbort.\nGoal foo 3 (1 * 2) 1 2.\n  Fail rewrite H. (* no matching subterm *)\n  Fail setoid_rewrite H. (* nothing to rewrite. *)\nAbort.\nSet Keyed Unification.\nDeclare Equivalent Keys Nat.mul (fun _ => S).\nDeclare Equivalent Keys Nat.add (fun _ => S).\nGoal foo 3 (1 * 2).\n  rewrite H.\n\nI would like to be able to say \"When rewriting with H, try deferring the \nunification of [?1 + ?2] with [3] until after you've unified other things, \nnamely [?1 * ?2] with [1 * 2].\"\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337545822/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337545824","html_url":"https://github.com/coq/coq/issues/4980#issuecomment-337545824","issue_url":"https://api.github.com/repos/coq/coq/issues/4980","id":337545824,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0NTgyNA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-08-18T18:18:56Z","updated_at":"2017-10-18T10:36:38Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nExisting Instance Morphisms.eq_subrelation. makes the first one go through, I'm \nnot sure why I decided\nnot to make this a proper instance but it might have to do with long \nresolutions... Anyway the second one \ncould be done by postponing indeed but the unification algorithm used by \nrewrite and setoid_rewrite does\nnot have postponing, so it will have to wait until we move to the other \nalgorithm (wip with Beta and Hugo).\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337545824/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]