Comment author: @JasonGross

Here is some code that compiles in 8.4 but not trunk:

(* File reduced by coq-bug-finder from original input, then from 5353 lines to 4545 lines, then from 4513 lines to 4504 lines, then from 4515 lines to 4508 lines, then from 4519 lines to 132 lines, then from 111 lines to 66 lines, then from 68 lines to 35 lines *)
Set Implicit Arguments.
Inductive paths {A : Type} (a : A) : A -> Type :=
  idpath : paths a a
                 where "x = y" := (@ paths _ x y) : type_scope.
Record PreCategory := { obj :> Type; morphism : obj -> obj -> Type }.
Record NotionOfStructure (X : PreCategory) :=
  { structure :> X -> Type;
    is_structure_homomorphism
    : forall x y (f : morphism X x y) (a : structure x) (b : structure y), Type }.

Section precategory.
  Variable X : PreCategory.
  Variable P : NotionOfStructure X.
  Local Notation object := { x : X & P x }.
  Record morphism' (xa yb : object) := {}.
  Lemma issig_morphism xa yb
  : { f : morphism X (projT1 xa) (projT1 yb)
    & is_structure_homomorphism _ _ _ f (projT2 xa) (projT2 yb) }
    = morphism' xa yb. (* Toplevel input, characters 169-171:
Error:
In environment
X : PreCategory
P : NotionOfStructure X
xa : {x : _ & ?26 x}
yb : {x : _ & ?26 x}
The term "xa" has type "{x : _ & ?26 x}" while it is expected to have type
 "{x : X & P x}". *)


Comment author: @JasonGross

Toplevel input, characters 154-156:
Error:
In environment
X : PreCategory
P : NotionOfStructure X
xa : @ sigT (obj X) (@ structure X ?25)
yb : @ sigT (obj X) (@ structure X ?25)
The term "xa" has type "@ sigT (obj X) (@ structure X ?25)"
while it is expected to have type
 "@ sigT (obj X) (fun x : obj X => @ structure X P x)".


Comment author: @mattam82

Fixed in trunk.


