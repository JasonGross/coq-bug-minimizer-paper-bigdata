[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548693","html_url":"https://github.com/coq/coq/issues/5171#issuecomment-337548693","issue_url":"https://api.github.com/repos/coq/coq/issues/5171","id":337548693,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0ODY5Mw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-10-31T21:27:09Z","updated_at":"2017-10-18T10:45:44Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nApparently typeclass resolution unfolds opaque constants before looking for \ninstances?\n\nClass Decidable (P : Prop) := dec : {P} + {~P}.\nArguments dec P {_}. \nDefinition dec_bool {P} {Pdec : Decidable P} (H : (if dec P then true else \nfalse) = true)\n  : P.\nProof.\n  destruct (dec P); [ assumption | exfalso; congruence ].\nQed.\nDefinition dec_True : Decidable True := left I.\nHint Extern 0 (Decidable True) => apply dec_True : typeclass_instances.\nDefinition really_opaque_pair : True * True. Proof. repeat constructor. Qed.\nDefinition opaque_pair := (I, I).\nTypeclasses Opaque opaque_pair.\nOpaque opaque_pair.\nGoal (let '(I, I) := really_opaque_pair in True).\nProof.\n  Fail progress compute. (* no change *)\n  refine (@ dec_bool _ _ _).\n  Fail reflexivity. (* as expected, we can't find an instance for [Decidable \n(match _ with ... end)] *)\nAbort.\nGoal (let '(I, I) := opaque_pair in True).\nProof.\n  Fail progress compute. (* no change *)\n  Typeclasses eauto := debug.\n  refine (@ dec_bool _ _ _).\n  reflexivity. (* um, what?  Apparently we bypassed [Typeclasses Opaque]? *)\nQed.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548693/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548694","html_url":"https://github.com/coq/coq/issues/5171#issuecomment-337548694","issue_url":"https://api.github.com/repos/coq/coq/issues/5171","id":337548694,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0ODY5NA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-11-28T15:53:18Z","updated_at":"2017-10-18T10:45:44Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nWill try to look into it for beta2 indeed.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548694/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548695","html_url":"https://github.com/coq/coq/issues/5171#issuecomment-337548695","issue_url":"https://api.github.com/repos/coq/coq/issues/5171","id":337548695,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0ODY5NQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-11-28T18:42:28Z","updated_at":"2017-10-18T10:45:44Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nIt's the refine which reduces the goal to True apparently\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548695/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548697","html_url":"https://github.com/coq/coq/issues/5171#issuecomment-337548697","issue_url":"https://api.github.com/repos/coq/coq/issues/5171","id":337548697,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0ODY5Nw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-11-28T18:49:50Z","updated_at":"2017-10-18T10:45:44Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nHmm, it's a heuristic in unification that does it in the end:\n\nlet apprec_nohdbeta ts env evd c =\n  let (t,sk as appr) = Reductionops.whd_nored_state evd (c, []) in\n  if Stack.not_purely_applicative sk\n  then Stack.zip (fst (whd_betaiota_deltazeta_for_iota_state\n\t\t   ts env evd Cst_stack.empty appr))\n  else c\n\nWe reduce the [let '(I, I) := opaque_pair in True] and find out it's not \nproducing a purely applicative stack, \nhence we betaiota_deltazeta normalize and get down to True.\n\nMoving resolution to 8.7, we need time to evaluate the impact of changing that \nkind of code.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548697/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548698","html_url":"https://github.com/coq/coq/issues/5171#issuecomment-337548698","issue_url":"https://api.github.com/repos/coq/coq/issues/5171","id":337548698,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0ODY5OA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-11-28T20:02:25Z","updated_at":"2017-10-18T10:45:45Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nUgh, really?  What might go wrong if this heuristic was made to respect [Opaque]?  (More systematically, can we get an alternate version of [Opaque] that everything in the kernel and the VM and the native compiler actually respects, as per Bug [BZ#3389](https://github.com/coq/coq/issues?q=is%3Aissue%20%22Original%20bug%20ID%3A%20BZ%233389%22)?)\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548698/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]