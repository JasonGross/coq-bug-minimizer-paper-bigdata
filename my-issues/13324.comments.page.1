[{"url":"https://api.github.com/repos/coq/coq/issues/comments/724118657","html_url":"https://github.com/coq/coq/issues/13324#issuecomment-724118657","issue_url":"https://api.github.com/repos/coq/coq/issues/13324","id":724118657,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNDExODY1Nw==","user":{"login":"ejgallego","id":7192257,"node_id":"MDQ6VXNlcjcxOTIyNTc=","avatar_url":"https://avatars.githubusercontent.com/u/7192257?v=4","gravatar_id":"","url":"https://api.github.com/users/ejgallego","html_url":"https://github.com/ejgallego","followers_url":"https://api.github.com/users/ejgallego/followers","following_url":"https://api.github.com/users/ejgallego/following{/other_user}","gists_url":"https://api.github.com/users/ejgallego/gists{/gist_id}","starred_url":"https://api.github.com/users/ejgallego/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ejgallego/subscriptions","organizations_url":"https://api.github.com/users/ejgallego/orgs","repos_url":"https://api.github.com/users/ejgallego/repos","events_url":"https://api.github.com/users/ejgallego/events{/privacy}","received_events_url":"https://api.github.com/users/ejgallego/received_events","type":"User","site_admin":false},"created_at":"2020-11-09T16:21:49Z","updated_at":"2020-11-09T16:21:49Z","author_association":"MEMBER","body":"Thanks for reporting @JasonGross , bisect done with:\r\n```\r\ndune build theories/Program/{Basics,Tactics}.vo checker/coqchk.exe && dune exec -- dev/shim/coqc-prelude k.v && _build/default/checker/coqchk.exe -silent -o k.vo\r\n```\r\nfaulty commit:\r\n```\r\n427e8cac2c267a7302b71979c0f1019598176e31 is the first bad commit\r\ncommit 427e8cac2c267a7302b71979c0f1019598176e31\r\nAuthor: Pierre-Marie PÃ©drot <pierre-marie.pedrot@inria.fr>\r\nDate:   Fri Aug 28 17:37:24 2020 +0200\r\n\r\n    Drop opaque bodies of abstracted definitions.\r\n    \r\n    This should save us a lot of useless hashconsing. This change should not be\r\n    observable because outside of the proof, the abstracted definition will be\r\n    either inlined or redefined with the body coming from the side-effect.\r\n\r\n kernel/safe_typing.ml | 14 ++++++++------\r\n 1 file changed, 8 insertions(+), 6 deletions(-)\r\n```\r\nintroduced in #12935 , cc @ppedrot @SkySkimmer ","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/724118657/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/724130259","html_url":"https://github.com/coq/coq/issues/13324#issuecomment-724130259","issue_url":"https://api.github.com/repos/coq/coq/issues/13324","id":724130259,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNDEzMDI1OQ==","user":{"login":"SkySkimmer","id":2461932,"node_id":"MDQ6VXNlcjI0NjE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/2461932?v=4","gravatar_id":"","url":"https://api.github.com/users/SkySkimmer","html_url":"https://github.com/SkySkimmer","followers_url":"https://api.github.com/users/SkySkimmer/followers","following_url":"https://api.github.com/users/SkySkimmer/following{/other_user}","gists_url":"https://api.github.com/users/SkySkimmer/gists{/gist_id}","starred_url":"https://api.github.com/users/SkySkimmer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SkySkimmer/subscriptions","organizations_url":"https://api.github.com/users/SkySkimmer/orgs","repos_url":"https://api.github.com/users/SkySkimmer/repos","events_url":"https://api.github.com/users/SkySkimmer/events{/privacy}","received_events_url":"https://api.github.com/users/SkySkimmer/received_events","type":"User","site_admin":false},"created_at":"2020-11-09T16:40:39Z","updated_at":"2020-11-09T16:40:39Z","author_association":"CONTRIBUTOR","body":"Smaller example:\r\n~~~coq\r\nDefinition foo : True := ltac:(abstract exact I).\r\n~~~","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/724130259/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/724135010","html_url":"https://github.com/coq/coq/issues/13324#issuecomment-724135010","issue_url":"https://api.github.com/repos/coq/coq/issues/13324","id":724135010,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNDEzNTAxMA==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2020-11-09T16:48:35Z","updated_at":"2020-11-09T16:48:35Z","author_association":"MEMBER","body":"Indeed the vo file does not contain the body of the abstracted proof...","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/724135010/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/845029379","html_url":"https://github.com/coq/coq/issues/13324#issuecomment-845029379","issue_url":"https://api.github.com/repos/coq/coq/issues/13324","id":845029379,"node_id":"MDEyOklzc3VlQ29tbWVudDg0NTAyOTM3OQ==","user":{"login":"RalfJung","id":330628,"node_id":"MDQ6VXNlcjMzMDYyOA==","avatar_url":"https://avatars.githubusercontent.com/u/330628?v=4","gravatar_id":"","url":"https://api.github.com/users/RalfJung","html_url":"https://github.com/RalfJung","followers_url":"https://api.github.com/users/RalfJung/followers","following_url":"https://api.github.com/users/RalfJung/following{/other_user}","gists_url":"https://api.github.com/users/RalfJung/gists{/gist_id}","starred_url":"https://api.github.com/users/RalfJung/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/RalfJung/subscriptions","organizations_url":"https://api.github.com/users/RalfJung/orgs","repos_url":"https://api.github.com/users/RalfJung/repos","events_url":"https://api.github.com/users/RalfJung/events{/privacy}","received_events_url":"https://api.github.com/users/RalfJung/received_events","type":"User","site_admin":false},"created_at":"2021-05-20T11:57:14Z","updated_at":"2021-05-20T11:57:14Z","author_association":"CONTRIBUTOR","body":"We're also seeing this in std++. Would be nice to get this resolved so that we can again reliably check for axioms. :)","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/845029379/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/873277840","html_url":"https://github.com/coq/coq/issues/13324#issuecomment-873277840","issue_url":"https://api.github.com/repos/coq/coq/issues/13324","id":873277840,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MzI3Nzg0MA==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2021-07-02T22:05:30Z","updated_at":"2021-07-02T22:05:30Z","author_association":"MEMBER","body":"This shows up in a bunch of zify instances (not a complete list):\r\n```\r\n      Coq.micromega.ZifyInst.ltac_gen_subproof22\r\n      Coq.micromega.ZifyInst.ltac_gen_subproof21\r\n      Coq.micromega.ZifyInst.ltac_gen_subproof20\r\n      Coq.micromega.ZifyInst.ltac_gen_subproof19\r\n      Coq.micromega.ZifyInst.ltac_gen_subproof18\r\n      Coq.micromega.ZifyInst.ltac_gen_subproof17\r\n      Coq.micromega.ZifyInst.ltac_gen_subproof16\r\n      Coq.micromega.ZifyInst.ltac_gen_subproof15\r\n      Coq.micromega.ZifyInst.ltac_gen_subproof14\r\n      Coq.micromega.ZifyInst.ltac_gen_subproof13\r\n      Coq.micromega.ZifyInst.ltac_gen_subproof12\r\n      Coq.micromega.ZifyInst.ltac_gen_subproof11\r\n      Coq.micromega.ZifyInst.ltac_gen_subproof10\r\n      Coq.micromega.ZifyInst.ltac_gen_subproof\r\n```","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/873277840/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/926799104","html_url":"https://github.com/coq/coq/issues/13324#issuecomment-926799104","issue_url":"https://api.github.com/repos/coq/coq/issues/13324","id":926799104,"node_id":"IC_kwDOABUDh843PdUA","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2021-09-24T17:24:53Z","updated_at":"2021-09-24T17:24:53Z","author_association":"MEMBER","body":"I had another look at this issue and I don't think that 427e8cac2c267a7302b71979c0f1019598176e31 is the real cause of the problem, rather it exposes an issue with abstracted subproofs.\r\n\r\nActually, if you look at it the body of the proof is axiom-free, so this part is fine.\r\n```coq\r\nDefinition foo : True := ltac:(abstract exact I).\r\n\r\nPrint foo.\r\n(* foo = (fun ltac_gen_subproof : True => ltac_gen_subproof) I\r\n     : True *)\r\n```\r\n\r\nThe problem is that the global environment is incorrectly extended with a side-effect that lingers around although it should have disappeared right after the tactic-in-term returns.\r\n```coq\r\nPrint ltac_gen_subproof.\r\n(* *** [ ltac_gen_subproof : True ] *)\r\n```\r\nBefore the above commit, it was less visible because the proof was axiom free, but in practice it did mean that we had a useless term in the vo file taking space for no good reason.\r\n\r\nI suspect that wrapping the tactic-in-term mechanism in a purifying handler is probably enough to solve this but I am vaguely afraid that some eldritch parts of fiat-crypto-like developments rely on this *feature*.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/926799104/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/926905716","html_url":"https://github.com/coq/coq/issues/13324#issuecomment-926905716","issue_url":"https://api.github.com/repos/coq/coq/issues/13324","id":926905716,"node_id":"IC_kwDOABUDh843P3V0","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2021-09-24T20:38:05Z","updated_at":"2021-09-24T20:38:05Z","author_association":"MEMBER","body":"I don't think we rely on abstracted subproofs from tactics in terms sticking around in fiat-crypto.  Instead we do something like `simple refine (let v : T := _ in _); [ abstract tac | ]; let val := (eval cbv delta [v] in v) in clear v; ...` to get access to abstracted names in a way that will have them stick around.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/926905716/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/926945476","html_url":"https://github.com/coq/coq/issues/13324#issuecomment-926945476","issue_url":"https://api.github.com/repos/coq/coq/issues/13324","id":926945476,"node_id":"IC_kwDOABUDh843QBDE","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2021-09-24T22:10:29Z","updated_at":"2021-09-24T22:10:29Z","author_association":"MEMBER","body":"I distinctly remember seeing some calls to `abstract tac as foo` in fiat-crypto, or maybe at least fiat-crypto-legacy. This is a notorious issue with abstract because it ultimately prevents to have a fully purely functional implementation (name resolution depends on the global nametab). If it's actually not needed, then it's a good thing because it simplifies a lot one of the PRs I started writing some time ago.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/926945476/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/1153235476","html_url":"https://github.com/coq/coq/issues/13324#issuecomment-1153235476","issue_url":"https://api.github.com/repos/coq/coq/issues/13324","id":1153235476,"node_id":"IC_kwDOABUDh85EvPoU","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2022-06-12T17:06:38Z","updated_at":"2022-06-12T17:06:38Z","author_association":"MEMBER","body":"Note that this is not just an issue with `coqchk`, but `Print Assumptions` and `Print` and `Extraction` all also believe that the subproof has no body.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/1153235476/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]