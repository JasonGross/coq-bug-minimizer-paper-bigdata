[{"url":"https://api.github.com/repos/coq/coq/issues/comments/576854733","html_url":"https://github.com/coq/coq/issues/11435#issuecomment-576854733","issue_url":"https://api.github.com/repos/coq/coq/issues/11435","id":576854733,"node_id":"MDEyOklzc3VlQ29tbWVudDU3Njg1NDczMw==","user":{"login":"SkySkimmer","id":2461932,"node_id":"MDQ6VXNlcjI0NjE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/2461932?v=4","gravatar_id":"","url":"https://api.github.com/users/SkySkimmer","html_url":"https://github.com/SkySkimmer","followers_url":"https://api.github.com/users/SkySkimmer/followers","following_url":"https://api.github.com/users/SkySkimmer/following{/other_user}","gists_url":"https://api.github.com/users/SkySkimmer/gists{/gist_id}","starred_url":"https://api.github.com/users/SkySkimmer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SkySkimmer/subscriptions","organizations_url":"https://api.github.com/users/SkySkimmer/orgs","repos_url":"https://api.github.com/users/SkySkimmer/repos","events_url":"https://api.github.com/users/SkySkimmer/events{/privacy}","received_events_url":"https://api.github.com/users/SkySkimmer/received_events","type":"User","site_admin":false},"created_at":"2020-01-21T19:59:28Z","updated_at":"2020-01-21T19:59:28Z","author_association":"CONTRIBUTOR","body":"We don't consider that a bug when you use algebraic universe syntax.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/576854733/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/576855404","html_url":"https://github.com/coq/coq/issues/11435#issuecomment-576855404","issue_url":"https://api.github.com/repos/coq/coq/issues/11435","id":576855404,"node_id":"MDEyOklzc3VlQ29tbWVudDU3Njg1NTQwNA==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2020-01-21T20:00:59Z","updated_at":"2020-01-21T20:00:59Z","author_association":"MEMBER","body":"I think \"anomaly\" should be reserved for actually unexpected behavior, so I think at least it should be turned into a proper error message and not an anomaly then, no?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/576855404/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/587062713","html_url":"https://github.com/coq/coq/issues/11435#issuecomment-587062713","issue_url":"https://api.github.com/repos/coq/coq/issues/11435","id":587062713,"node_id":"MDEyOklzc3VlQ29tbWVudDU4NzA2MjcxMw==","user":{"login":"artagnon","id":37226,"node_id":"MDQ6VXNlcjM3MjI2","avatar_url":"https://avatars.githubusercontent.com/u/37226?v=4","gravatar_id":"","url":"https://api.github.com/users/artagnon","html_url":"https://github.com/artagnon","followers_url":"https://api.github.com/users/artagnon/followers","following_url":"https://api.github.com/users/artagnon/following{/other_user}","gists_url":"https://api.github.com/users/artagnon/gists{/gist_id}","starred_url":"https://api.github.com/users/artagnon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/artagnon/subscriptions","organizations_url":"https://api.github.com/users/artagnon/orgs","repos_url":"https://api.github.com/users/artagnon/repos","events_url":"https://api.github.com/users/artagnon/events{/privacy}","received_events_url":"https://api.github.com/users/artagnon/received_events","type":"User","site_admin":false},"created_at":"2020-02-17T16:06:28Z","updated_at":"2020-02-17T16:27:56Z","author_association":"CONTRIBUTOR","body":"I just ran into a similar problem when attempting to check the predicavity of `Type`:\r\n\r\n```coq\r\nDefinition check U Q := forall P : U, Q.\r\nDefinition TypePred@{i} := check Type@{i + 1} Type@{i}.\r\n```\r\n\r\nThis is very straightforward, no?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/587062713/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/774388664","html_url":"https://github.com/coq/coq/issues/11435#issuecomment-774388664","issue_url":"https://api.github.com/repos/coq/coq/issues/11435","id":774388664,"node_id":"MDEyOklzc3VlQ29tbWVudDc3NDM4ODY2NA==","user":{"login":"jonleivent","id":7363878,"node_id":"MDQ6VXNlcjczNjM4Nzg=","avatar_url":"https://avatars.githubusercontent.com/u/7363878?v=4","gravatar_id":"","url":"https://api.github.com/users/jonleivent","html_url":"https://github.com/jonleivent","followers_url":"https://api.github.com/users/jonleivent/followers","following_url":"https://api.github.com/users/jonleivent/following{/other_user}","gists_url":"https://api.github.com/users/jonleivent/gists{/gist_id}","starred_url":"https://api.github.com/users/jonleivent/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jonleivent/subscriptions","organizations_url":"https://api.github.com/users/jonleivent/orgs","repos_url":"https://api.github.com/users/jonleivent/repos","events_url":"https://api.github.com/users/jonleivent/events{/privacy}","received_events_url":"https://api.github.com/users/jonleivent/received_events","type":"User","site_admin":false},"created_at":"2021-02-06T03:17:44Z","updated_at":"2021-02-06T03:17:44Z","author_association":"NONE","body":"Another version of this anomaly (v8.12.2):\r\n```Coq\r\nPolymorphic Definition maxsort@{a b i j}(A:Type@{a})(B:Type@{b})\r\n            (_:A=Type@{i})(_:B=Type@{j}) := Type@{max(i,j)}.\r\n\r\nLtac is_subsort A B :=\r\n  let M:=(eval vm_compute in (maxsort A B eq_refl eq_refl)) in\r\n  constr_eq_strict M B.\r\n\r\nGoal True.\r\n  is_subsort Set Type@{Set+1}.\r\n```","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/774388664/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/774742197","html_url":"https://github.com/coq/coq/issues/11435#issuecomment-774742197","issue_url":"https://api.github.com/repos/coq/coq/issues/11435","id":774742197,"node_id":"MDEyOklzc3VlQ29tbWVudDc3NDc0MjE5Nw==","user":{"login":"jonleivent","id":7363878,"node_id":"MDQ6VXNlcjczNjM4Nzg=","avatar_url":"https://avatars.githubusercontent.com/u/7363878?v=4","gravatar_id":"","url":"https://api.github.com/users/jonleivent","html_url":"https://github.com/jonleivent","followers_url":"https://api.github.com/users/jonleivent/followers","following_url":"https://api.github.com/users/jonleivent/following{/other_user}","gists_url":"https://api.github.com/users/jonleivent/gists{/gist_id}","starred_url":"https://api.github.com/users/jonleivent/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jonleivent/subscriptions","organizations_url":"https://api.github.com/users/jonleivent/orgs","repos_url":"https://api.github.com/users/jonleivent/repos","events_url":"https://api.github.com/users/jonleivent/events{/privacy}","received_events_url":"https://api.github.com/users/jonleivent/received_events","type":"User","site_admin":false},"created_at":"2021-02-07T19:25:17Z","updated_at":"2021-02-07T19:25:17Z","author_association":"NONE","body":"An easier case (v8.12.2):\r\n```Coq\r\nExample test@{i j}(A:Type@{i})(B : Type@{j}) : True.\r\nProof.\r\n  let _:=constr:(Type@{i+1}:Type@{j+1}) in idtac.\r\n```","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/774742197/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]