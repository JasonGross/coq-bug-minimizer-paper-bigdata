[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337544655","html_url":"https://github.com/coq/coq/issues/4890#issuecomment-337544655","issue_url":"https://api.github.com/repos/coq/coq/issues/4890","id":337544655,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0NDY1NQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-07-02T20:04:21Z","updated_at":"2019-07-07T18:57:56Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\r\n\r\nConsider:\r\n\r\n```\r\nGoal let f x := existT (fun t => t) bool x in Some (f true) = Some (f false) -> False.                                                             \r\n  intros f H.\r\n```\r\n`injection H` says `Error: This equality is discriminable. You should use the discriminate tactic to solve the goal.`, which is a lie, because\r\n`discriminate` says `Error: No primitive equality found.`, which is slightly misleading, but perhaps not overly so.\r\n\r\nIf I `subst f; simpl in *`, then\r\n`injection H` still says `Error: This equality is discriminable. You should use the discriminate tactic to solve the goal.`, which is still a lie, because\r\n`discriminate` says `Error: Cannot discriminate on inductive constructors with dependent types.`\r\n\r\nBut `injection` clearly *can* work on goals of this type:\r\n```\r\nGoal let f x := existT (fun t => t) Set x in Some (f bool) = Some (f nat) -> False.                                                                \r\n  intros f H.                                                                                                                                      \r\n  injection H. (* success, strips off the [Some]s, as expected *)\r\n```\r\nThis shows up in the failure of the `inversion` tactic to do anything interesting on `H` in the first example (it just duplicates it).\r\n\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337544655/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337544656","html_url":"https://github.com/coq/coq/issues/4890#issuecomment-337544656","issue_url":"https://api.github.com/repos/coq/coq/issues/4890","id":337544656,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0NDY1Ng==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-09-11T01:02:37Z","updated_at":"2019-07-07T18:56:41Z","author_association":"CONTRIBUTOR","body":"Comment author: @jonleivent\r\n\r\nI think this may be related to 4999, because factoring out `true` and `false` (which are ctors, although not `Prop`s) makes the injection work:\r\n```\r\nGoal let f x := existT (fun t => t) bool x in Some (f true) = Some (f false) -> False.\r\n  intros f H.\r\n  remember true as X; remember false as Y.\r\n  injection H.\r\n  subst X Y.\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337544656/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337544657","html_url":"https://github.com/coq/coq/issues/4890#issuecomment-337544657","issue_url":"https://api.github.com/repos/coq/coq/issues/4890","id":337544657,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0NDY1Nw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-09-11T10:05:52Z","updated_at":"2019-07-07T18:55:59Z","author_association":"CONTRIBUTOR","body":"Comment author: @herbelin\r\n\r\nI submitted a pull request to stops injection to consider that detecting disjoint constructors is fatal. This would be an easy fix to this disagreement between `injection` and `discriminate`.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337544657/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/509023070","html_url":"https://github.com/coq/coq/issues/4890#issuecomment-509023070","issue_url":"https://api.github.com/repos/coq/coq/issues/4890","id":509023070,"node_id":"MDEyOklzc3VlQ29tbWVudDUwOTAyMzA3MA==","user":{"login":"herbelin","id":460771,"node_id":"MDQ6VXNlcjQ2MDc3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/460771?v=4","gravatar_id":"","url":"https://api.github.com/users/herbelin","html_url":"https://github.com/herbelin","followers_url":"https://api.github.com/users/herbelin/followers","following_url":"https://api.github.com/users/herbelin/following{/other_user}","gists_url":"https://api.github.com/users/herbelin/gists{/gist_id}","starred_url":"https://api.github.com/users/herbelin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/herbelin/subscriptions","organizations_url":"https://api.github.com/users/herbelin/orgs","repos_url":"https://api.github.com/users/herbelin/repos","events_url":"https://api.github.com/users/herbelin/events{/privacy}","received_events_url":"https://api.github.com/users/herbelin/received_events","type":"User","site_admin":false},"created_at":"2019-07-07T19:04:12Z","updated_at":"2019-07-07T19:04:12Z","author_association":"MEMBER","body":"Fixed by #276.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/509023070/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]