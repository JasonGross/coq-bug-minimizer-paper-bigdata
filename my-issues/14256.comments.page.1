[{"url":"https://api.github.com/repos/coq/coq/issues/comments/832895921","html_url":"https://github.com/coq/coq/issues/14256#issuecomment-832895921","issue_url":"https://api.github.com/repos/coq/coq/issues/14256","id":832895921,"node_id":"MDEyOklzc3VlQ29tbWVudDgzMjg5NTkyMQ==","user":{"login":"ejgallego","id":7192257,"node_id":"MDQ6VXNlcjcxOTIyNTc=","avatar_url":"https://avatars.githubusercontent.com/u/7192257?v=4","gravatar_id":"","url":"https://api.github.com/users/ejgallego","html_url":"https://github.com/ejgallego","followers_url":"https://api.github.com/users/ejgallego/followers","following_url":"https://api.github.com/users/ejgallego/following{/other_user}","gists_url":"https://api.github.com/users/ejgallego/gists{/gist_id}","starred_url":"https://api.github.com/users/ejgallego/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ejgallego/subscriptions","organizations_url":"https://api.github.com/users/ejgallego/orgs","repos_url":"https://api.github.com/users/ejgallego/repos","events_url":"https://api.github.com/users/ejgallego/events{/privacy}","received_events_url":"https://api.github.com/users/ejgallego/received_events","type":"User","site_admin":false},"created_at":"2021-05-05T18:02:23Z","updated_at":"2021-05-05T18:02:23Z","author_association":"MEMBER","body":"> I'm not sure who knows about Hakell extraction\r\n\r\nMy impression is that all but unmaintained ; maybe we should do a call for maintainers ? ","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/832895921/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/832899788","html_url":"https://github.com/coq/coq/issues/14256#issuecomment-832899788","issue_url":"https://api.github.com/repos/coq/coq/issues/14256","id":832899788,"node_id":"MDEyOklzc3VlQ29tbWVudDgzMjg5OTc4OA==","user":{"login":"zeldovich","id":828308,"node_id":"MDQ6VXNlcjgyODMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/828308?v=4","gravatar_id":"","url":"https://api.github.com/users/zeldovich","html_url":"https://github.com/zeldovich","followers_url":"https://api.github.com/users/zeldovich/followers","following_url":"https://api.github.com/users/zeldovich/following{/other_user}","gists_url":"https://api.github.com/users/zeldovich/gists{/gist_id}","starred_url":"https://api.github.com/users/zeldovich/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zeldovich/subscriptions","organizations_url":"https://api.github.com/users/zeldovich/orgs","repos_url":"https://api.github.com/users/zeldovich/repos","events_url":"https://api.github.com/users/zeldovich/events{/privacy}","received_events_url":"https://api.github.com/users/zeldovich/received_events","type":"User","site_admin":false},"created_at":"2021-05-05T18:08:14Z","updated_at":"2021-05-05T18:08:14Z","author_association":"CONTRIBUTOR","body":"It looks like `GHC.Prim.Any` is now `GHC.Types.Any`.\r\n\r\nFixing this for any particular version of GHC is straightforward enough, I imagine, but it's not clear how to make this backwards-compatible.  Maybe we need the Coq extraction machinery know what version of GHC is the target?  Or maybe we need to maintain a small Haskell library that implements the things we need from Haskell, and the implementation of that library differs for different versions of GHC?\r\n\r\nI'm not sure I have a whole lot of time to contribute to address this problem in the near future, unfortunately..","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/832899788/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/832902395","html_url":"https://github.com/coq/coq/issues/14256#issuecomment-832902395","issue_url":"https://api.github.com/repos/coq/coq/issues/14256","id":832902395,"node_id":"MDEyOklzc3VlQ29tbWVudDgzMjkwMjM5NQ==","user":{"login":"ejgallego","id":7192257,"node_id":"MDQ6VXNlcjcxOTIyNTc=","avatar_url":"https://avatars.githubusercontent.com/u/7192257?v=4","gravatar_id":"","url":"https://api.github.com/users/ejgallego","html_url":"https://github.com/ejgallego","followers_url":"https://api.github.com/users/ejgallego/followers","following_url":"https://api.github.com/users/ejgallego/following{/other_user}","gists_url":"https://api.github.com/users/ejgallego/gists{/gist_id}","starred_url":"https://api.github.com/users/ejgallego/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ejgallego/subscriptions","organizations_url":"https://api.github.com/users/ejgallego/orgs","repos_url":"https://api.github.com/users/ejgallego/repos","events_url":"https://api.github.com/users/ejgallego/events{/privacy}","received_events_url":"https://api.github.com/users/ejgallego/received_events","type":"User","site_admin":false},"created_at":"2021-05-05T18:12:27Z","updated_at":"2021-05-05T18:12:27Z","author_association":"MEMBER","body":"> Maybe we need the Coq extraction machinery know what version of GHC is the target? Or maybe we need to maintain a small Haskell library that implements the things we need from Haskell, and the implementation of that library differs for different versions of GHC?\r\n\r\nBoth options look reasonable, tho having the small library on the Coq side will give some headaches to get the GHC tooling setup in the Coq side.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/832902395/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/832932410","html_url":"https://github.com/coq/coq/issues/14256#issuecomment-832932410","issue_url":"https://api.github.com/repos/coq/coq/issues/14256","id":832932410,"node_id":"MDEyOklzc3VlQ29tbWVudDgzMjkzMjQxMA==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2021-05-05T18:58:04Z","updated_at":"2021-05-05T18:58:04Z","author_association":"MEMBER","body":"I believe the correct backwards-compatible solution here is to case on the relevant versions of GHC in the extracted code.  According to [stack overflow](https://stackoverflow.com/a/28292585/377022), we can do things like `#if __GLASGOW_HASKELL__ >= xyy`","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/832932410/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/832932797","html_url":"https://github.com/coq/coq/issues/14256#issuecomment-832932797","issue_url":"https://api.github.com/repos/coq/coq/issues/14256","id":832932797,"node_id":"MDEyOklzc3VlQ29tbWVudDgzMjkzMjc5Nw==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2021-05-05T18:58:40Z","updated_at":"2021-05-05T18:58:40Z","author_association":"MEMBER","body":"So all we need to do is figure out the right version numbers for `Any` and `unsafeCoerce#`, and add conditionals on those version numbers","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/832932797/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/834285773","html_url":"https://github.com/coq/coq/issues/14256#issuecomment-834285773","issue_url":"https://api.github.com/repos/coq/coq/issues/14256","id":834285773,"node_id":"MDEyOklzc3VlQ29tbWVudDgzNDI4NTc3Mw==","user":{"login":"herbelin","id":460771,"node_id":"MDQ6VXNlcjQ2MDc3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/460771?v=4","gravatar_id":"","url":"https://api.github.com/users/herbelin","html_url":"https://github.com/herbelin","followers_url":"https://api.github.com/users/herbelin/followers","following_url":"https://api.github.com/users/herbelin/following{/other_user}","gists_url":"https://api.github.com/users/herbelin/gists{/gist_id}","starred_url":"https://api.github.com/users/herbelin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/herbelin/subscriptions","organizations_url":"https://api.github.com/users/herbelin/orgs","repos_url":"https://api.github.com/users/herbelin/repos","events_url":"https://api.github.com/users/herbelin/events{/privacy}","received_events_url":"https://api.github.com/users/herbelin/received_events","type":"User","site_admin":false},"created_at":"2021-05-07T11:25:35Z","updated_at":"2021-05-07T11:25:35Z","author_association":"MEMBER","body":"In any case, once it is clear what is the right `#if __GLASGOW_HASKELL__` incantation to give, this is to be written in file [plugins/extraction/haskell.ml](https://github.com/coq/coq/blob/master/plugins/extraction/haskell.ml) of the archive.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/834285773/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/844282492","html_url":"https://github.com/coq/coq/issues/14256#issuecomment-844282492","issue_url":"https://api.github.com/repos/coq/coq/issues/14256","id":844282492,"node_id":"MDEyOklzc3VlQ29tbWVudDg0NDI4MjQ5Mg==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2021-05-19T16:47:01Z","updated_at":"2021-05-19T16:47:01Z","author_association":"MEMBER","body":"According to https://github.com/ghc/ghc/commit/74ad75e87317196c600dfabc61aee1b87d95c214, `GHC.Base.unsafeCoerce#` should be `GHC.Exts.unsafeCoerce#` in versions >= 9.0.1-rc1, which seems to be the same as versions >= 9.0.\\* according to https://github.com/ghc/ghc/tags\r\nAccording to https://github.com/ghc/ghc/commit/24d761531cfc18152598becc0aeb90376fd19198, `GHC.Prim.Any` should be replaced by `GHC.Types.Any` in versions >= ghc-8.2.1-rc1, which seems to be the same as versions >= 8.2.\\*","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/844282492/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/844318809","html_url":"https://github.com/coq/coq/issues/14256#issuecomment-844318809","issue_url":"https://api.github.com/repos/coq/coq/issues/14256","id":844318809,"node_id":"MDEyOklzc3VlQ29tbWVudDg0NDMxODgwOQ==","user":{"login":"herbelin","id":460771,"node_id":"MDQ6VXNlcjQ2MDc3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/460771?v=4","gravatar_id":"","url":"https://api.github.com/users/herbelin","html_url":"https://github.com/herbelin","followers_url":"https://api.github.com/users/herbelin/followers","following_url":"https://api.github.com/users/herbelin/following{/other_user}","gists_url":"https://api.github.com/users/herbelin/gists{/gist_id}","starred_url":"https://api.github.com/users/herbelin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/herbelin/subscriptions","organizations_url":"https://api.github.com/users/herbelin/orgs","repos_url":"https://api.github.com/users/herbelin/repos","events_url":"https://api.github.com/users/herbelin/events{/privacy}","received_events_url":"https://api.github.com/users/herbelin/received_events","type":"User","site_admin":false},"created_at":"2021-05-19T17:33:15Z","updated_at":"2021-05-19T17:33:15Z","author_association":"MEMBER","body":"> ```\r\n> /tmp/foo.hs:26:12: error:\r\n>     Not in scope: type constructor or class ‘GHC.Prim.Any’\r\n>     Perhaps you meant ‘GHC.Prim.Int#’ (imported from GHC.Prim)\r\n>     Module ‘GHC.Prim’ does not export ‘Any’.\r\n>    |\r\n> 26 | type Any = GHC.Prim.Any\r\n>    |            ^^^^^^^^^^^^\r\n>  ```\r\n\r\nThe `GHC.Prim.Any` was already addressed in #6023 from Coq 8.7 (2017). The patch could easily be backported to the dev branch of Coq 8.6 if needed but I'm afraid there would be no further release of the 8.6 branch...\r\n\r\nI made #14346 to fix unsafeCoerce (not tested).","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/844318809/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/844326347","html_url":"https://github.com/coq/coq/issues/14256#issuecomment-844326347","issue_url":"https://api.github.com/repos/coq/coq/issues/14256","id":844326347,"node_id":"MDEyOklzc3VlQ29tbWVudDg0NDMyNjM0Nw==","user":{"login":"pi8027","id":111003,"node_id":"MDQ6VXNlcjExMTAwMw==","avatar_url":"https://avatars.githubusercontent.com/u/111003?v=4","gravatar_id":"","url":"https://api.github.com/users/pi8027","html_url":"https://github.com/pi8027","followers_url":"https://api.github.com/users/pi8027/followers","following_url":"https://api.github.com/users/pi8027/following{/other_user}","gists_url":"https://api.github.com/users/pi8027/gists{/gist_id}","starred_url":"https://api.github.com/users/pi8027/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pi8027/subscriptions","organizations_url":"https://api.github.com/users/pi8027/orgs","repos_url":"https://api.github.com/users/pi8027/repos","events_url":"https://api.github.com/users/pi8027/events{/privacy}","received_events_url":"https://api.github.com/users/pi8027/received_events","type":"User","site_admin":false},"created_at":"2021-05-19T17:42:52Z","updated_at":"2021-05-19T17:46:18Z","author_association":"CONTRIBUTOR","body":"There are two PRs opened for this issue. Could you close one of them? I will review the remaining one next week.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/844326347/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/844591735","html_url":"https://github.com/coq/coq/issues/14256#issuecomment-844591735","issue_url":"https://api.github.com/repos/coq/coq/issues/14256","id":844591735,"node_id":"MDEyOklzc3VlQ29tbWVudDg0NDU5MTczNQ==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2021-05-20T00:38:01Z","updated_at":"2021-05-20T00:38:01Z","author_association":"MEMBER","body":"> The `GHC.Prim.Any` was already addressed in #6023 from Coq 8.7 (2017). The patch could easily be backported to the dev branch of Coq 8.6 if needed but I'm afraid there would be no further release of the 8.6 branch...\r\n\r\nIndeed, I'm a bit confused now how I got the error message, since I've not been using Coq older than 8.9.  Maybe I still had a very old build output around?  Note, however, `GHC.Base.Any` no longer exists now, and the new place is `GHC.Types.Any`, and I fix this in #14345 in a backwards-compatible way","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/844591735/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/844592201","html_url":"https://github.com/coq/coq/issues/14256#issuecomment-844592201","issue_url":"https://api.github.com/repos/coq/coq/issues/14256","id":844592201,"node_id":"MDEyOklzc3VlQ29tbWVudDg0NDU5MjIwMQ==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2021-05-20T00:39:15Z","updated_at":"2021-05-20T00:39:15Z","author_association":"MEMBER","body":"(And I tested the change of #14345 in fiat-crypto, though I admit I haven't tested the change in the build of Coq itself)","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/844592201/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/844599983","html_url":"https://github.com/coq/coq/issues/14256#issuecomment-844599983","issue_url":"https://api.github.com/repos/coq/coq/issues/14256","id":844599983,"node_id":"MDEyOklzc3VlQ29tbWVudDg0NDU5OTk4Mw==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2021-05-20T00:57:49Z","updated_at":"2021-05-20T00:57:49Z","author_association":"MEMBER","body":"Hm, perhaps I'm wrong, and #6023 in fact already resolves the issue.  Should I revert the conditional `Any` code?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/844599983/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/844601170","html_url":"https://github.com/coq/coq/issues/14256#issuecomment-844601170","issue_url":"https://api.github.com/repos/coq/coq/issues/14256","id":844601170,"node_id":"MDEyOklzc3VlQ29tbWVudDg0NDYwMTE3MA==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2021-05-20T01:00:44Z","updated_at":"2021-05-20T01:00:44Z","author_association":"MEMBER","body":"@herbelin Maybe we should keep your PR, since in fact we only need the unsafecoerce fix?  It needs a changelog and some test-suite updates though.  (I'm having some trouble building the test-suite locally since `./configure -local && make && make test-suite` doesn't work since the dune PR)","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/844601170/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/844601722","html_url":"https://github.com/coq/coq/issues/14256#issuecomment-844601722","issue_url":"https://api.github.com/repos/coq/coq/issues/14256","id":844601722,"node_id":"MDEyOklzc3VlQ29tbWVudDg0NDYwMTcyMg==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2021-05-20T01:02:03Z","updated_at":"2021-05-20T01:02:03Z","author_association":"MEMBER","body":"cc also @tchajed , who solved the Any issue in #6023 and might want to review whichever PR we settle on, and might have a preference between them?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/844601722/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/847703462","html_url":"https://github.com/coq/coq/issues/14256#issuecomment-847703462","issue_url":"https://api.github.com/repos/coq/coq/issues/14256","id":847703462,"node_id":"MDEyOklzc3VlQ29tbWVudDg0NzcwMzQ2Mg==","user":{"login":"pi8027","id":111003,"node_id":"MDQ6VXNlcjExMTAwMw==","avatar_url":"https://avatars.githubusercontent.com/u/111003?v=4","gravatar_id":"","url":"https://api.github.com/users/pi8027","html_url":"https://github.com/pi8027","followers_url":"https://api.github.com/users/pi8027/followers","following_url":"https://api.github.com/users/pi8027/following{/other_user}","gists_url":"https://api.github.com/users/pi8027/gists{/gist_id}","starred_url":"https://api.github.com/users/pi8027/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pi8027/subscriptions","organizations_url":"https://api.github.com/users/pi8027/orgs","repos_url":"https://api.github.com/users/pi8027/repos","events_url":"https://api.github.com/users/pi8027/events{/privacy}","received_events_url":"https://api.github.com/users/pi8027/received_events","type":"User","site_admin":false},"created_at":"2021-05-25T09:18:56Z","updated_at":"2021-05-25T09:18:56Z","author_association":"CONTRIBUTOR","body":"Could someone point out the reason why we need `unsafeCoerce#` here? I mean, why not `unsafeCoerce`? FTR, git-blame didn't help me: https://github.com/coq/coq/commit/3d95c838af3d648e4c32b0b4402e78bccdfa449f. (I stopped using Haskell on a daily basis 10 years ago. So sorry for potentially a silly question. My impression is that we need another reviewer for PR #14345.)","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/847703462/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/848110753","html_url":"https://github.com/coq/coq/issues/14256#issuecomment-848110753","issue_url":"https://api.github.com/repos/coq/coq/issues/14256","id":848110753,"node_id":"MDEyOklzc3VlQ29tbWVudDg0ODExMDc1Mw==","user":{"login":"herbelin","id":460771,"node_id":"MDQ6VXNlcjQ2MDc3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/460771?v=4","gravatar_id":"","url":"https://api.github.com/users/herbelin","html_url":"https://github.com/herbelin","followers_url":"https://api.github.com/users/herbelin/followers","following_url":"https://api.github.com/users/herbelin/following{/other_user}","gists_url":"https://api.github.com/users/herbelin/gists{/gist_id}","starred_url":"https://api.github.com/users/herbelin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/herbelin/subscriptions","organizations_url":"https://api.github.com/users/herbelin/orgs","repos_url":"https://api.github.com/users/herbelin/repos","events_url":"https://api.github.com/users/herbelin/events{/privacy}","received_events_url":"https://api.github.com/users/herbelin/received_events","type":"User","site_admin":false},"created_at":"2021-05-25T18:27:34Z","updated_at":"2021-05-25T18:27:34Z","author_association":"MEMBER","body":"> I mean, why not `unsafeCoerce`?\r\n\r\nNo idea (this should be asked to @letouzey). Apparently, a \"mega-hack\" should be used to use `unsafeCoerce#` (according to http://hackage.haskell.org/package/base-4.14.1.0/docs/src/Unsafe.Coerce.html#unsafeCoerce), so indeed, using `unsafeCoerce` may ensure that the \"hack\" is used (???).\r\n\r\nI'm not familiar with Haskell, are you proposing to replace `unsafeCoerce = GHC.Base.unsafeCoerce#` with `unsafeCoerce = GHC.Unsafe.Coerce.unsafeCoerce` (in `plugins/extraction/haskell.ml`)?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/848110753/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/848404561","html_url":"https://github.com/coq/coq/issues/14256#issuecomment-848404561","issue_url":"https://api.github.com/repos/coq/coq/issues/14256","id":848404561,"node_id":"MDEyOklzc3VlQ29tbWVudDg0ODQwNDU2MQ==","user":{"login":"pi8027","id":111003,"node_id":"MDQ6VXNlcjExMTAwMw==","avatar_url":"https://avatars.githubusercontent.com/u/111003?v=4","gravatar_id":"","url":"https://api.github.com/users/pi8027","html_url":"https://github.com/pi8027","followers_url":"https://api.github.com/users/pi8027/followers","following_url":"https://api.github.com/users/pi8027/following{/other_user}","gists_url":"https://api.github.com/users/pi8027/gists{/gist_id}","starred_url":"https://api.github.com/users/pi8027/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pi8027/subscriptions","organizations_url":"https://api.github.com/users/pi8027/orgs","repos_url":"https://api.github.com/users/pi8027/repos","events_url":"https://api.github.com/users/pi8027/events{/privacy}","received_events_url":"https://api.github.com/users/pi8027/received_events","type":"User","site_admin":false},"created_at":"2021-05-26T02:16:42Z","updated_at":"2021-05-26T06:01:29Z","author_association":"CONTRIBUTOR","body":"> > I mean, why not `unsafeCoerce`?\r\n> \r\n> No idea (this should be asked to @letouzey). Apparently, a \"mega-hack\" should be used to use `unsafeCoerce#` (according to http://hackage.haskell.org/package/base-4.14.1.0/docs/src/Unsafe.Coerce.html#unsafeCoerce), so indeed, using `unsafeCoerce` may ensure that the \"hack\" is used (???).\r\n\r\nIIUC, that \"mega-hack\" is a hack required to implement `unsafeCoerce` (but which I don't understand in detail). I think what we should look at is the [documentation of `unsafeCoerce#`](https://hackage.haskell.org/package/base-4.15.0.0/docs/GHC-Exts.html#v:unsafeCoerce-35-), which says \"Highly, terribly dangerous coercion from one representation type to another. Misuse of this function can invite the garbage collector to trounce upon your data and then laugh in your face. You don't want this function. Really.\"\r\n\r\n> I'm not familiar with Haskell, are you proposing to replace `unsafeCoerce = GHC.Base.unsafeCoerce#` with `unsafeCoerce = GHC.Unsafe.Coerce.unsafeCoerce` (in `plugins/extraction/haskell.ml`)?\r\n\r\nIf it works, yes. We may save a case analysis `#if ... #endif` this way, since `Unsafe.Coerce.unsafeCoerce` has not been relocated at least from [base-4.0.0.0](https://hackage.haskell.org/package/base-4.0.0.0/docs/Unsafe-Coerce.html) (2009-02-10).","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/848404561/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]