[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530828","html_url":"https://github.com/coq/coq/issues/4013#issuecomment-337530828","issue_url":"https://api.github.com/repos/coq/coq/issues/4013","id":337530828,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzMDgyOA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-02-08T02:45:11Z","updated_at":"2017-10-18T09:50:47Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nIt would be nice to have, e.g., a [par_deferred: ] selector so that [par_deferred: foo] was equivalent to [par: abstract foo] in synchronous mode, but such that [foo] wasn't run in quick mode, and instead deferred for later.  (Alternatively, [par: abstract (...)] could have this behavior, or it could even be a vernacular.  The syntax doesn't matter much to me.)\n\nThe main use-case I currently have in mind is that when porting developments from 8.4 (bedrock, in this case), I want to first get all the definitions working, and then work out the tactics/proofs later.  This is easier if I can do a batch replace of\n  Definition foo.\n  Proof.\n    tac1; abstract tac2.\n  Defined.\nwith\n  Definition foo.\n  Proof.\n    tac1.\n    par_deferred: tac2.\n  Defined.\nrather than having to manually replace some proofs with [admit], or factor out the proofs into separate theorems.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530828/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530829","html_url":"https://github.com/coq/coq/issues/4013#issuecomment-337530829","issue_url":"https://api.github.com/repos/coq/coq/issues/4013","id":337530829,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzMDgyOQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-02-11T20:38:42Z","updated_at":"2017-10-18T09:50:47Z","author_association":"CONTRIBUTOR","body":"Comment author: @gares\n\nCant you just use \"all: admit\" ? (and comment out the proofs)\n\nDefined lemmas cannot be processed asynchronously.  It is a hard constraint.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530829/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530830","html_url":"https://github.com/coq/coq/issues/4013#issuecomment-337530830","issue_url":"https://api.github.com/repos/coq/coq/issues/4013","id":337530830,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzMDgzMA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-02-11T20:41:25Z","updated_at":"2017-10-18T09:50:48Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nI would prefer to have the proof errors show up in make vio2vo, if possible.\n\nI know that the bodies of [Defined] lemmas cannot be processed asynchronously.  However, the bodies of the opaque [foo_subproof*] should be able to be processes asynchronously, right?\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530830/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530831","html_url":"https://github.com/coq/coq/issues/4013#issuecomment-337530831","issue_url":"https://api.github.com/repos/coq/coq/issues/4013","id":337530831,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzMDgzMQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-02-12T15:02:19Z","updated_at":"2017-10-18T09:50:48Z","author_association":"CONTRIBUTOR","body":"Comment author: @gares\n\nSorry, I can't do that.\n\nThe point is that I don't know their types.  If you know their types in advance (without executing the tactics) and you write explicit lemmas for them\nthen they can parallelized or postponed by stocking them in the .vio files.  \n\nProbably the message is:\n\"opaque + explicit type = asynchronous\"\nThe \"par:\" thing is parallel but synchronous.\nThe \".vio\" thing is asynchronous and parallel.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530831/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530832","html_url":"https://github.com/coq/coq/issues/4013#issuecomment-337530832","issue_url":"https://api.github.com/repos/coq/coq/issues/4013","id":337530832,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzMDgzMg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-02-17T22:38:10Z","updated_at":"2017-10-18T09:50:48Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nWhy can't the types be automatically inferred from the state after executing the synchronous tactics up to that point?  That is, if we have:\n\nSection foo.\n  Context ...\n  Definition foo : bar.\n  Proof using ...\n    some tactics.\n    par_abstract: finish.\n  Defined.\nEnd foo.\n\nWe already know, at the point of par_abstract (having executed [some tactics.], but not [finish.]), what the type of each theorem-to-be-generated is going to be, and we can finish the definition of [foo] without filling in the proof terms, even though the user has not made those types explicit.  The fact that we have to evaluate the [some tactics.] to get to this point doesn't seem any different to me than having to evaluate [Notation]s or previous transparent definitions to make sense of the type of a new definition statement, or that you have to evaluate Ltac code to make [Theorem baz : $(qux)$. Proof using ... ... Qed.] parallel.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530832/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530833","html_url":"https://github.com/coq/coq/issues/4013#issuecomment-337530833","issue_url":"https://api.github.com/repos/coq/coq/issues/4013","id":337530833,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzMDgzMw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-02-17T22:45:02Z","updated_at":"2017-10-18T09:50:48Z","author_association":"CONTRIBUTOR","body":"Comment author: @gares\n\nYou are right, now that you make me think about it, in this particular case it could.  But not with a 5 lines patch, so I'm afraid it will not make it for 8.5.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530833/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]