The standard library itself is built with all warnings as errors. As long as we consider that the expected behavior of compatibility aliases is only to generate a deprecation warning even without using the `-compat` option, it makes sense to test this in the test-suite (see also #6840).
A path to solve the inconsistency in #6840 and thus this issue as well would be to make the deprecated attribute (see https://gitlab.com/coq/coq/-/jobs/artifacts/master/file/_install_ci/share/doc/coq/sphinx/html/language/gallina-specification-language.html?job=documentation#attributes) work with Definitions / Notations as well. Then this use case would be handled by this other mechanism and we could change the semantics of compatibility aliases.
@JasonGross This was fixed in #8634, correct?
The compatibility notation usage was fixed in #8634, but there is not currently anything preventing reintroduction of usage of compat notations in the test-suite, which may or may not be worth being careful about.  I'm fine with having this closed, though.
