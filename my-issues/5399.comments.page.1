[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337551913","html_url":"https://github.com/coq/coq/issues/5399#issuecomment-337551913","issue_url":"https://api.github.com/repos/coq/coq/issues/5399","id":337551913,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1MTkxMw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-03-15T00:28:59Z","updated_at":"2017-10-18T10:56:33Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nI'd like the ability to make  \"Error: Ltac variable ts is not bound to an \nidentifier. It cannot be used in a binder.\" uncatchable in the way that \nanomalies are uncatchable; this is one of the more annoying changes to track \ndown from 8.4 to 8.5, and it would be nice to get some help from Coq in \nnoticing when this happens.  (These should actually be definition-time errors, \nnot running-time errors, but this seems useful while I'm waiting for Ltac 2.)\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337551913/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337551915","html_url":"https://github.com/coq/coq/issues/5399#issuecomment-337551915","issue_url":"https://api.github.com/repos/coq/coq/issues/5399","id":337551915,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1MTkxNQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-03-15T01:46:38Z","updated_at":"2017-10-18T10:56:33Z","author_association":"CONTRIBUTOR","body":"Comment author: @ejgallego\n\nWell you could always modify pretyping.ml and replace anomaly by user_err. The backtrace should give you more info to do the proper refinement.\n\nDo you have a test case at hand?\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337551915/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337551917","html_url":"https://github.com/coq/coq/issues/5399#issuecomment-337551917","issue_url":"https://api.github.com/repos/coq/coq/issues/5399","id":337551917,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1MTkxNw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-03-15T02:11:18Z","updated_at":"2017-10-18T10:56:33Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nIt's not that it's hard to fix or produce or anything:\n\nLtac silly :=\n  let ts := constr:(1) in\n  let f := constr:(fun ts : Type => ts) in\n  pose f; pose ts.\n\nThe fix is to replace the second and third \"ts\" with \"ts'\".  The issue is that, e.g., when compiling Bedrock, the bad code can be very deep in nested tactic invocations, and so I might not realize why it's doing the wrong thing.  I might recompile a patched version of Coq the next time I'm working on porting Bedrock...\n\n> Well you could always modify pretyping.ml and replace anomaly by user_err.\n\nHuh?  Do you mean \"replace user_err with anomaly\", rather than the other way around?\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337551917/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337551919","html_url":"https://github.com/coq/coq/issues/5399#issuecomment-337551919","issue_url":"https://api.github.com/repos/coq/coq/issues/5399","id":337551919,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1MTkxOQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-03-15T10:32:48Z","updated_at":"2017-10-18T10:56:33Z","author_association":"CONTRIBUTOR","body":"Comment author: @ppedrot\n\nWould you be happy with just a tactic \"panic\" that takes a message and throws an unrecoverable exception? You could then use something like 'tac || panic \"foo\"' to achieve what you want then, couldn't you?\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337551919/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337551920","html_url":"https://github.com/coq/coq/issues/5399#issuecomment-337551920","issue_url":"https://api.github.com/repos/coq/coq/issues/5399","id":337551920,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1MTkyMA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-03-15T12:30:11Z","updated_at":"2017-10-18T10:56:33Z","author_association":"CONTRIBUTOR","body":"Comment author: @ejgallego\n\nSorry Jason, indeed I meant \"replace A for B\".\n\nI am sorry about the example too, but I don't really know how to write LTAC tactics beyond the basic \";\" and \"||\".\n\nI was trying to find the exact spot in the code where the error is masked, so what I was looking is for an example where the error is masked.\n\nHow can we combine silly with another tactic such that the error is masked?\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337551920/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337551921","html_url":"https://github.com/coq/coq/issues/5399#issuecomment-337551921","issue_url":"https://api.github.com/repos/coq/coq/issues/5399","id":337551921,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1MTkyMQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-03-15T12:39:20Z","updated_at":"2017-10-18T10:56:34Z","author_association":"CONTRIBUTOR","body":"Comment author: @ejgallego\n\nHi Jason,\n\nhave a look to this tree: https://github.com/ejgallego/coq/tree/ltac%2Bexn_noignore\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337551921/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337551923","html_url":"https://github.com/coq/coq/issues/5399#issuecomment-337551923","issue_url":"https://api.github.com/repos/coq/coq/issues/5399","id":337551923,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1MTkyMw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-03-15T12:58:31Z","updated_at":"2017-10-18T10:56:34Z","author_association":"CONTRIBUTOR","body":"Comment author: @ejgallego\n\nIndeed it is not clear to me why all UserErr are masked here, that seems a bit fishy, doesn't it folks?\n\nI've just pushed a tree disabling this masking to my personal Travis to see if anything breaks.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337551923/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337551924","html_url":"https://github.com/coq/coq/issues/5399#issuecomment-337551924","issue_url":"https://api.github.com/repos/coq/coq/issues/5399","id":337551924,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1MTkyNA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-03-15T15:38:35Z","updated_at":"2017-10-18T10:56:34Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nTo mask the error, run [try silly].  It's masked in the same way that [try \ncongruence] succeeds and (correctly) masks the error of [congruence].\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337551924/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337551926","html_url":"https://github.com/coq/coq/issues/5399#issuecomment-337551926","issue_url":"https://api.github.com/repos/coq/coq/issues/5399","id":337551926,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1MTkyNg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-03-15T15:41:34Z","updated_at":"2017-10-18T10:56:34Z","author_association":"CONTRIBUTOR","body":"Comment author: @ejgallego\n\nHey Jason, yeah I figured out myself, I think indeed my patch does what you want.\n\n(I tested with silly || idtac).\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337551926/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337551928","html_url":"https://github.com/coq/coq/issues/5399#issuecomment-337551928","issue_url":"https://api.github.com/repos/coq/coq/issues/5399","id":337551928,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1MTkyOA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-03-15T15:42:03Z","updated_at":"2017-10-18T10:56:34Z","author_association":"CONTRIBUTOR","body":"Comment author: @ejgallego\n\nIt is indeed trivial to backport to 8.5, I've put a tree in my github.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337551928/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337551929","html_url":"https://github.com/coq/coq/issues/5399#issuecomment-337551929","issue_url":"https://api.github.com/repos/coq/coq/issues/5399","id":337551929,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1MTkyOQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-03-15T15:48:20Z","updated_at":"2017-10-18T10:56:34Z","author_association":"CONTRIBUTOR","body":"Comment author: @ejgallego\n\nJust tested again, `try silly` is not masked anymore.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337551929/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337551930","html_url":"https://github.com/coq/coq/issues/5399#issuecomment-337551930","issue_url":"https://api.github.com/repos/coq/coq/issues/5399","id":337551930,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1MTkzMA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-03-15T17:39:38Z","updated_at":"2017-10-18T10:56:35Z","author_association":"CONTRIBUTOR","body":"Comment author: @ejgallego\n\n> Indeed it is not clear to me why all UserErr are masked here, that seems a bit fishy, doesn't it folks?\n>\n> I've just pushed a tree disabling this masking to my personal Travis to see if anything breaks.\n\nWell, that was a naïve thing to try, it seems the idiom of using UserErr as a recoverable error in tactics is all over the place.\n\nWould we gain anything from making the distinction between UserErr and tactic-catchable errors?\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337551930/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337551931","html_url":"https://github.com/coq/coq/issues/5399#issuecomment-337551931","issue_url":"https://api.github.com/repos/coq/coq/issues/5399","id":337551931,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1MTkzMQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-03-15T17:50:34Z","updated_at":"2017-10-18T10:56:35Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\n> Well, that was a naïve thing to try, it seems the idiom of using UserErr as a recoverable error in tactics is all over the place.\n\nI'd be curious to know if not masking this particular error breaks any code you're testing on Travis.  If so, I suspect that there was already a bug, or that the code was previously dead.\n\n> Would we gain anything from making the distinction between UserErr and tactic-catchable errors?\n\nI think this is what PMP was proposing with [panic] (which would indeed be useful, I believe, though not for this particular case).\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337551931/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337551932","html_url":"https://github.com/coq/coq/issues/5399#issuecomment-337551932","issue_url":"https://api.github.com/repos/coq/coq/issues/5399","id":337551932,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1MTkzMg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-03-15T17:55:45Z","updated_at":"2017-10-18T10:56:35Z","author_association":"CONTRIBUTOR","body":"Comment author: @ppedrot\n\nFWIW, you can already make an exception uncatchable by the tactic layer by wrapping it inside Logic_monad.Exception (or use the primitive Proofview.NonLogical.raise if you're already in the monad). I'm pretty sure it'll break unrelated stuff if you start replacing catchable exceptions by uncatchable ones, so this should only be done on a debug-case basis.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337551932/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337551933","html_url":"https://github.com/coq/coq/issues/5399#issuecomment-337551933","issue_url":"https://api.github.com/repos/coq/coq/issues/5399","id":337551933,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1MTkzMw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-03-15T18:01:20Z","updated_at":"2017-10-18T10:56:35Z","author_association":"CONTRIBUTOR","body":"Comment author: @ejgallego\n\n(In reply to Pierre-Marie Pédrot from comment [BZ#13](https://github.com/coq/coq/issues?q=is%3Aissue%20%22Original%20bug%20ID%3A%20BZ%2313%22))\n> FWIW, you can already make an exception uncatchable by the tactic layer by\n> wrapping it inside Logic_monad.Exception (or use the primitive\n> Proofview.NonLogical.raise if you're already in the monad). I'm pretty sure\n> it'll break unrelated stuff if you start replacing catchable exceptions by\n> uncatchable ones, so this should only be done on a debug-case basis.\n\nI see, thanks Pierre-Marie. However what I am wondering is that currently, all the calls to user_err are being catched, is this really what we want?\n\nIt seems to me that this could potentially catch too many errors, ins't it?\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337551933/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337551935","html_url":"https://github.com/coq/coq/issues/5399#issuecomment-337551935","issue_url":"https://api.github.com/repos/coq/coq/issues/5399","id":337551935,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1MTkzNQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-03-15T19:11:28Z","updated_at":"2017-10-18T10:56:35Z","author_association":"CONTRIBUTOR","body":"Comment author: @ppedrot\n\n(In reply to Emilio J. Gallego Arias from comment [BZ#14](https://github.com/coq/coq/issues?q=is%3Aissue%20%22Original%20bug%20ID%3A%20BZ%2314%22))\n> I see, thanks Pierre-Marie. However what I am wondering is that currently,\n> all the calls to user_err are being catched, is this really what we want?\n\nShort answer: history. There is a mix of exception-raising and monadic style, even in the new engine, so that we need to catch exceptions here and there. I've been advocating against the use of exceptions in Coq except for fatal errors, but the code base is not ready for this yet.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337551935/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337551936","html_url":"https://github.com/coq/coq/issues/5399#issuecomment-337551936","issue_url":"https://api.github.com/repos/coq/coq/issues/5399","id":337551936,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1MTkzNg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-03-15T19:32:37Z","updated_at":"2017-10-18T10:56:35Z","author_association":"CONTRIBUTOR","body":"Comment author: @ejgallego\n\n(In reply to Pierre-Marie Pédrot from comment [BZ#15](https://github.com/coq/coq/issues?q=is%3Aissue%20%22Original%20bug%20ID%3A%20BZ%2315%22))\n>\n> Short answer: history. There is a mix of exception-raising and monadic\n> style, even in the new engine, so that we need to catch exceptions here and\n> there. I've been advocating against the use of exceptions in Coq except for\n> fatal errors, but the code base is not ready for this yet.\n\nI see, thanks. However, a quick \"grep user_err|error\" makes me think that a refinement on error exception could be possible.\n\nBut first, I think we want to finish the removal of duplicate error entry functions so we get a better view.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337551936/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337551939","html_url":"https://github.com/coq/coq/issues/5399#issuecomment-337551939","issue_url":"https://api.github.com/repos/coq/coq/issues/5399","id":337551939,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1MTkzOQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-03-15T20:24:27Z","updated_at":"2017-10-18T10:56:36Z","author_association":"CONTRIBUTOR","body":"Comment author: @ejgallego\n\nBy the way, unmasking Jason's error did break no travis CI, I wonder if this should be made the default.\n\nhttps://travis-ci.org/ejgallego/coq/builds/211330621\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337551939/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337551941","html_url":"https://github.com/coq/coq/issues/5399#issuecomment-337551941","issue_url":"https://api.github.com/repos/coq/coq/issues/5399","id":337551941,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1MTk0MQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-06-09T11:53:21Z","updated_at":"2017-10-18T10:56:36Z","author_association":"CONTRIBUTOR","body":"Comment author: @Zimmi48\n\nI did not read the conversation in full detail. Has Jason wish been granted? Otherwise, since it is a feature request I'm moving this to 8.8.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337551941/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/1043575225","html_url":"https://github.com/coq/coq/issues/5399#issuecomment-1043575225","issue_url":"https://api.github.com/repos/coq/coq/issues/5399","id":1043575225,"node_id":"IC_kwDOABUDh84-M7G5","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2022-02-17T22:54:09Z","updated_at":"2022-02-17T22:54:09Z","author_association":"MEMBER","body":"This is implemented in Ltac2.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/1043575225/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]