[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337519726","html_url":"https://github.com/coq/coq/issues/3344#issuecomment-337519726","issue_url":"https://api.github.com/repos/coq/coq/issues/3344","id":337519726,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUxOTcyNg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-05-25T07:39:00Z","updated_at":"2020-05-22T09:50:03Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\r\n```coq\r\n\r\n(* File reduced by coq-bug-finder from original input, then from 716 lines to 197 lines, then from 206 lines to 162 lines, then from \\\r\n163 lines to 73 lines *)\r\nRequire Import Coq.Sets.Ensembles.\r\nRequire Import Coq.Strings.String.\r\nGlobal Set Implicit Arguments.\r\nGlobal Set Asymmetric Patterns.\r\nLtac clearbodies := repeat match goal with | [ H := _ |- _ ] => clearbody H end.\r\n\r\nInductive Comp : Type -> Type :=\r\n| Return : forall A, A -> Comp A\r\n| Bind : forall A B, Comp A -> (A -> Comp B) -> Comp B.\r\nInductive computes_to : forall A, Comp A -> A -> Prop :=\r\n| ReturnComputes : forall A v, @ computes_to A (Return v) v\r\n| BindComputes : forall A B comp_a f comp_a_value comp_b_value,\r\n                   @ computes_to A comp_a comp_a_value\r\n                   -> @ computes_to B (f comp_a_value) comp_b_value\r\n                   -> @ computes_to B (Bind comp_a f) comp_b_value.\r\n\r\nInductive is_computational : forall A, Comp A -> Prop :=\r\n| Return_is_computational : forall A (x : A), is_computational (Return x)\r\n| Bind_is_computational : forall A B (cA : Comp A) (f : A -> Comp B),\r\n                            is_computational cA\r\n                            -> (forall a,\r\n                                  @ computes_to _ cA a -> is_computational (f a))\r\n                            -> is_computational (Bind cA f).\r\nTheorem is_computational_inv A (c : Comp A)\r\n: is_computational c\r\n  -> match c with\r\n       | Return _ _ => True\r\n       | Bind _ _ x f => is_computational x\r\n                         /\\ forall v, computes_to x v\r\n                                      -> is_computational (f v)\r\n     end.\r\n  admit.\r\nDefined.\r\nFixpoint is_computational_unique_val A (c : Comp A) {struct c}\r\n: is_computational c -> { a | unique (computes_to c) a }.\r\nProof.\r\n  refine match c as c return is_computational c -> { a | unique (computes_to c) a } with\r\n           | Return T x => fun _ => exist (unique (computes_to (Return x)))\r\n                                          x\r\n                                          _\r\n           | Bind _ _ x f\r\n             => fun H\r\n                => let H' := is_computational_inv H in\r\n                   let xv := @ is_computational_unique_val _ _ (proj1 H') in\r\n                   let fxv := @ is_computational_unique_val _ _ (proj2 H' _ (proj1 (proj2_sig xv))) in\r\n                   exist (unique (computes_to _))\r\n                         (proj1_sig fxv)\r\n                         _\r\n         end;\r\n  clearbodies;\r\n  clear is_computational_unique_val;\r\n  clear;\r\n  first [ abstract admit\r\n        | abstract admit ].\r\nDefined.\r\n(* Anomaly: Uncaught exception Not_found(_). Please report. *)\r\n\r\n\r\n```","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337519726/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]