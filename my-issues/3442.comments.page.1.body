Comment author: @JasonGross

In moving some of my developments to trunk, I cut a file that takes 5m to compile down to 3m, simply by removing the [abstract]s that are used inside of [Qed]'d proofs.  Since these [abstract]s are now let-expanded in opaque proofs, it would be nice if they were a true no-op, timing wise, in such opaque proofs.  Additionally/alternatively, it would be nice to have noisy warnings about evilness or inefficiency or whatever whenever [abstract] is used inside a [Qed]'d proof.


Comment author: @gares

Well done removing abstract.

Could you please explain what you mean by "let-expanded" ?
Do you mean inlined?

Just for the records, during proof construction abstract still behaves
as before, it is at Qed time that things are inlined.


Comment author: @JasonGross

Sorry, yes, I mean inlined.  After being inlined, the Qed retypechecks the proof term, right?  So, before, where the term generated by abstract was only typechecked once, now I think it is typechecked twice.  (If not, then I have to figure out why the timing behavior is what it is.)


Comment author: @ejgallego

This will hopefully addressed in 8.8.


See also #4357
@ejgallego what's the status of this?
> @ejgallego what's the status of this?

The original attempt to refactor the side-effects in the CIW didn't work so no ETA available.
