[{"url":"https://api.github.com/repos/coq/coq/issues/comments/649826518","html_url":"https://github.com/coq/coq/issues/10092#issuecomment-649826518","issue_url":"https://api.github.com/repos/coq/coq/issues/10092","id":649826518,"node_id":"MDEyOklzc3VlQ29tbWVudDY0OTgyNjUxOA==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2020-06-25T21:27:17Z","updated_at":"2020-06-25T21:27:17Z","author_association":"MEMBER","body":"Primitive functions not being hardened against broken input is not restricted to printing. Most functions need to be wrapped inside a sanitizer, but we should also expose the low-level equivalent for efficiency.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/649826518/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/727267875","html_url":"https://github.com/coq/coq/issues/10092#issuecomment-727267875","issue_url":"https://api.github.com/repos/coq/coq/issues/10092","id":727267875,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNzI2Nzg3NQ==","user":{"login":"herbelin","id":460771,"node_id":"MDQ6VXNlcjQ2MDc3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/460771?v=4","gravatar_id":"","url":"https://api.github.com/users/herbelin","html_url":"https://github.com/herbelin","followers_url":"https://api.github.com/users/herbelin/followers","following_url":"https://api.github.com/users/herbelin/following{/other_user}","gists_url":"https://api.github.com/users/herbelin/gists{/gist_id}","starred_url":"https://api.github.com/users/herbelin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/herbelin/subscriptions","organizations_url":"https://api.github.com/users/herbelin/orgs","repos_url":"https://api.github.com/users/herbelin/repos","events_url":"https://api.github.com/users/herbelin/events{/privacy}","received_events_url":"https://api.github.com/users/herbelin/received_events","type":"User","site_admin":false},"created_at":"2020-11-14T21:29:12Z","updated_at":"2020-11-14T21:29:12Z","author_association":"MEMBER","body":"Updated way to produce the error in 8.12 and pre-8.13 master (API of `Constr.Unsafe.Lambda` changed):\r\n```\r\nRequire Import Ltac2.Ltac2.\r\n\r\nLtac2 rec head v :=\r\n  match! v with\r\n  | ?f ?x => head f\r\n  | ?x => x\r\n  end.\r\n\r\nLtac2 fake_cases (c : constr) (i : int) :=\r\n  let ind := match Constr.Unsafe.kind (head c) with\r\n             | Constr.Unsafe.Ind ind inst => ind\r\n             | _ => Control.zero (Tactic_failure (Some (Message.of_constr c)))\r\n             end in\r\n  Constr.Unsafe.make\r\n    (Constr.Unsafe.Lambda\r\n       (Constr.Binder.make None c)\r\n       (Constr.Unsafe.make\r\n          (Constr.Unsafe.Case\r\n             (Constr.Unsafe.case ind)\r\n             (Constr.Unsafe.make (Constr.Unsafe.Rel 1))\r\n             '(fun _ : $c => unit)\r\n             (Array.make i 'tt)))).\r\n\r\nImport Ltac2.Notations.\r\n\r\nGoal True.\r\n  let v := fake_cases 'False 1 in\r\n  Message.print (Message.of_constr v).\r\n```","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/727267875/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/825843070","html_url":"https://github.com/coq/coq/issues/10092#issuecomment-825843070","issue_url":"https://api.github.com/repos/coq/coq/issues/10092","id":825843070,"node_id":"MDEyOklzc3VlQ29tbWVudDgyNTg0MzA3MA==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2021-04-23T18:30:04Z","updated_at":"2021-04-23T18:30:04Z","author_association":"MEMBER","body":"Closing as yet another explicitly unsafe call.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/825843070/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]