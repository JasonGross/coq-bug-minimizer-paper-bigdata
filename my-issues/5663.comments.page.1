[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337556015","html_url":"https://github.com/coq/coq/issues/5663#issuecomment-337556015","issue_url":"https://api.github.com/repos/coq/coq/issues/5663","id":337556015,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1NjAxNQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-07-21T19:19:13Z","updated_at":"2017-10-18T11:09:19Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nIn particular, [vm_compute in V] will reduce the type, but [eval vm_compute in] \nwill not.  This matters in, e.g., this example:\n\nRecord HOLD T := hold { v : T }.\nUnset Printing Records.\nDefinition nat' := nat.\nGoal True.\n  let v := constr:(@ hold nat' 5) in\n  let v' := (eval vm_compute in v) in\n  pose v' as V.\n  progress vm_compute in V.\n\nIt's not entirely clear to me whether or not this is a bug, per se, but I think \nit should be warned about in the user manual / documentation of [eval \nvm_compute] and [eval native_compute], at least.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337556015/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337556017","html_url":"https://github.com/coq/coq/issues/5663#issuecomment-337556017","issue_url":"https://api.github.com/repos/coq/coq/issues/5663","id":337556017,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1NjAxNw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-07-22T09:57:57Z","updated_at":"2017-10-18T11:09:20Z","author_association":"CONTRIBUTOR","body":"Comment author: @herbelin\n\nThis is common to all reduction strategy. When applied to a declaration, it reduces both the body and type (unless there is a \"in type of\" or \"in value of\" modifier).\n\nIn \"eval myreduction in t\", only \"t\" as a term is considered and in \"pose t\", the type is reconstructed from \"t\".\n\nSo, I don't see this as a bug, but maybe the documentation of \"eval\" could indeed add something about that.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337556017/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]