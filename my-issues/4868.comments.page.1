[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337544381","html_url":"https://github.com/coq/coq/issues/4868#issuecomment-337544381","issue_url":"https://api.github.com/repos/coq/coq/issues/4868","id":337544381,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0NDM4MQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-06-29T15:33:33Z","updated_at":"2017-10-18T10:31:53Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nEven when [Universe Minimization ToSet] is [Unset], it should be permissible to minimize some universes to [Set].  In particular, any universe which is not explicitly mentioned by the user (this corresponds to universes which are not Rigid?), and which does not appear anywhere in the body or the type of the resulting term, should definitely be minmizable (even to Set).  If this does not happen, then spurious \"phantom\" universes can appear from missing binders.  (See https://github.com/HoTT/HoTT/pull/813 for more examples where, e.g., [forall n : nat, f n] has fewer universes than [forall n, f n], resulting from the phantom annotation [forall n : (nat : Type@ {fresh}), ...].)\n\n(* -*- mode: coq; coq-prog-args: (\"-emacs\" \"-R\" \"theories\" \"HoTT\" \"-top\" \"Unit\") -*- *)\n(* File reduced by coq-bug-finder from original input, then from 148 lines to 17 lines, then from 57 lines to 16 lines, then from 879 lines to 44 lines, then from 58 lines to 44 lines *)\n(* coqc version 8.5pl1 (June 2016) compiled on Jun 13 2016 21:7:27 with OCaml 4.02.3                                                                                                                        \n   coqtop version 8.5pl1 (June 2016) *)\nGlobal Set Universe Polymorphism.\nGlobal Unset Strict Universe Declaration.\nGlobal Unset Universe Minimization ToSet.\nClass IsEquiv {A B : Type} (f : A -> B) := { equiv_inv : B -> A }.\nInductive Unit : Set := tt : Unit.\nNotation unit_name x := (fun (_ : Unit) => x).\nGlobal Instance isequiv_unit_name@ {i j} (A : Type@ {i})\n: @ IsEquiv@ {i j} _ (Unit -> _) (fun (a:A) => unit_name a).\nAdmitted.\nGlobal Instance isequiv_unit_name'@ {i j} (A : Type@ {i})\n: @ IsEquiv@ {i j} _ _ (fun (a:A) => unit_name a).\nAdmitted.\n\nGoal True.\n  pose (@ isequiv_unit_name@ {i j}) || fail 0 \"too early\".\n  Set Printing Universes.\n  Set Printing All.\n  Print isequiv_unit_name'.\n  (* *** [ isequiv_unit_name'@ {Top.18 Top.19 Top.20} :                                                                                                                                                      \nforall A : Type@ {Top.18},                                                                                                                                                                                   \n@ IsEquiv@ {Top.18 Top.19} A (forall _ : Unit, A) (fun (a : A) (_ : Unit) => a) ]                                                                                                                             \n(* Top.18 Top.19 Top.20 |= Top.18 <= Top.19                                                                                                                                                                 \n                           Top.20 <= Top.19                                                                                                                                                                 \n                            *)                                                                                                                                                                              \n                                                                                                                                                                                                            \nisequiv_unit_name' is universe polymorphic                                                                                                                                                                  \nArgument scope is [type_scope]                                                                                                                                                                              \n *)\n  pose (@ isequiv_unit_name'@ {i j}). (* Error: Universe instance should have length 3 *)\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337544381/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337544382","html_url":"https://github.com/coq/coq/issues/4868#issuecomment-337544382","issue_url":"https://api.github.com/repos/coq/coq/issues/4868","id":337544382,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0NDM4Mg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-06-29T15:45:50Z","updated_at":"2017-10-18T10:31:53Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nAlso, it would be nice if there were an option [Set Universe Minimization ToSet Only In Bodies], which allowed minimization of universes to Set if they were not explicitly mentioned by the user, and also did not appear anywhere in the type of the definition (but might appear in the body).  I suspect this is actually the right behavior most of the time (unless I'm defining a [Type] or a type family, I usually only care about universes that appear in the types, and the ones in the bodies are somehow extra baggage that I keep around to appease Coq).\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337544382/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]