[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337521758","html_url":"https://github.com/coq/coq/issues/3473#issuecomment-337521758","issue_url":"https://api.github.com/repos/coq/coq/issues/3473","id":337521758,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMTc1OA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-08-01T12:37:19Z","updated_at":"2021-07-07T15:57:05Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\r\n\r\n```coq\r\nSet Primitive Projections.\r\nRecord prod A B := pair { fst : A ; snd : B }.\r\n\r\nGoal forall x y, @ fst Set Set x = y -> fst x = y.\r\nProof.\r\n  intros x y H.\r\n  Fail rewrite H. (* Error: Found no subterm matching \"@ fst Set Set x\" in the current goal. *)\r\n  Fail progress simpl in H. (* Should probably succeed? *)\r\n  Fail progress lazy beta iota zeta in H.\r\n  lazy delta[fst] in H. (* (fun (A B : Type) (p : prod A B) => fst p) Set Set x = y *)\r\n  rewrite H.\r\n```\r\n\r\nI'm not actually completely sure about this, though...\r\n\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337521758/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337521759","html_url":"https://github.com/coq/coq/issues/3473#issuecomment-337521759","issue_url":"https://api.github.com/repos/coq/coq/issues/3473","id":337521759,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMTc1OQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-08-01T13:06:28Z","updated_at":"2017-10-18T09:24:50Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nIs there a way to specify the unfolding behavior for the eta-expanded version separately from the unfolding behavior of the non-eta-expanded-version?\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337521759/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337521761","html_url":"https://github.com/coq/coq/issues/3473#issuecomment-337521761","issue_url":"https://api.github.com/repos/coq/coq/issues/3473","id":337521761,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMTc2MQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-08-01T14:36:18Z","updated_at":"2017-10-18T09:24:51Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nThe non-eta-expanded has no actual \"unfolding\", but it respects the Arguments status of parameters after the record.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337521761/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337521765","html_url":"https://github.com/coq/coq/issues/3473#issuecomment-337521765","issue_url":"https://api.github.com/repos/coq/coq/issues/3473","id":337521765,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMTc2NQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-08-01T14:38:06Z","updated_at":"2017-10-18T09:24:51Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nSay I want to say \"the eta-expanded form of this projection should always reduce to the non-eta-expanded form on [simpl], but the non-eta-expanded-form should never reduce, even if applied to a constructor\".  Is this possible to state?\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337521765/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337521767","html_url":"https://github.com/coq/coq/issues/3473#issuecomment-337521767","issue_url":"https://api.github.com/repos/coq/coq/issues/3473","id":337521767,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMTc2Nw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-08-01T14:46:36Z","updated_at":"2017-10-18T09:24:51Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nNo, it's not possible currently, and I'm surprise you need the strategy of not reducing the primitive projection applied to a constructor, as it should be treated like a beta-redex. The problems of rewrite are linked to the current discussion on Coq-club. With H as it is it only does syntactic matching right now.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337521767/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337521772","html_url":"https://github.com/coq/coq/issues/3473#issuecomment-337521772","issue_url":"https://api.github.com/repos/coq/coq/issues/3473","id":337521772,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMTc3Mg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-08-01T14:50:23Z","updated_at":"2017-10-18T09:24:51Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nMaybe I don't need that strategy.  However, I'm currently tracking down a bug were Coq can't unify [@ morphism C s d] with [morphism _ _ _], for some concrete [C], and in particular complains about not being about to unify [s] with [object _] (in some cases), and I wonder if this is related.  But I'll make a separate issue for that when my minimizer finishes.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337521772/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]