[{"url":"https://api.github.com/repos/coq/coq/issues/comments/761111280","html_url":"https://github.com/coq/coq/issues/13748#issuecomment-761111280","issue_url":"https://api.github.com/repos/coq/coq/issues/13748","id":761111280,"node_id":"MDEyOklzc3VlQ29tbWVudDc2MTExMTI4MA==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2021-01-15T18:33:40Z","updated_at":"2021-01-15T18:33:40Z","author_association":"MEMBER","body":"Here's a slightly refined example:\r\nThis works:\r\n```coq\r\nFixpoint uncurry_rev_cps (A : uncurry_types)\r\n  : denoteUncurried_rev_nounit A -> denoteUncurried A\r\n  := match A with\r\n     | cnil         => fun v => v\r\n     | ccons A As\r\n       => match As return (denoteUncurried_rev_nounit As -> denoteUncurried As) -> denoteUncurried_rev_nounit (ccons A As) -> _ with\r\n          | cnil => fun _ v => (v, tt)\r\n          | _ => fun uncurry_rev_cps '(v, a) => (a, uncurry_rev_cps v)\r\n          end (uncurry_rev_cps As)\r\n     end.\r\n```\r\nBut removing types in the return clause does not:\r\n```coq\r\nFixpoint uncurry_rev_cps (A : uncurry_types)\r\n  : denoteUncurried_rev_nounit A -> denoteUncurried A\r\n  := match A with\r\n     | cnil         => fun v => v\r\n     | ccons A As\r\n       => match As return (_ -> denoteUncurried As) -> denoteUncurried_rev_nounit (ccons A As) -> _ with\r\n          | cnil => fun _ v => (v, tt)\r\n          | _ => fun uncurry_rev_cps '(v, a) => (a, uncurry_rev_cps v)\r\n          end (uncurry_rev_cps As)\r\n     end.\r\n(* Error:\r\nIn environment\r\nuncurry_rev_cps : forall A : uncurry_types,\r\n                  denoteUncurried_rev_nounit A ->\r\n                  denoteUncurried A\r\nA : uncurry_types\r\nA0 : Type\r\nAs : uncurry_types\r\nThe term \"uncurry_rev_cps As\" has type\r\n \"denoteUncurried_rev_nounit As -> denoteUncurried As\"\r\nwhile it is expected to have type\r\n \"denoteUncurried_rev_nounit ?u1@{As0:=As; As:=As} ->\r\n  denoteUncurried As\" (cannot satisfy constraint\r\n\"match u with\r\n | ccons _ _ =>\r\n     ((fix denoteUncurried_rev_nounit (A : uncurry_types) :\r\n           Type :=\r\n         match A with\r\n         | ccons A1 (ccons _ _ as As) =>\r\n             denoteUncurried_rev_nounit As * A1\r\n         | ccons A1 cnil => A1\r\n         | cnil => unit\r\n         end) u * T)%type\r\n | cnil => T\r\n end\" == \"denoteUncurried_rev_nounit\r\n            ?u1@{As0:=As; As:=ccons T u}\").\r\n*)\r\n```\r\nand\r\n```coq\r\nFixpoint uncurry_rev_cps (A : uncurry_types)\r\n  : denoteUncurried_rev_nounit A -> denoteUncurried A\r\n  := match A with\r\n     | cnil         => fun v => v\r\n     | ccons A As\r\n       => match As return (denoteUncurried_rev_nounit As -> _) -> denoteUncurried_rev_nounit (ccons A As) -> _ with\r\n          | cnil => fun _ v => (v, tt)\r\n          | _ => fun uncurry_rev_cps '(v, a) => (a, uncurry_rev_cps v)\r\n          end (uncurry_rev_cps As)\r\n     end.\r\n(* Error:\r\nIn environment\r\nuncurry_rev_cps : forall A : uncurry_types,\r\n                  denoteUncurried_rev_nounit A ->\r\n                  denoteUncurried A\r\nA : uncurry_types\r\nA0 : Type\r\nAs : uncurry_types\r\nThe term \"uncurry_rev_cps As\" has type\r\n \"denoteUncurried_rev_nounit As -> denoteUncurried As\"\r\nwhile it is expected to have type\r\n \"denoteUncurried_rev_nounit As -> unit\"\r\n(cannot unify \"denoteUncurried As\" and \"unit\").\r\n*)\r\n```\r\nand\r\n```coq\r\nFixpoint uncurry_rev_cps (A : uncurry_types)\r\n  : denoteUncurried_rev_nounit A -> denoteUncurried A\r\n  := match A with\r\n     | cnil         => fun v => v\r\n     | ccons A As\r\n       => match As return (denoteUncurried_rev_nounit As -> denoteUncurried As) -> _ -> denoteUncurried (ccons A As) with\r\n          | cnil => fun _ v => (v, tt)\r\n          | _ => fun uncurry_rev_cps '(v, a) => (a, uncurry_rev_cps v)\r\n          end (uncurry_rev_cps As)\r\n     end.\r\n(* Error:\r\nIn environment\r\nuncurry_rev_cps : forall A : uncurry_types,\r\n                  denoteUncurried_rev_nounit A ->\r\n                  denoteUncurried A\r\nA : uncurry_types\r\nA0 : Type\r\nAs : uncurry_types\r\nd : denoteUncurried_rev_nounit cnil -> denoteUncurried cnil\r\nv : denoteUncurried_rev_nounit cnil * A0\r\nThe term \"(v, tt)\" has type\r\n \"(denoteUncurried_rev_nounit cnil * A0 * unit)%type\"\r\nwhile it is expected to have type\r\n \"denoteUncurried (ccons A0 cnil)\".\r\n*)\r\n```\r\nand\r\n```coq\r\nFixpoint uncurry_rev_cps (A : uncurry_types)\r\n  : denoteUncurried_rev_nounit A -> denoteUncurried A\r\n  := match A with\r\n     | cnil         => fun v => v\r\n     | ccons A As\r\n       => match As return (denoteUncurried_rev_nounit As -> denoteUncurried As) -> _ -> _ with\r\n          | cnil => fun _ v => (v, tt)\r\n          | _ => fun uncurry_rev_cps '(v, a) => (a, uncurry_rev_cps v)\r\n          end (uncurry_rev_cps As)\r\n     end.\r\n(* infinite loop *)\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/761111280/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/761227288","html_url":"https://github.com/coq/coq/issues/13748#issuecomment-761227288","issue_url":"https://api.github.com/repos/coq/coq/issues/13748","id":761227288,"node_id":"MDEyOklzc3VlQ29tbWVudDc2MTIyNzI4OA==","user":{"login":"herbelin","id":460771,"node_id":"MDQ6VXNlcjQ2MDc3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/460771?v=4","gravatar_id":"","url":"https://api.github.com/users/herbelin","html_url":"https://github.com/herbelin","followers_url":"https://api.github.com/users/herbelin/followers","following_url":"https://api.github.com/users/herbelin/following{/other_user}","gists_url":"https://api.github.com/users/herbelin/gists{/gist_id}","starred_url":"https://api.github.com/users/herbelin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/herbelin/subscriptions","organizations_url":"https://api.github.com/users/herbelin/orgs","repos_url":"https://api.github.com/users/herbelin/repos","events_url":"https://api.github.com/users/herbelin/events{/privacy}","received_events_url":"https://api.github.com/users/herbelin/received_events","type":"User","site_admin":false},"created_at":"2021-01-15T22:17:52Z","updated_at":"2021-01-15T22:17:52Z","author_association":"MEMBER","body":"A loop in `Evarsolve.reconsider_unif_constraints`.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/761227288/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]