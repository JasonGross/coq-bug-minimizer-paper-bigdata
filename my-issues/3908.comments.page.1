[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337529096","html_url":"https://github.com/coq/coq/issues/3908#issuecomment-337529096","issue_url":"https://api.github.com/repos/coq/coq/issues/3908","id":337529096,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyOTA5Ng==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-01-10T16:18:06Z","updated_at":"2017-10-18T09:45:51Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nHere is some code that works in 8.4 and trunk as of a few weeks ago, but currently fails:\n\n(* -*- mode: coq; coq-prog-args: (\"-emacs\" \"-nois\") -*- *)\n(* File reduced by coq-bug-finder from original input, then from 8235 lines to 5893 lines, then from 5575 lines to 74 lines, then from 503 lines to 37 lines *)\n(* coqc version trunk (January 2015) compiled on Jan 4 2015 19:26:10 with OCaml 4.01.0\n   coqtop version cagnode15:/afs/csail.mit.edu/u/j/jgross/coq-trunk,trunk (c146a313b5eeee2bb567553810d57c6a8548bd9a) *)\nReserved Notation \"x -> y\" (at level 99, right associativity, y at level 200).\nReserved Notation \"x = y\" (at level 70, no associativity).\nReserved Notation \"{ x : A  & P }\" (at level 0, x at level 99).\nOpen Scope type_scope.\nNotation \"A -> B\" := (forall (_ : A), B) : type_scope.\nSet Implicit Arguments.\nRecord sigT {A} (P : A -> Type) := existT { projT1 : A ; projT2 : P projT1 }.\nNotation \"{ x : A  & P }\" := (sigT (fun x:A => P)) : type_scope.\nNotation \"( x ; y )\" := (existT _ x y) : fibration_scope.\nOpen Scope fibration_scope.\nInductive paths {A : Type} (a : A) : A -> Type := idpath : paths a a where \"x = y\" := (@ paths _ x y) : type_scope.\nClass IsEquiv {A B : Type} (f : A -> B) := { equiv_inv : B -> A ; eisretr : forall x, f (equiv_inv x) = x }.\nArguments eisretr {A B} f {_} _.\nNotation \"f ^-1\" := (@ equiv_inv _ _ f _) (at level 3, format \"f '^-1'\") : equiv_scope.\nClass Contr(A : Type) := { center : A ; contr : (forall y : A, center = y) }.\nLocal Open Scope equiv_scope.\nGeneralizable Variables A B f.\nDefinition fcontr_isequiv `(f : A -> B)\n: IsEquiv f -> (forall b:B, Contr {a : A & f a = b}).\nProof.\n  intros ? b.\n  exists (f^-1 b ; eisretr f b).\n(* Toplevel input, characters 15-45:\nError:\nIn environment\nA : Type\nB : Type\nf : A -> B\nX : IsEquiv f\nb : B\nThe term \"(f^-1 b; eisretr f b)\" has type \"{_ : A & f (f^-1 b) = b}\"\nwhile it is expected to have type \"{a : A & f a = b}\". *)\n\nI will bisect this.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337529096/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337529098","html_url":"https://github.com/coq/coq/issues/3908#issuecomment-337529098","issue_url":"https://api.github.com/repos/coq/coq/issues/3908","id":337529098,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyOTA5OA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-01-11T18:00:56Z","updated_at":"2017-10-18T09:45:51Z","author_association":"CONTRIBUTOR","body":"Comment author: @herbelin\n\nThe change is due to commit e893a02f6438 which in principle enhances the use of heuristic to solve remaining evars. However, these heuristics should not be used to early. A patch supporting improved heuristics while still suporting your example will be done for 8.6.\n\nFor 8.5, the commit mentioned above has been reverted a couple of days ago. So this \"bug\" is no longer valid since fails30cc3ba051dba9ab.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337529098/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]