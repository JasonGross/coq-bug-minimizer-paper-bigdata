[{"url":"https://api.github.com/repos/coq/coq/issues/comments/727552483","html_url":"https://github.com/coq/coq/issues/9970#issuecomment-727552483","issue_url":"https://api.github.com/repos/coq/coq/issues/9970","id":727552483,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNzU1MjQ4Mw==","user":{"login":"herbelin","id":460771,"node_id":"MDQ6VXNlcjQ2MDc3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/460771?v=4","gravatar_id":"","url":"https://api.github.com/users/herbelin","html_url":"https://github.com/herbelin","followers_url":"https://api.github.com/users/herbelin/followers","following_url":"https://api.github.com/users/herbelin/following{/other_user}","gists_url":"https://api.github.com/users/herbelin/gists{/gist_id}","starred_url":"https://api.github.com/users/herbelin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/herbelin/subscriptions","organizations_url":"https://api.github.com/users/herbelin/orgs","repos_url":"https://api.github.com/users/herbelin/repos","events_url":"https://api.github.com/users/herbelin/events{/privacy}","received_events_url":"https://api.github.com/users/herbelin/received_events","type":"User","site_admin":false},"created_at":"2020-11-15T11:08:25Z","updated_at":"2020-11-15T11:08:25Z","author_association":"MEMBER","body":"The cause is similar to #9971: a retyping of some `fst c` which discovers that the type of `c` is not an inductive but a type of the form `E[?x]`. There is however a postponed constraint `E[?x] = prod ?y ?z` (here, exactly: `?P (projT1 pii ?P k') <=                                                                         \r\n  prod ?y ?z`), so maybe could the same trick of @skyskimmer based on `get_type_from_constraint` in #13371 can be used?\r\n\r\nIn the present case, the constraint is kept under this form to anticipate a possible use of first-order unification in the heuristics, but with a smarter treatment of postponed f.o. problems, it could have been resolved earlier into `?P := fun x => prod ?y'[x:=d] ?z'[x:=d]` with `d` shortcut for `projT1 pii ?P k'` and expected (presumably trivial) equations between `?y`, `?y'`, `?z` and `?z'`.\r\n\r\nThe smarter treatment would be more difficult for an equation of the form `match ?x with ... end == prod ?y ?z` though.\r\n\r\nSo, the short term is maybe @SkySkimmer's trick, while a more \"aggressive\" absorption of `E` in `E[?x] == c` problems. ","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/727552483/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/727557016","html_url":"https://github.com/coq/coq/issues/9970#issuecomment-727557016","issue_url":"https://api.github.com/repos/coq/coq/issues/9970","id":727557016,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNzU1NzAxNg==","user":{"login":"mattam82","id":98373,"node_id":"MDQ6VXNlcjk4Mzcz","avatar_url":"https://avatars.githubusercontent.com/u/98373?v=4","gravatar_id":"","url":"https://api.github.com/users/mattam82","html_url":"https://github.com/mattam82","followers_url":"https://api.github.com/users/mattam82/followers","following_url":"https://api.github.com/users/mattam82/following{/other_user}","gists_url":"https://api.github.com/users/mattam82/gists{/gist_id}","starred_url":"https://api.github.com/users/mattam82/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattam82/subscriptions","organizations_url":"https://api.github.com/users/mattam82/orgs","repos_url":"https://api.github.com/users/mattam82/repos","events_url":"https://api.github.com/users/mattam82/events{/privacy}","received_events_url":"https://api.github.com/users/mattam82/received_events","type":"User","site_admin":false},"created_at":"2020-11-15T11:45:49Z","updated_at":"2020-11-15T11:45:49Z","author_association":"MEMBER","body":"I think it would be cleaner to build the template type and add a constraint rather than lookup in the postponed constraints. ","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/727557016/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]