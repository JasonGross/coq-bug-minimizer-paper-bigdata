[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337542005","html_url":"https://github.com/coq/coq/issues/4701#issuecomment-337542005","issue_url":"https://api.github.com/repos/coq/coq/issues/4701","id":337542005,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0MjAwNQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-04-29T17:03:41Z","updated_at":"2017-10-18T10:24:12Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nSuppose we have\n\n  Inductive my_if {A B} : bool -> Type :=\n  | then_case (_ : A) : my_if true\n  | else_case (_ : B) : my_if false.\n  Notation \"'If' b 'Then' A 'Else' B\" := (@ my_if A B b) (at level 10).\n\nthen here are three inductive type declarations that work:\n\n  Inductive I1 :=\n  | i1 (x : I1).\n  Inductive I2 :=\n  | i2 (x : nat).\n  Inductive I3 :=\n  | i3 (b : bool) (x : If b Then I3 Else nat).\n\nand here is one that does not, despite being equivalent to [I3]:\n\n  Inductive I4 :=\n  | i4 (b : bool) (x : if b then I4 else nat). (* Error: Non strictly positive occurrence of \"I4\" in\n   \"forall b : bool, (if b then I4 else nat) -> I4\". *)\n\nI think this one should work.  I believe this is a conservative extension over CIC: Since [match] statements returning types can always be re-encoded as inductive type families, the analysis should be independent of whether the constructor uses an inductive or a [match] statement.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337542005/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337542006","html_url":"https://github.com/coq/coq/issues/4701#issuecomment-337542006","issue_url":"https://api.github.com/repos/coq/coq/issues/4701","id":337542006,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0MjAwNg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-05-02T18:47:46Z","updated_at":"2018-06-15T12:20:18Z","author_association":"CONTRIBUTOR","body":"Comment author: @ppedrot\r\n\r\n\r\n\r\n*** This bug has been marked as a duplicate of bug #1433 ***\r\n\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337542006/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]