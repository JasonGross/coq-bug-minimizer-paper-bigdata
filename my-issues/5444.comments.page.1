[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337552688","html_url":"https://github.com/coq/coq/issues/5444#issuecomment-337552688","issue_url":"https://api.github.com/repos/coq/coq/issues/5444","id":337552688,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1MjY4OA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-04-03T19:41:18Z","updated_at":"2017-10-18T10:58:56Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nYet it does, because Classical_Prop is required by Rtopology is required by MVT \nis required by PSeries_reg is required by Rtrigo is required by Reals is \nrequired by Nsatz, and Classical_Prop adds\n\n  Hint Unfold not: core.\n\nWhen we're willing to break backwards compatibility in the stdlib, this should \nbe fixed.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337552688/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337552690","html_url":"https://github.com/coq/coq/issues/5444#issuecomment-337552690","issue_url":"https://api.github.com/repos/coq/coq/issues/5444","id":337552690,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1MjY5MA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-04-03T19:46:14Z","updated_at":"2017-10-18T10:58:56Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nTest case:\n\n\nGoal forall (T : Type)\n            (eq : T -> T -> Prop)\n            (zero x y : T),\n    (not (eq x zero) -> eq y zero) <-> eq x zero \\/ eq y zero.\nProof.\n  Fail intros; tauto.\nAbort.\nRequire Coq.nsatz.Nsatz.\n\nGoal forall (T : Type)\n            (eq : T -> T -> Prop)\n            (zero x y : T),\n    (not (eq x zero) -> eq y zero) <-> eq x zero \\/ eq y zero.\nProof.\n  intros; tauto.\nQed.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337552690/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337552691","html_url":"https://github.com/coq/coq/issues/5444#issuecomment-337552691","issue_url":"https://api.github.com/repos/coq/coq/issues/5444","id":337552691,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1MjY5MQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-04-03T19:50:15Z","updated_at":"2017-10-18T10:58:57Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nUgh, it's worse than just [Hint Unfold not : core]; apparently the [tauto] \nplugin checks to see whether or not Classical_Prop has been *required*, and \nbehaves differently on depending on whether or not it has.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337552691/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337552692","html_url":"https://github.com/coq/coq/issues/5444#issuecomment-337552692","issue_url":"https://api.github.com/repos/coq/coq/issues/5444","id":337552692,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1MjY5Mg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-04-03T20:12:30Z","updated_at":"2017-10-18T10:58:57Z","author_association":"CONTRIBUTOR","body":"Comment author: @herbelin\n\nIndeed, this is not related to the \"Hint Unfold not\" (which is actually also in Logic.v), but on \"tauto\" trying to use Classical_Prop.NNPP when the later is available.\n\nMaybe it is a bad idea that the intuitionistic vs classical effect of tauto is dependent on the existence of an axiom. I tried to circumvent this but did not find a way.\n\nMaybe providing explicitly some \"itauto\" and \"ctauto\"? Don't know what other think.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337552692/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337552693","html_url":"https://github.com/coq/coq/issues/5444#issuecomment-337552693","issue_url":"https://api.github.com/repos/coq/coq/issues/5444","id":337552693,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1MjY5Mw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-04-03T20:58:08Z","updated_at":"2017-10-18T10:58:57Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nOne option is to add an option to tauto, e.g., [Set Classical Tauto.], which will use [Classical_Prop.NNPP] if it exists.  Possibly have [Set Classical Tauto.] emit a warning if Classical_Prop is not required when it is set.  Then you can [Set Classical Tauto] in the Compat86 file.  You can possibly also have [tauto] emit a specialized error message to the effect of needing to [Set Classical Tauto] if it encounters a goal which it cannot prove, but which can be proven classically?\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337552693/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337552694","html_url":"https://github.com/coq/coq/issues/5444#issuecomment-337552694","issue_url":"https://api.github.com/repos/coq/coq/issues/5444","id":337552694,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1MjY5NA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-06-19T16:56:40Z","updated_at":"2017-10-18T10:58:57Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nI think that, even if nothing else happens, there should be [Set Classical \nTauto] or [Set Constructive Tauto] or [Set Intuitionistic Tauto].  Having \nclassical assumptions creep into proofs is unfortunate, and hard to work \naround.  (I just had to track down a case where [tauto] decided to use \nclassical axioms rather than contradicting a hypothesis [In x nil], when I \nimported Lia.)\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337552694/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337552695","html_url":"https://github.com/coq/coq/issues/5444#issuecomment-337552695","issue_url":"https://api.github.com/repos/coq/coq/issues/5444","id":337552695,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1MjY5NQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-06-19T17:02:07Z","updated_at":"2017-10-18T10:58:57Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nEr, that should say, when I imported Psatz, not Lia.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337552695/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/364643686","html_url":"https://github.com/coq/coq/issues/5444#issuecomment-364643686","issue_url":"https://api.github.com/repos/coq/coq/issues/5444","id":364643686,"node_id":"MDEyOklzc3VlQ29tbWVudDM2NDY0MzY4Ng==","user":{"login":"vapniks","id":174330,"node_id":"MDQ6VXNlcjE3NDMzMA==","avatar_url":"https://avatars.githubusercontent.com/u/174330?v=4","gravatar_id":"","url":"https://api.github.com/users/vapniks","html_url":"https://github.com/vapniks","followers_url":"https://api.github.com/users/vapniks/followers","following_url":"https://api.github.com/users/vapniks/following{/other_user}","gists_url":"https://api.github.com/users/vapniks/gists{/gist_id}","starred_url":"https://api.github.com/users/vapniks/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vapniks/subscriptions","organizations_url":"https://api.github.com/users/vapniks/orgs","repos_url":"https://api.github.com/users/vapniks/repos","events_url":"https://api.github.com/users/vapniks/events{/privacy}","received_events_url":"https://api.github.com/users/vapniks/received_events","type":"User","site_admin":false},"created_at":"2018-02-10T11:03:43Z","updated_at":"2021-01-08T20:14:06Z","author_association":"NONE","body":"This problem breaks the example in section 1.3.4 of this [tutorial](https://coq.inria.fr/tutorial/1-basic-predicate-calculus) which is the tutorial supplied by the `coq-doc` ubuntu package (page 19 of the pdf). ","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/364643686/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/364659398","html_url":"https://github.com/coq/coq/issues/5444#issuecomment-364659398","issue_url":"https://api.github.com/repos/coq/coq/issues/5444","id":364659398,"node_id":"MDEyOklzc3VlQ29tbWVudDM2NDY1OTM5OA==","user":{"login":"Zimmi48","id":1108325,"node_id":"MDQ6VXNlcjExMDgzMjU=","avatar_url":"https://avatars.githubusercontent.com/u/1108325?v=4","gravatar_id":"","url":"https://api.github.com/users/Zimmi48","html_url":"https://github.com/Zimmi48","followers_url":"https://api.github.com/users/Zimmi48/followers","following_url":"https://api.github.com/users/Zimmi48/following{/other_user}","gists_url":"https://api.github.com/users/Zimmi48/gists{/gist_id}","starred_url":"https://api.github.com/users/Zimmi48/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Zimmi48/subscriptions","organizations_url":"https://api.github.com/users/Zimmi48/orgs","repos_url":"https://api.github.com/users/Zimmi48/repos","events_url":"https://api.github.com/users/Zimmi48/events{/privacy}","received_events_url":"https://api.github.com/users/Zimmi48/received_events","type":"User","site_admin":false},"created_at":"2018-02-10T14:38:09Z","updated_at":"2021-01-08T20:14:12Z","author_association":"MEMBER","body":"What do you mean exactly by \"breaks\"? Is it broken just in the pdf version but not in the web version? In that case, it would probably mean that the `coq-doc` package is simply out-of-date (the tutorial was seriously updated in Coq 8.7).","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/364659398/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/364668098","html_url":"https://github.com/coq/coq/issues/5444#issuecomment-364668098","issue_url":"https://api.github.com/repos/coq/coq/issues/5444","id":364668098,"node_id":"MDEyOklzc3VlQ29tbWVudDM2NDY2ODA5OA==","user":{"login":"vapniks","id":174330,"node_id":"MDQ6VXNlcjE3NDMzMA==","avatar_url":"https://avatars.githubusercontent.com/u/174330?v=4","gravatar_id":"","url":"https://api.github.com/users/vapniks","html_url":"https://github.com/vapniks","followers_url":"https://api.github.com/users/vapniks/followers","following_url":"https://api.github.com/users/vapniks/following{/other_user}","gists_url":"https://api.github.com/users/vapniks/gists{/gist_id}","starred_url":"https://api.github.com/users/vapniks/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vapniks/subscriptions","organizations_url":"https://api.github.com/users/vapniks/orgs","repos_url":"https://api.github.com/users/vapniks/repos","events_url":"https://api.github.com/users/vapniks/events{/privacy}","received_events_url":"https://api.github.com/users/vapniks/received_events","type":"User","site_admin":false},"created_at":"2018-02-10T16:26:55Z","updated_at":"2021-01-08T20:14:17Z","author_association":"NONE","body":"The example on the web is the same as the example in the pdf supplied by `coq-doc`:\r\n```\r\nCoq < Require Import Classical.\r\nCoq < Lemma Peirce : ((A -> B) -> A) -> A.\r\nCoq < apply NNPP; tauto.\r\n```\r\nI'm using the standard coq package for Ubuntu 14.04:\r\n```\r\n> coqtop --version\r\nThe Coq Proof Assistant, version 8.4pl3 (January 2014)\r\ncompiled on Jan 19 2014 23:14:16 with OCaml 4.01.0\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/364668098/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/364672741","html_url":"https://github.com/coq/coq/issues/5444#issuecomment-364672741","issue_url":"https://api.github.com/repos/coq/coq/issues/5444","id":364672741,"node_id":"MDEyOklzc3VlQ29tbWVudDM2NDY3Mjc0MQ==","user":{"login":"Zimmi48","id":1108325,"node_id":"MDQ6VXNlcjExMDgzMjU=","avatar_url":"https://avatars.githubusercontent.com/u/1108325?v=4","gravatar_id":"","url":"https://api.github.com/users/Zimmi48","html_url":"https://github.com/Zimmi48","followers_url":"https://api.github.com/users/Zimmi48/followers","following_url":"https://api.github.com/users/Zimmi48/following{/other_user}","gists_url":"https://api.github.com/users/Zimmi48/gists{/gist_id}","starred_url":"https://api.github.com/users/Zimmi48/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Zimmi48/subscriptions","organizations_url":"https://api.github.com/users/Zimmi48/orgs","repos_url":"https://api.github.com/users/Zimmi48/repos","events_url":"https://api.github.com/users/Zimmi48/events{/privacy}","received_events_url":"https://api.github.com/users/Zimmi48/received_events","type":"User","site_admin":false},"created_at":"2018-02-10T17:11:46Z","updated_at":"2021-01-08T20:14:23Z","author_association":"MEMBER","body":"I still don't understand what you mean by \"breaks\". Is it that the `apply NNPP` step is actually optional and `tauto` will solve the goal as soon as `Classical` has been imported that bothers you?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/364672741/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/364680587","html_url":"https://github.com/coq/coq/issues/5444#issuecomment-364680587","issue_url":"https://api.github.com/repos/coq/coq/issues/5444","id":364680587,"node_id":"MDEyOklzc3VlQ29tbWVudDM2NDY4MDU4Nw==","user":{"login":"vapniks","id":174330,"node_id":"MDQ6VXNlcjE3NDMzMA==","avatar_url":"https://avatars.githubusercontent.com/u/174330?v=4","gravatar_id":"","url":"https://api.github.com/users/vapniks","html_url":"https://github.com/vapniks","followers_url":"https://api.github.com/users/vapniks/followers","following_url":"https://api.github.com/users/vapniks/following{/other_user}","gists_url":"https://api.github.com/users/vapniks/gists{/gist_id}","starred_url":"https://api.github.com/users/vapniks/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vapniks/subscriptions","organizations_url":"https://api.github.com/users/vapniks/orgs","repos_url":"https://api.github.com/users/vapniks/repos","events_url":"https://api.github.com/users/vapniks/events{/privacy}","received_events_url":"https://api.github.com/users/vapniks/received_events","type":"User","site_admin":false},"created_at":"2018-02-10T18:57:39Z","updated_at":"2021-01-08T20:14:28Z","author_association":"NONE","body":"No, it doesn't solve it at all.\r\nI get the following message: `Error: Classical tauto failed.`\r\nwith or without the `apply NNPP` step.\r\nThe subsequent 'Scottish puzzle' works fine.\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/364680587/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/364681320","html_url":"https://github.com/coq/coq/issues/5444#issuecomment-364681320","issue_url":"https://api.github.com/repos/coq/coq/issues/5444","id":364681320,"node_id":"MDEyOklzc3VlQ29tbWVudDM2NDY4MTMyMA==","user":{"login":"vapniks","id":174330,"node_id":"MDQ6VXNlcjE3NDMzMA==","avatar_url":"https://avatars.githubusercontent.com/u/174330?v=4","gravatar_id":"","url":"https://api.github.com/users/vapniks","html_url":"https://github.com/vapniks","followers_url":"https://api.github.com/users/vapniks/followers","following_url":"https://api.github.com/users/vapniks/following{/other_user}","gists_url":"https://api.github.com/users/vapniks/gists{/gist_id}","starred_url":"https://api.github.com/users/vapniks/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vapniks/subscriptions","organizations_url":"https://api.github.com/users/vapniks/orgs","repos_url":"https://api.github.com/users/vapniks/repos","events_url":"https://api.github.com/users/vapniks/events{/privacy}","received_events_url":"https://api.github.com/users/vapniks/received_events","type":"User","site_admin":false},"created_at":"2018-02-10T19:07:38Z","updated_at":"2021-01-08T20:14:34Z","author_association":"NONE","body":"Ah... OK, I found out what the problem was.\r\nI didn't have A & B defined as global variables.\r\nThis works:\r\n```\r\nCoq < Variables A B : Prop.\r\nCoq < Require Import Classical.\r\nCoq < Lemma Peirce : ((A -> B) -> A) -> A.\r\nCoq < apply NNPP; tauto.\r\n```\r\n\r\nor this:\r\n```\r\nCoq < Require Import Classical.\r\nCoq < Lemma Peirce : forall A B : Prop, ((A -> B) -> A) -> A.\r\nCoq < apply NNPP; intros A0 B0; tauto.\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/364681320/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/364766048","html_url":"https://github.com/coq/coq/issues/5444#issuecomment-364766048","issue_url":"https://api.github.com/repos/coq/coq/issues/5444","id":364766048,"node_id":"MDEyOklzc3VlQ29tbWVudDM2NDc2NjA0OA==","user":{"login":"Zimmi48","id":1108325,"node_id":"MDQ6VXNlcjExMDgzMjU=","avatar_url":"https://avatars.githubusercontent.com/u/1108325?v=4","gravatar_id":"","url":"https://api.github.com/users/Zimmi48","html_url":"https://github.com/Zimmi48","followers_url":"https://api.github.com/users/Zimmi48/followers","following_url":"https://api.github.com/users/Zimmi48/following{/other_user}","gists_url":"https://api.github.com/users/Zimmi48/gists{/gist_id}","starred_url":"https://api.github.com/users/Zimmi48/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Zimmi48/subscriptions","organizations_url":"https://api.github.com/users/Zimmi48/orgs","repos_url":"https://api.github.com/users/Zimmi48/repos","events_url":"https://api.github.com/users/Zimmi48/events{/privacy}","received_events_url":"https://api.github.com/users/Zimmi48/received_events","type":"User","site_admin":false},"created_at":"2018-02-11T16:48:06Z","updated_at":"2021-01-08T20:14:39Z","author_association":"MEMBER","body":"Good.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/364766048/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/757039529","html_url":"https://github.com/coq/coq/issues/5444#issuecomment-757039529","issue_url":"https://api.github.com/repos/coq/coq/issues/5444","id":757039529,"node_id":"MDEyOklzc3VlQ29tbWVudDc1NzAzOTUyOQ==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2021-01-08T23:00:03Z","updated_at":"2021-01-08T23:00:03Z","author_association":"MEMBER","body":"FTR, since the switch to the registering mechanism it is possible to deactivate the classical behaviour of `tauto` even after `Classical_Prop` is required. Albeit definitely hackish, it is indeed enough to overwrite `core.nnpp.type` with a dummy value to make the call to the classical axiom fail, just as when the reference is not available. For instance, this can be done with the following command:\r\n```\r\nRegister tt as core.nnpp.type.\r\n```\r\n\r\nN.B.: registering is Require-bound, so expect modularity issues.\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/757039529/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]