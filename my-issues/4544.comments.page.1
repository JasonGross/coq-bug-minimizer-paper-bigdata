[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337539644","html_url":"https://github.com/coq/coq/issues/4544#issuecomment-337539644","issue_url":"https://api.github.com/repos/coq/coq/issues/4544","id":337539644,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzOTY0NA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-01-30T07:57:03Z","updated_at":"2017-10-18T10:16:53Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nCreated attachment 661\nfile displaying the significantly slower rewrite\n\n> Attached file: [bug_oog_looping_rewrite_02.v](https://coq.inria.fr/bugfiles/attachment.cgi?id=661) (text/plain, 29462 bytes)\n> Description:   file displaying the significantly slower rewrite\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337539644/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337539645","html_url":"https://github.com/coq/coq/issues/4544#issuecomment-337539645","issue_url":"https://api.github.com/repos/coq/coq/issues/4544","id":337539645,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzOTY0NQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-02-01T16:02:05Z","updated_at":"2017-10-18T10:16:54Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nThis is, I believe, the only bug blocking the HoTT/HoTT library from upgrading to v8.5 from 8.5beta2.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337539645/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337539646","html_url":"https://github.com/coq/coq/issues/4544#issuecomment-337539646","issue_url":"https://api.github.com/repos/coq/coq/issues/4544","id":337539646,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzOTY0Ng==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-02-01T16:41:28Z","updated_at":"2017-10-18T10:16:54Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nPerhaps unsurprisingly, my coq-bisect script (https://github.com/JasonGross/coq-bisect) finds that\n\n4841b790bbe517deefac11e8df1a7a1494d56bec is the first bad commit\ncommit 4841b790bbe517deefac11e8df1a7a1494d56bec\nAuthor: Matthieu Sozeau <mattam@ mattam.org>\nDate:   Tue Jan 12 17:02:09 2016 +0100\n\n    Fix essential bug in new Keyed Unification mode reported by R. Krebbers.\n    \n    [rewrite] was calling find_suterm using the wrong unification flags, not\n    allowing full delta in unification of terms with the right keys as desired.\n\n:040000 040000 0fb4ebb78c6eb2050672d3fba33cd1de228c27df 08fb137edae412f32c29bc8938dbd0901c36e40e M      pretyping\n:040000 040000 985cea6954db50b7984051084fce809d28ec1a3f ff89629583224376ab11038c44b6548237319ffd M      tactics\n\nI suspect this is also behind bug [BZ#4533](https://github.com/coq/coq/issues?q=is%3Aissue%20%22Original%20bug%20ID%3A%20BZ%234533%22) (though I haven't tested this).  Turning on keyed unification seems to be permitting everything to be unfolded, rather than just the keys?\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337539646/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337539647","html_url":"https://github.com/coq/coq/issues/4544#issuecomment-337539647","issue_url":"https://api.github.com/repos/coq/coq/issues/4544","id":337539647,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzOTY0Nw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-02-02T14:27:22Z","updated_at":"2017-10-18T10:16:54Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nYes indeed, it does allow full conversion on terms containing evars after matching the keys now. The culprit is not delta here but full betaiota reduction during unification, which is making a failed unification take all the time in this example. I can backtrack on it.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337539647/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337539649","html_url":"https://github.com/coq/coq/issues/4544#issuecomment-337539649","issue_url":"https://api.github.com/repos/coq/coq/issues/4544","id":337539649,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzOTY0OQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-02-02T16:00:40Z","updated_at":"2017-10-18T10:16:54Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\n\n> Yes indeed, it does allow full conversion on terms containing evars after\n> matching the keys now. The culprit is not delta here but full betaiota\n> reduction during unification, which is making a failed unification take all\n> the time in this example. I can backtrack on it.\n\nThen in situations like 4533 the rewrite will find the (p2 @  (p0 @  p1)) subterm (because it won't iota reduce after unfolding eissect and find a match that did not appear \"syntactically\"), but you lose rewrites with beta-unifiable implicit arguments, including the ability to work with Canonical Structures like this (example from R. Krebbers):\n\nRequire Import Arith List Omega.\n\nDefinition G {A} (f : A -> A -> A) (x : A) := f x x.\n\nLemma list_foo A (l : list A) : G (@ app A) (l ++ nil) = G (@ app A) l.\nProof. unfold G; rewrite app_nil_r; reflexivity. Qed.\n\n(* Bundled version of a magma *)\nStructure magma := Magma { b_car :> Type; op : b_car -> b_car -> b_car }.\nArguments op {_} _ _.\n\n(* Instance for lists *)\nCanonical Structure list_magma A := Magma (list A) (@ app A).\n\n(* Basically like list_foo, but now uses the op projection instead of app for\nthe argument of G *)\nLemma test1 A (l : list A) : G op (l ++ nil) = G op l.\n\n(* Ensure that conversion of terms with evars is allowed once a keyed candidate unifier is found *)\nrewrite -> list_foo.\nreflexivity.\nQed.\n\nThe ssreflect rewrite handles both these cases as it does a first unification without conversion... It's easy to make Keyed Unification do the same: first search for a subterm without beta-delta-iota, then with it. I think we should rather go in that direction.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337539649/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337539651","html_url":"https://github.com/coq/coq/issues/4544#issuecomment-337539651","issue_url":"https://api.github.com/repos/coq/coq/issues/4544","id":337539651,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzOTY1MQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-02-02T19:01:31Z","updated_at":"2017-10-18T10:16:54Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\n> The ssreflect rewrite handles both these cases as it does a first unification\n> without conversion... It's easy to make Keyed Unification do the same: first\n> search for a subterm without beta-delta-iota, then with it. I think we should\n> rather go in that direction.\n\nI like the sound of this.  A question: Replacing `rewrite loops_functor_group.` with `rewrite !loops_functor_group.` in this example would result in a file that's still significantly slower, right?\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337539651/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337539652","html_url":"https://github.com/coq/coq/issues/4544#issuecomment-337539652","issue_url":"https://api.github.com/repos/coq/coq/issues/4544","id":337539652,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzOTY1Mg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-02-02T20:21:02Z","updated_at":"2017-10-18T10:16:55Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nYes, that's my only concern: I think for repeated rewrites and automation in general you need a more strict mode where you fire a unification not only on a key but a more complex pattern to avoid this. This can be programmed with something like rewrite_strat ... (pattern foo ; lemma bar) I think.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337539652/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337539653","html_url":"https://github.com/coq/coq/issues/4544#issuecomment-337539653","issue_url":"https://api.github.com/repos/coq/coq/issues/4544","id":337539653,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzOTY1Mw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-02-02T20:45:58Z","updated_at":"2017-10-18T10:16:55Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nThat makes sense.\n\nWould it make sense to have an easy way of saying \"all occurrences of a given identifier are to be treated as keys\" (i.e., if the lemma is \"p @  (q @  r) = ...\", and you say that [concat] should be a multi-location key, then the pattern is automatically set to be \"_ @  (_ @  _)\")?\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337539653/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337539655","html_url":"https://github.com/coq/coq/issues/4544#issuecomment-337539655","issue_url":"https://api.github.com/repos/coq/coq/issues/4544","id":337539655,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzOTY1NQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-02-02T20:49:07Z","updated_at":"2017-10-18T10:16:55Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nAlso, the HoTT stdlib doesn't have setoids, so we can't actually use rewrite_strat.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337539655/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337539656","html_url":"https://github.com/coq/coq/issues/4544#issuecomment-337539656","issue_url":"https://api.github.com/repos/coq/coq/issues/4544","id":337539656,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzOTY1Ng==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-03-09T15:31:30Z","updated_at":"2017-10-18T10:16:55Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nI fixed the strategy used by keyed unification to allow fast matching at first (conversion only on closed subterms, no betaiotadelta on open terms). So HoTT still suffers from rewrite !loops_functor_group, but do 3 rewrite loops_functor_group is faster with Keyed Unification on. I don't have the tools to time HoTT with this version (I just know it all compiles fairly quickly), I'd be curious to know if anything changed.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337539656/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]