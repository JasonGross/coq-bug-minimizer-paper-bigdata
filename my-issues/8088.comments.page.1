[{"url":"https://api.github.com/repos/coq/coq/issues/comments/417161229","html_url":"https://github.com/coq/coq/issues/8088#issuecomment-417161229","issue_url":"https://api.github.com/repos/coq/coq/issues/8088","id":417161229,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNzE2MTIyOQ==","user":{"login":"nlewycky","id":392652,"node_id":"MDQ6VXNlcjM5MjY1Mg==","avatar_url":"https://avatars.githubusercontent.com/u/392652?v=4","gravatar_id":"","url":"https://api.github.com/users/nlewycky","html_url":"https://github.com/nlewycky","followers_url":"https://api.github.com/users/nlewycky/followers","following_url":"https://api.github.com/users/nlewycky/following{/other_user}","gists_url":"https://api.github.com/users/nlewycky/gists{/gist_id}","starred_url":"https://api.github.com/users/nlewycky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nlewycky/subscriptions","organizations_url":"https://api.github.com/users/nlewycky/orgs","repos_url":"https://api.github.com/users/nlewycky/repos","events_url":"https://api.github.com/users/nlewycky/events{/privacy}","received_events_url":"https://api.github.com/users/nlewycky/received_events","type":"User","site_admin":false},"created_at":"2018-08-30T01:38:34Z","updated_at":"2018-08-30T01:38:34Z","author_association":"CONTRIBUTOR","body":"Looking in NZOrder.v, I also see three Instances lt_strorder : StrictOrder lt, le_preorder : PreOrder le and le_partialorder : PartialOrder _ le. Would it make sense to make those transparent too?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/417161229/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/417927865","html_url":"https://github.com/coq/coq/issues/8088#issuecomment-417927865","issue_url":"https://api.github.com/repos/coq/coq/issues/8088","id":417927865,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNzkyNzg2NQ==","user":{"login":"herbelin","id":460771,"node_id":"MDQ6VXNlcjQ2MDc3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/460771?v=4","gravatar_id":"","url":"https://api.github.com/users/herbelin","html_url":"https://github.com/herbelin","followers_url":"https://api.github.com/users/herbelin/followers","following_url":"https://api.github.com/users/herbelin/following{/other_user}","gists_url":"https://api.github.com/users/herbelin/gists{/gist_id}","starred_url":"https://api.github.com/users/herbelin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/herbelin/subscriptions","organizations_url":"https://api.github.com/users/herbelin/orgs","repos_url":"https://api.github.com/users/herbelin/repos","events_url":"https://api.github.com/users/herbelin/events{/privacy}","received_events_url":"https://api.github.com/users/herbelin/received_events","type":"User","site_admin":false},"created_at":"2018-09-02T12:37:11Z","updated_at":"2018-09-02T12:37:11Z","author_association":"MEMBER","body":"Are there still people opposing to more transparent lemmas by default? If yes, what are the alternatives? I still have in mind the idea of implementing a command to un-opacify a definition, but little time for it...","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/417927865/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/417933993","html_url":"https://github.com/coq/coq/issues/8088#issuecomment-417933993","issue_url":"https://api.github.com/repos/coq/coq/issues/8088","id":417933993,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNzkzMzk5Mw==","user":{"login":"herbelin","id":460771,"node_id":"MDQ6VXNlcjQ2MDc3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/460771?v=4","gravatar_id":"","url":"https://api.github.com/users/herbelin","html_url":"https://github.com/herbelin","followers_url":"https://api.github.com/users/herbelin/followers","following_url":"https://api.github.com/users/herbelin/following{/other_user}","gists_url":"https://api.github.com/users/herbelin/gists{/gist_id}","starred_url":"https://api.github.com/users/herbelin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/herbelin/subscriptions","organizations_url":"https://api.github.com/users/herbelin/orgs","repos_url":"https://api.github.com/users/herbelin/repos","events_url":"https://api.github.com/users/herbelin/events{/privacy}","received_events_url":"https://api.github.com/users/herbelin/received_events","type":"User","site_admin":false},"created_at":"2018-09-02T14:17:26Z","updated_at":"2018-09-02T14:35:31Z","author_association":"MEMBER","body":"See PR #7060 which actually already implements the wish.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/417933993/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/418089875","html_url":"https://github.com/coq/coq/issues/8088#issuecomment-418089875","issue_url":"https://api.github.com/repos/coq/coq/issues/8088","id":418089875,"node_id":"MDEyOklzc3VlQ29tbWVudDQxODA4OTg3NQ==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2018-09-03T11:41:07Z","updated_at":"2018-09-03T11:41:07Z","author_association":"MEMBER","body":"@herbelin I was looking at the module subtyping code today, and I think that allowing to unopacify definitions without changing that code is unsound. The rule considers that any opaque constant is a supertype of any definitions.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/418089875/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/418092337","html_url":"https://github.com/coq/coq/issues/8088#issuecomment-418092337","issue_url":"https://api.github.com/repos/coq/coq/issues/8088","id":418092337,"node_id":"MDEyOklzc3VlQ29tbWVudDQxODA5MjMzNw==","user":{"login":"herbelin","id":460771,"node_id":"MDQ6VXNlcjQ2MDc3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/460771?v=4","gravatar_id":"","url":"https://api.github.com/users/herbelin","html_url":"https://github.com/herbelin","followers_url":"https://api.github.com/users/herbelin/followers","following_url":"https://api.github.com/users/herbelin/following{/other_user}","gists_url":"https://api.github.com/users/herbelin/gists{/gist_id}","starred_url":"https://api.github.com/users/herbelin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/herbelin/subscriptions","organizations_url":"https://api.github.com/users/herbelin/orgs","repos_url":"https://api.github.com/users/herbelin/repos","events_url":"https://api.github.com/users/herbelin/events{/privacy}","received_events_url":"https://api.github.com/users/herbelin/received_events","type":"User","site_admin":false},"created_at":"2018-09-03T11:52:00Z","updated_at":"2018-09-03T11:52:00Z","author_association":"MEMBER","body":">  I was looking at the module subtyping code today, and I think that allowing to unopacify definitions without changing that code is unsound. The rule considers that any opaque constant is a supertype of any definitions.\r\n\r\nIt was my conclusion also that the module system was needing a change before allowing unopacifying a constant.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/418092337/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/418093056","html_url":"https://github.com/coq/coq/issues/8088#issuecomment-418093056","issue_url":"https://api.github.com/repos/coq/coq/issues/8088","id":418093056,"node_id":"MDEyOklzc3VlQ29tbWVudDQxODA5MzA1Ng==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2018-09-03T11:55:02Z","updated_at":"2018-09-03T11:55:02Z","author_association":"MEMBER","body":"> the module system\r\n\r\nDangerous territory!","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/418093056/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/418100319","html_url":"https://github.com/coq/coq/issues/8088#issuecomment-418100319","issue_url":"https://api.github.com/repos/coq/coq/issues/8088","id":418100319,"node_id":"MDEyOklzc3VlQ29tbWVudDQxODEwMDMxOQ==","user":{"login":"herbelin","id":460771,"node_id":"MDQ6VXNlcjQ2MDc3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/460771?v=4","gravatar_id":"","url":"https://api.github.com/users/herbelin","html_url":"https://github.com/herbelin","followers_url":"https://api.github.com/users/herbelin/followers","following_url":"https://api.github.com/users/herbelin/following{/other_user}","gists_url":"https://api.github.com/users/herbelin/gists{/gist_id}","starred_url":"https://api.github.com/users/herbelin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/herbelin/subscriptions","organizations_url":"https://api.github.com/users/herbelin/orgs","repos_url":"https://api.github.com/users/herbelin/repos","events_url":"https://api.github.com/users/herbelin/events{/privacy}","received_events_url":"https://api.github.com/users/herbelin/received_events","type":"User","site_admin":false},"created_at":"2018-09-03T12:25:09Z","updated_at":"2018-09-03T12:25:09Z","author_association":"MEMBER","body":"> Dangerous territory!\r\n\r\nBecause of composing substitutions correctly? Because of propagating universe constraints correctly? :smile:\r\n\r\nWould we loose something important at asking that only a definition with same body can be seen as an opaque definition with some body?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/418100319/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/418172110","html_url":"https://github.com/coq/coq/issues/8088#issuecomment-418172110","issue_url":"https://api.github.com/repos/coq/coq/issues/8088","id":418172110,"node_id":"MDEyOklzc3VlQ29tbWVudDQxODE3MjExMA==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2018-09-03T18:14:29Z","updated_at":"2018-09-03T22:47:21Z","author_association":"MEMBER","body":"What's the relationship between this bug/feature request and unopacifying things from modules?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/418172110/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/418276025","html_url":"https://github.com/coq/coq/issues/8088#issuecomment-418276025","issue_url":"https://api.github.com/repos/coq/coq/issues/8088","id":418276025,"node_id":"MDEyOklzc3VlQ29tbWVudDQxODI3NjAyNQ==","user":{"login":"herbelin","id":460771,"node_id":"MDQ6VXNlcjQ2MDc3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/460771?v=4","gravatar_id":"","url":"https://api.github.com/users/herbelin","html_url":"https://github.com/herbelin","followers_url":"https://api.github.com/users/herbelin/followers","following_url":"https://api.github.com/users/herbelin/following{/other_user}","gists_url":"https://api.github.com/users/herbelin/gists{/gist_id}","starred_url":"https://api.github.com/users/herbelin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/herbelin/subscriptions","organizations_url":"https://api.github.com/users/herbelin/orgs","repos_url":"https://api.github.com/users/herbelin/repos","events_url":"https://api.github.com/users/herbelin/events{/privacy}","received_events_url":"https://api.github.com/users/herbelin/received_events","type":"User","site_admin":false},"created_at":"2018-09-04T07:57:38Z","updated_at":"2018-09-04T07:57:38Z","author_association":"MEMBER","body":"> What's the relationship between this and unopacifying things from modules?\r\n\r\nAssuming an unopacification command and the current subtyping rules, one could derive an inconsistency:\r\n```coq\r\nModule Type T. Theorem b : bool. exact true. Qed. Axiom bf : b = false. End T.\r\nModule N : T. Definition b := false. Theorem bf : b = false. reflexivity. Qed. End N.\r\nModule F (X:T).\r\n  Unopacify X.b.\r\n  Theorem bt : X.b = true. reflexivity. Qed.\r\n  Theorem btf : true = false. rewrite <- bt, X.bf. reflexivity. Qed.\r\n  End F.\r\nModule P := F N.\r\n```\r\nTo prevent this, we would need to make the opaque subtyping rule stricter, by demanding that the two bodies are the same. My feeling is that the need for an unopacification command is stronger than the need for hiding a definition behind an opaque constant. But if really needed, for the purpose of module subtyping, we could also add a new attribute to tell when a constant really has to be thought as existence of a body rather than having a specified but opaque body.\r\n\r\n[More generally, but in a longer term view than this discussion, we should at some time investigate whether opaque proofs of an equality on hsets could not simply be considered as being the reflexivity.]","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/418276025/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/419324268","html_url":"https://github.com/coq/coq/issues/8088#issuecomment-419324268","issue_url":"https://api.github.com/repos/coq/coq/issues/8088","id":419324268,"node_id":"MDEyOklzc3VlQ29tbWVudDQxOTMyNDI2OA==","user":{"login":"nlewycky","id":392652,"node_id":"MDQ6VXNlcjM5MjY1Mg==","avatar_url":"https://avatars.githubusercontent.com/u/392652?v=4","gravatar_id":"","url":"https://api.github.com/users/nlewycky","html_url":"https://github.com/nlewycky","followers_url":"https://api.github.com/users/nlewycky/followers","following_url":"https://api.github.com/users/nlewycky/following{/other_user}","gists_url":"https://api.github.com/users/nlewycky/gists{/gist_id}","starred_url":"https://api.github.com/users/nlewycky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nlewycky/subscriptions","organizations_url":"https://api.github.com/users/nlewycky/orgs","repos_url":"https://api.github.com/users/nlewycky/repos","events_url":"https://api.github.com/users/nlewycky/events{/privacy}","received_events_url":"https://api.github.com/users/nlewycky/received_events","type":"User","site_admin":false},"created_at":"2018-09-07T05:08:29Z","updated_at":"2018-09-07T05:08:29Z","author_association":"CONTRIBUTOR","body":"> More generally, but in a longer term view than this discussion, we should at some time investigate whether opaque proofs of an equality on hsets could not simply be considered as being the reflexivity.\r\n\r\nShould there be an issue for that?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/419324268/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/419499527","html_url":"https://github.com/coq/coq/issues/8088#issuecomment-419499527","issue_url":"https://api.github.com/repos/coq/coq/issues/8088","id":419499527,"node_id":"MDEyOklzc3VlQ29tbWVudDQxOTQ5OTUyNw==","user":{"login":"herbelin","id":460771,"node_id":"MDQ6VXNlcjQ2MDc3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/460771?v=4","gravatar_id":"","url":"https://api.github.com/users/herbelin","html_url":"https://github.com/herbelin","followers_url":"https://api.github.com/users/herbelin/followers","following_url":"https://api.github.com/users/herbelin/following{/other_user}","gists_url":"https://api.github.com/users/herbelin/gists{/gist_id}","starred_url":"https://api.github.com/users/herbelin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/herbelin/subscriptions","organizations_url":"https://api.github.com/users/herbelin/orgs","repos_url":"https://api.github.com/users/herbelin/repos","events_url":"https://api.github.com/users/herbelin/events{/privacy}","received_events_url":"https://api.github.com/users/herbelin/received_events","type":"User","site_admin":false},"created_at":"2018-09-07T16:47:59Z","updated_at":"2018-09-07T16:47:59Z","author_association":"MEMBER","body":"> Should there be an issue for that?\r\n\r\nGood idea. I just opened #8438 about it.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/419499527/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]