[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337525067","html_url":"https://github.com/coq/coq/issues/3677#issuecomment-337525067","issue_url":"https://api.github.com/repos/coq/coq/issues/3677","id":337525067,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNTA2Nw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-09-29T19:48:32Z","updated_at":"2017-10-18T09:34:19Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nI want something like\n\nLtac eval_in tac_in H :=\n  let ret := constr:($(let H' := fresh in\n                       pose H as H';\n                       tac_in H';\n                       [ exact H' ])$) in\n  let T := type of ret in\n  let ret' := (lazymatch ret with\n              | let x := ?x' in @ ?P x => constr:(P x')\n               end) in\n  let ret'' := (eval cbv beta in ret') in\n  constr:(ret'' : T).\n\nGoal forall A B : Set, A = B -> A -> B.\n  intros A B H a.\n  let x := (eval_in ltac:(fun H' => rewrite H in H') a) in\n  pose x.\n\nHowever, I want the syntax, e.g., [eval rewrite H in a], and I don't want automatic beta/zeta reduction except for the single top-level let-in, and I don't want the extra cast ([: T]) to show up in the term.  I think this nicely extends syntax like [eval pattern foo in bar].\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337525067/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337525069","html_url":"https://github.com/coq/coq/issues/3677#issuecomment-337525069","issue_url":"https://api.github.com/repos/coq/coq/issues/3677","id":337525069,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNTA2OQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-12-05T18:32:03Z","updated_at":"2017-10-18T09:34:19Z","author_association":"CONTRIBUTOR","body":"Comment author: @ppedrot\n\nMaybe we could provide such an interface for the rewriting strategies? Otherwise, in general it does not make much sense...\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337525069/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]