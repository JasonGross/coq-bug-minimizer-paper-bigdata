[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337528874","html_url":"https://github.com/coq/coq/issues/3893#issuecomment-337528874","issue_url":"https://api.github.com/repos/coq/coq/issues/3893","id":337528874,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyODg3NA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-12-31T01:54:57Z","updated_at":"2017-10-18T09:45:10Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nLtac barL := let x := match goal with |- ?G => constr:G end in pose x.\nTactic Notation \"barN\" := let x := match goal with |- ?G => constr:G end in pose x.\nGoal True.\n  let tac := barL in exfalso; tac. (* P := True *)\n  match eval unfold P in P with True => idtac end.\n  clear; assert True.\n  let tac := barN in exfalso; tac. (* P := False *)\n  match eval unfold P in P with False => idtac end.\n\n\nThe documentation should make this distinction clear.  It currently says, about tactic notations, \"A tactic notation Tactic Notation tactic_level [production_item  â€¦  production_item] := tactic extends the parser and pretty-printer of tactics with a new rule made of the list of production items. It then evaluates into the tactic expression tactic.\"  About Ltac, it says: \"\"\"Basically, Ltac toplevel definitions are made as follows:\n\nLtac ident ident1 ... identn := expr\nThis defines a new Ltac function that can be used in any tactic script or new Ltac toplevel definition.\"\"\"\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337528874/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]