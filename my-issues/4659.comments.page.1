[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337541451","html_url":"https://github.com/coq/coq/issues/4659#issuecomment-337541451","issue_url":"https://api.github.com/repos/coq/coq/issues/4659","id":337541451,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0MTQ1MQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-04-06T16:53:59Z","updated_at":"2022-01-10T21:08:13Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\r\n\r\nHere is code that only works (in both 8.4 and 8.5) if you remove the [Import Nat]:\r\n```coq\r\nRequire Import Coq.Numbers.Natural.Peano.NPeano.\r\nImport Nat.\r\nGoal forall x y (p : x = y :> nat) (f f' : nat -> nat -> nat) (k a : nat),\r\n                   f a (match p with eq_refl => k end) = f' a k.\r\nProof.\r\n  intros.\r\n  match goal with\r\n  | [ |- ?f _ (match ?p with eq_refl => ?k end) = ?f' _ ?k ]\r\n    => destruct p\r\n  end.\r\n```\r\nIf you leave in the [Import nat], it complains about (match ?p with eq_refl => ?k end) with \"Error: Non supported pattern.\"  What's going on here?\r\n\r\n(I'm not sure whether this is a problem with Ltac, or with the standard library.)\r\n\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337541451/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337541452","html_url":"https://github.com/coq/coq/issues/4659#issuecomment-337541452","issue_url":"https://api.github.com/repos/coq/coq/issues/4659","id":337541452,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0MTQ1Mg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-04-06T17:38:27Z","updated_at":"2022-01-10T21:08:51Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\r\n\r\nThe culprit seems to be\r\n```coq\r\nModule BackportEq (E:Eq)(F:IsEq E) <: IsEqOrig E.\r\n Definition eq_refl := F.eq_equiv.(@ Equivalence_Reflexive _ _). \r\n Definition eq_sym := F.eq_equiv.(@ Equivalence_Symmetric _ _).\r\n Definition eq_trans := F.eq_equiv.(@ Equivalence_Transitive _ _).\r\nEnd BackportEq.\r\n```\r\n\r\nIt is kind-of confusing that adding:\r\n```coq\r\nDefinition eq_refl := @ eq_refl nat.\r\nArguments eq_refl {x}, x.\r\n```\r\n\r\nmakes the following parse but not work:\r\n```coq\r\nGoal forall x y (p : x = y :> nat), match p with eq_refl => 0 end = match p with Coq.Init.Logic.eq_refl => 0 end.\r\nreflexivity.\r\nQed.\r\n```\r\n\r\nAt the very least, Coq should almost certainly emit a warning if there is a [match] with a pattern variable whose name is a constructor for an inductive datatype.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337541452/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337541454","html_url":"https://github.com/coq/coq/issues/4659#issuecomment-337541454","issue_url":"https://api.github.com/repos/coq/coq/issues/4659","id":337541454,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0MTQ1NA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-04-25T16:57:34Z","updated_at":"2017-10-18T10:22:23Z","author_association":"CONTRIBUTOR","body":"Comment author: @ppedrot\n\nI agree that this looks like a real bug, but my knowledge on pattern-matching elaboration is a bit terse :/\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337541454/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]