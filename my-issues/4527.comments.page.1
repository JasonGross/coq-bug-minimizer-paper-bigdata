[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337539364","html_url":"https://github.com/coq/coq/issues/4527#issuecomment-337539364","issue_url":"https://api.github.com/repos/coq/coq/issues/4527","id":337539364,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzOTM2NA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-01-24T07:53:38Z","updated_at":"2017-11-19T20:34:03Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\r\n```coq\r\n\r\n(* -*- mode: coq; coq-prog-args: (\"-emacs\" \"-nois\" \"-indices-matter\" \"-R\" \".\" \r\n\"Top\" \"-top\" \"bug_bad_univ_length_01\") -*- *)\r\n(* File reduced by coq-bug-finder from original input, then from 1199 lines to \r\n430 lines, then from 444 lines to 430 lines, then from 964 lines to 255 lines, \r\nthen from 269 lines to 255 lines *)\r\n(* coqc version 8.5 (January 2016) compiled on Jan 23 2016 16:15:22 with OCaml \r\n4.01.0\r\n   coqtop version 8.5 (January 2016) *)\r\nInductive False := .\r\nAxiom proof_admitted : False.\r\nTactic Notation \"admit\" := case proof_admitted.\r\nRequire Coq.Init.Datatypes.\r\n\r\nImport Coq.Init.Notations.\r\n\r\nGlobal Set Universe Polymorphism.\r\n\r\nNotation \"A -> B\" := (forall (_ : A), B) : type_scope.\r\n\r\nInductive True : Type :=\r\n  I : True.\r\nModule Export Datatypes.\r\n\r\nSet Implicit Arguments.\r\nNotation nat := Coq.Init.Datatypes.nat.\r\nNotation S := Coq.Init.Datatypes.S.\r\n\r\nRecord prod (A B : Type) := pair { fst : A ; snd : B }.\r\n\r\nNotation \"x * y\" := (prod x y) : type_scope.\r\n\r\nOpen Scope nat_scope.\r\n\r\nEnd Datatypes.\r\nModule Export Specif.\r\n\r\nSet Implicit Arguments.\r\n\r\nRecord sig {A} (P : A -> Type) := exist { proj1_sig : A ; proj2_sig : P \r\nproj1_sig }.\r\n\r\nNotation sigT := sig (only parsing).\r\n\r\nNotation \"{ x : A  & P }\" := (sigT (fun x:A => P)) : type_scope.\r\n\r\nNotation projT1 := proj1_sig (only parsing).\r\nNotation projT2 := proj2_sig (only parsing).\r\n\r\nEnd Specif.\r\nDefinition Type1@ {i} := Eval hnf in let gt := (Set : Type@ {i}) in Type@ {i}.\r\n\r\nDefinition Type2@ {i j} := Eval hnf in let gt := (Type1@ {j} : Type@ {i}) in \r\nType@ {i}.\r\n\r\nDefinition Type2le@ {i j} := Eval hnf in let gt := (Set : Type@ {i}) in\r\n                                        let ge := ((fun x => x) : Type1@ {j} -> \r\nType@ {i}) in Type@ {i}.\r\n\r\nNotation idmap := (fun x => x).\r\nDelimit Scope function_scope with function.\r\nDelimit Scope path_scope with path.\r\nDelimit Scope fibration_scope with fibration.\r\nOpen Scope fibration_scope.\r\nOpen Scope function_scope.\r\n\r\nNotation pr1 := projT1.\r\nNotation pr2 := projT2.\r\n\r\nNotation \"x .1\" := (pr1 x) (at level 3, format \"x '.1'\") : fibration_scope.\r\nNotation \"x .2\" := (pr2 x) (at level 3, format \"x '.2'\") : fibration_scope.\r\n\r\nNotation compose := (fun g f x => g (f x)).\r\n\r\nNotation \"g 'o' f\" := (compose g%function f%function) (at level 40, left \r\nassociativity) : function_scope.\r\n\r\nInductive paths {A : Type} (a : A) : A -> Type :=\r\n  idpath : paths a a.\r\n\r\nArguments idpath {A a} , [A] a.\r\n\r\nNotation \"x = y :> A\" := (@ paths A x y) : type_scope.\r\nNotation \"x = y\" := (x = y :>_) : type_scope.\r\n\r\nDefinition inverse {A : Type} {x y : A} (p : x = y) : y = x\r\n  := match p with idpath => idpath end.\r\n\r\nDefinition concat {A : Type} {x y z : A} (p : x = y) (q : y = z) : x = z :=\r\n  match p, q with idpath, idpath => idpath end.\r\n\r\nNotation \"p @  q\" := (concat p%path q%path) (at level 20) : path_scope.\r\n\r\nNotation \"p ^\" := (inverse p%path) (at level 3, format \"p '^'\") : path_scope.\r\n\r\nDefinition ap {A B:Type} (f:A -> B) {x y:A} (p:x = y) : f x = f y\r\n  := match p with idpath => idpath end.\r\n\r\nDefinition pointwise_paths {A} {P:A->Type} (f g:forall x:A, P x)\r\n  := forall x:A, f x = g x.\r\n\r\nNotation \"f == g\" := (pointwise_paths f g) (at level 70, no associativity) : \r\ntype_scope.\r\n\r\nDefinition Sect {A B : Type} (s : A -> B) (r : B -> A) :=\r\n  forall x : A, r (s x) = x.\r\n\r\nClass IsEquiv {A B : Type} (f : A -> B) := BuildIsEquiv {\r\n  equiv_inv : B -> A ;\r\n  eisretr : Sect equiv_inv f;\r\n  eissect : Sect f equiv_inv;\r\n  eisadj : forall x : A, eisretr (f x) = ap f (eissect x)\r\n}.\r\n\r\nArguments eisretr {A B}%type_scope f%function_scope {_} _.\r\nArguments eissect {A B}%type_scope f%function_scope {_} _.\r\n\r\nNotation \"f ^-1\" := (@ equiv_inv _ _ f _) (at level 3, format \"f '^-1'\") : \r\nfunction_scope.\r\n\r\nInductive Unit : Type1 :=\r\n    tt : Unit.\r\n\r\nLocal Open Scope path_scope.\r\n\r\nSection EquivInverse.\r\n\r\n  Context {A B : Type} (f : A -> B) {feq : IsEquiv f}.\r\n\r\n  Theorem other_adj (b : B) : eissect f (f^-1 b) = ap f^-1 (eisretr f b).\r\nadmit.\r\nDefined.\r\n\r\n  Global Instance isequiv_inverse : IsEquiv f^-1 | 10000\r\n    := BuildIsEquiv B A f^-1 f (eissect f) (eisretr f) other_adj.\r\nEnd EquivInverse.\r\n\r\nSection Adjointify.\r\n\r\n  Context {A B : Type} (f : A -> B) (g : B -> A).\r\n  Context (isretr : Sect g f) (issect : Sect f g).\r\n\r\n  Let issect' := fun x =>\r\n    ap g (ap f (issect x)^)  @   ap g (isretr (f x))  @   issect x.\r\n\r\n  Let is_adjoint' (a : A) : isretr (f a) = ap f (issect' a).\r\nadmit.\r\nDefined.\r\n\r\n  Definition isequiv_adjointify : IsEquiv f\r\n    := BuildIsEquiv A B f g isretr issect' is_adjoint'.\r\n\r\nEnd Adjointify.\r\n\r\n  Definition ExtensionAlong {A B : Type} (f : A -> B)\r\n             (P : B -> Type) (d : forall x:A, P (f x))\r\n    := { s : forall y:B, P y & forall x:A, s (f x) = d x }.\r\n\r\n  Fixpoint ExtendableAlong@ {i j k l}\r\n           (n : nat) {A : Type@ {i}} {B : Type@ {j}}\r\n           (f : A -> B) (C : B -> Type@ {k}) : Type@ {l}\r\n    := match n with\r\n         | 0 => Unit@ {l}\r\n         | S n => (forall (g : forall a, C (f a)),\r\n                     ExtensionAlong@ {i j k l l} f C g) *\r\n                  forall (h k : forall b, C b),\r\n                    ExtendableAlong n f (fun b => h b = k b)\r\n       end.\r\n\r\n  Definition ooExtendableAlong@ {i j k l}\r\n             {A : Type@ {i}} {B : Type@ {j}}\r\n             (f : A -> B) (C : B -> Type@ {k}) : Type@ {l}\r\n    := forall n, ExtendableAlong@ {i j k l} n f C.\r\n\r\nModule Type ReflectiveSubuniverses.\r\n\r\n  Parameter ReflectiveSubuniverse@ {u a} : Type2@ {u a}.\r\n\r\n  Parameter O_reflector@ {u a i} : forall (O : ReflectiveSubuniverse@ {u a}),\r\n                            Type2le@ {i a} -> Type2le@ {i a}.\r\n\r\n  Parameter In@ {u a i} : forall (O : ReflectiveSubuniverse@ {u a}),\r\n                   Type2le@ {i a} -> Type2le@ {i a}.\r\n\r\n  Parameter O_inO@ {u a i} : forall (O : ReflectiveSubuniverse@ {u a}) (T : \r\nType@ {i}),\r\n                               In@ {u a i} O (O_reflector@ {u a i} O T).\r\n\r\n  Parameter to@ {u a i} : forall (O : ReflectiveSubuniverse@ {u a}) (T : \r\nType@ {i}),\r\n                   T -> O_reflector@ {u a i} O T.\r\n\r\n  Parameter inO_equiv_inO@ {u a i j k} :\r\n      forall (O : ReflectiveSubuniverse@ {u a}) (T : Type@ {i}) (U : Type@ {j})\r\n             (T_inO : In@ {u a i} O T) (f : T -> U) (feq : IsEquiv f),\r\n\r\n        let gei := ((fun x => x) : Type@ {i} -> Type@ {k}) in\r\n        let gej := ((fun x => x) : Type@ {j} -> Type@ {k}) in\r\n        In@ {u a j} O U.\r\n\r\n  Parameter extendable_to_O@ {u a i j k}\r\n  : forall (O : ReflectiveSubuniverse@ {u a}) {P : Type2le@ {i a}} {Q : \r\nType2le@ {j a}} {Q_inO : In@ {u a j} O Q},\r\n      ooExtendableAlong@ {i i j k} (to O P) (fun _ => Q).\r\n\r\nEnd ReflectiveSubuniverses.\r\n\r\nModule ReflectiveSubuniverses_Theory (Os : ReflectiveSubuniverses).\r\nExport Os.\r\n\r\nExisting Class In.\r\n\r\n  Coercion O_reflector : ReflectiveSubuniverse >-> Funclass.\r\n\r\nArguments inO_equiv_inO {O} T {U} {_} f {_}.\r\nGlobal Existing Instance O_inO.\r\n\r\nSection ORecursion.\r\n  Context {O : ReflectiveSubuniverse}.\r\n\r\n  Definition O_indpaths {P Q : Type} {Q_inO : In O Q}\r\n             (g h : O P -> Q) (p : g o to O P == h o to O P)\r\n  : g == h\r\n  := (fst (snd (extendable_to_O O 2) g h) p).1.\r\n\r\n  Definition O_indpaths_beta {P Q : Type} {Q_inO : In O Q}\r\n             (g h : O P -> Q) (p : g o (to O P) == h o (to O P)) (x : P)\r\n  : O_indpaths g h p (to O P x) = p x\r\n  := (fst (snd (extendable_to_O O 2) g h) p).2 x.\r\n\r\nEnd ORecursion.\r\n\r\nSection Reflective_Subuniverse.\r\n  Universes Ou Oa.\r\n  Context (O : ReflectiveSubuniverse@ {Ou Oa}).\r\n\r\n    Definition inO_isequiv_to_O (T:Type)\r\n    : IsEquiv (to O T) -> In O T\r\n    := fun _ => inO_equiv_inO (O T) (to O T)^-1.\r\n\r\n    Definition inO_to_O_retract (T:Type) (mu : O T -> T)\r\n    : Sect (to O T) mu -> In O T.\r\n    Proof.\r\n      unfold Sect; intros H.\r\n      apply inO_isequiv_to_O.\r\n      apply isequiv_adjointify with (g:=mu).\r\n      -\r\n refine (O_indpaths (to O T o mu) idmap _).\r\n        intros x; exact (ap (to O T) (H x)).\r\n      -\r\n exact H.\r\n    Defined.\r\n\r\n    Definition inO_paths@ {i j} (S : Type@ {i}) {S_inO : In@ {Ou Oa i} O S} (x y : \r\nS)\r\n    : In O (x=y).\r\n    Proof.\r\n      simple refine (inO_to_O_retract@ {i j} _ _ _); intro u.\r\n      -\r\n assert (p : (fun _ : O (x=y) => x) == (fun _=> y)).\r\n        {\r\n refine (O_indpaths _ _ _); simpl.\r\n          intro v; exact v.\r\n}\r\n        exact (p u).\r\n      -\r\n hnf.\r\n        rewrite O_indpaths_beta; reflexivity.\r\n    Qed.\r\n    Definition foo@ {i j k} : True.\r\n      Check inO_paths@ {i j k}.\r\n      Check @ inO_paths@ {i j}. (* Error: Universe instance should have length 3 \r\n*)\r\n\r\n\r\n```","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337539364/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337539365","html_url":"https://github.com/coq/coq/issues/4527#issuecomment-337539365","issue_url":"https://api.github.com/repos/coq/coq/issues/4527","id":337539365,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzOTM2NQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-05-26T23:52:24Z","updated_at":"2017-10-18T10:16:05Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nThat one's not easy, the additional universe is in the type and gets minimized at the end of the proof. Due to the vi (and vi2vo) compilation (which compiles the type separately), I don't think I can do anything else than throw an error about the unbound universe at the time the type of the Lemma/Definition is type-checked, after minimizing the universes. This might break a lot of other code for which minimization this early becomes too strict. At the same time this could allow parallel processing of universe polymorphic proofs.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337539365/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337539367","html_url":"https://github.com/coq/coq/issues/4527#issuecomment-337539367","issue_url":"https://api.github.com/repos/coq/coq/issues/4527","id":337539367,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzOTM2Nw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-05-27T10:46:29Z","updated_at":"2017-10-18T10:16:05Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nPlaying with the example, I tried to improve minimization so that it finds better solutions, in this case finding out that the extra universe needed by In could be minimized to i already in the type, e.g it finds:\n\nDefinition inO_paths@ {i} (S : Type@ {i}) {S_inO : In@ {Ou Oa i} O S} (x y : S)\n    : In@ {Ou Oa i} O (paths@ {i} S x y).\n\nInstead of letting the conclusion be In@ {Ou Oa j} ...  with i <= j. I'm curious if that is the intended meaning, i.e. if cumulativity is desirable here.\n\nWith the improved minimization, the previous definition:\n\n  Definition inO_to_O_retract (T:Type) (mu : O T -> T)\n    : Sect (to O T) mu -> In O T.\n\nalso gets minimized using a single universe variable for the type of T, because the application of O_indpaths inside it can be minimized. The universe that was present before does not appear in the type of inO_to_O_retract, it's just a sup due to an application of the O_indpaths lemma.\n\ncc-ing Mike\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337539367/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337539368","html_url":"https://github.com/coq/coq/issues/4527#issuecomment-337539368","issue_url":"https://api.github.com/repos/coq/coq/issues/4527","id":337539368,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzOTM2OA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-05-27T12:13:24Z","updated_at":"2017-11-19T20:35:25Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\r\n\r\nI've made PR #177 with a proposed fix, not including the stronger minimization.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337539368/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337539371","html_url":"https://github.com/coq/coq/issues/4527#issuecomment-337539371","issue_url":"https://api.github.com/repos/coq/coq/issues/4527","id":337539371,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzOTM3MQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-05-27T17:01:57Z","updated_at":"2017-10-18T10:16:06Z","author_association":"CONTRIBUTOR","body":"Comment author: @mikeshulman\n\nOoh.  It's been a long time since I thought about this.  Does this stronger minimization in inO_paths break anything elsewhere?  I don't immediately see a principled reason to include a cumulativity there.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337539371/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337539372","html_url":"https://github.com/coq/coq/issues/4527#issuecomment-337539372","issue_url":"https://api.github.com/repos/coq/coq/issues/4527","id":337539372,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzOTM3Mg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-05-27T18:52:33Z","updated_at":"2017-10-18T10:16:06Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nYes, but nothing unfixable it seems, I tried a little bit on the current HoTT. The minimization is actually too strong I think, it pretty much collapses most <= to = in constraints.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337539372/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337539374","html_url":"https://github.com/coq/coq/issues/4527#issuecomment-337539374","issue_url":"https://api.github.com/repos/coq/coq/issues/4527","id":337539374,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzOTM3NA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-09-26T14:42:55Z","updated_at":"2017-10-18T10:16:06Z","author_association":"CONTRIBUTOR","body":"Comment author: @ejgallego\n\nShould this be a blocker for 8.6?\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337539374/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337539375","html_url":"https://github.com/coq/coq/issues/4527#issuecomment-337539375","issue_url":"https://api.github.com/repos/coq/coq/issues/4527","id":337539375,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzOTM3NQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-09-27T08:20:30Z","updated_at":"2017-10-18T10:16:06Z","author_association":"CONTRIBUTOR","body":"Comment author: @maximedenes\n\nWas PR#177 merged? It was closed without any detail. And the way it was rebased makes it hard to look for commits in the current tree.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337539375/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337539378","html_url":"https://github.com/coq/coq/issues/4527#issuecomment-337539378","issue_url":"https://api.github.com/repos/coq/coq/issues/4527","id":337539378,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzOTM3OA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-09-27T11:39:04Z","updated_at":"2017-10-18T10:16:06Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nYes it was, changes are in the CHANGES file. However it seems I forgot to add the test-suite file. Will do now. I think the situation with minimization is a blocker indeed, and that's my main goal for the bugfix sessions tomorrow and thursday :)\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337539378/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337539379","html_url":"https://github.com/coq/coq/issues/4527#issuecomment-337539379","issue_url":"https://api.github.com/repos/coq/coq/issues/4527","id":337539379,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzOTM3OQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-09-28T13:17:16Z","updated_at":"2017-10-18T10:16:06Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nThis bug is now fixed, I hope to have a fix for the minimization by tomorrow \nevening to avoid what would now be an error on an unbound universe variable.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337539379/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337539380","html_url":"https://github.com/coq/coq/issues/4527#issuecomment-337539380","issue_url":"https://api.github.com/repos/coq/coq/issues/4527","id":337539380,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzOTM4MA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-10-10T16:38:16Z","updated_at":"2017-10-18T10:16:06Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nThe fixes are now discussed here https://github.com/coq/coq/pull/315 and there: https://github.com/HoTT/HoTT/pull/831\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337539380/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]