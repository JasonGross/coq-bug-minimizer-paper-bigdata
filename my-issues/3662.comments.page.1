[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524855","html_url":"https://github.com/coq/coq/issues/3662#issuecomment-337524855","issue_url":"https://api.github.com/repos/coq/coq/issues/3662","id":337524855,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNDg1NQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-09-25T08:09:16Z","updated_at":"2021-09-07T20:39:09Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\r\n```coq\r\nSet Primitive Projections.\r\nSet Implicit Arguments.\r\nRecord prod A B := pair { fst : A ; snd : B }.\r\nGoal fst (pair nat nat) = nat.\r\n  progress compute. (* failed to progress *)\r\n  match goal with\r\n    | [ |- fst ?x = nat ] => fail 1 \"compute failed\"\r\n    | [ |- nat = nat ] => idtac\r\n  end.\r\n  reflexivity.\r\nDefined.\r\n\r\nGoal fst (pair nat nat) = nat.\r\n  unfold fst. (* Error: Cannot unfold primitive projection fst *)\r\n  match goal with\r\n    | [ |- fst ?x = nat ] => fail 1 \"compute failed\"\r\n    | [ |- nat = nat ] => idtac\r\n  end.\r\n  reflexivity.\r\nDefined.\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524855/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524857","html_url":"https://github.com/coq/coq/issues/3662#issuecomment-337524857","issue_url":"https://api.github.com/repos/coq/coq/issues/3662","id":337524857,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNDg1Nw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-09-25T08:19:50Z","updated_at":"2017-10-18T09:33:41Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nI think the right behavior for [cbv delta [fst]] should appear to behave the same as without primitive projections, with [fst] unfolding to the compatibility representation [fun (A B : Type) (p : prod A B) =>\nmatch p return A with\n| pair fst _ => fst\nend]\nIn this case, I think [Print fst] should possibly also display this compatibility representation.  Displaying [fst = fun (A B : Type) (p : prod A B) => @ fst A B p] is kind-of confusing.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524857/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524858","html_url":"https://github.com/coq/coq/issues/3662#issuecomment-337524858","issue_url":"https://api.github.com/repos/coq/coq/issues/3662","id":337524858,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNDg1OA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-09-27T19:08:37Z","updated_at":"2017-10-18T09:33:41Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nFixed in trunk. cbv/compute were actually implementing everything but the reduction rule of projections :)\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524858/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]