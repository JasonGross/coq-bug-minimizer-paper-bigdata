[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337538761","html_url":"https://github.com/coq/coq/issues/4484#issuecomment-337538761","issue_url":"https://api.github.com/repos/coq/coq/issues/4484","id":337538761,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzODc2MQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-01-11T20:46:43Z","updated_at":"2017-10-18T10:14:11Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nHere is code that worked in 8.4pl6, but fails (with \"abstract cannot handle existentials\") in 8.5rc1:\n\nClass A := { a : False }.\nClass B (ac : A) := { b : False }.\nAxiom foo : forall {ac : A} {bc : B ac}, nat -> nat.\nGoal False -> forall (ac : A) (bc : B ac), True.\nProof.\n  intros bad ac bc.\n  refine (match foo 0 as k return foo 0 = k -> True with\n          | 0 => fun _ => I\n          | S _ => fun H'' => match _ : False with end\n          end eq_refl).\n  abstract exact bad.\nQed.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337538761/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337538763","html_url":"https://github.com/coq/coq/issues/4484#issuecomment-337538763","issue_url":"https://api.github.com/repos/coq/coq/issues/4484","id":337538763,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzODc2Mw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-01-11T21:15:44Z","updated_at":"2017-10-18T10:14:12Z","author_association":"CONTRIBUTOR","body":"Comment author: @silene\n\nIt is not just \"refine\"; it is a more general issue:\n\nClass A := {}.\nAxiom foo : forall {ac : A}, bool.\nLemma bar (ac : A) : True.\nCheck (match foo as k return foo = k -> True with\n       | true => _\n       | false => _\n       end eq_refl).\n\n(* (if @ foo ?ac0 as k return (@ foo ?ac0 = k -> True) then ?t else ?t0)\n   (@ eq_refl bool (@ foo ?ac0) *)\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337538763/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337538764","html_url":"https://github.com/coq/coq/issues/4484#issuecomment-337538764","issue_url":"https://api.github.com/repos/coq/coq/issues/4484","id":337538764,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzODc2NA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-01-12T19:00:29Z","updated_at":"2017-10-18T10:14:12Z","author_association":"CONTRIBUTOR","body":"Comment author: @herbelin\n\nThe issue is a bit complicated and I don't have a full and fine understanding of it.\n\nAfaics at the current time, it is related to two changes:\n\n- A tentatively finer control of which evars have to be inferred and what don't have which, from bf018569405, is applied to type classes (e.g. I have a goal with a preexisting evar, I want to control that only new evars are eventually all instantiated).\n- The order of resolution of evar-evar problem.\n\nHere, there were an evar ?x:A and another evar ?y:A. The change of order in the resolution of evar-evar problems makes that a third evar ?z is created with ?x:=?z and ?y:=?z while before, we had ?y:=?x. Because there is a new evar unknown from the initial problem, it is considered wrongly as a frozen evar on which type classes should not be applied.\n\nI have a fix, which generalizes the test deciding if an evar is new. This solves the current problem and a priori can only make closer from the 8.4 behavior even if the question of distinguishing preexisting evars and new evars remains.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337538764/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337538765","html_url":"https://github.com/coq/coq/issues/4484#issuecomment-337538765","issue_url":"https://api.github.com/repos/coq/coq/issues/4484","id":337538765,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzODc2NQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-01-12T21:26:29Z","updated_at":"2017-10-18T10:14:12Z","author_association":"CONTRIBUTOR","body":"Comment author: @herbelin\n\nFixed in branch v8.5. To have a short example was very helpful!\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337538765/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]