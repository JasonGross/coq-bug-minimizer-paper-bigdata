[{"url":"https://api.github.com/repos/coq/coq/issues/comments/578051145","html_url":"https://github.com/coq/coq/issues/11447#issuecomment-578051145","issue_url":"https://api.github.com/repos/coq/coq/issues/11447","id":578051145,"node_id":"MDEyOklzc3VlQ29tbWVudDU3ODA1MTE0NQ==","user":{"login":"fajb","id":6177099,"node_id":"MDQ6VXNlcjYxNzcwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/6177099?v=4","gravatar_id":"","url":"https://api.github.com/users/fajb","html_url":"https://github.com/fajb","followers_url":"https://api.github.com/users/fajb/followers","following_url":"https://api.github.com/users/fajb/following{/other_user}","gists_url":"https://api.github.com/users/fajb/gists{/gist_id}","starred_url":"https://api.github.com/users/fajb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fajb/subscriptions","organizations_url":"https://api.github.com/users/fajb/orgs","repos_url":"https://api.github.com/users/fajb/repos","events_url":"https://api.github.com/users/fajb/events{/privacy}","received_events_url":"https://api.github.com/users/fajb/received_events","type":"User","site_admin":false},"created_at":"2020-01-24T09:16:06Z","updated_at":"2020-01-24T09:16:06Z","author_association":"CONTRIBUTOR","body":"Hi @JasonGross ,\r\n\r\nThough this is not advertised (yet), there is user-level support to extend `zify`.\r\nYou can find the default declared operators at\r\nhttps://github.com/coq/coq/blob/master/plugins/micromega/ZifyInst.v\r\n\r\nThere are actually already a few other operators declared in  `ZifyBool` and `ZifyComparison` which are not loaded by default.\r\n\r\n`Nat.div` and `Nat.modulo` would make sense to include.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/578051145/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/714258211","html_url":"https://github.com/coq/coq/issues/11447#issuecomment-714258211","issue_url":"https://api.github.com/repos/coq/coq/issues/11447","id":714258211,"node_id":"MDEyOklzc3VlQ29tbWVudDcxNDI1ODIxMQ==","user":{"login":"paldepind","id":521604,"node_id":"MDQ6VXNlcjUyMTYwNA==","avatar_url":"https://avatars.githubusercontent.com/u/521604?v=4","gravatar_id":"","url":"https://api.github.com/users/paldepind","html_url":"https://github.com/paldepind","followers_url":"https://api.github.com/users/paldepind/followers","following_url":"https://api.github.com/users/paldepind/following{/other_user}","gists_url":"https://api.github.com/users/paldepind/gists{/gist_id}","starred_url":"https://api.github.com/users/paldepind/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paldepind/subscriptions","organizations_url":"https://api.github.com/users/paldepind/orgs","repos_url":"https://api.github.com/users/paldepind/repos","events_url":"https://api.github.com/users/paldepind/events{/privacy}","received_events_url":"https://api.github.com/users/paldepind/received_events","type":"User","site_admin":false},"created_at":"2020-10-22T06:18:59Z","updated_at":"2020-10-22T06:18:59Z","author_association":"CONTRIBUTOR","body":"I stumbled into this as well. The [documentation for `zify`](https://coq.inria.fr/refman/addendum/micromega.html#zify-pre-processing-of-arithmetic-goals) gave me the impression that `lia` could handle `Nat.div` and `Nat.modulo`. But, it doesn't seem to work for me. When I invoke `zify` manually it doesn't convert `Nat.modulo`.\r\n\r\nThe above comment seems to imply that the user can extend `zify` to make it handle `Nat.div` and `Nat.modulo`. How can one do that? I tried the following which does not work:\r\n\r\n```coq\r\nInstance Op_Nat_mod : BinOp Nat.modulo :=\r\n  {| TBOp := Z.modulo ; TBOpInj := Nat2Z_inj_mod |}.\r\nAdd Zify BinOp Op_Nat_mod.\r\n```","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/714258211/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/714308921","html_url":"https://github.com/coq/coq/issues/11447#issuecomment-714308921","issue_url":"https://api.github.com/repos/coq/coq/issues/11447","id":714308921,"node_id":"MDEyOklzc3VlQ29tbWVudDcxNDMwODkyMQ==","user":{"login":"fajb","id":6177099,"node_id":"MDQ6VXNlcjYxNzcwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/6177099?v=4","gravatar_id":"","url":"https://api.github.com/users/fajb","html_url":"https://github.com/fajb","followers_url":"https://api.github.com/users/fajb/followers","following_url":"https://api.github.com/users/fajb/following{/other_user}","gists_url":"https://api.github.com/users/fajb/gists{/gist_id}","starred_url":"https://api.github.com/users/fajb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fajb/subscriptions","organizations_url":"https://api.github.com/users/fajb/orgs","repos_url":"https://api.github.com/users/fajb/repos","events_url":"https://api.github.com/users/fajb/events{/privacy}","received_events_url":"https://api.github.com/users/fajb/received_events","type":"User","site_admin":false},"created_at":"2020-10-22T08:00:11Z","updated_at":"2020-10-22T08:00:11Z","author_association":"CONTRIBUTOR","body":"Hi @paldepind \r\nCould you tell where `Nat2Z_inj_mod` is defined and what you mean by \"it does not work\" ?\r\nThe following script works:\r\n```coq\r\nRequire Import Arith ZArith ZifyClasses ZifyInst Lia.\r\n\r\nLemma Nat2Z_inj_mod : \r\n    forall n m : nat, Z.of_nat (n mod m) = (Z.of_nat n mod Z.of_nat m)%Z.\r\nProof.\r\n  intros.\r\n  destruct m.\r\n  - simpl. symmetry. apply Zmod_0_r.\r\n  - apply mod_Zmod.\r\n    discriminate.\r\nQed.\r\n\r\nLtac Zify.zify_post_hook ::= Z.to_euclidean_division_equations.\r\n\r\nGoal forall (n:nat),\r\n    2 * n mod 2 = 0.\r\nProof.\r\n  intros.\r\n  Fail lia.\r\nAbort.\r\n\r\nProgram Instance Op_Nat_mod : BinOp Nat.modulo :=\r\n  {| TBOp := Z.modulo ; TBOpInj := Nat2Z_inj_mod |}.\r\nAdd Zify BinOp Op_Nat_mod.\r\n\r\nGoal forall (n:nat),\r\n    2 * n mod 2 = 0.\r\nProof.\r\n  intros.\r\n  lia.\r\nQed.\r\n```\r\nBest.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/714308921/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/714334581","html_url":"https://github.com/coq/coq/issues/11447#issuecomment-714334581","issue_url":"https://api.github.com/repos/coq/coq/issues/11447","id":714334581,"node_id":"MDEyOklzc3VlQ29tbWVudDcxNDMzNDU4MQ==","user":{"login":"Zimmi48","id":1108325,"node_id":"MDQ6VXNlcjExMDgzMjU=","avatar_url":"https://avatars.githubusercontent.com/u/1108325?v=4","gravatar_id":"","url":"https://api.github.com/users/Zimmi48","html_url":"https://github.com/Zimmi48","followers_url":"https://api.github.com/users/Zimmi48/followers","following_url":"https://api.github.com/users/Zimmi48/following{/other_user}","gists_url":"https://api.github.com/users/Zimmi48/gists{/gist_id}","starred_url":"https://api.github.com/users/Zimmi48/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Zimmi48/subscriptions","organizations_url":"https://api.github.com/users/Zimmi48/orgs","repos_url":"https://api.github.com/users/Zimmi48/repos","events_url":"https://api.github.com/users/Zimmi48/events{/privacy}","received_events_url":"https://api.github.com/users/Zimmi48/received_events","type":"User","site_admin":false},"created_at":"2020-10-22T08:44:10Z","updated_at":"2020-10-22T08:44:10Z","author_association":"MEMBER","body":">  Could you tell where `Nat2Z_inj_mod` is defined and what you mean by \"it does not work\" ?\r\n\r\n@paldepind probably tried this script in a released version of Coq, in which case the `Add Zify Binop...` line should be `Add Binop...`\r\n\r\nCf. https://coq.github.io/doc/master/refman/addendum/micromega.html#coq:cmd.add-zify","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/714334581/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/714412418","html_url":"https://github.com/coq/coq/issues/11447#issuecomment-714412418","issue_url":"https://api.github.com/repos/coq/coq/issues/11447","id":714412418,"node_id":"MDEyOklzc3VlQ29tbWVudDcxNDQxMjQxOA==","user":{"login":"paldepind","id":521604,"node_id":"MDQ6VXNlcjUyMTYwNA==","avatar_url":"https://avatars.githubusercontent.com/u/521604?v=4","gravatar_id":"","url":"https://api.github.com/users/paldepind","html_url":"https://github.com/paldepind","followers_url":"https://api.github.com/users/paldepind/followers","following_url":"https://api.github.com/users/paldepind/following{/other_user}","gists_url":"https://api.github.com/users/paldepind/gists{/gist_id}","starred_url":"https://api.github.com/users/paldepind/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paldepind/subscriptions","organizations_url":"https://api.github.com/users/paldepind/orgs","repos_url":"https://api.github.com/users/paldepind/repos","events_url":"https://api.github.com/users/paldepind/events{/privacy}","received_events_url":"https://api.github.com/users/paldepind/received_events","type":"User","site_admin":false},"created_at":"2020-10-22T10:57:43Z","updated_at":"2020-10-22T10:57:43Z","author_association":"CONTRIBUTOR","body":"Thanks a lot. What @fajb suggests does indeed work when I make the change that @Zimmi48 mentioned.\r\n\r\nI think having support for `Nat.modulo` and `Nat.div` by default would be really nice. I could maybe try and do a PR if there is interest? Any hints for how to do that would be appreciated. I guess I would just have to add [in `ZifyInst`](https://github.com/coq/coq/blob/master/theories/micromega/ZifyInst.v) something similar to what is already there for `N.modulo` and `N.div`?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/714412418/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/714473492","html_url":"https://github.com/coq/coq/issues/11447#issuecomment-714473492","issue_url":"https://api.github.com/repos/coq/coq/issues/11447","id":714473492,"node_id":"MDEyOklzc3VlQ29tbWVudDcxNDQ3MzQ5Mg==","user":{"login":"fajb","id":6177099,"node_id":"MDQ6VXNlcjYxNzcwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/6177099?v=4","gravatar_id":"","url":"https://api.github.com/users/fajb","html_url":"https://github.com/fajb","followers_url":"https://api.github.com/users/fajb/followers","following_url":"https://api.github.com/users/fajb/following{/other_user}","gists_url":"https://api.github.com/users/fajb/gists{/gist_id}","starred_url":"https://api.github.com/users/fajb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fajb/subscriptions","organizations_url":"https://api.github.com/users/fajb/orgs","repos_url":"https://api.github.com/users/fajb/repos","events_url":"https://api.github.com/users/fajb/events{/privacy}","received_events_url":"https://api.github.com/users/fajb/received_events","type":"User","site_admin":false},"created_at":"2020-10-22T12:53:55Z","updated_at":"2020-10-22T12:53:55Z","author_association":"CONTRIBUTOR","body":"Sure, a PR would be welcolme. \r\nAll the declarations are indeed currently centralised in `ZifyInst`.\r\nLet's continue!","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/714473492/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/745144254","html_url":"https://github.com/coq/coq/issues/11447#issuecomment-745144254","issue_url":"https://api.github.com/repos/coq/coq/issues/11447","id":745144254,"node_id":"MDEyOklzc3VlQ29tbWVudDc0NTE0NDI1NA==","user":{"login":"paldepind","id":521604,"node_id":"MDQ6VXNlcjUyMTYwNA==","avatar_url":"https://avatars.githubusercontent.com/u/521604?v=4","gravatar_id":"","url":"https://api.github.com/users/paldepind","html_url":"https://github.com/paldepind","followers_url":"https://api.github.com/users/paldepind/followers","following_url":"https://api.github.com/users/paldepind/following{/other_user}","gists_url":"https://api.github.com/users/paldepind/gists{/gist_id}","starred_url":"https://api.github.com/users/paldepind/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paldepind/subscriptions","organizations_url":"https://api.github.com/users/paldepind/orgs","repos_url":"https://api.github.com/users/paldepind/repos","events_url":"https://api.github.com/users/paldepind/events{/privacy}","received_events_url":"https://api.github.com/users/paldepind/received_events","type":"User","site_admin":false},"created_at":"2020-12-15T08:48:26Z","updated_at":"2020-12-15T08:48:26Z","author_association":"CONTRIBUTOR","body":"I've run into some problems while trying to implement this.\r\n\r\nI wanted to add the following two lemmas to `Nat2Z` in `Znat.v` (since that is where all the other `Z.of_nat` injectivity results are):\r\n\r\n```coq\r\nLemma  inj_mod (n m : nat) : Z.of_nat (n mod m) = (Z.of_nat n mod Z.of_nat m)%Z.\r\nProof. destruct m. - now rewrite Zmod_0_r. - now apply mod_Zmod. Qed.\r\n\r\nLemma  inj_div n m : Z.of_nat (n / m) = Z.of_nat n / Z.of_nat m.\r\nProof. destruct m. - now rewrite Zdiv_0_r. - now apply div_Zdiv. Qed.\r\n```\r\n\r\nHowever, since these proofs use lemmas from `Zdiv` this causes a dependency cycle since `Zdiv` imports `ZArith_base` which imports `Znat`. Even if the lemmas are moved directly into `ZifyInst.v` a dependency cycle still occurs. On the other hand, proving the lemmas without using the stuff from `Zdiv` would be tedious and duplicate a bunch of stuff. What would be the best solution to this?\r\n\r\nAnother thing, I think the lemmas `mod_Zmod` and `div_Zdiv` are problematic in themselves. Their assumption `m <> O` is not necessary, but seeing those lemmas may give users the impression that the result only holds with that assumption?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/745144254/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/745168480","html_url":"https://github.com/coq/coq/issues/11447#issuecomment-745168480","issue_url":"https://api.github.com/repos/coq/coq/issues/11447","id":745168480,"node_id":"MDEyOklzc3VlQ29tbWVudDc0NTE2ODQ4MA==","user":{"login":"fajb","id":6177099,"node_id":"MDQ6VXNlcjYxNzcwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/6177099?v=4","gravatar_id":"","url":"https://api.github.com/users/fajb","html_url":"https://github.com/fajb","followers_url":"https://api.github.com/users/fajb/followers","following_url":"https://api.github.com/users/fajb/following{/other_user}","gists_url":"https://api.github.com/users/fajb/gists{/gist_id}","starred_url":"https://api.github.com/users/fajb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fajb/subscriptions","organizations_url":"https://api.github.com/users/fajb/orgs","repos_url":"https://api.github.com/users/fajb/repos","events_url":"https://api.github.com/users/fajb/events{/privacy}","received_events_url":"https://api.github.com/users/fajb/received_events","type":"User","site_admin":false},"created_at":"2020-12-15T09:33:59Z","updated_at":"2020-12-15T09:33:59Z","author_association":"CONTRIBUTOR","body":"I am not familiar with the structure of the library. As I have already run into dependency troubles, I sympathize...\r\nWhat is the problem with `ZifyInst` ? I could build it without running into a cycle...\r\nIs there a problem putting them with  `mod_Zmod` and `div_Zdiv` ? It seems that should not increase dependencies.\r\n\r\nRegarding the unneeded assumption, I do not know what is the current policy. I am aware there have been discussions about division by zero. I cannot remember the consensus.\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/745168480/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/811121459","html_url":"https://github.com/coq/coq/issues/11447#issuecomment-811121459","issue_url":"https://api.github.com/repos/coq/coq/issues/11447","id":811121459,"node_id":"MDEyOklzc3VlQ29tbWVudDgxMTEyMTQ1OQ==","user":{"login":"mrhaandi","id":31094379,"node_id":"MDQ6VXNlcjMxMDk0Mzc5","avatar_url":"https://avatars.githubusercontent.com/u/31094379?v=4","gravatar_id":"","url":"https://api.github.com/users/mrhaandi","html_url":"https://github.com/mrhaandi","followers_url":"https://api.github.com/users/mrhaandi/followers","following_url":"https://api.github.com/users/mrhaandi/following{/other_user}","gists_url":"https://api.github.com/users/mrhaandi/gists{/gist_id}","starred_url":"https://api.github.com/users/mrhaandi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mrhaandi/subscriptions","organizations_url":"https://api.github.com/users/mrhaandi/orgs","repos_url":"https://api.github.com/users/mrhaandi/repos","events_url":"https://api.github.com/users/mrhaandi/events{/privacy}","received_events_url":"https://api.github.com/users/mrhaandi/received_events","type":"User","site_admin":false},"created_at":"2021-03-31T14:40:26Z","updated_at":"2021-03-31T14:40:26Z","author_association":"CONTRIBUTOR","body":"> Sure, a PR would be welcolme.\r\n> All the declarations are indeed currently centralised in `ZifyInst`.\r\n> Let's continue!\r\n\r\n@fajb See https://github.com/coq/coq/pull/14037","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/811121459/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]