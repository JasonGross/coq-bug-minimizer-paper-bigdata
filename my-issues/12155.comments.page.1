[{"url":"https://api.github.com/repos/coq/coq/issues/comments/617826147","html_url":"https://github.com/coq/coq/issues/12155#issuecomment-617826147","issue_url":"https://api.github.com/repos/coq/coq/issues/12155","id":617826147,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNzgyNjE0Nw==","user":{"login":"SkySkimmer","id":2461932,"node_id":"MDQ6VXNlcjI0NjE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/2461932?v=4","gravatar_id":"","url":"https://api.github.com/users/SkySkimmer","html_url":"https://github.com/SkySkimmer","followers_url":"https://api.github.com/users/SkySkimmer/followers","following_url":"https://api.github.com/users/SkySkimmer/following{/other_user}","gists_url":"https://api.github.com/users/SkySkimmer/gists{/gist_id}","starred_url":"https://api.github.com/users/SkySkimmer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SkySkimmer/subscriptions","organizations_url":"https://api.github.com/users/SkySkimmer/orgs","repos_url":"https://api.github.com/users/SkySkimmer/repos","events_url":"https://api.github.com/users/SkySkimmer/events{/privacy}","received_events_url":"https://api.github.com/users/SkySkimmer/received_events","type":"User","site_admin":false},"created_at":"2020-04-22T14:49:00Z","updated_at":"2020-04-22T14:49:00Z","author_association":"CONTRIBUTOR","body":"The checker errors on this btw","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/617826147/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/617830180","html_url":"https://github.com/coq/coq/issues/12155#issuecomment-617830180","issue_url":"https://api.github.com/repos/coq/coq/issues/12155","id":617830180,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNzgzMDE4MA==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2020-04-22T14:55:50Z","updated_at":"2020-04-22T14:55:50Z","author_association":"MEMBER","body":"Indeed, here's a proof of False:\r\n```coq\r\nRequire Import Coq.Logic.Hurkens.\r\nModule Type T.\r\n  Parameter Inline bad : False.\r\nEnd T.\r\nModule T1.\r\n  Unset Universe Checking.\r\n  Definition bad := PropNeqType.paradox eq_refl.\r\n  Set Universe Checking.\r\nEnd T1.\r\nModule T2 (F : T).\r\n  Definition bad := F.bad.\r\nEnd T2.\r\nModule T3 := T2 T1.\r\nPrint T3.bad.\r\n(* T3.bad = PropNeqType.paradox eq_refl\r\n     : False *)\r\nPrint Assumptions T3.bad.\r\n(* Closed under the global context *)\r\n```\r\nand `coqchk` gives:\r\n```\r\n$ coqchk -silent Top.foo -R . Top\r\n====== ill-typed term ====\r\napplication head= Cst((Coq.Logic.Hurkens.PropNeqType.paradox)(*Coq.Logic.Hurkens.88\r\n  Coq.Logic.Hurkens.87*))\r\nhead type= (Cst((Coq.Init.Logic.not))\r\n            (Ind(Coq.Init.Logic.eq,0) Type(Coq.Logic.Hurkens.88) Prop\r\n             Type(Coq.Logic.Hurkens.87)))\r\narguments:\r\narg 1= (Constr(Coq.Init.Logic.eq,0,1) Type(Coq.Logic.Hurkens.88) Prop),type=\r\n (Ind(Coq.Init.Logic.eq,0) Type(Coq.Logic.Hurkens.88) Prop Prop)\r\n\r\n====== type error ====@\r\n(Ind(Coq.Init.Logic.eq,0) Type(Coq.Logic.Hurkens.88) Prop Prop)\r\nis not convertible with\r\n(Ind(Coq.Init.Logic.eq,0) Type(Coq.Logic.Hurkens.88) Prop\r\n Type(Coq.Logic.Hurkens.87))\r\n\r\n====== universes ====\r\nProp < Set\r\nSet < Coq.Init.Datatypes.1\r\n    < Coq.Init.Logic.1\r\n    < Coq.Init.Logic_Type.1\r\n    < Coq.Init.Wf.1\r\n    < Coq.Init.Byte.2\r\n    < Coq.Init.Datatypes.2\r\n    < Coq.Init.Decimal.2\r\n    < Coq.Init.Logic.2\r\n    < Coq.Init.Logic_Type.2\r\n    < Coq.Init.Specif.2\r\n    < Coq.Init.Wf.2\r\n    < Coq.Init.Datatypes.3\r\n    < Coq.Init.Logic.3\r\n[...]\r\n                    <= Coq.Init.Logic.17\r\n                    <= Coq.Init.Specif.23\r\n                    <= Coq.Init.Specif.27\r\n                    <= Coq.Init.Specif.28\r\n                    <= Coq.Init.Specif.391\r\nCoq.Init.Specif.407 <= Coq.Init.Specif.6\r\n                    <= Coq.Init.Logic.13\r\n                    <= Coq.Init.Specif.23\r\n                    <= Coq.Init.Specif.27\r\n                    <= Coq.Init.Specif.28\r\n                    <= Coq.Init.Specif.379\r\n                    <= Coq.Init.Specif.381\r\n                    <= Coq.Init.Specif.384\r\n                    <= Coq.Init.Specif.393\r\nCoq.Init.Specif.426 <= Coq.Init.Specif.6\r\n                    <= Coq.Init.Logic.13\r\n                    <= Coq.Init.Specif.407\r\nCoq.Init.Specif.436 <= Coq.Init.Specif.6\r\n                    <= Coq.Init.Logic.13\r\n                    <= Coq.Init.Specif.426\r\nCoq.Init.Specif.442 <= Coq.Init.Specif.2\r\n                    <= Coq.Init.Specif.6\r\n                    <= Coq.Init.Logic.13\r\n                    <= Coq.Init.Logic.15\r\n                    <= Coq.Init.Specif.27\r\n                    <= Coq.Init.Specif.395\r\nCoq.Init.Specif.446 <= Coq.Init.Specif.6\r\n                    <= Coq.Init.Logic.13\r\n                    <= Coq.Init.Specif.23\r\n                    <= Coq.Init.Specif.27\r\n                    <= Coq.Init.Specif.28\r\n                    <= Coq.Init.Logic.184\r\n                    <= Coq.Init.Specif.393\r\nCoq.Init.Specif.451 <= Coq.Init.Logic.13\r\nCoq.Init.Specif.452 <= Coq.Init.Specif.6\r\n                    <= Coq.Init.Logic.13\r\n                    <= Coq.Init.Logic.14\r\n                    <= Coq.Init.Specif.23\r\n                    <= Coq.Init.Specif.27\r\n                    <= Coq.Init.Specif.28\r\nCoq.Init.Specif.473 <= Coq.Init.Datatypes.14\r\n\r\nFatal Error: Type error: CantApplyBadType at argument 1\r\n```","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/617830180/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]