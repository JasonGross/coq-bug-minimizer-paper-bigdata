[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530045","html_url":"https://github.com/coq/coq/issues/3969#issuecomment-337530045","issue_url":"https://api.github.com/repos/coq/coq/issues/3969","id":337530045,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzMDA0NQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-01-30T20:44:52Z","updated_at":"2017-10-18T09:48:44Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nFrom Arthur Azevedo de Amorim <arthur.aa@ gmail.com> on coq-club@ \n\nInductive foo : Type :=\n| Foo0\n| Foo1\n| Foo2\n| Foo3\n| Foo4\n| Foo5\n| Foo6\n| Foo7\n| Foo8\n| Foo9.\n\nInductive bar (f : foo) : Prop :=\n| Bar0 : f = Foo0 -> bar f\n| Bar1 : f = Foo1 -> bar f\n| Bar2 : f = Foo2 -> bar f\n| Bar3 : f = Foo3 -> bar f\n| Bar4 : f = Foo4 -> bar f\n| Bar5 : f = Foo5 -> bar f\n| Bar6 : f = Foo6 -> bar f\n| Bar7 : f = Foo7 -> bar f\n| Bar8 : f = Foo8 -> bar f\n| Bar9 : f = Foo9 -> bar f.\n\nGoal forall f, bar f.\nintros f.\ndestruct f. once (constructor; reflexivity).\nonce (constructor; reflexivity).\nonce (constructor; reflexivity).\nonce (constructor; reflexivity).\nonce (constructor; reflexivity).\nonce (constructor; reflexivity).\nonce (constructor; reflexivity).\nonce (constructor; reflexivity).\nTime all: once (constructor; reflexivity). (* 0.031 s - 2 goals *)\nUndo 2.\nTime all: once (constructor; reflexivity). (* 0.233 s - 3 goals *)\nUndo 5.\nTime all: once (constructor; reflexivity). (* 1.906 s - 4 goals *)\nUndo 8.\nTime all: once (constructor; reflexivity). (* 17.171 s - 5 goals *)\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530045/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530048","html_url":"https://github.com/coq/coq/issues/3969#issuecomment-337530048","issue_url":"https://api.github.com/repos/coq/coq/issues/3969","id":337530048,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzMDA0OA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-01-30T20:55:11Z","updated_at":"2017-10-18T09:48:45Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nBlack magic work-around:\n  repeat ([ > once (constructor; reflexivity) | .. ])\n\nI suspect this works because it decouples the [once] from the multiple goals via a [repeat].\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530048/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530050","html_url":"https://github.com/coq/coq/issues/3969#issuecomment-337530050","issue_url":"https://api.github.com/repos/coq/coq/issues/3969","id":337530050,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzMDA1MA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-01-30T21:22:38Z","updated_at":"2017-10-18T09:48:45Z","author_association":"CONTRIBUTOR","body":"Comment author: @aspiwack\n\nRepeat has nothing to do with it: `[> once(constructor;reflexivity) ..]` works just as well (and, actually, `[>constructor;reflexivity..]` and `once [> constructor;reflexivity..]`). I think `once` should stay global, though.\n\nThe behaviour here comes from the fact that `constructor` selects `Foo0` for each goal, then reflexivity fails (because it only works in the first goal), which triggers backtracking, starting with the last goal, where `Foo1` will be tried, then `Foo1` etc… But none of this choice will suffice for `reflexivity` to work. So backtracking will start in the second to last goal, selecting `Foo1` _and_ restoring `Foo0` for the last goal. Then backtracking in the last goal starts over again…\n\nThe lessons are, I guess: backtracking without control is as feasible as the Prolog project form your university years lead you to believe, and when in trouble, use `[> t..]`.\n\nI'll leave this issue open for a few days in case it sparks useful discussion.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530050/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530052","html_url":"https://github.com/coq/coq/issues/3969#issuecomment-337530052","issue_url":"https://api.github.com/repos/coq/coq/issues/3969","id":337530052,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzMDA1Mg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-02-27T13:34:36Z","updated_at":"2017-10-18T09:48:45Z","author_association":"CONTRIBUTOR","body":"Comment author: @maximedenes\n\nWould be worth documenting, if not done already. Anyway, closing the bug.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530052/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530053","html_url":"https://github.com/coq/coq/issues/3969#issuecomment-337530053","issue_url":"https://api.github.com/repos/coq/coq/issues/3969","id":337530053,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzMDA1Mw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-03-13T15:45:36Z","updated_at":"2017-10-18T09:48:45Z","author_association":"CONTRIBUTOR","body":"Comment author: @aspiwack\n\nI now suggest [> once (construct;tac)..] in the CHANGES file.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337530053/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]