[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337514956","html_url":"https://github.com/coq/coq/issues/3065#issuecomment-337514956","issue_url":"https://api.github.com/repos/coq/coq/issues/3065","id":337514956,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUxNDk1Ng==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2013-06-22T21:44:08Z","updated_at":"2017-10-18T09:05:10Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nI would like to be able to specify the form of the thing I'm doing transitivity with.  That is, I'd like to be able to do something like\n\nGoal 1 = 1.\netransitivity (_ + _).\n\nand get two new goals, [1 = ?1 + ?2] and [?1 + ?2 = 1].\n\nIf the enhancement request at https://coq.inria.fr/bugs/show_bug.cgi?id=3064 gets filled, I believe this variant of etransitivity could be implemented as something like\n\nRequire Import Setoid.\nTactic Notation \"etransitivity\" constr_pattern(y) :=\n  let R := match goal with |- ?R ?x ?z => constr:(R) end in\n  let x := match goal with |- ?R ?x ?z => constr:(x) end in\n  let z := match goal with |- ?R ?x ?z => constr:(z) end in\n  eapply (transitivity (R := R) (x := x) (y := y) (z := z)).\n\nand the present [etransitivity] should be equivalent to [etransitivity _].\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337514956/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337514957","html_url":"https://github.com/coq/coq/issues/3065#issuecomment-337514957","issue_url":"https://api.github.com/repos/coq/coq/issues/3065","id":337514957,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUxNDk1Nw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2013-07-05T03:44:21Z","updated_at":"2017-10-18T09:05:10Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nThis can apparently be implemented now with [open_constr], rather than [constr_pattern].  It doesn't quite deal with all the cases that [etransitivity] and [setoid_etransitivity] deal with, such as [JMeq], but I still think it might make a good addition to the standard library as-is.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337514957/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]