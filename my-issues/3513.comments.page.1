[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337522440","html_url":"https://github.com/coq/coq/issues/3513#issuecomment-337522440","issue_url":"https://api.github.com/repos/coq/coq/issues/3513","id":337522440,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMjQ0MA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-08-12T21:50:43Z","updated_at":"2018-02-23T14:39:52Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\r\n\r\n```coq\r\n(* File reduced by coq-bug-finder from original input, then from 5752 lines to 3828 lines, then from 2707 lines to 558 lines, then from 472 lines to 168 lines, then from 110 lines to 101 lines, then from 96 lines to 77 lines, then from 80 lines to 64 lines *)\r\nRequire Coq.Setoids.Setoid.\r\nImport Coq.Setoids.Setoid.\r\nGeneralizable All Variables.\r\nAxiom admit : forall {T}, T.\r\nClass Equiv (A : Type) := equiv : relation A.\r\nClass type (A : Type) {e : Equiv A} := eq_equiv : Equivalence equiv.\r\nClass ILogicOps Frm := { lentails: relation Frm;\r\n                         ltrue: Frm;\r\n                         land: Frm -> Frm -> Frm;\r\n                         lor: Frm -> Frm -> Frm }.\r\nInfix \"|--\"  := lentails (at level 79, no associativity).\r\nClass ILogic Frm {ILOps: ILogicOps Frm} := { lentailsPre:> PreOrder lentails }.\r\nDefinition lequiv `{ILogic Frm} P Q := P |-- Q /\\ Q |-- P.\r\nInfix \"-|-\"  := lequiv (at level 85, no associativity).\r\nInstance lequiv_inverse_lentails `{ILogic Frm} : subrelation lequiv (inverse lentails) := admit.\r\nRecord ILFunFrm (T : Type) `{e : Equiv T} `{ILOps : ILogicOps Frm} := mkILFunFrm { ILFunFrm_pred :> T -> Frm }.\r\nSection ILogic_Fun.\r\n  Context (T: Type) `{TType: type T}.\r\n  Context `{IL: ILogic Frm}.\r\n  Local Instance ILFun_Ops : ILogicOps (@ ILFunFrm T _ Frm _) := admit.\r\n  Definition ILFun_ILogic : ILogic (@ ILFunFrm T _ Frm _) := admit.\r\nEnd ILogic_Fun.\r\nImplicit Arguments ILFunFrm [[ILOps] [e]].\r\nInstance ILogicOps_Prop : ILogicOps Prop | 2 := {| lentails P Q := (P : Prop) -> Q;\r\n                                                   ltrue        := True;\r\n                                                   land     P Q := P /\\ Q;\r\n                                                   lor      P Q := P \\/ Q |}.\r\nAxiom Action : Set.\r\nDefinition Actions := list Action.\r\nInstance ActionsEquiv : Equiv Actions := { equiv a1 a2 := a1 = a2 }.\r\nDefinition OPred := ILFunFrm Actions Prop.\r\nLocal Existing Instance ILFun_Ops.\r\nLocal Existing Instance ILFun_ILogic.\r\nDefinition catOP (P Q: OPred) : OPred := admit.\r\nAdd Parametric Morphism : catOP with signature lentails ==> lentails ==> lentails as catOP_entails_m.\r\nadmit.\r\nDefined.\r\nDefinition catOPA (P Q R : OPred) : catOP (catOP P Q) R -|- catOP P (catOP Q R) := admit.\r\nClass IsPointed (T : Type) := point : T.\r\nNotation IsPointed_OPred P := (IsPointed (exists x : Actions, (P : OPred) x)).\r\nRecord PointedOPred := mkPointedOPred {\r\n                           OPred_pred :> OPred;\r\n                           OPred_inhabited: IsPointed_OPred OPred_pred\r\n                         }.\r\nExisting Instance OPred_inhabited.\r\nCanonical Structure default_PointedOPred O `{IsPointed_OPred O} : PointedOPred\r\n  := {| OPred_pred := O ; OPred_inhabited := _ |}.\r\nInstance IsPointed_catOP `{IsPointed_OPred P, IsPointed_OPred Q} : IsPointed_OPred (catOP P Q) := admit.\r\nGoal forall (T : Type) (O0 : T -> OPred) (O1 : T -> PointedOPred)\r\n            (tr : T -> T) (O2 : PointedOPred) (x : T)\r\n            (H : forall x0 : T, catOP (O0 x0) (O1 (tr x0)) |-- O1 x0),\r\n     exists e1 e2,\r\n       catOP (O0 e1) (OPred_pred e2) |-- catOP (O1 x) O2.\r\n  intros; do 2 esplit.\r\n  rewrite <- catOPA.\r\n  lazymatch goal with\r\n  | |- ?R (?f ?a ?b) (?f ?a' ?b') =>\r\n    let P := constr:(fun H H' => Morphisms.proper_prf a a' H b b' H') in\r\n    refine (P _ _)\r\n  end; unfold Basics.flip; try reflexivity.\r\n  2:solve [ apply reflexivity ].\r\n  Undo.\r\n  2:reflexivity. (* Toplevel input, characters 17-28:\r\nIn nested Ltac calls to \"reflexivity\" and \"<coretactics::reflexivity>\", last\r\ncall failed.\r\nError:\r\nTactic failure:  The relation lentails is not a declared reflexive relation. Maybe you need to require the Setoid library. *)\r\n```\r\n\r\nThis happens in both trunk and 8.4.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337522440/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337522441","html_url":"https://github.com/coq/coq/issues/3513#issuecomment-337522441","issue_url":"https://api.github.com/repos/coq/coq/issues/3513","id":337522441,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMjQ0MQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-08-12T22:00:45Z","updated_at":"2018-02-23T14:40:08Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\r\n\r\nNote that this happens even if I strip out all the evars:\r\n\r\n```coq\r\nGoal forall (T : Type) (O0 : T -> OPred) (O1 : T -> PointedOPred)\r\n            (tr : T -> T) (O2 : PointedOPred) (x : T)\r\n            (H : forall x0 : T, catOP (O0 x0) (O1 (tr x0)) |-- O1 x0),\r\n     exists e1 e2,\r\n       catOP (O0 e1) (OPred_pred e2) |-- catOP (O1 x) O2.\r\n  intros; do 2 esplit.\r\n  rewrite <- catOPA.\r\n  lazymatch goal with\r\n  | |- ?R (?f ?a ?b) (?f ?a' ?b') =>\r\n    let P := constr:(fun H H' => Morphisms.proper_prf a a' H b b' H') in\r\n    refine (P _ _)\r\n  end; unfold Basics.flip; try reflexivity.\r\n  lazymatch goal with |- catOP (O0 ?e1) ?e2 |-- OPred_pred _ => is_evar e1; is_evar e2 end.\r\n  2:lazymatch goal with |- ?e |-- OPred_pred ?x => is_evar e end.\r\n  2:let a := match goal with |- ?R ?a ?b => constr:(a) end in\r\n    let b := match goal with |- ?R ?a ?b => constr:(b) end in\r\n    let R := match goal with |- ?R ?a ?b => constr:(R) end in\r\n    unify a b;\r\n      generalize (_ : Reflexive R);\r\n      clear;\r\n      generalize R;\r\n      clear;\r\n      match goal with |- forall (R : relation ?T) _, R ?a ?a => generalize a; generalize T end;\r\n      clear; intros T a' R' H; revert T R' H a'.\r\n  Focus 2.\r\n  intros.\r\n  Fail reflexivity. (* Error:\r\nTactic failure:  The relation R' is not a declared reflexive relation. Maybe you need to require the Setoid library. *)\r\n  apply reflexivity. (* success *)\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337522441/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337522442","html_url":"https://github.com/coq/coq/issues/3513#issuecomment-337522442","issue_url":"https://api.github.com/repos/coq/coq/issues/3513","id":337522442,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMjQ0Mg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-02-25T17:38:22Z","updated_at":"2017-10-18T09:26:57Z","author_association":"CONTRIBUTOR","body":"Comment author: @silene\n\nI am unable to reproduce the issue: the script fails earlier and I am unable to modify it to get to the failure you report. Please reopen if you have another testcase where it happens.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337522442/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337522444","html_url":"https://github.com/coq/coq/issues/3513#issuecomment-337522444","issue_url":"https://api.github.com/repos/coq/coq/issues/3513","id":337522444,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMjQ0NA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-02-25T23:45:53Z","updated_at":"2018-02-23T14:40:34Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\r\n\r\nThis has been fixed; I will reopen with a file to be added to the test-suite; feel free to mark as resolved fix and add the file.  I will report a related bug with the regression in [refine].\r\n\r\n```coq\r\n(* File reduced by coq-bug-finder from original input, then from 5752 lines to 3828 lines, then from 2707 lines to 558 lines, then from 472 lines to 168 lines, then from 110 lines to 101 lines, then from 96 lines to 77 lines, then from 80 lines to 64 lines *)\r\nRequire Coq.Setoids.Setoid.\r\nImport Coq.Setoids.Setoid.\r\nGeneralizable All Variables.\r\nAxiom admit : forall {T}, T.\r\nClass Equiv (A : Type) := equiv : relation A.\r\nClass type (A : Type) {e : Equiv A} := eq_equiv : Equivalence equiv.\r\nClass ILogicOps Frm := { lentails: relation Frm;\r\n                         ltrue: Frm;\r\n                         land: Frm -> Frm -> Frm;\r\n                         lor: Frm -> Frm -> Frm }.\r\nInfix \"|--\"  := lentails (at level 79, no associativity).\r\nClass ILogic Frm {ILOps: ILogicOps Frm} := { lentailsPre:> PreOrder lentails }.\r\nDefinition lequiv `{ILogic Frm} P Q := P |-- Q /\\ Q |-- P.\r\nInfix \"-|-\"  := lequiv (at level 85, no associativity).\r\nInstance lequiv_inverse_lentails `{ILogic Frm} : subrelation lequiv (inverse lentails) := admit.\r\nRecord ILFunFrm (T : Type) `{e : Equiv T} `{ILOps : ILogicOps Frm} := mkILFunFrm { ILFunFrm_pred :> T -> Frm }.\r\nSection ILogic_Fun.\r\n  Context (T: Type) `{TType: type T}.\r\n  Context `{IL: ILogic Frm}.\r\n  Local Instance ILFun_Ops : ILogicOps (@ ILFunFrm T _ Frm _) := admit.\r\n  Definition ILFun_ILogic : ILogic (@ ILFunFrm T _ Frm _) := admit.\r\nEnd ILogic_Fun.\r\nImplicit Arguments ILFunFrm [[ILOps] [e]].\r\nInstance ILogicOps_Prop : ILogicOps Prop | 2 := {| lentails P Q := (P : Prop) -> Q;\r\n                                                   ltrue        := True;\r\n                                                   land     P Q := P /\\ Q;\r\n                                                   lor      P Q := P \\/ Q |}.\r\nAxiom Action : Set.\r\nDefinition Actions := list Action.\r\nInstance ActionsEquiv : Equiv Actions := { equiv a1 a2 := a1 = a2 }.\r\nDefinition OPred := ILFunFrm Actions Prop.\r\nLocal Existing Instance ILFun_Ops.\r\nLocal Existing Instance ILFun_ILogic.\r\nDefinition catOP (P Q: OPred) : OPred := admit.\r\nAdd Parametric Morphism : catOP with signature lentails ==> lentails ==> lentails as catOP_entails_m.\r\nadmit.\r\nDefined.\r\nDefinition catOPA (P Q R : OPred) : catOP (catOP P Q) R -|- catOP P (catOP Q R) := admit.\r\nClass IsPointed (T : Type) := point : T.\r\nNotation IsPointed_OPred P := (IsPointed (exists x : Actions, (P : OPred) x)).\r\nRecord PointedOPred := mkPointedOPred {\r\n                           OPred_pred :> OPred;\r\n                           OPred_inhabited: IsPointed_OPred OPred_pred\r\n                         }.\r\nExisting Instance OPred_inhabited.\r\nCanonical Structure default_PointedOPred O `{IsPointed_OPred O} : PointedOPred\r\n  := {| OPred_pred := O ; OPred_inhabited := _ |}.\r\nInstance IsPointed_catOP `{IsPointed_OPred P, IsPointed_OPred Q} : IsPointed_OPred (catOP P Q) := admit.\r\nGoal forall (T : Type) (O0 : T -> OPred) (O1 : T -> PointedOPred)\r\n            (tr : T -> T) (O2 : PointedOPred) (x : T)\r\n            (H : forall x0 : T, catOP (O0 x0) (O1 (tr x0)) |-- O1 x0),\r\n     exists e1 e2,\r\n       catOP (O0 e1) (OPred_pred e2) |-- catOP (O1 x) O2.\r\n  intros; do 2 esplit.\r\n  rewrite <- catOPA.\r\n  lazymatch goal with\r\n  | |- ?R (?f ?a ?b) (?f ?a' ?b') =>\r\n    let P := constr:(fun H H' => @ Morphisms.proper_prf (OPred -> OPred -> OPred)\r\n         (@ Morphisms.respectful OPred (OPred -> OPred)\r\n            (@ lentails OPred\r\n               (@ ILFun_Ops Actions ActionsEquiv Prop ILogicOps_Prop))\r\n            (@ lentails OPred\r\n               (@ ILFun_Ops Actions ActionsEquiv Prop ILogicOps_Prop) ==>\r\n             @ lentails OPred\r\n               (@ ILFun_Ops Actions ActionsEquiv Prop ILogicOps_Prop))) catOP\r\n         catOP_entails_m_Proper a a' H b b' H') in\r\n    pose P;\r\n    refine (P _ _)\r\n  end; unfold Basics.flip.\r\n  2: solve [ apply reflexivity ].\r\n  Undo.\r\n  2: reflexivity. (* Toplevel input, characters 18-29:\r\nError:\r\nTactic failure: The relation lentails is not a declared reflexive relation. Maybe you need to require the Setoid library. *)\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337522444/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337522446","html_url":"https://github.com/coq/coq/issues/3513#issuecomment-337522446","issue_url":"https://api.github.com/repos/coq/coq/issues/3513","id":337522446,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMjQ0Ng==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-02-25T23:55:00Z","updated_at":"2018-02-23T14:40:58Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\r\n\r\nRelated regression: bug #4095.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337522446/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337522447","html_url":"https://github.com/coq/coq/issues/3513#issuecomment-337522447","issue_url":"https://api.github.com/repos/coq/coq/issues/3513","id":337522447,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMjQ0Nw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-03-03T21:39:00Z","updated_at":"2017-10-18T09:26:57Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nAdded the test-suite file.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337522447/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]