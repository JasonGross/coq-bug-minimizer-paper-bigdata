[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337533951","html_url":"https://github.com/coq/coq/issues/4183#issuecomment-337533951","issue_url":"https://api.github.com/repos/coq/coq/issues/4183","id":337533951,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzMzk1MQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-04-09T22:18:06Z","updated_at":"2017-10-18T09:59:57Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nI asked on coq-club:\n\nHi,\nWhat instances to I need to add to the environment to make this example work?\nRequire Import Coq.Setoids.Setoid Coq.Lists.List Coq.Program.Basics Coq.Classes.Morphisms.\nGlobal Instance fold_right_flip_impl {A}\n: Proper \n    (pointwise_relation A (flip impl ==> flip impl) ==> flip impl ==> eq ==> flip impl)\n    (@ fold_right _ A).\nProof.\n  intros ??????? ls ?; subst.\n  induction ls; simpl; trivial.\n  unfold flip, impl, pointwise_relation, respectful in *.\n  eauto.\nQed.\n\nGoal forall A f g ls, (forall x : A, f x <-> g x) -> fold_right (fun x H => f x /\\ H) True ls.\nProof.\n  intros A f g ls H.\n  Typeclasses eauto := debug.\n  try timeout 2 setoid_rewrite H.\n\nIt seems that it gets stuck on trying to find an instance for\n\n  (Proper\n   (pointwise_relation A (pointwise_relation Prop iff) ==>\n    ?92 ==> ?91 ==> flip impl) (fold_right (B:=A)))\n\nand rightly fails.  But this transformation is possible, as the following tactic shows:\n\n  cut (fold_right (fun x H => g x /\\ H) True ls);\n    [ induction ls; simpl in *; trivial; [];\n      intros [H0' H1']; split; try apply H; eauto\n    | ].\n\nShow how to I get [setoid_rewrite] to consider [pointwise_relation A (R ==> iff)] for an arbitrary [Reflexive] [R], rather than just for [R] being [eq]?\n\nThanks,\nJason\n\n\n\n\nOne solution to this would be to have [setoid_rewrite] not start out with [pointwise_relation].  This is essential for things like [Fix] without functional extensionality.  Here is another example of something I want to work:\n\nRequire Import Coq.Init.Wf Coq.Setoids.Setoid Coq.Classes.Morphisms.\nGlobal Instance Fix_Proper_eq {A R wf P}\n: Proper\n    ((forall_relation (fun x => \n                         (forall_relation (fun y => pointwise_relation _ eq))\n                           ==> eq))\n       ==> (forall_relation (fun a => eq)))\n    (@ Fix A R wf P).\nProof.\n  unfold forall_relation, pointwise_relation, respectful.\n  intros ?? H; repeat intro.\n  induction (wf a).\n  rewrite !Fix_eq; [ erewrite H; [ reflexivity | .. ] | .. ]; eauto; intros.\n  etransitivity; [ symmetry; apply H; reflexivity | apply H; eassumption ]; reflexivity.\n  etransitivity; [ apply H; eassumption | symmetry; apply H; reflexivity ]; reflexivity.\nQed.\nGoal forall A R wf P f g a, (forall x, f x = g x) -> @ Fix A R wf P (fun x => f x) a = @ Fix A R wf P (fun x => g x) a.\nProof.\n  intros A R wf P f g a H.\n  Typeclasses eauto := debug.\n  setoid_rewrite H.\n(* : no match for (Params H0 ?129)\n0 possibilities\n1.1: (*external*) proper_subrelation on\n(Proper\n   (forall_relation (fun x : A => eq) ==> forall_relation (fun x : A => ?120))\n   (Fix wf P))\n1.1.1.1: apply Fix_Proper_eq on\n(Proper ?137 (Fix wf P))\n1.1.2.1: (*external*) unconvertible on\n(Unconvertible\n   (relation\n      ((forall x : A, (forall y : A, R y x -> P y) -> P x) ->\n       forall x : A, P x))\n   (forall_relation\n      (fun x : A =>\n       forall_relation (fun y : A => pointwise_relation (R y x) eq) ==> eq) ==>\n    forall_relation (fun a : A => eq))%signature\n   (forall_relation (fun x : A => eq) ==> forall_relation (fun x : A => ?120))%signature)\n1.1.3.1: (*external*) subrelation_tac T U on\n(subrelation\n   (forall_relation\n      (fun x : A =>\n       forall_relation (fun y : A => pointwise_relation (R y x) eq) ==> eq) ==>\n    forall_relation (fun a : A => eq))%signature\n   (forall_relation (fun x : A => eq) ==> forall_relation (fun x : A => ?120))%signature)\n1.1.3.1.1.1: (*external*) apply (forall_subrelation A B R S); intro on\n(subrelation (forall_relation (fun x : A => eq))\n   (forall_relation\n      (fun x : A =>\n       (forall_relation (fun y : A => pointwise_relation (R y x) eq) ==> eq)%signature)))\n1.1.3.1.1.1.1: no match for (subrelation eq\n                               (forall_relation\n                                  (fun y : A =>\n                                   pointwise_relation (R y a0) eq) ==> eq)%signature)\n1 possibilities\nbacktracked after (*external*) \nbacktracked after (*external*) \nbacktracked after (*external*) unconvertible\nbacktracked after apply Fix_Proper_eq\n: no match for (Params H0 ?147)\n0 possibilities\n1.1.1.2: (*external*) proper_reflexive on\n(Proper ?137 (Fix wf P))\n1.1.2.1: (*external*) unconvertible on\n(Unconvertible\n   (relation\n      ((forall x : A, (forall y : A, R y x -> P y) -> P x) ->\n       forall x : A, P x)) eq\n   (forall_relation (fun x : A => eq) ==> forall_relation (fun x : A => ?120))%signature)\n1.1.3: no match for (subrelation eq\n                       (forall_relation (fun x : A => eq) ==>\n                        forall_relation (fun x : A => ?120))%signature)\n1 possibilities\nbacktracked after (*external*) unconvertible\nbacktracked after (*external*) proper_reflexive\nbacktracked after (*external*) proper_subrelation\n1.2: (*external*) proper_normalization on\n(Proper\n   (forall_relation (fun x : A => eq) ==> forall_relation (fun x : A => ?120))\n   (Fix wf P))\n1.2.1.1: (*external*) inverse on\n(Normalizes\n   ((forall x : A, (forall y : A, R y x -> P y) -> P x) -> forall x : A, P x)\n   (forall_relation (fun x : A => eq) ==> forall_relation (fun x : A => ?120))%signature\n   ?156)\n1.2.1.1.1.1: (*external*) inverse on\n(Normalizes (forall x : A, (forall y : A, R y x -> P y) -> P x)\n   (forall_relation (fun x : A => eq)) (Basics.flip ?165))\n1.2.1.1.2.1: (*external*) inverse on\n(Normalizes (forall x : A, P x) (forall_relation (fun x : A => ?120))\n   (Basics.flip ?166))\n1.2.2.1: (*external*) class_apply proper_inverse_proper on\n(Proper\n   (Basics.flip\n      (Basics.flip (forall_relation (fun x : A => eq)) ==>\n       Basics.flip (forall_relation (fun x : A => ?120)))%signature)\n   (Fix wf P))\n1.2.2.1.1.1: (*external*) proper_subrelation on\n(Proper\n   (Basics.flip (forall_relation (fun x : A => eq)) ==>\n    Basics.flip (forall_relation (fun x : A => ?120))) \n   (Fix wf P))\n1.2.2.1.1.1.1.1: apply Fix_Proper_eq on\n(Proper ?171 (Fix wf P))\n1.2.2.1.1.1.2.1: (*external*) unconvertible on\n(Unconvertible\n   (relation\n      ((forall x : A, (forall y : A, R y x -> P y) -> P x) ->\n       forall x : A, P x))\n   (forall_relation\n      (fun x : A =>\n       forall_relation (fun y : A => pointwise_relation (R y x) eq) ==> eq) ==>\n    forall_relation (fun a : A => eq))%signature\n   (Basics.flip (forall_relation (fun x : A => eq)) ==>\n    Basics.flip (forall_relation (fun x : A => ?120)))%signature)\n1.2.2.1.1.1.3.1: (*external*) subrelation_tac T U on\n(subrelation\n   (forall_relation\n      (fun x : A =>\n       forall_relation (fun y : A => pointwise_relation (R y x) eq) ==> eq) ==>\n    forall_relation (fun a : A => eq))%signature\n   (Basics.flip (forall_relation (fun x : A => eq)) ==>\n    Basics.flip (forall_relation (fun x : A => ?120)))%signature)\n1.2.2.1.1.1.3.1.1: no match for (subrelation\n                                   (Basics.flip\n                                      (forall_relation (fun x : A => eq)))\n                                   (forall_relation\n                                      (fun x : A =>\n                                       (forall_relation\n                                          (fun y : A =>\n                                           pointwise_relation (R y x) eq) ==>\n                                        eq)%signature)))\n3 possibilities\nbacktracked after (*external*) \nbacktracked after (*external*) unconvertible\nbacktracked after apply Fix_Proper_eq\nbacktracked after (*external*) proper_subrelation\nbacktracked after (*external*) \n1.2.2.2: (*external*) proper_subrelation on\n(Proper\n   (Basics.flip\n      (Basics.flip (forall_relation (fun x : A => eq)) ==>\n       Basics.flip (forall_relation (fun x : A => ?120)))%signature)\n   (Fix wf P))\n1.2.2.2.1.1: apply Fix_Proper_eq on\n(Proper ?178 (Fix wf P))\n1.2.2.2.2.1: (*external*) unconvertible on\n(Unconvertible\n   (relation\n      ((forall x : A, (forall y : A, R y x -> P y) -> P x) ->\n       forall x : A, P x))\n   (forall_relation\n      (fun x : A =>\n       forall_relation (fun y : A => pointwise_relation (R y x) eq) ==> eq) ==>\n    forall_relation (fun a : A => eq))%signature\n   (Basics.flip\n      (Basics.flip (forall_relation (fun x : A => eq)) ==>\n       Basics.flip (forall_relation (fun x : A => ?120)))%signature))\n1.2.2.2.3: no match for (subrelation\n                           (forall_relation\n                              (fun x : A =>\n                               forall_relation\n                                 (fun y : A => pointwise_relation (R y x) eq) ==>\n                               eq) ==> forall_relation (fun a : A => eq))%signature\n                           (Basics.flip\n                              (Basics.flip\n                                 (forall_relation (fun x : A => eq)) ==>\n                               Basics.flip\n                                 (forall_relation (fun x : A => ?120)))%signature))\n2 possibilities\nbacktracked after (*external*) unconvertible\nbacktracked after apply Fix_Proper_eq\nbacktracked after (*external*) proper_subrelation\nbacktracked after (*external*) inverse\nbacktracked after (*external*) inverse\nbacktracked after (*external*) inverse\nbacktracked after (*external*) proper_normalization\n1.3: (*external*) proper_reflexive on\n(Proper\n   (forall_relation (fun x : A => eq) ==> forall_relation (fun x : A => ?120))\n   (Fix wf P))\n1.3.1.1: apply Equivalence_Reflexive on\n(Reflexive\n   (forall_relation (fun x : A => eq) ==> forall_relation (fun x : A => ?120))%signature)\n1.3.1.1.1: no match for (Equivalence\n                           (forall_relation (fun x : A => eq) ==>\n                            forall_relation (fun x : A => ?120))%signature)\n0 possibilities\nbacktracked after apply Equivalence_Reflexive\n1.3.1.2: apply PreOrder_Reflexive on\n(Reflexive\n   (forall_relation (fun x : A => eq) ==> forall_relation (fun x : A => ?120))%signature)\n1.3.1.2.1: no match for (PreOrder\n                           (forall_relation (fun x : A => eq) ==>\n                            forall_relation (fun x : A => ?120))%signature)\n1 possibilities\nbacktracked after apply PreOrder_Reflexive\nbacktracked after (*external*) proper_reflexive\n *)\n (* Toplevel input, characters 20-36:\nError:\nTactic failure:setoid rewrite failed: Unable to satisfy the rewriting constraints.\nUnable to satisfy the following constraints:\nEVARS:\n ?126==[A R wf P f g a H |- ProperProxy ?124 (Fix wf P (fun x : A => g x) a)]\n         (internal placeholder)\n ?125==[A R wf P f g a H (do_subrelation:=do_subrelation)\n         |- Proper (?120 ==> ?124 ==> Basics.flip Basics.impl) eq]\n         (internal placeholder)\n ?124==[A R wf P f g a H |- relation (P a)] (internal placeholder)\n ?121==[A R wf P f g a H (do_subrelation:=do_subrelation)\n         |- Proper\n              (forall_relation (fun x : A => eq) ==>\n               forall_relation (fun x : A => ?120)) \n              (Fix wf P)] (internal placeholder)\n ?120==[A R wf P f g a H x |- relation (P x)] (internal placeholder)\n\nMETAS:\n 660[x] := _UNBOUND_REL_1 : A  [type is checked]\n .\n *)\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337533951/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337533952","html_url":"https://github.com/coq/coq/issues/4183#issuecomment-337533952","issue_url":"https://api.github.com/repos/coq/coq/issues/4183","id":337533952,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzMzk1Mg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-04-10T08:04:08Z","updated_at":"2017-10-18T09:59:57Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nThis is not so easy to formulate, but definitely a useful enhancement, and I'm working on it.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337533952/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]