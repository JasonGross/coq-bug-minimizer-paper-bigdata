[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548931","html_url":"https://github.com/coq/coq/issues/5187#issuecomment-337548931","issue_url":"https://api.github.com/repos/coq/coq/issues/5187","id":337548931,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0ODkzMQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-11-07T19:47:40Z","updated_at":"2022-01-04T16:30:33Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\r\n\r\nWhat causes [rewrite] in the following to fail?\r\n\r\n```coq\r\nRequire Import Coq.Classes.RelationClasses Coq.Classes.Morphisms \r\nCoq.Setoids.Setoid.\r\nNotation iffT := (fun A B => inhabited ((A -> B) * (B -> A)))%type.\r\n\r\nGlobal Instance iffT_Reflexive : Reflexive iffT | 1.\r\nProof. repeat constructor; intro; assumption. Defined.\r\nGlobal Instance iffT_Symmetric : Symmetric iffT | 1.\r\nProof. repeat (intros [?] || intro); constructor; tauto. Defined.\r\nGlobal Instance iffT_Transitive : Transitive iffT | 1.\r\nProof. repeat (intros [?] || intro); constructor; tauto. Defined.\r\n\r\n\r\nGlobal Instance iff_prod_Proper\r\n  : Proper (iff ==> iff ==> iff) (fun A B => prod A B).\r\nProof. repeat intro; tauto. Defined.\r\nGlobal Instance iff_iffT_prod_Proper\r\n  : Proper (iff ==> iffT ==> iffT) (fun A B => prod A B) | 1.\r\nProof.\r\n  intros ?? [?] ?? [?]; constructor; tauto.\r\nDefined.\r\nGlobal Instance iffT_iff_prod_Proper\r\n  : Proper (iffT ==> iff ==> iffT) (fun A B => prod A B) | 1.\r\nProof.\r\n  intros ?? [?] ?? [?]; constructor; tauto.\r\nDefined.\r\nGlobal Instance iffT_iffT_prod_Proper\r\n  : Proper (iffT ==> iffT ==> iffT) (fun A B => prod A B) | 1.\r\nProof.\r\n  intros ?? [?] ?? [?]; constructor; tauto.\r\nDefined.\r\nHint Extern 2 (Proper _ prod) => apply iffT_iffT_prod_Proper : \r\ntypeclass_instances.\r\nHint Extern 2 (Proper _ (fun A => prod A)) => refine iff_iffT_prod_Proper : \r\ntypeclass_instances.\r\nHint Extern 2 (Proper _ (fun A B => prod A B)) => refine iff_prod_Proper : \r\ntypeclass_instances.\r\n\r\nGoal forall A B, (A <-> B) -> ((A * B) <-> (B * A)).\r\nProof.\r\n  intros A B H.\r\n  pose proof (_ : Proper (iff ==> _ ==> _) prod).\r\n  Typeclasses eauto := debug.\r\n  rewrite H.\r\n  (* Debug: 1: looking for (Proper (iff ==> ?r0 ==> ?r) prod) with backtracking\r\nDebug: 1.1: (*external*) proper_subrelation on (Proper (iff ==> ?r0 ==> ?r) \r\nprod), 3 subgoal(s)\r\nDebug: 1.1.4 : (Proper ?R' prod)\r\nDebug: 1.1.4: looking for (Proper ?R' prod) with backtracking\r\nDebug: 1.1.4.1: (*external*) proper_reflexive on (Proper ?R' prod), 0 subgoal(s)\r\nDebug:\r\n1.1.4 : (Unconvertible (relation (Type -> Type -> Type)) (iff ==> ?r0 ==> \r\n?r)%signature eq)\r\nDebug:\r\n1.1.4: looking for (Unconvertible (relation (Type -> Type -> Type))\r\n                      (iff ==> ?r0 ==> ?r)%signature eq) with backtracking\r\nDebug: 1.1.4.1: (*external*) unconvertible on\r\n(Unconvertible (relation (Type -> Type -> Type)) (iff ==> ?r0 ==> ?r)%signature \r\neq), 0 subgoal(s)\r\nDebug: 1.1.4 : (subrelation eq (iff ==> ?r0 ==> ?r)%signature)\r\nDebug: 1.1.4: looking for (subrelation eq (iff ==> ?r0 ==> ?r)%signature) with \r\nbacktracking\r\nDebug: 1.1.4: no match for (subrelation eq (iff ==> ?r0 ==> ?r)%signature) , 1 \r\npossibilities\r\nDebug: 1.2: (*external*) proper_normalization on (Proper (iff ==> ?r0 ==> ?r) \r\nprod), 2 subgoal(s)\r\nDebug: 1.2.3 : (Normalizes (Type -> Type -> Type) (iff ==> ?r0 ==> \r\n?r)%signature ?R1)\r\nDebug:\r\n1.2.3: looking for (Normalizes (Type -> Type -> Type) (iff ==> ?r0 ==> \r\n?r)%signature ?R1) with backtracking\r\nDebug: 1.2.3.1: (*external*) normalizes on\r\n(Normalizes (Type -> Type -> Type) (iff ==> ?r0 ==> ?r)%signature ?R1), 0 \r\nsubgoal(s)\r\nDebug: 1.2.3 : (Proper (Basics.flip (Basics.flip (iff ==> ?r0 ==> \r\n?r)%signature)) prod)\r\nDebug:\r\n1.2.3: looking for (Proper (Basics.flip (Basics.flip (iff ==> ?r0 ==> \r\n?r)%signature)) prod) with backtracking\r\nDebug: 1.2.3.1: (*external*) (class_apply @ proper_flip_proper) on\r\n(Proper (Basics.flip (Basics.flip (iff ==> ?r0 ==> ?r)%signature)) prod), 1 \r\nsubgoal(s)\r\nDebug: 1.2.3.1.2 : (Proper (Basics.flip (iff ==> ?r0 ==> ?r)%signature) prod)\r\nDebug:\r\n1.2.3.1.2: looking for (Proper (Basics.flip (iff ==> ?r0 ==> ?r)%signature) \r\nprod) with backtracking\r\nDebug: 1.2.3.1.2.1: (*external*) (class_apply @ proper_flip_proper) on\r\n(Proper (Basics.flip (iff ==> ?r0 ==> ?r)%signature) prod), 1 subgoal(s)\r\nDebug: 1.2.3.1.2.1.2 : (Proper (iff ==> ?r0 ==> ?r) prod)\r\nDebug: 1.2.3.1.2.1.2: looking for (Proper (iff ==> ?r0 ==> ?r) prod) with \r\nbacktracking\r\nDebug: 1.2.3.1.2.1.2.1: (*external*) proper_subrelation on\r\n(Proper (iff ==> ?r0 ==> ?r) prod), 3 subgoal(s)\r\nDebug: 1.2.3.1.2.1.2.1.4 : (Proper ?R' prod)\r\nDebug: 1.2.3.1.2.1.2.1.4: looking for (Proper ?R' prod) with backtracking\r\nDebug: 1.2.3.1.2.1.2.1.4: no match for (Proper ?R' prod) , 11 possibilities\r\nDebug: 1.2.3.1.2.2: (*external*) proper_subrelation on\r\n(Proper (Basics.flip (iff ==> ?r0 ==> ?r)%signature) prod), 3 subgoal(s)\r\nDebug: 1.2.3.1.2.2.4 : (Proper ?R' prod)\r\nDebug: 1.2.3.1.2.2.4: looking for (Proper ?R' prod) with backtracking\r\nDebug: 1.2.3.1.2.2.4: no match for (Proper ?R' prod) , 11 possibilities\r\nDebug: 1.2.3.2: (*external*) proper_subrelation on\r\n(Proper (Basics.flip (Basics.flip (iff ==> ?r0 ==> ?r)%signature)) prod), 3 \r\nsubgoal(s)\r\nDebug: 1.2.3.2.4 : (Proper ?R' prod)\r\nDebug: 1.2.3.2.4: looking for (Proper ?R' prod) with backtracking\r\nDebug: 1.2.3.2.4: no match for (Proper ?R' prod) , 11 possibilities\r\nDebug: 1.3: (*external*) proper_reflexive on (Proper (iff ==> ?r0 ==> ?r) \r\nprod), 1 subgoal(s)\r\nDebug: 1.3.2 : (Reflexive (iff ==> ?r0 ==> ?r)%signature)\r\nDebug: 1.3.2: looking for (Reflexive (iff ==> ?r0 ==> ?r)%signature) with \r\nbacktracking\r\nDebug: 1.3.2.1: simple apply @ Equivalence_Reflexive on\r\n(Reflexive (iff ==> ?r0 ==> ?r)%signature), 1 subgoal(s)\r\nDebug: 1.3.2.1.2 : (Equivalence (iff ==> ?r0 ==> ?r)%signature)\r\nDebug: 1.3.2.1.2: looking for (Equivalence (iff ==> ?r0 ==> ?r)%signature) with \r\nbacktracking\r\nDebug: 1.3.2.1.2: no match for (Equivalence (iff ==> ?r0 ==> ?r)%signature) , 0 \r\npossibilities\r\nDebug: 1.3.2.2: simple apply @ PreOrder_Reflexive on\r\n(Reflexive (iff ==> ?r0 ==> ?r)%signature), 1 subgoal(s)\r\nDebug: 1.3.2.2.2 : (PreOrder (iff ==> ?r0 ==> ?r)%signature)\r\nDebug: 1.3.2.2.2: looking for (PreOrder (iff ==> ?r0 ==> ?r)%signature) with \r\nbacktracking\r\nDebug: 1.3.2.2.2.1: simple apply @ Equivalence_PreOrder on\r\n(PreOrder (iff ==> ?r0 ==> ?r)%signature), 1 subgoal(s)\r\nDebug: 1.3.2.2.2.1.2 : (Equivalence (iff ==> ?r0 ==> ?r)%signature)\r\nDebug: 1.3.2.2.2.1.2: looking for (Equivalence (iff ==> ?r0 ==> ?r)%signature) \r\nwith backtracking\r\nDebug: 1.3.2.2.2.1.2: no match for (Equivalence (iff ==> ?r0 ==> ?r)%signature) \r\n, 0 possibilities\r\n *)\r\n\r\n(* Error:\r\nTactic failure: setoid rewrite failed: Unable to satisfy the following \r\nconstraints:\r\nUNDEFINED EVARS:\r\n ?X179==[A B H H0 |- relation Type] (internal placeholder) {?r}\r\n ?X180==[A B H H0 |- relation Type] (internal placeholder) {?r0}\r\n ?X181==[A B H H0 (do_subrelation:=do_subrelation)\r\n          |- Proper\r\n               (iff ==>\r\n                ?X180@ {__:=A; __:=B; __:=H; __:=H0} ==> ?X179@ {__:=A; __:=B; \r\n__:=H; __:=H0}) prod]\r\n          (internal placeholder) {?p}\r\n ?X182==[A B H H0 |- ProperProxy ?X180@ {__:=A; __:=B; __:=H; __:=H0} B] \r\n(internal placeholder) {?p0}\r\n ?X184==[A B H H0 |- relation Type] (internal placeholder) {?r1}\r\n ?X185==[A B H H0 (do_subrelation:=do_subrelation)\r\n          |- Proper (iff ==> ?X184@ {__:=A; __:=B; __:=H; __:=H0}) (prod B)]\r\n          (internal placeholder) {?p1}\r\n ?X186==[A B H H0 (do_subrelation:=do_subrelation)\r\n          |- Proper\r\n               (?X179@ {__:=A; __:=B; __:=H; __:=H0} ==>\r\n                ?X184@ {__:=A; __:=B; __:=H; __:=H0} ==> Basics.flip \r\nBasics.impl) iff]\r\n          (internal placeholder) {?p2}\r\n.\r\n *)\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548931/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548933","html_url":"https://github.com/coq/coq/issues/5187#issuecomment-337548933","issue_url":"https://api.github.com/repos/coq/coq/issues/5187","id":337548933,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0ODkzMw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-03-23T16:22:24Z","updated_at":"2017-10-18T10:46:28Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nSeems to be building an ill-typed term, need to investigate some more.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337548933/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]