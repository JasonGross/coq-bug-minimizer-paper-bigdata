[{"url":"https://api.github.com/repos/coq/coq/issues/comments/327521934","html_url":"https://github.com/coq/coq/issues/10113#issuecomment-327521934","issue_url":"https://api.github.com/repos/coq/coq/issues/10113","id":327521934,"node_id":"MDEyOklzc3VlQ29tbWVudDMyNzUyMTkzNA==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2017-09-06T15:31:36Z","updated_at":"2017-09-06T15:31:36Z","author_association":"MEMBER","body":"It's an unlucky consequence of a grammar conflict with the `pattern` tactic. I don't know how to fix that though, I probably need some advice from CAMLP5 experts.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/327521934/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/327525289","html_url":"https://github.com/coq/coq/issues/10113#issuecomment-327525289","issue_url":"https://api.github.com/repos/coq/coq/issues/10113","id":327525289,"node_id":"MDEyOklzc3VlQ29tbWVudDMyNzUyNTI4OQ==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2017-09-06T15:42:08Z","updated_at":"2017-09-06T15:42:08Z","author_association":"MEMBER","body":"Workaround: allow `pat:(...)` to mean `pattern:(...)`?\r\n\r\nThe issue is that I need to import `Notations.v` to get notations for constr matching, I think(?), but if I do that, then I can no longer use my match goal combinators.\r\n\r\nRegarding exposing, e.g., `match_goal!`, what if you have a syntax that compiles into `(ident option * pattern option * pattern option) list * pattern` for a list of optionally named hypothesis (body, type) pattern pairs, together with the goal pattern (I guess you also need the function that handles that branch), and then you do a similar thing too `multi_match!` over the hyps and goal?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/327525289/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/327528939","html_url":"https://github.com/coq/coq/issues/10113#issuecomment-327528939","issue_url":"https://api.github.com/repos/coq/coq/issues/10113","id":327528939,"node_id":"MDEyOklzc3VlQ29tbWVudDMyNzUyODkzOQ==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2017-09-06T15:53:44Z","updated_at":"2017-09-06T15:53:44Z","author_association":"MEMBER","body":"> Regarding exposing, e.g., match_goal!, what if you have a syntax that compiles into (ident option * pattern option * pattern option) list * pattern for a list of optionally named hypothesis (body, type) pattern pairs, together with the goal pattern (I guess you also need the function that handles that branch), and then you do a similar thing too multi_match! over the hyps and goal?\r\n\r\nYes, that's the plan indeed.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/327528939/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]