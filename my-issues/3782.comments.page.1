[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337526925","html_url":"https://github.com/coq/coq/issues/3782#issuecomment-337526925","issue_url":"https://api.github.com/repos/coq/coq/issues/3782","id":337526925,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNjkyNQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-10-28T21:51:43Z","updated_at":"2017-10-18T09:39:42Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\n(* File reduced by coq-bug-finder from original input, then from 2674 lines to 136 lines, then from 115 lines to 61 lines *)\n(* coqc version trunk (October 2014) compiled on Oct 28 2014 14:33:38 with OCaml 4.01.0\n   coqtop version cagnode15:/afs/csail.mit.edu/u/j/jgross/coq-trunk,(no branch) (53bfe9cf58a3c40e6eb7120d25c1633a9cea3126) *)\nClass IsEquiv {A B : Type} (f : A -> B) := {}.\nRecord Equiv A B := { equiv_fun : A -> B ; equiv_isequiv : IsEquiv equiv_fun }.\nArguments equiv_fun {A B} _ _.\nRecord PreCategory := { object :> Type ; morphism : object -> object -> Type }.\nSet Printing Coercions.\nSet Printing Implicit.\nModule NonPrim.\n  Unset Primitive Projections.\n  Record TruncType (n : nat) := { trunctype_type :> Type }.\n  Canonical Structure default_TruncType := fun n T => (@ Build_TruncType n T).\n  Goal (forall (s d : TruncType 0) (m : trunctype_type 0 s -> trunctype_type 0 d),\n          @ IsEquiv (trunctype_type 0 s) (trunctype_type 0 d) m -> Type) ->\n  forall (T T0 : Type) (m : T0 -> T), @ IsEquiv T0 T m -> True.\n    intros isiso_isequiv' mc md e e'.\n    (pose (@ isiso_isequiv'\n             _ _\n             (e\n              : (Build_TruncType 0 md) ->\n                (Build_TruncType 0 mc))\n             e') as i || fail \"too early\"); clear i.\n    pose (@ isiso_isequiv'\n            _ _ _\n            e').\n    admit.\n  Defined.\nEnd NonPrim.\nModule Prim.\n  Set Primitive Projections.\n  Record TruncType (n : nat) := { trunctype_type :> Type }.\n  Canonical Structure default_TruncType := fun n T => (@ Build_TruncType n T).\n  Goal (forall (s d : TruncType 0) (m : trunctype_type 0 s -> trunctype_type 0 d),\n          @ IsEquiv (trunctype_type 0 s) (trunctype_type 0 d) m -> Type) ->\n  forall (T T0 : Type) (m : T0 -> T), @ IsEquiv T0 T m -> True.\n    intros isiso_isequiv' mc md e e'.\n    (pose (@ isiso_isequiv'\n             _ _\n             (e\n              : (Build_TruncType 0 md) ->\n                (Build_TruncType 0 mc))\n             e') as i || fail \"too early\"); clear i.\n    pose (@ isiso_isequiv'\n            _ _ _\n            e'). (* Toplevel input, characters 48-50:\nError:\nIn environment\nisiso_isequiv' : forall (s d : TruncType 0)\n                   (m : trunctype_type 0 s -> trunctype_type 0 d),\n                 @ IsEquiv (trunctype_type 0 s) (trunctype_type 0 d) m -> Type\nmc : Type\nmd : Type\ne : md -> mc\ne' : @ IsEquiv md mc e\nThe term \"e'\" has type \"@ IsEquiv md mc e\" while it is expected to have type\n \"@ IsEquiv (trunctype_type 0 ?t) (trunctype_type 0 ?t0) ?t1\".\n                  *)\n    admit.\n  Defined.\nEnd Prim.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337526925/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337526929","html_url":"https://github.com/coq/coq/issues/3782#issuecomment-337526929","issue_url":"https://api.github.com/repos/coq/coq/issues/3782","id":337526929,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNjkyOQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-12-12T12:11:47Z","updated_at":"2017-10-18T09:39:42Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nHmm, we didn't have a case of canonical structure with parameters yet, and a check failed in this case with primitive projections. Fixed now, pushing ASAP.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337526929/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]