[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337536467","html_url":"https://github.com/coq/coq/issues/4341#issuecomment-337536467","issue_url":"https://api.github.com/repos/coq/coq/issues/4341","id":337536467,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzNjQ2Nw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-09-09T06:37:30Z","updated_at":"2022-02-21T17:34:15Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\r\n\r\nPossibly disableable with a compatibility option, the following code should work:\r\n\r\n```coq\r\nRequire Import Coq.Program.Program.\r\nModule Export Coq.\r\nModule Export Init.\r\nModule Specif.\r\nSet Implicit Arguments.\r\nInductive sig (A:Type) (P:A -> Prop) : Type :=\r\n    exist : forall x:A, P x -> sig P.\r\nArguments sig (A P)%type.\r\nNotation \"{ x  |  P }\" := (sig (fun x => P)) : type_scope.\r\nNotation \"{ x : A  |  P }\" := (sig (fun x:A => P)) : type_scope.\r\nEnd Specif.\r\nEnd Init.\r\nEnd Coq.\r\n\r\nClass Foo := { Bar : Type }.\r\n\r\nAxiom k : { x : Type | True }.\r\nProgram Instance foo : Foo\r\n  := { Bar := k }. (* success *)\r\nImport Specif.\r\nAxiom k' : { x : Type | True }.\r\nProgram Instance foo' : Foo\r\n  := { Bar := k' }. (* Toplevel input, characters 57-59:\r\nError: The term \"k'\" has type \"{_ : Type | True}\"\r\n while it is expected to have type \"Type\". *)\r\n```\r\n\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337536467/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]