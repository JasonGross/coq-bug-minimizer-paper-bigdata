[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337533450","html_url":"https://github.com/coq/coq/issues/4152#issuecomment-337533450","issue_url":"https://api.github.com/repos/coq/coq/issues/4152","id":337533450,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzMzQ1MA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-03-23T02:43:28Z","updated_at":"2017-10-18T09:58:34Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nThis code fails.  It breaks my bug minimizer, which assumes that you can take the contents of a file foo.v, wrap it in [Module foo. ... End foo.], and have valid Coq code.\n\nModule A.\n  Notation \"'foo'\" := 1.\nEnd A.\n\nModule foo.\n  Import A.\nEnd foo. (* Toplevel input, characters 19-22:\nSyntax error: [Prim.identref] expected after 'End' (in [vernac:gallina_ext]). *)\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337533450/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337533451","html_url":"https://github.com/coq/coq/issues/4152#issuecomment-337533451","issue_url":"https://api.github.com/repos/coq/coq/issues/4152","id":337533451,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzMzQ1MQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-03-23T02:47:26Z","updated_at":"2017-10-18T09:58:34Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nIt also makes some modules unimportable; breaking the assumption that I can split up [Import] statements; the following code does not work:\n\nModule A.\n  Notation \"'foo'\" := 1.\nEnd A.\n\nModule foo.\nEnd foo.\n\nModule A1.\n  Import A foo.\nEnd A1.\n\nModule A2.\n  Import A.\n  Import foo. (* Syntax error: [constr:global] expected after 'Import' (in [vernac:gallina_ext]). *)\nEnd A2.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337533451/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337533452","html_url":"https://github.com/coq/coq/issues/4152#issuecomment-337533452","issue_url":"https://api.github.com/repos/coq/coq/issues/4152","id":337533452,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzMzQ1Mg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-03-23T08:43:26Z","updated_at":"2017-10-18T09:58:34Z","author_association":"CONTRIBUTOR","body":"Comment author: @herbelin\n\nThis problem is accordingly annoying but the instance of a more general issue with parsing rules defining new tokens. \n\nWould certainly be possible to address it directly at the level of camlp5 by offering the possibility to convert unexpected keywords valid as some other class of token as a member of this other class (here the class of ident). \n\nMaybe something could be tried at the level of Coq too for the special case you are mentioning, isolating out of the class of keywords a subclass of keywords interpretable as ident, say KWDID detected at lexing time, and so that the ident entry accept the keywords of this class and turn them on the fly from the class of keyword to the class of idents. We would need also to ensure that more specific rule (like << IDENT \"foo\" >> are tested before the less specific ones, like << ident >>).\n\nThis would however not solve the other close problem which is of the following form:\n\nentry:\n[[ ...; IDENT \"bar\"; ... ]]\n\nNotation \"... 'bar' ...\" := ...\n\nIdeally, one would like to have << IDENT \"bar\" >> parses \"bar\" whenever \"bar\" is recognized by the lexer as a keyword or an ident, but IDENT is managed directly by camlp5 and I don't see how to solve this, except at introducing ad hoc rules for parsing ad hoc ident, say, rewriting entry above for each such \"bar\" into\n\nentry:\n[[ ...; ad_hoc_rule_for_ident_bar; ... ]]\n\nad_hoc_rule_for_ident_bar:\n[[ IDENT \"foo\" -> () ]]\n\nand extending ad_hoc_rule_for_ident_bar to \n\nad_hoc_rule_for_ident_bar:\n[[ IDENT \"foo\" -> ()\n   KWDID \"foo\" -> ()  (* keyword case *) ]]\n\nwhenever the ident is recognized as usable as a keyword.\n\nSo, to me, the questions are:\n\n- whether we consider it an issue of the parsing tool (camlp5, camlp4, maybe decap, if PMP's investigations on it turn positive) and then ask for a change to the implementors of these tools\n- or we count on ourselves to solve the issue, even if it means a complexification of the grammar rules\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337533452/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337533455","html_url":"https://github.com/coq/coq/issues/4152#issuecomment-337533455","issue_url":"https://api.github.com/repos/coq/coq/issues/4152","id":337533455,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzMzQ1NQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-03-23T10:10:08Z","updated_at":"2017-10-18T09:58:35Z","author_association":"CONTRIBUTOR","body":"Comment author: @gares\n\nThe issue ident/keyword affects ssr too.  I tried once to\nhave a IDENT_OR_KEYWORD \"foo\" grammar entry, but I failed.\nIIRC it was possible in one of the parsing engines but not\nin the other, I don't recall which (I mean camlp4 and camlp5).\n\nLet's see if PMP finds a way around that.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337533455/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337533457","html_url":"https://github.com/coq/coq/issues/4152#issuecomment-337533457","issue_url":"https://api.github.com/repos/coq/coq/issues/4152","id":337533457,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzMzQ1Nw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-03-23T10:20:53Z","updated_at":"2017-10-18T09:58:35Z","author_association":"CONTRIBUTOR","body":"Comment author: @herbelin\n\nAn add-on for the record\n\nOne configuration to deal with is also the following\n\n... l = LIST1 ident; \"kwd\"; ...\n\nwhere ident should not include \"kwd\" as an either-keyword-or-ident string.\n\nSo, the KWDID tricks would be possible for \"End ident\" but not in the general case. I.e. not all uses of ident can accept keywords downgraded into idents.\n\nEnrico, if what you did improved the situation for at least one of camlp4/5 that's already worth, isn't it?\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337533457/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337533458","html_url":"https://github.com/coq/coq/issues/4152#issuecomment-337533458","issue_url":"https://api.github.com/repos/coq/coq/issues/4152","id":337533458,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzMzQ1OA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-03-23T10:46:11Z","updated_at":"2017-10-18T09:58:35Z","author_association":"CONTRIBUTOR","body":"Comment author: @gares\n\nHum... I guess I did not even propose the partial fix because making a .v file dependent on a camlpX variant is not that appealing to me (as long as Coq supports both X=4 and X=5).\n\nOf course I'm stupid and I've lost my attempt patch.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337533458/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337533460","html_url":"https://github.com/coq/coq/issues/4152#issuecomment-337533460","issue_url":"https://api.github.com/repos/coq/coq/issues/4152","id":337533460,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzMzQ2MA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-04-06T07:15:16Z","updated_at":"2017-10-18T09:58:36Z","author_association":"CONTRIBUTOR","body":"Comment author: @ppedrot\n\n\n\n*** This bug has been marked as a duplicate of bug [BZ#2872](https://github.com/coq/coq/issues?q=is%3Aissue%20%22Original%20bug%20ID%3A%20BZ%232872%22) ***\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337533460/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]