[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337517624","html_url":"https://github.com/coq/coq/issues/3224#issuecomment-337517624","issue_url":"https://api.github.com/repos/coq/coq/issues/3224","id":337517624,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUxNzYyNA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-02-02T14:27:40Z","updated_at":"2017-10-18T09:13:01Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nI want Tactic Notation to support whatever gets printed by [Print Grammar tactic] as tactic:orient; tactic:glob_constr_with_bindings; tactic:occurrences; prim:var.  I want to be able to give an alternate name for [rewrite] which takes the same kinds of arguments, using [Tactic Notation]\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337517624/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/594064587","html_url":"https://github.com/coq/coq/issues/3224#issuecomment-594064587","issue_url":"https://api.github.com/repos/coq/coq/issues/3224","id":594064587,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NDA2NDU4Nw==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2020-03-03T17:15:20Z","updated_at":"2020-03-03T17:15:20Z","author_association":"MEMBER","body":"Quoting myself from https://github.com/coq/coq/issues/11727#issuecomment-594046344 :\r\nI think the tactics should not have tricks that are not available to tactic notations / Ltac2 tactic notations. I don't think I would have to write OCaml just to wrap a tactic and preserve syntax and flexibility","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/594064587/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/594069146","html_url":"https://github.com/coq/coq/issues/3224#issuecomment-594069146","issue_url":"https://api.github.com/repos/coq/coq/issues/3224","id":594069146,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NDA2OTE0Ng==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2020-03-03T17:24:46Z","updated_at":"2020-03-03T17:24:46Z","author_association":"MEMBER","body":"Maybe cc @ppedrot , I expect you to have opinions on this.\r\n\r\n(Note that my views on this are well-represented by the excellent talk [Growing a Language, by Guy Steele](https://www.youtube.com/watch?v=_ahvzDzKdB0).)","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/594069146/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/594120900","html_url":"https://github.com/coq/coq/issues/3224#issuecomment-594120900","issue_url":"https://api.github.com/repos/coq/coq/issues/3224","id":594120900,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NDEyMDkwMA==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2020-03-03T19:18:16Z","updated_at":"2020-03-03T19:18:27Z","author_association":"MEMBER","body":"By design, Ltac2 has no built-in notation, in the sense that all \"primitive\" tactics are defined by Ltac2 notations that could be performed the same by any development. There are built-in *notation scopes* but that doesn't prevent the user to use the data structures they generate.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/594120900/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/594137161","html_url":"https://github.com/coq/coq/issues/3224#issuecomment-594137161","issue_url":"https://api.github.com/repos/coq/coq/issues/3224","id":594137161,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NDEzNzE2MQ==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2020-03-03T19:52:54Z","updated_at":"2020-03-03T19:52:54Z","author_association":"MEMBER","body":"Ah, this sounds great.  So once all tactics are accessible in Ltac2, all the nice syntax for tactics will also be available for user-defined tactic notations?  So maybe once Ltac is firmly deprecated, or once Ltac2 supports all tactics and, e.g., the standard library has moved to Ltac2, we can close this issue.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/594137161/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/598812905","html_url":"https://github.com/coq/coq/issues/3224#issuecomment-598812905","issue_url":"https://api.github.com/repos/coq/coq/issues/3224","id":598812905,"node_id":"MDEyOklzc3VlQ29tbWVudDU5ODgxMjkwNQ==","user":{"login":"herbelin","id":460771,"node_id":"MDQ6VXNlcjQ2MDc3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/460771?v=4","gravatar_id":"","url":"https://api.github.com/users/herbelin","html_url":"https://github.com/herbelin","followers_url":"https://api.github.com/users/herbelin/followers","following_url":"https://api.github.com/users/herbelin/following{/other_user}","gists_url":"https://api.github.com/users/herbelin/gists{/gist_id}","starred_url":"https://api.github.com/users/herbelin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/herbelin/subscriptions","organizations_url":"https://api.github.com/users/herbelin/orgs","repos_url":"https://api.github.com/users/herbelin/repos","events_url":"https://api.github.com/users/herbelin/events{/privacy}","received_events_url":"https://api.github.com/users/herbelin/received_events","type":"User","site_admin":false},"created_at":"2020-03-13T16:41:12Z","updated_at":"2020-03-13T16:41:12Z","author_association":"MEMBER","body":"So, do I understand correctly that Ltac2 answers positively to the question raised by this PR by allowing e.g.:\r\n```\r\nLtac2 Notation \"myrewrite\"\r\n  rw(list1(rewriting, \",\"))\r\n  cl(opt(clause))\r\n  tac(opt(seq(\"by\", thunk(tactic)))) :=\r\n  rewrite0 false rw cl tac.\r\n```\r\nAlso, if the internal `rewrite` is eventually extended, I guess, we shall introduce a `rewrite1` which supports the extra arguments.\r\n\r\nIn particular, `orient` (called `rewriting`), `glob_constr_with_bindings` (obtained with `seq(constr, with_bindings)`), `occurrences` (called `occurrences`) are all already provided by `Ltac2` (using `$id` for Ltac2-level bindings).\r\n\r\nAs far as I understand, for `var`, there is `ident` in Ltac2, though there is no distinction in Ltac2 between an identifier which is supposed to bind and an identifier which is supposed to be bound. (Ltac started to make such a difference, respectively using `ident` and `hyp`, but is not really \"production\"-quality, as shown e.g. in #11721. @ppedrot: Will you be non-angry if, possibly, Ltac continues to explore this direction - it cannot be worse as it is now anyways - until Ltac2 has a model to propose for binding/bound variables?)\r\n\r\nAdditional question: @ppedrot, would it make sense to progressively remove lines from `g_tactic.mlg` to the benefit of `g_ltac2.mlg` and `Ltac2.Notations`?\r\n\r\nIn any case, do we consider that Ltac2 is an answer to the original issue from 2014?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/598812905/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/1047253781","html_url":"https://github.com/coq/coq/issues/3224#issuecomment-1047253781","issue_url":"https://api.github.com/repos/coq/coq/issues/3224","id":1047253781,"node_id":"IC_kwDOABUDh84-a9MV","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2022-02-21T21:57:03Z","updated_at":"2022-02-21T21:57:03Z","author_association":"MEMBER","body":"WONTFIX, solved by Ltac2.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/1047253781/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]