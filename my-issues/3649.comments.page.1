[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524627","html_url":"https://github.com/coq/coq/issues/3649#issuecomment-337524627","issue_url":"https://api.github.com/repos/coq/coq/issues/3649","id":337524627,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNDYyNw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-09-19T09:09:36Z","updated_at":"2017-10-18T09:33:01Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\n(* File reduced by coq-bug-finder from original input, then from 9518 lines to 404 lines, then from 410 lines to 208 lines, then from 162 lines to 77 lines *)\n(* coqc version trunk (September 2014) compiled on Sep 18 2014 21:0:5 with OCaml 4.01.0\n   coqtop version cagnode16:/afs/csail.mit.edu/u/j/jgross/coq-trunk,trunk (07e4438bd758c2ced8caf09a6961ccd77d84e42b) *)\nReserved Infix \"o\" (at level 40, left associativity).\nInductive paths {A : Type} (a : A) : A -> Type := idpath : paths a a where \"x = y\" := (@ paths _ x y) : type_scope.\nGlobal Set Primitive Projections.\nDelimit Scope morphism_scope with morphism.\nRecord PreCategory :=\n  { object :> Type;\n    morphism : object -> object -> Type;\n\n    identity : forall x, morphism x x;\n    compose : forall s d d',\n                morphism d d'\n                -> morphism s d\n                -> morphism s d'\n    where \"f 'o' g\" := (compose f g) }.\nInfix \"o\" := (@ compose _ _ _ _) : morphism_scope.\nSet Implicit Arguments.\nLocal Open Scope morphism_scope.\nRecord Functor (C D : PreCategory) :=\n  { object_of :> C -> D;\n    morphism_of : forall s d, morphism C s d\n                              -> morphism D (object_of s) (object_of d) }.\nClass IsIsomorphism {C : PreCategory} {s d} (m : morphism C s d) :=\n  { morphism_inverse : morphism C d s }.\nRecord NaturalTransformation C D (F G : Functor C D) := { components_of :> forall c, morphism D (F c) (G c) }.\nDefinition composeT C D (F F' F'' : Functor C D) (T' : NaturalTransformation F' F'') (T : NaturalTransformation F F')\n: NaturalTransformation F F''.\n  admit.\nDefined.\nDefinition functor_category (C D : PreCategory) : PreCategory.\n  exact (@ Build_PreCategory (Functor C D)\n                            (@ NaturalTransformation C D)\n                            $(admit)$\n                            (@ composeT C D)).\nDefined.\nGoal forall (C D : PreCategory) (G G' : Functor C D)\n            (T : @ NaturalTransformation C D G G')\n            (H : @ IsIsomorphism (@ functor_category C D) G G' T)\n            (x : C),\n       @ paths (morphism D (G x) (G x))\n              (@ compose D (G x) (G' x) (G x)\n                        ((@ morphism_inverse (@ functor_category C D) G G' T H) x)\n                        (T x)) (@ identity D (G x)).\n  intros.\n  let T0 := match goal with |- context[components_of ?T0 ?x o components_of ?T1 ?x] => constr:(T0) end in\n  let T1 := match goal with |- context[components_of ?T0 ?x o components_of ?T1 ?x] => constr:(T1) end in\n  change (T0 x o T1 x)\n  with (components_of ((T0 : morphism (_ -> _) _ _)\n                         o (T1 : morphism (_ -> _) _ _))%morphism\n                      x).\n  Undo.\n  try ((let T0 := match goal with |- context[components_of ?T0 ?x o components_of ?T1 ?x] => constr:(T0) end in\n        let T1 := match goal with |- context[components_of ?T0 ?x o components_of ?T1 ?x] => constr:(T1) end in\n        constr_eq (T0 x o T1 x)\n                  (components_of ((T0 : morphism (functor_category _ _) _ _)\n                                    o (T1 : morphism (functor_category _ _) _ _))%morphism\n                                 x)); fail 1 \"bad\").\n  let T0 := match goal with |- context[components_of ?T0 ?x o components_of ?T1 ?x] => constr:(T0) end in\n  let T1 := match goal with |- context[components_of ?T0 ?x o components_of ?T1 ?x] => constr:(T1) end in\n  progress change (T0 x o T1 x)\n  with (components_of ((T0 : morphism (_ -> _) _ _)\n                         o (T1 : morphism (_ -> _) _ _))%morphism\n                      x). (* Failed to progress *)\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524627/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524629","html_url":"https://github.com/coq/coq/issues/3649#issuecomment-337524629","issue_url":"https://api.github.com/repos/coq/coq/issues/3649","id":337524629,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNDYyOQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-09-27T20:39:36Z","updated_at":"2017-10-18T09:33:01Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nCan't reproduce, with or without Set Primitive Projections.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524629/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524631","html_url":"https://github.com/coq/coq/issues/3649#issuecomment-337524631","issue_url":"https://api.github.com/repos/coq/coq/issues/3649","id":337524631,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNDYzMQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-09-27T21:37:41Z","updated_at":"2017-10-18T09:33:01Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nIn most recent trunk, or in 07e4438bd758c2ced8caf09a6961ccd77d84e42b?  (It's possible you fixed it inadvertently in the mean time?)\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524631/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524633","html_url":"https://github.com/coq/coq/issues/3649#issuecomment-337524633","issue_url":"https://api.github.com/repos/coq/coq/issues/3649","id":337524633,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNDYzMw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-09-28T09:29:09Z","updated_at":"2017-10-18T09:33:01Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nIn the most recent version. I suspect there is a problem because in\n\nchange (T0 x o T1 x)\n  with (components_of ((T0 : morphism (_ -> _) _ _)\n                         o (T1 : morphism (_ -> _) _ _))%morphism\n                      x).\n\nCoq gives a type error on the [morphism (_ -> _) _ _] part (saying (_ -> _) is not a precategory... Maybe it's missing a notation for functor_category or something\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524633/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524635","html_url":"https://github.com/coq/coq/issues/3649#issuecomment-337524635","issue_url":"https://api.github.com/repos/coq/coq/issues/3649","id":337524635,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNDYzNQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-02-12T22:20:37Z","updated_at":"2017-10-18T09:33:01Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nPing, can you reproduce this or change the test-suite file?\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524635/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524638","html_url":"https://github.com/coq/coq/issues/3649#issuecomment-337524638","issue_url":"https://api.github.com/repos/coq/coq/issues/3649","id":337524638,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNDYzOA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-02-12T22:43:35Z","updated_at":"2017-10-18T09:33:02Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nI'll go compile 07e4438bd758c2ced8caf09a6961ccd77d84e42b and see why it accepts the change that it should not accept.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524638/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524639","html_url":"https://github.com/coq/coq/issues/3649#issuecomment-337524639","issue_url":"https://api.github.com/repos/coq/coq/issues/3649","id":337524639,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNDYzOQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-02-13T18:25:25Z","updated_at":"2017-10-18T09:33:02Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nThe reason that Coq now complains when it used to not complain is bug [BZ#4042](https://github.com/coq/coq/issues?q=is%3Aissue%20%22Original%20bug%20ID%3A%20BZ%234042%22), and that the precise times that [change] complains has changed.  Let me see if I can track down the original code...\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524639/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524641","html_url":"https://github.com/coq/coq/issues/3649#issuecomment-337524641","issue_url":"https://api.github.com/repos/coq/coq/issues/3649","id":337524641,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNDY0MQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-02-13T18:41:16Z","updated_at":"2017-10-18T09:33:02Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nAhahaha, the fact that the [change] was succeeding was, precisely, the test case for this bug; the issue was that [change] could not find the lhs in the goal (and thus ended up not typechecking the rhs, though my test for this was wrong).  So the bug has been closed.  Here's a file for the test-suite, which is hopefully more future-proof:\n\n(* -*- coq-prog-args: (\"-emacs\" \"-nois\") -*- *)\n(* File reduced by coq-bug-finder from original input, then from 9518 lines to 404 lines, then from 410 lines to 208 lines, then from 162 lines to 77 lines *)\n(* coqc version trunk (September 2014) compiled on Sep 18 2014 21:0:5 with OCaml 4.01.0\n   coqtop version cagnode16:/afs/csail.mit.edu/u/j/jgross/coq-trunk,trunk (07e4438bd758c2ced8caf09a6961ccd77d84e42b) *)\nReserved Notation \"x -> y\" (at level 99, right associativity, y at level 200).\nReserved Notation \"x = y\" (at level 70, no associativity).\nOpen Scope type_scope.\nAxiom admit : forall {T}, T.\nNotation \"A -> B\" := (forall (_ : A), B) : type_scope.\nReserved Infix \"o\" (at level 40, left associativity).\nInductive paths {A : Type} (a : A) : A -> Type := idpath : paths a a where \"x = y\" := (@ paths _ x y) : type_scope.\nLtac constr_eq a b := let test := constr:(@ idpath _ _ : a = b) in idtac.\nGlobal Set Primitive Projections.\nDelimit Scope morphism_scope with morphism.\nRecord PreCategory :=\n  { object :> Type;\n    morphism : object -> object -> Type;\n\n    identity : forall x, morphism x x;\n    compose : forall s d d',\n                morphism d d'\n                -> morphism s d\n                -> morphism s d'\n    where \"f 'o' g\" := (compose f g) }.\nInfix \"o\" := (@ compose _ _ _ _) : morphism_scope.\nSet Implicit Arguments.\nLocal Open Scope morphism_scope.\nRecord Functor (C D : PreCategory) :=\n  { object_of :> C -> D;\n    morphism_of : forall s d, morphism C s d\n                              -> morphism D (object_of s) (object_of d) }.\nClass IsIsomorphism {C : PreCategory} {s d} (m : morphism C s d) :=\n  { morphism_inverse : morphism C d s }.\nRecord NaturalTransformation C D (F G : Functor C D) := { components_of :> forall c, morphism D (F c) (G c) }.\nDefinition composeT C D (F F' F'' : Functor C D) (T' : NaturalTransformation F' F'') (T : NaturalTransformation F F')\n: NaturalTransformation F F''.\n  exact admit.\nDefined.\nDefinition functor_category (C D : PreCategory) : PreCategory.\n  exact (@ Build_PreCategory (Functor C D)\n                            (@ NaturalTransformation C D)\n                            admit\n                            (@ composeT C D)).\nDefined.\nGoal forall (C D : PreCategory) (G G' : Functor C D)\n            (T : @ NaturalTransformation C D G G')\n            (H : @ IsIsomorphism (@ functor_category C D) G G' T)\n            (x : C),\n       @ paths (morphism D (G x) (G x))\n              (@ compose D (G x) (G' x) (G x)\n                        ((@ morphism_inverse (@ functor_category C D) G G' T H) x)\n                        (T x)) (@ identity D (G x)).\n  intros.\n  (** This [change] succeeded, but did not progress, in 07e4438bd758c2ced8caf09a6961ccd77d84e42b, because [T0 x o T1 x] was not found in the goal *)\n  let T0 := match goal with |- context[components_of ?T0 ?x o components_of ?T1 ?x] => constr:(T0) end in\n  let T1 := match goal with |- context[components_of ?T0 ?x o components_of ?T1 ?x] => constr:(T1) end in\n  progress change (T0 x o T1 x) with ((fun y => y) (T0 x o T1 x)).\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524641/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524642","html_url":"https://github.com/coq/coq/issues/3649#issuecomment-337524642","issue_url":"https://api.github.com/repos/coq/coq/issues/3649","id":337524642,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNDY0Mg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-02-27T13:02:29Z","updated_at":"2017-10-18T09:33:02Z","author_association":"CONTRIBUTOR","body":"Comment author: @maximedenes\n\nAdded file in test-suite.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524642/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]