[{"url":"https://api.github.com/repos/coq/coq/issues/comments/641005953","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-641005953","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":641005953,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MTAwNTk1Mw==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2020-06-09T03:27:53Z","updated_at":"2020-06-09T03:27:53Z","author_association":"MEMBER","body":"Btw, @jfehrle , if you plan to track this down, the fastest file that uses ~10 GB RAM is `src/Specific/montgomery32_2e165m25_6limbs/femul.vo` which builds for me in about 7.5 minutes and takes 10,212,660 ko RAM.  The stats for all files are available [here](https://github.com/mit-plv/fiat-crypto/blob/sp2019latest/time-of-build-after-pretty.log).\r\n\r\n_Originally posted by @JasonGross in https://github.com/coq/coq/issues/12271#issuecomment-640976919_","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/641005953/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/641005993","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-641005993","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":641005993,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MTAwNTk5Mw==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2020-06-09T03:28:05Z","updated_at":"2020-06-09T03:28:05Z","author_association":"MEMBER","body":"It's tempting--it seems like a fun problem that may identify significant opportunities for improvement.  I'll take a quick look now.\r\n\r\nIs there another file that takes less time to run that still shows the problem?\r\n\r\n_Originally posted by @jfehrle in https://github.com/coq/coq/issues/12271#issuecomment-640997056_","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/641005993/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/641006036","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-641006036","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":641006036,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MTAwNjAzNg==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2020-06-09T03:28:15Z","updated_at":"2020-06-09T03:28:15Z","author_association":"MEMBER","body":"I'm currently working on making it build on master (turns out it only builds on 8.11).  https://github.com/mit-plv/fiat-crypto/pull/812 should fix this.\r\n\r\nThe first file over 5 GB is `src/Specific/montgomery32_2e152m17_5limbs/femul.vo` at 3m57.47s , 5258312 ko.  I think this is probably the first one that stands out from the rest.  The first file over 4 GB is only about 4 seconds faster, and there are a lot of files that take over 3 GB.\r\n\r\n_Originally posted by @JasonGross in https://github.com/coq/coq/issues/12271#issuecomment-641002396_","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/641006036/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/641006082","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-641006082","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":641006082,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MTAwNjA4Mg==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2020-06-09T03:28:29Z","updated_at":"2020-06-09T03:28:29Z","author_association":"MEMBER","body":"Btw, my first guess, knowing nothing about what's going on internally, is that kernel conversion is taking some unfortunate path and the intermediate terms it's generating in the course of doing conversion are blowing up.\r\n\r\n_Originally posted by @JasonGross in https://github.com/coq/coq/issues/12271#issuecomment-641003791_","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/641006082/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/641006111","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-641006111","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":641006111,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MTAwNjExMQ==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2020-06-09T03:28:39Z","updated_at":"2020-06-09T03:28:39Z","author_association":"MEMBER","body":"On master (I'm using 831e901a8b796c3f2e7cec7f2b5d8adae4dfbea3), things are somewhat better than on 8.8, but not drastically so:\r\n```\r\nsrc/Specific/montgomery32_2e152m17_5limbs/femul.vo (real: 211.43, user: 209.86, sys: 1.56, mem: 3990152 ko)\r\nsrc/Specific/montgomery32_2e165m25_6limbs/femul.vo (real: 436.08, user: 433.29, sys: 2.78, mem: 7368456 ko)\r\n```\r\n\r\nBtw, the timing breakdown for subtactics:\r\nIn src/Specific/montgomery32_2e152m17_5limbs/femul.v:\r\n```\r\ntotal time:    136.195s\r\n\r\n tactic                                   local  total   calls       max\r\n────────────────────────────────────────┴──────┴──────┴───────┴─────────┘\r\n─synthesize_mul ------------------------   0.0% 100.0%       0  136.195s\r\n─synthesize_carry_mul ------------------   0.0% 100.0%       0  136.195s\r\n─synthesize_2arg_choice_with_carry -----   0.0% 100.0%       0  136.195s\r\n─synthesize_narg_choice_gen ------------   0.0% 100.0%       0  136.195s\r\n─Pipeline.refine_reflectively_gen ------   0.0%  99.1%       1  134.994s\r\n─ReflectiveTactics.do_reflective_pipelin   0.0%  98.8%       1  134.626s\r\n─ReflectiveTactics.solve_side_conditions   0.0%  98.7%       1  134.466s\r\n─ReflectiveTactics.do_reify ------------   0.0%  87.5%       1  119.157s\r\n─Reify.Reify_rhs_gen -------------------   0.4%  87.2%       1  118.813s\r\n─Reify ---------------------------------   0.0%  82.3%       0  112.079s\r\n─Compilers.Reify.Reify -----------------   0.1%  82.3%       0  112.076s\r\n─Compilers.Reify.Reify' ----------------   0.0%  82.2%       0  111.958s\r\n─Reify.do_reify_abs_goal ---------------   0.0%  82.2%       2  111.947s\r\n─Reify.reify_abs -----------------------  82.1%  82.1%       0  111.828s\r\n─ReflectiveTactics.solve_post_reified_si   0.0%  11.2%       1   15.309s\r\n─UnifyAbstractReflexivity.unify_transfor   0.0%  10.1%       7    3.143s\r\n─abstract exact_no_check eq_refl -------   8.9%   8.9%       8    2.422s\r\n\r\n tactic                                   local  total   calls       max\r\n────────────────────────────────────────┴──────┴──────┴───────┴─────────┘\r\n─synthesize_mul ------------------------   0.0% 100.0%       0  136.195s\r\n└synthesize_carry_mul ------------------   0.0% 100.0%       0  136.195s\r\n└synthesize_2arg_choice_with_carry -----   0.0% 100.0%       0  136.195s\r\n└synthesize_narg_choice_gen ------------   0.0% 100.0%       0  136.195s\r\n└Pipeline.refine_reflectively_gen ------   0.0%  99.1%       1  134.994s\r\n└ReflectiveTactics.do_reflective_pipelin   0.0%  98.8%       1  134.626s\r\n└ReflectiveTactics.solve_side_conditions   0.0%  98.7%       1  134.466s\r\n ├─ReflectiveTactics.do_reify ----------   0.0%  87.5%       1  119.157s\r\n │└Reify.Reify_rhs_gen -----------------   0.4%  87.2%       1  118.813s\r\n │└Reify -------------------------------   0.0%  82.3%       0  112.079s\r\n │└Compilers.Reify.Reify ---------------   0.1%  82.3%       0  112.076s\r\n │└Compilers.Reify.Reify' --------------   0.0%  82.2%       0  111.958s\r\n │└Reify.do_reify_abs_goal -------------   0.0%  82.2%       2  111.947s\r\n │└Reify.reify_abs ---------------------  82.1%  82.1%       0  111.828s\r\n └─ReflectiveTactics.solve_post_reified_   0.0%  11.2%       1   15.309s\r\n  └UnifyAbstractReflexivity.unify_transf   0.0%  10.1%       7    3.143s\r\n  └abstract exact_no_check eq_refl -----   8.3%   8.3%       7    2.422s\r\n```\r\nIn src/Specific/montgomery32_2e165m25_6limbs/femul.v:\r\n```\r\ntotal time:    321.404s\r\n\r\n tactic                                   local  total   calls       max\r\n────────────────────────────────────────┴──────┴──────┴───────┴─────────┘\r\n─synthesize_mul ------------------------   0.0% 100.0%       0  321.404s\r\n─synthesize_carry_mul ------------------   0.0% 100.0%       0  321.404s\r\n─synthesize_2arg_choice_with_carry -----   0.0% 100.0%       0  321.404s\r\n─synthesize_narg_choice_gen ------------   0.0% 100.0%       0  321.404s\r\n─Pipeline.refine_reflectively_gen ------   0.0%  99.5%       1  319.882s\r\n─ReflectiveTactics.do_reflective_pipelin   0.0%  99.4%       1  319.385s\r\n─ReflectiveTactics.solve_side_conditions   0.0%  99.3%       1  319.137s\r\n─ReflectiveTactics.do_reify ------------   0.0%  92.6%       1  297.487s\r\n─Reify.Reify_rhs_gen -------------------   0.2%  92.4%       1  297.068s\r\n─Reify ---------------------------------   0.0%  89.4%       0  287.464s\r\n─Compilers.Reify.Reify -----------------   0.1%  89.4%       0  287.460s\r\n─Compilers.Reify.Reify' ----------------   0.0%  89.4%       0  287.288s\r\n─Reify.do_reify_abs_goal ---------------   0.0%  89.4%       2  287.271s\r\n─Reify.reify_abs -----------------------  89.3%  89.3%       0  287.091s\r\n─ReflectiveTactics.solve_post_reified_si   0.0%   6.7%       1   21.649s\r\n─UnifyAbstractReflexivity.unify_transfor   0.0%   6.1%       7    4.371s\r\n─abstract exact_no_check eq_refl -------   5.3%   5.3%       8    3.354s\r\n\r\n tactic                                   local  total   calls       max\r\n────────────────────────────────────────┴──────┴──────┴───────┴─────────┘\r\n─synthesize_mul ------------------------   0.0% 100.0%       0  321.404s\r\n└synthesize_carry_mul ------------------   0.0% 100.0%       0  321.404s\r\n└synthesize_2arg_choice_with_carry -----   0.0% 100.0%       0  321.404s\r\n└synthesize_narg_choice_gen ------------   0.0% 100.0%       0  321.404s\r\n└Pipeline.refine_reflectively_gen ------   0.0%  99.5%       1  319.882s\r\n└ReflectiveTactics.do_reflective_pipelin   0.0%  99.4%       1  319.385s\r\n└ReflectiveTactics.solve_side_conditions   0.0%  99.3%       1  319.137s\r\n ├─ReflectiveTactics.do_reify ----------   0.0%  92.6%       1  297.487s\r\n │└Reify.Reify_rhs_gen -----------------   0.2%  92.4%       1  297.068s\r\n │└Reify -------------------------------   0.0%  89.4%       0  287.464s\r\n │└Compilers.Reify.Reify ---------------   0.1%  89.4%       0  287.460s\r\n │└Compilers.Reify.Reify' --------------   0.0%  89.4%       0  287.288s\r\n │└Reify.do_reify_abs_goal -------------   0.0%  89.4%       2  287.271s\r\n │└Reify.reify_abs ---------------------  89.3%  89.3%       0  287.091s\r\n └─ReflectiveTactics.solve_post_reified_   0.0%   6.7%       1   21.649s\r\n  └UnifyAbstractReflexivity.unify_transf   0.0%   6.1%       7    4.371s\r\n  └abstract exact_no_check eq_refl -----   4.9%   4.9%       7    3.354s\r\n```\r\n\r\nSo my guess looking at this is that the time and memory is spent in typeclass resolution, possibly in allocating large evar contexts/substitutions?\r\n\r\n(Btw, we should plausibly move this discussion to another issue...)\r\n\r\n_Originally posted by @JasonGross in https://github.com/coq/coq/issues/12271#issuecomment-641005536_","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/641006111/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/641006690","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-641006690","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":641006690,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MTAwNjY5MA==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2020-06-09T03:30:51Z","updated_at":"2020-06-09T03:30:51Z","author_association":"MEMBER","body":"Let me also copy over the initial comments that started this off:","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/641006690/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/641006701","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-641006701","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":641006701,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MTAwNjcwMQ==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2020-06-09T03:30:54Z","updated_at":"2020-06-09T03:30:54Z","author_association":"MEMBER","body":"I'll be interested to read your results when they're available.  I'd appreciate it if you'd email me then.  Indeed, if you like, I\"ll proofread it.\r\n\r\nSeparately, I would love to understand what drives maximum memory use.  Seems like it should be roughly:\r\n\r\n(# of steps in the open proof) * (average size of the proof at each step) + (total sizes of all closed proofs)\r\n\r\nIIRC Adam mentioned runs that needed almost 32GB to complete.  Hard to see how Coq would use that much memory.  I recall there was a major fast memory leak that someone, maybe you, fixed about a year ago.  Not sure it's still an issue.  Would be interesting to identify the drivers of memory use and suggest improvements.  Also, I don't have a good feel for the range of numbers for my rough formula that are reached in practice or are common.\r\n\r\nOnce the drivers for memory use are identified, it should be possible to create a command or two to compute the exact amount used for various purposes.  I also wonder if some gigantic proofs might be optimized to make them much smaller.\r\n\r\n_Originally posted by @jfehrle in https://github.com/coq/coq/issues/12271#issuecomment-640943091_\r\n\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/641006701/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/641006745","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-641006745","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":641006745,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MTAwNjc0NQ==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2020-06-09T03:31:04Z","updated_at":"2020-06-09T03:31:04Z","author_association":"MEMBER","body":"I have indeed had individual Coq sessions go over 32 GB of memory use (it at least used to be quite easy to do with a long enough proof script using a lot of automation), but more commonly the scaling challenges come from several Coq sessions at once via a parallel build.\r\n\r\n_Originally posted by @achlipala in https://github.com/coq/coq/issues/12271#issuecomment-640946982_","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/641006745/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/641020729","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-641020729","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":641020729,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MTAyMDcyOQ==","user":{"login":"jfehrle","id":1253341,"node_id":"MDQ6VXNlcjEyNTMzNDE=","avatar_url":"https://avatars.githubusercontent.com/u/1253341?v=4","gravatar_id":"","url":"https://api.github.com/users/jfehrle","html_url":"https://github.com/jfehrle","followers_url":"https://api.github.com/users/jfehrle/followers","following_url":"https://api.github.com/users/jfehrle/following{/other_user}","gists_url":"https://api.github.com/users/jfehrle/gists{/gist_id}","starred_url":"https://api.github.com/users/jfehrle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jfehrle/subscriptions","organizations_url":"https://api.github.com/users/jfehrle/orgs","repos_url":"https://api.github.com/users/jfehrle/repos","events_url":"https://api.github.com/users/jfehrle/events{/privacy}","received_events_url":"https://api.github.com/users/jfehrle/received_events","type":"User","site_admin":false},"created_at":"2020-06-09T04:29:06Z","updated_at":"2020-06-09T04:39:02Z","author_association":"CONTRIBUTOR","body":"I'm trying to make on 8.11.2.  I see this:\r\n\r\n```\r\n$ make\r\nCOQ_MAKEFILE -f _CoqProject > Makefile.coq\r\nmake: *** No rule to make target 'bbv/src/bbv/BinNotation.v', needed by 'bbv/src/bbv/BinNotation.vo'.  Stop.\r\n```\r\n\r\nEDIT: figured this out","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/641020729/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/641025443","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-641025443","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":641025443,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MTAyNTQ0Mw==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2020-06-09T04:47:33Z","updated_at":"2020-06-09T04:47:33Z","author_association":"MEMBER","body":"`git submodule update --init --recursive`","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/641025443/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/641030978","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-641030978","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":641030978,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MTAzMDk3OA==","user":{"login":"jfehrle","id":1253341,"node_id":"MDQ6VXNlcjEyNTMzNDE=","avatar_url":"https://avatars.githubusercontent.com/u/1253341?v=4","gravatar_id":"","url":"https://api.github.com/users/jfehrle","html_url":"https://github.com/jfehrle","followers_url":"https://api.github.com/users/jfehrle/followers","following_url":"https://api.github.com/users/jfehrle/following{/other_user}","gists_url":"https://api.github.com/users/jfehrle/gists{/gist_id}","starred_url":"https://api.github.com/users/jfehrle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jfehrle/subscriptions","organizations_url":"https://api.github.com/users/jfehrle/orgs","repos_url":"https://api.github.com/users/jfehrle/repos","events_url":"https://api.github.com/users/jfehrle/events{/privacy}","received_events_url":"https://api.github.com/users/jfehrle/received_events","type":"User","site_admin":false},"created_at":"2020-06-09T05:07:34Z","updated_at":"2020-06-09T05:07:34Z","author_association":"CONTRIBUTOR","body":"How about this?\r\n\r\n```\r\n$ coqc src/Specific/montgomery32_2e165m25_6limbs/femul.v\r\nFile \"./src/Specific/montgomery32_2e165m25_6limbs/femul.v\", line 1, characters 15-51:\r\nError: Cannot find a physical path bound to logical path matching suffix\r\nCrypto.Arithmetic.\r\n```","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/641030978/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/641037769","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-641037769","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":641037769,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MTAzNzc2OQ==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2020-06-09T05:28:47Z","updated_at":"2020-06-09T05:28:47Z","author_association":"MEMBER","body":"You're missing the relevant flags from _CoqProject.  Also possibly missing a COQPATH setting.  Use `make src/Specific/montgomery32_2e165m25_6limbs/femul.vo` instead.  If you need to see the correct flags to pass to coqc, pass VERBOSE=1 (or it might be V=1) to `make`.  If you need to see the COQPATH setting, run `make printenv`","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/641037769/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/641080007","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-641080007","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":641080007,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MTA4MDAwNw==","user":{"login":"jfehrle","id":1253341,"node_id":"MDQ6VXNlcjEyNTMzNDE=","avatar_url":"https://avatars.githubusercontent.com/u/1253341?v=4","gravatar_id":"","url":"https://api.github.com/users/jfehrle","html_url":"https://github.com/jfehrle","followers_url":"https://api.github.com/users/jfehrle/followers","following_url":"https://api.github.com/users/jfehrle/following{/other_user}","gists_url":"https://api.github.com/users/jfehrle/gists{/gist_id}","starred_url":"https://api.github.com/users/jfehrle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jfehrle/subscriptions","organizations_url":"https://api.github.com/users/jfehrle/orgs","repos_url":"https://api.github.com/users/jfehrle/repos","events_url":"https://api.github.com/users/jfehrle/events{/privacy}","received_events_url":"https://api.github.com/users/jfehrle/received_events","type":"User","site_admin":false},"created_at":"2020-06-09T07:09:05Z","updated_at":"2020-06-09T07:09:05Z","author_association":"CONTRIBUTOR","body":"I'll try that.  In the meantime, I was trying to set up the `spacetime` memory profiler, which is described here: https://blog.janestreet.com/a-brief-trip-through-spacetime/ and here: https://caml.inria.fr/pub/docs/manual-ocaml/libref/Spacetime.html\r\n\r\nAnd this is how far I got:\r\nhttps://discuss.ocaml.org/t/spacetime-on-windows-subsystem-for-linux/5942\r\n\r\nIf you have Linux rather than Windows and/or >32 GB on your system perhaps it will work better for you.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/641080007/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/641080457","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-641080457","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":641080457,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MTA4MDQ1Nw==","user":{"login":"jfehrle","id":1253341,"node_id":"MDQ6VXNlcjEyNTMzNDE=","avatar_url":"https://avatars.githubusercontent.com/u/1253341?v=4","gravatar_id":"","url":"https://api.github.com/users/jfehrle","html_url":"https://github.com/jfehrle","followers_url":"https://api.github.com/users/jfehrle/followers","following_url":"https://api.github.com/users/jfehrle/following{/other_user}","gists_url":"https://api.github.com/users/jfehrle/gists{/gist_id}","starred_url":"https://api.github.com/users/jfehrle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jfehrle/subscriptions","organizations_url":"https://api.github.com/users/jfehrle/orgs","repos_url":"https://api.github.com/users/jfehrle/repos","events_url":"https://api.github.com/users/jfehrle/events{/privacy}","received_events_url":"https://api.github.com/users/jfehrle/received_events","type":"User","site_admin":false},"created_at":"2020-06-09T07:10:00Z","updated_at":"2020-06-09T07:10:00Z","author_association":"CONTRIBUTOR","body":"PS the opam build segfaults while compiling Byte.v","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/641080457/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/641129165","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-641129165","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":641129165,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MTEyOTE2NQ==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2020-06-09T08:41:07Z","updated_at":"2020-06-09T08:41:07Z","author_association":"MEMBER","body":"Note that to use the spacetime feature, you need to (minimally) patch Coq. I have a branch somewhere on my disk that does that, if you want.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/641129165/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/641222815","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-641222815","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":641222815,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MTIyMjgxNQ==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2020-06-09T11:15:43Z","updated_at":"2020-06-09T11:44:21Z","author_association":"MEMBER","body":"I've just realized that I don't use spacetime for Coq profiling, because it's usually too costly on the kind of CPU-bound runs typical in Coq. Instead, I use the statistical-memprof patch of the OCaml compiler. It seems that [it is currently being revamped and integrated](http://gallium.inria.fr/~scherer/doc/chameau-sur-le-plateau/2019-11-12-jacques-henri-jourdan-statmemprof.pdf) into upstream OCaml, but AFAICT there is a switch [available up to OCaml 4.07](https://opam.ocaml.org/packages/ocaml-variants/ocaml-variants.4.07.1+statistical-memprof/) on opam.\r\n\r\nEDIT: the link to my branch is https://github.com/ppedrot/coq/tree/jh-memprof-new. You can trigger a memory dump with SIGUSR1, and reset the memory count with SIGUSR2.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/641222815/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/641247222","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-641247222","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":641247222,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MTI0NzIyMg==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2020-06-09T12:08:46Z","updated_at":"2020-06-09T12:11:26Z","author_association":"MEMBER","body":"Look no further: this memory explosion is due to the reallocation of evar environments in pretyping, namely in `GlobEnv.new_evar`.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/641247222/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/641269720","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-641269720","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":641269720,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MTI2OTcyMA==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2020-06-09T12:49:52Z","updated_at":"2020-06-09T12:49:52Z","author_association":"MEMBER","body":"@JasonGross could you try with https://github.com/ppedrot/coq/tree/share-val-context-new-evar to see if the problem persists?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/641269720/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/641466180","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-641466180","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":641466180,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MTQ2NjE4MA==","user":{"login":"jfehrle","id":1253341,"node_id":"MDQ6VXNlcjEyNTMzNDE=","avatar_url":"https://avatars.githubusercontent.com/u/1253341?v=4","gravatar_id":"","url":"https://api.github.com/users/jfehrle","html_url":"https://github.com/jfehrle","followers_url":"https://api.github.com/users/jfehrle/followers","following_url":"https://api.github.com/users/jfehrle/following{/other_user}","gists_url":"https://api.github.com/users/jfehrle/gists{/gist_id}","starred_url":"https://api.github.com/users/jfehrle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jfehrle/subscriptions","organizations_url":"https://api.github.com/users/jfehrle/orgs","repos_url":"https://api.github.com/users/jfehrle/repos","events_url":"https://api.github.com/users/jfehrle/events{/privacy}","received_events_url":"https://api.github.com/users/jfehrle/received_events","type":"User","site_admin":false},"created_at":"2020-06-09T17:35:06Z","updated_at":"2020-06-09T17:35:06Z","author_association":"CONTRIBUTOR","body":"@ppedrot An excellent start.  That reduced memory use after the proof completed from ~4GB to <2GB for `montgomery32_2e152m17_5limbs`\r\n\r\nas reported by `Print Debug GC`\r\n```\r\n            old       new       new/old\r\nheap_words: 564421632 236036608 41.8 %\r\nlive_words  435654906 190527438 43.7 %\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/641466180/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/641474794","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-641474794","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":641474794,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MTQ3NDc5NA==","user":{"login":"jfehrle","id":1253341,"node_id":"MDQ6VXNlcjEyNTMzNDE=","avatar_url":"https://avatars.githubusercontent.com/u/1253341?v=4","gravatar_id":"","url":"https://api.github.com/users/jfehrle","html_url":"https://github.com/jfehrle","followers_url":"https://api.github.com/users/jfehrle/followers","following_url":"https://api.github.com/users/jfehrle/following{/other_user}","gists_url":"https://api.github.com/users/jfehrle/gists{/gist_id}","starred_url":"https://api.github.com/users/jfehrle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jfehrle/subscriptions","organizations_url":"https://api.github.com/users/jfehrle/orgs","repos_url":"https://api.github.com/users/jfehrle/repos","events_url":"https://api.github.com/users/jfehrle/events{/privacy}","received_events_url":"https://api.github.com/users/jfehrle/received_events","type":"User","site_admin":false},"created_at":"2020-06-09T17:51:54Z","updated_at":"2020-06-09T17:51:54Z","author_association":"CONTRIBUTOR","body":"`montgomery32_2e165m25_6limbs` was using 10GB, is now under 4 GB:\r\n\r\n```\r\nheap_words: 412830720\r\nlive_words: 280046129\r\n```\r\n\r\n@JasonGross I can rerun some of the other scripts and see if the growth is still exponential.  Which ones should I run?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/641474794/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/641499514","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-641499514","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":641499514,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MTQ5OTUxNA==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2020-06-09T18:40:44Z","updated_at":"2020-06-09T18:40:44Z","author_association":"MEMBER","body":"If you run `src/Specific/montgomery*_<n>limbs/femul.vo` for a variety of values of `n`, that should give a good sense (it doesn't really matter which of the many `montgomery` files you run for a particular value of `n`, you can see the variation in how much the dots overlap or not for each value of `n` in my plot).  You can look up how long each file took for me in [this table](https://github.com/mit-plv/fiat-crypto/blob/sp2019latest/time-of-build-after-pretty.log)","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/641499514/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/641505840","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-641505840","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":641505840,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MTUwNTg0MA==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2020-06-09T18:53:55Z","updated_at":"2020-06-09T18:53:55Z","author_association":"MEMBER","body":"Next in line is another evar-manipulating function, namely `Evd.restrict`. It keeps generating identity substitutions, and there is probably a way to introduce a bit more of sharing.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/641505840/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/641599551","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-641599551","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":641599551,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MTU5OTU1MQ==","user":{"login":"jfehrle","id":1253341,"node_id":"MDQ6VXNlcjEyNTMzNDE=","avatar_url":"https://avatars.githubusercontent.com/u/1253341?v=4","gravatar_id":"","url":"https://api.github.com/users/jfehrle","html_url":"https://github.com/jfehrle","followers_url":"https://api.github.com/users/jfehrle/followers","following_url":"https://api.github.com/users/jfehrle/following{/other_user}","gists_url":"https://api.github.com/users/jfehrle/gists{/gist_id}","starred_url":"https://api.github.com/users/jfehrle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jfehrle/subscriptions","organizations_url":"https://api.github.com/users/jfehrle/orgs","repos_url":"https://api.github.com/users/jfehrle/repos","events_url":"https://api.github.com/users/jfehrle/events{/privacy}","received_events_url":"https://api.github.com/users/jfehrle/received_events","type":"User","site_admin":false},"created_at":"2020-06-09T21:47:09Z","updated_at":"2020-06-09T21:53:42Z","author_association":"CONTRIBUTOR","body":"Here's what I got.  It seems to run faster, too, though part of that is that my hardware is somewhat faster.\r\n\r\n![image](https://user-images.githubusercontent.com/1253341/84203485-5c469a00-aa5e-11ea-8e78-807a2b8c5a2e.png)\r\n\r\nThe .vo file generated for the 8 limb case is only 26MB.  Would be interesting to understand why, in contrast, the process still has 4GB of live data in the heap.  Understanding that might lead to further reductions in heap use.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/641599551/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/641603057","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-641603057","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":641603057,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MTYwMzA1Nw==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2020-06-09T21:56:26Z","updated_at":"2020-06-09T21:56:26Z","author_association":"MEMBER","body":"The live data is due to a huge proof state. There are seemingly gazillions of evars with very large contexts, and even though they probably collapse to trivial terms in the end, they do exist transiently.\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/641603057/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/641605907","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-641605907","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":641605907,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MTYwNTkwNw==","user":{"login":"jfehrle","id":1253341,"node_id":"MDQ6VXNlcjEyNTMzNDE=","avatar_url":"https://avatars.githubusercontent.com/u/1253341?v=4","gravatar_id":"","url":"https://api.github.com/users/jfehrle","html_url":"https://github.com/jfehrle","followers_url":"https://api.github.com/users/jfehrle/followers","following_url":"https://api.github.com/users/jfehrle/following{/other_user}","gists_url":"https://api.github.com/users/jfehrle/gists{/gist_id}","starred_url":"https://api.github.com/users/jfehrle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jfehrle/subscriptions","organizations_url":"https://api.github.com/users/jfehrle/orgs","repos_url":"https://api.github.com/users/jfehrle/repos","events_url":"https://api.github.com/users/jfehrle/events{/privacy}","received_events_url":"https://api.github.com/users/jfehrle/received_events","type":"User","site_admin":false},"created_at":"2020-06-09T22:03:52Z","updated_at":"2020-06-09T22:04:00Z","author_association":"CONTRIBUTOR","body":"When are those evars released?  Are they there even after the proof has ended with `Defined` or `Qed`, `Optimize Heap` and `Optimize Proof`?  An easy experiment.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/641605907/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/641606277","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-641606277","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":641606277,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MTYwNjI3Nw==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2020-06-09T22:04:46Z","updated_at":"2020-06-09T22:04:46Z","author_association":"MEMBER","body":"They are collected after `Qed`, `Defined` and `Optimize Proof`.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/641606277/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/641606655","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-641606655","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":641606655,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MTYwNjY1NQ==","user":{"login":"jfehrle","id":1253341,"node_id":"MDQ6VXNlcjEyNTMzNDE=","avatar_url":"https://avatars.githubusercontent.com/u/1253341?v=4","gravatar_id":"","url":"https://api.github.com/users/jfehrle","html_url":"https://github.com/jfehrle","followers_url":"https://api.github.com/users/jfehrle/followers","following_url":"https://api.github.com/users/jfehrle/following{/other_user}","gists_url":"https://api.github.com/users/jfehrle/gists{/gist_id}","starred_url":"https://api.github.com/users/jfehrle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jfehrle/subscriptions","organizations_url":"https://api.github.com/users/jfehrle/orgs","repos_url":"https://api.github.com/users/jfehrle/repos","events_url":"https://api.github.com/users/jfehrle/events{/privacy}","received_events_url":"https://api.github.com/users/jfehrle/received_events","type":"User","site_admin":false},"created_at":"2020-06-09T22:05:48Z","updated_at":"2020-06-09T22:05:48Z","author_association":"CONTRIBUTOR","body":"The numbers I gave are already after `Defined`.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/641606655/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/641607774","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-641607774","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":641607774,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MTYwNzc3NA==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2020-06-09T22:08:43Z","updated_at":"2020-06-09T22:08:43Z","author_association":"MEMBER","body":"I don't know what the GC considers \"live\" at this point, it might be that this data is still considered reachable because the GC has not performed a traversal of the memory graph yet. You could try forcing this with `Optimize Heap` after the `Defined` command to see whether it reclaims more memory.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/641607774/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/641611700","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-641611700","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":641611700,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MTYxMTcwMA==","user":{"login":"jfehrle","id":1253341,"node_id":"MDQ6VXNlcjEyNTMzNDE=","avatar_url":"https://avatars.githubusercontent.com/u/1253341?v=4","gravatar_id":"","url":"https://api.github.com/users/jfehrle","html_url":"https://github.com/jfehrle","followers_url":"https://api.github.com/users/jfehrle/followers","following_url":"https://api.github.com/users/jfehrle/following{/other_user}","gists_url":"https://api.github.com/users/jfehrle/gists{/gist_id}","starred_url":"https://api.github.com/users/jfehrle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jfehrle/subscriptions","organizations_url":"https://api.github.com/users/jfehrle/orgs","repos_url":"https://api.github.com/users/jfehrle/repos","events_url":"https://api.github.com/users/jfehrle/events{/privacy}","received_events_url":"https://api.github.com/users/jfehrle/received_events","type":"User","site_admin":false},"created_at":"2020-06-09T22:19:54Z","updated_at":"2020-06-09T22:55:06Z","author_association":"CONTRIBUTOR","body":"This is the 5 nlimb case.  The GC reduces the live data by almost half, but it's still 773MB while the .vo file is only 8 MB.  That seems like a lot.\r\n\r\n```\r\nminor words: 47129288418.\r\npromoted words: 230099690.\r\nmajor words: 278512323.\r\nminor_collections: 1427\r\nmajor_collections: 6\r\nheap_words: 236036608\r\nheap_chunks: 43\r\nlive_words: 187979097\r\nlive_blocks: 57873144\r\nfree_words: 47998176\r\nfree_blocks: 236544\r\nlargest_free: 16158437\r\nfragments: 59335\r\ncompactions: 0\r\ntop_heap_words: 236036608\r\nstack_size: 176\r\n\r\n(GC here)\r\n\r\nminor words: 47129351632.\r\npromoted words: 230101705.\r\nmajor words: 278514338.\r\nminor_collections: 1429\r\nmajor_collections: 8\r\nheap_words: 223497216\r\nheap_chunks: 21\r\nlive_words: 101353755\r\nlive_blocks: 33816493\r\nfree_words: 122143460\r\nfree_blocks: 17\r\nlargest_free: 17331940\r\nfragments: 1\r\ncompactions: 1\r\ntop_heap_words: 236036608\r\nstack_size: 176\r\n```","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/641611700/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/641623177","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-641623177","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":641623177,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MTYyMzE3Nw==","user":{"login":"jfehrle","id":1253341,"node_id":"MDQ6VXNlcjEyNTMzNDE=","avatar_url":"https://avatars.githubusercontent.com/u/1253341?v=4","gravatar_id":"","url":"https://api.github.com/users/jfehrle","html_url":"https://github.com/jfehrle","followers_url":"https://api.github.com/users/jfehrle/followers","following_url":"https://api.github.com/users/jfehrle/following{/other_user}","gists_url":"https://api.github.com/users/jfehrle/gists{/gist_id}","starred_url":"https://api.github.com/users/jfehrle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jfehrle/subscriptions","organizations_url":"https://api.github.com/users/jfehrle/orgs","repos_url":"https://api.github.com/users/jfehrle/repos","events_url":"https://api.github.com/users/jfehrle/events{/privacy}","received_events_url":"https://api.github.com/users/jfehrle/received_events","type":"User","site_admin":false},"created_at":"2020-06-09T22:55:39Z","updated_at":"2020-06-09T22:55:39Z","author_association":"CONTRIBUTOR","body":"Math is hard.  It's actually 773MB after GC.  That seems fishy.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/641623177/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/641644318","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-641644318","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":641644318,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MTY0NDMxOA==","user":{"login":"jfehrle","id":1253341,"node_id":"MDQ6VXNlcjEyNTMzNDE=","avatar_url":"https://avatars.githubusercontent.com/u/1253341?v=4","gravatar_id":"","url":"https://api.github.com/users/jfehrle","html_url":"https://github.com/jfehrle","followers_url":"https://api.github.com/users/jfehrle/followers","following_url":"https://api.github.com/users/jfehrle/following{/other_user}","gists_url":"https://api.github.com/users/jfehrle/gists{/gist_id}","starred_url":"https://api.github.com/users/jfehrle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jfehrle/subscriptions","organizations_url":"https://api.github.com/users/jfehrle/orgs","repos_url":"https://api.github.com/users/jfehrle/repos","events_url":"https://api.github.com/users/jfehrle/events{/privacy}","received_events_url":"https://api.github.com/users/jfehrle/received_events","type":"User","site_admin":false},"created_at":"2020-06-10T00:10:37Z","updated_at":"2020-06-10T00:10:37Z","author_association":"CONTRIBUTOR","body":"Updated to show post-GC live and heap words.  The GC doesn't reduce the heap size that much.  And probably there's nothing that tries to keep the free space to a sensible size.\r\n\r\nTo address this, perhaps we could set an alarm function for major collections with Gc.create_alarm.  It could look at the stats and call Gc.set to make the heap smaller.  The 8 nlimbs did 13 major collections while 2 limbs did 4 collections.  Maybe have a command or tactic to cut back the heap size.  WDYT?\r\n\r\n![image](https://user-images.githubusercontent.com/1253341/84212805-bbfb7000-aa73-11ea-9b4a-11674a4ae95d.png)\r\n\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/641644318/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/641709936","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-641709936","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":641709936,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MTcwOTkzNg==","user":{"login":"jfehrle","id":1253341,"node_id":"MDQ6VXNlcjEyNTMzNDE=","avatar_url":"https://avatars.githubusercontent.com/u/1253341?v=4","gravatar_id":"","url":"https://api.github.com/users/jfehrle","html_url":"https://github.com/jfehrle","followers_url":"https://api.github.com/users/jfehrle/followers","following_url":"https://api.github.com/users/jfehrle/following{/other_user}","gists_url":"https://api.github.com/users/jfehrle/gists{/gist_id}","starred_url":"https://api.github.com/users/jfehrle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jfehrle/subscriptions","organizations_url":"https://api.github.com/users/jfehrle/orgs","repos_url":"https://api.github.com/users/jfehrle/repos","events_url":"https://api.github.com/users/jfehrle/events{/privacy}","received_events_url":"https://api.github.com/users/jfehrle/received_events","type":"User","site_admin":false},"created_at":"2020-06-10T04:16:17Z","updated_at":"2020-06-10T04:16:17Z","author_association":"CONTRIBUTOR","body":"@JasonGross What's the incantation needed to run this file, which is in the montgomery64_2e511m187_8limbs directory?  I want to compare the size in this case to the size after processing femul.v.\r\n\r\n```\r\nRequire Import (*Specific.montgomery64_2e511m187_8limbs.*)Femul\r\n\r\nOptimize Heap.\r\nPrint Debug GC.\r\n```","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/641709936/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/641711581","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-641711581","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":641711581,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MTcxMTU4MQ==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2020-06-10T04:22:44Z","updated_at":"2020-06-10T04:22:44Z","author_association":"MEMBER","body":"The way to write the file is\r\n```coq\r\nRequire Import Crypto.Specific.montgomery64_2e511m187_8limbs.femul.\r\n\r\nOptimize Heap.\r\nPrint Debug GC.\r\n```\r\nIf you've already built the .vo file, the incantation is\r\n```bash\r\nCOQPATH=$(pwd)/coqprime/src ${COQBIN}coqc -q -R src Crypto -R bbv/src/bbv bbv $file_name.v\r\n```","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/641711581/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/641717714","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-641717714","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":641717714,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MTcxNzcxNA==","user":{"login":"jfehrle","id":1253341,"node_id":"MDQ6VXNlcjEyNTMzNDE=","avatar_url":"https://avatars.githubusercontent.com/u/1253341?v=4","gravatar_id":"","url":"https://api.github.com/users/jfehrle","html_url":"https://github.com/jfehrle","followers_url":"https://api.github.com/users/jfehrle/followers","following_url":"https://api.github.com/users/jfehrle/following{/other_user}","gists_url":"https://api.github.com/users/jfehrle/gists{/gist_id}","starred_url":"https://api.github.com/users/jfehrle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jfehrle/subscriptions","organizations_url":"https://api.github.com/users/jfehrle/orgs","repos_url":"https://api.github.com/users/jfehrle/repos","events_url":"https://api.github.com/users/jfehrle/events{/privacy}","received_events_url":"https://api.github.com/users/jfehrle/received_events","type":"User","site_admin":false},"created_at":"2020-06-10T04:46:09Z","updated_at":"2020-06-10T05:20:06Z","author_association":"CONTRIBUTOR","body":"Got it, thanks.  For that file, heap = 40019968 words, live = 38057975, about 1/20th the heap and 1/10th the live memory compared to the process that compiled `femul.v` (all post-GC).  Better evidence that Coq retains memory it doesn't need after a proof.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/641717714/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/641722270","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-641722270","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":641722270,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MTcyMjI3MA==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2020-06-10T05:01:05Z","updated_at":"2020-06-10T05:01:15Z","author_association":"MEMBER","body":"Is some of it for backtracking?  Or is it a leak?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/641722270/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/641729908","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-641729908","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":641729908,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MTcyOTkwOA==","user":{"login":"jfehrle","id":1253341,"node_id":"MDQ6VXNlcjEyNTMzNDE=","avatar_url":"https://avatars.githubusercontent.com/u/1253341?v=4","gravatar_id":"","url":"https://api.github.com/users/jfehrle","html_url":"https://github.com/jfehrle","followers_url":"https://api.github.com/users/jfehrle/followers","following_url":"https://api.github.com/users/jfehrle/following{/other_user}","gists_url":"https://api.github.com/users/jfehrle/gists{/gist_id}","starred_url":"https://api.github.com/users/jfehrle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jfehrle/subscriptions","organizations_url":"https://api.github.com/users/jfehrle/orgs","repos_url":"https://api.github.com/users/jfehrle/repos","events_url":"https://api.github.com/users/jfehrle/events{/privacy}","received_events_url":"https://api.github.com/users/jfehrle/received_events","type":"User","site_admin":false},"created_at":"2020-06-10T05:25:38Z","updated_at":"2020-06-10T05:26:38Z","author_association":"CONTRIBUTOR","body":"Dunno.  TBD.  Let's see if @ppedrot has any ideas.  If not, then we try the memory profiling tool and see what we can figure out.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/641729908/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/641734369","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-641734369","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":641734369,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MTczNDM2OQ==","user":{"login":"jfehrle","id":1253341,"node_id":"MDQ6VXNlcjEyNTMzNDE=","avatar_url":"https://avatars.githubusercontent.com/u/1253341?v=4","gravatar_id":"","url":"https://api.github.com/users/jfehrle","html_url":"https://github.com/jfehrle","followers_url":"https://api.github.com/users/jfehrle/followers","following_url":"https://api.github.com/users/jfehrle/following{/other_user}","gists_url":"https://api.github.com/users/jfehrle/gists{/gist_id}","starred_url":"https://api.github.com/users/jfehrle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jfehrle/subscriptions","organizations_url":"https://api.github.com/users/jfehrle/orgs","repos_url":"https://api.github.com/users/jfehrle/repos","events_url":"https://api.github.com/users/jfehrle/events{/privacy}","received_events_url":"https://api.github.com/users/jfehrle/received_events","type":"User","site_admin":false},"created_at":"2020-06-10T05:38:49Z","updated_at":"2020-06-10T05:51:52Z","author_association":"CONTRIBUTOR","body":"_Wandering off topic_: it looks like there's considerable repetition within the proof term.  It would be interesting to apply classic common subexpression elimination to the proof term and see how much smaller it gets.  If it's significant, that would reduce memory use for anything importing the proof and I expect it would type-check faster.  Indeed, it might be applied in the middle of a long proof.  Maybe more human-readable, too.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/641734369/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/642047499","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-642047499","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":642047499,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MjA0NzQ5OQ==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2020-06-10T14:29:21Z","updated_at":"2020-06-10T14:29:21Z","author_association":"MEMBER","body":"Nothing suspicious from what I can see. It's expected that loading a vo takes more memory than its on-disk representation.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/642047499/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/642305707","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-642305707","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":642305707,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MjMwNTcwNw==","user":{"login":"jfehrle","id":1253341,"node_id":"MDQ6VXNlcjEyNTMzNDE=","avatar_url":"https://avatars.githubusercontent.com/u/1253341?v=4","gravatar_id":"","url":"https://api.github.com/users/jfehrle","html_url":"https://github.com/jfehrle","followers_url":"https://api.github.com/users/jfehrle/followers","following_url":"https://api.github.com/users/jfehrle/following{/other_user}","gists_url":"https://api.github.com/users/jfehrle/gists{/gist_id}","starred_url":"https://api.github.com/users/jfehrle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jfehrle/subscriptions","organizations_url":"https://api.github.com/users/jfehrle/orgs","repos_url":"https://api.github.com/users/jfehrle/repos","events_url":"https://api.github.com/users/jfehrle/events{/privacy}","received_events_url":"https://api.github.com/users/jfehrle/received_events","type":"User","site_admin":false},"created_at":"2020-06-10T22:43:44Z","updated_at":"2020-06-10T22:43:44Z","author_association":"CONTRIBUTOR","body":"@JasonGross BTW, \"make clean\" misses a few spots:\r\n\r\n```\r\n/mnt/c/proj/fiat-crypto$ find . -name \"*.vo\"\r\n./coqprime/src/Coqprime/List/Iterator.vo\r\n./coqprime/src/Coqprime/List/ListAux.vo\r\n./coqprime/src/Coqprime/List/Permutation.vo\r\n./coqprime/src/Coqprime/List/UList.vo\r\n./coqprime/src/Coqprime/List/ZProgression.vo\r\n./coqprime/src/Coqprime/N/NatAux.vo\r\n./coqprime/src/Coqprime/PrimalityTest/Cyclic.vo\r\n./coqprime/src/Coqprime/PrimalityTest/EGroup.vo\r\n./coqprime/src/Coqprime/PrimalityTest/Euler.vo\r\n./coqprime/src/Coqprime/PrimalityTest/FGroup.vo\r\n./coqprime/src/Coqprime/PrimalityTest/IGroup.vo\r\n./coqprime/src/Coqprime/PrimalityTest/Lagrange.vo\r\n./coqprime/src/Coqprime/PrimalityTest/Root.vo\r\n./coqprime/src/Coqprime/PrimalityTest/Zp.vo\r\n./coqprime/src/Coqprime/Tactic/Tactic.vo\r\n./coqprime/src/Coqprime/Z/ZCAux.vo\r\n./coqprime/src/Coqprime/Z/ZSum.vo\r\n./src/Specific/montgomery64_2e511m187_8limbs/jim.vo\r\n```","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/642305707/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/642310079","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-642310079","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":642310079,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MjMxMDA3OQ==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2020-06-10T22:58:09Z","updated_at":"2020-06-10T22:58:09Z","author_association":"MEMBER","body":"You want `make cleanall` to also clean the coqprime dependency I believe.  It also doesn't clean vo files that aren't tracked / part of the project.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/642310079/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/642367511","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-642367511","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":642367511,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MjM2NzUxMQ==","user":{"login":"jfehrle","id":1253341,"node_id":"MDQ6VXNlcjEyNTMzNDE=","avatar_url":"https://avatars.githubusercontent.com/u/1253341?v=4","gravatar_id":"","url":"https://api.github.com/users/jfehrle","html_url":"https://github.com/jfehrle","followers_url":"https://api.github.com/users/jfehrle/followers","following_url":"https://api.github.com/users/jfehrle/following{/other_user}","gists_url":"https://api.github.com/users/jfehrle/gists{/gist_id}","starred_url":"https://api.github.com/users/jfehrle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jfehrle/subscriptions","organizations_url":"https://api.github.com/users/jfehrle/orgs","repos_url":"https://api.github.com/users/jfehrle/repos","events_url":"https://api.github.com/users/jfehrle/events{/privacy}","received_events_url":"https://api.github.com/users/jfehrle/received_events","type":"User","site_admin":false},"created_at":"2020-06-11T02:28:19Z","updated_at":"2020-06-12T16:14:29Z","author_association":"CONTRIBUTOR","body":"@ppedrot I ran memprof for the 4 largest cases.  The 8 nlimbs case looks most interesting.\r\nMy code writes the stats upon process exit, which is after an `Optimize Heap`.  That led to several profiles in each file.  The last one should be `femul.v`.  This is on your `share-val-context-new-evar` branch.  Let us know what you see, thanks.\r\n\r\n[prof_5.txt](https://github.com/coq/coq/files/4762159/prof_5.txt)\r\n[prof_6.txt](https://github.com/coq/coq/files/4762156/prof_6.txt)\r\n[prof_7.txt](https://github.com/coq/coq/files/4762157/prof_7.txt)\r\n[prof_8.txt](https://github.com/coq/coq/files/4762158/prof_8.txt)\r\n\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/642367511/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/642493038","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-642493038","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":642493038,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MjQ5MzAzOA==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2020-06-11T08:23:46Z","updated_at":"2020-06-11T08:23:46Z","author_association":"MEMBER","body":"@jfehrle It's definitely weird, since the two top memory contributors shouldn't be there. They correspond to evar instances, so at that point of the program the should have been collected. There is probably some way to reach them via STM data structures or some future? I need more dynamic analysis to understand what's going on.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/642493038/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/643015003","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-643015003","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":643015003,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MzAxNTAwMw==","user":{"login":"jfehrle","id":1253341,"node_id":"MDQ6VXNlcjEyNTMzNDE=","avatar_url":"https://avatars.githubusercontent.com/u/1253341?v=4","gravatar_id":"","url":"https://api.github.com/users/jfehrle","html_url":"https://github.com/jfehrle","followers_url":"https://api.github.com/users/jfehrle/followers","following_url":"https://api.github.com/users/jfehrle/following{/other_user}","gists_url":"https://api.github.com/users/jfehrle/gists{/gist_id}","starred_url":"https://api.github.com/users/jfehrle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jfehrle/subscriptions","organizations_url":"https://api.github.com/users/jfehrle/orgs","repos_url":"https://api.github.com/users/jfehrle/repos","events_url":"https://api.github.com/users/jfehrle/events{/privacy}","received_events_url":"https://api.github.com/users/jfehrle/received_events","type":"User","site_admin":false},"created_at":"2020-06-12T01:30:27Z","updated_at":"2020-06-12T01:30:27Z","author_association":"CONTRIBUTOR","body":"> There is probably some way to reach them via STM data structures or some future?\r\n\r\nWhat do you mean by \"future\"?\r\n\r\nI took a look at Stm.VCS.vcs.  It still has an entry for each sentence in the .v file.  I don't see why it has this for `coqc`.\r\n\r\nI marshaled !vcs at the end of the process for a couple cases (admittedly crude).  There's considerable data there, but not nearly enough to explain everything.  And the growth rate across cases doesn't fit. \r\n That seemed like the main data structure in Stm.\r\n\r\n![image](https://user-images.githubusercontent.com/1253341/84454801-73c58480-ac10-11ea-9e77-75ec788e994f.png)\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/643015003/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/643039349","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-643039349","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":643039349,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MzAzOTM0OQ==","user":{"login":"jfehrle","id":1253341,"node_id":"MDQ6VXNlcjEyNTMzNDE=","avatar_url":"https://avatars.githubusercontent.com/u/1253341?v=4","gravatar_id":"","url":"https://api.github.com/users/jfehrle","html_url":"https://github.com/jfehrle","followers_url":"https://api.github.com/users/jfehrle/followers","following_url":"https://api.github.com/users/jfehrle/following{/other_user}","gists_url":"https://api.github.com/users/jfehrle/gists{/gist_id}","starred_url":"https://api.github.com/users/jfehrle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jfehrle/subscriptions","organizations_url":"https://api.github.com/users/jfehrle/orgs","repos_url":"https://api.github.com/users/jfehrle/repos","events_url":"https://api.github.com/users/jfehrle/events{/privacy}","received_events_url":"https://api.github.com/users/jfehrle/received_events","type":"User","site_admin":false},"created_at":"2020-06-12T03:06:51Z","updated_at":"2020-06-12T03:06:51Z","author_association":"CONTRIBUTOR","body":"> I need more dynamic analysis to understand what's going on.\r\n\r\nIf you send me code I'll try it.  The setup takes a long time: each time I change Coq, it takes 25 minutes to rebuild Jason's code.  (There must be a way to disable Coq's version check but I haven't looked for it yet.)","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/643039349/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/643192297","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-643192297","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":643192297,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MzE5MjI5Nw==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2020-06-12T10:10:27Z","updated_at":"2020-06-12T10:10:27Z","author_association":"MEMBER","body":"I confirm that in the above examples, the evar instances are not released by the GC despite a call to `Gc.compact`. I thought at first I might have misread the callstacks and that the remaining memory would refer to the instance variables, which would have been possible since these variables may remain in the proof term. But according to my analysis, the evar instance *lists* are still reachable, which is very wrong. I have no idea about what is still making them reachable though, and little clue to track this.\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/643192297/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/643213250","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-643213250","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":643213250,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MzIxMzI1MA==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2020-06-12T11:05:58Z","updated_at":"2020-06-12T11:05:58Z","author_association":"MEMBER","body":"New suspect: the VM compilation which happily uses global references *because we can*.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/643213250/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/643249744","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-643249744","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":643249744,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MzI0OTc0NA==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2020-06-12T12:41:36Z","updated_at":"2020-06-12T12:41:36Z","author_association":"MEMBER","body":"The following snippet reliably generates a dangling evar instance:\r\n```\r\nDefinition sigT_eta {A P} (p : @sigT A P)\r\n  : p = existT _ (projT1 p) (projT2 p).\r\nProof. Admitted.\r\n```\r\nNote that proving the definition with either `Defined` or `Qed` still leaks the instance, while using `Axiom` instead correctly collect it after its generation. I am puzzled.\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/643249744/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/643264366","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-643264366","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":643264366,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MzI2NDM2Ng==","user":{"login":"SkySkimmer","id":2461932,"node_id":"MDQ6VXNlcjI0NjE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/2461932?v=4","gravatar_id":"","url":"https://api.github.com/users/SkySkimmer","html_url":"https://github.com/SkySkimmer","followers_url":"https://api.github.com/users/SkySkimmer/followers","following_url":"https://api.github.com/users/SkySkimmer/following{/other_user}","gists_url":"https://api.github.com/users/SkySkimmer/gists{/gist_id}","starred_url":"https://api.github.com/users/SkySkimmer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SkySkimmer/subscriptions","organizations_url":"https://api.github.com/users/SkySkimmer/orgs","repos_url":"https://api.github.com/users/SkySkimmer/repos","events_url":"https://api.github.com/users/SkySkimmer/events{/privacy}","received_events_url":"https://api.github.com/users/SkySkimmer/received_events","type":"User","site_admin":false},"created_at":"2020-06-12T13:14:57Z","updated_at":"2020-06-12T13:14:57Z","author_association":"CONTRIBUTOR","body":"If I hack constr.ml so that \r\n~~~ocaml\r\nlet mkEvar (e,i) =\r\n  match i with\r\n  | [] -> Evar (e,i)\r\n  | x::l ->\r\n    let l = x :: l in\r\n    Printf.eprintf \"[push\\n\";\r\n    Gc.finalise (fun _ -> Printf.eprintf \"pop]\\n\") l;\r\n    Evar (e,l)\r\n~~~\r\nand make `of_kind` go through it, on \r\n~~~coq\r\nLemma foo (n:nat) : nat. Proof. Abort.\r\nLemma foo (n:nat) : nat. Proof. exact n. Defined.\r\nLemma bar : nat -> nat. Proof. intros n;exact n. Defined.\r\nOptimize Heap.\r\n~~~\r\n(using coqc so no cache)\r\nI get \r\n~~~\r\n[push\r\n[push\r\n[push\r\npop]\r\n~~~\r\nThe 2 dangling `push` are for the 2 `foo`.\r\n\r\nIf I do instead \r\n~~~ocaml\r\nlet mkEvar e =\r\n  let t = Evar e in\r\n  Printf.eprintf \"[push\\n\";\r\n  Gc.finalise (fun _ -> Printf.eprintf \"pop]\\n\") t;\r\n  t\r\n~~~\r\nI get an extra dangling `push` for each lemma (including for `bar`).\r\n\r\nI guess something keeps the starting info of open lemmas around even after they close.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/643264366/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/643287522","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-643287522","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":643287522,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MzI4NzUyMg==","user":{"login":"ejgallego","id":7192257,"node_id":"MDQ6VXNlcjcxOTIyNTc=","avatar_url":"https://avatars.githubusercontent.com/u/7192257?v=4","gravatar_id":"","url":"https://api.github.com/users/ejgallego","html_url":"https://github.com/ejgallego","followers_url":"https://api.github.com/users/ejgallego/followers","following_url":"https://api.github.com/users/ejgallego/following{/other_user}","gists_url":"https://api.github.com/users/ejgallego/gists{/gist_id}","starred_url":"https://api.github.com/users/ejgallego/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ejgallego/subscriptions","organizations_url":"https://api.github.com/users/ejgallego/orgs","repos_url":"https://api.github.com/users/ejgallego/repos","events_url":"https://api.github.com/users/ejgallego/events{/privacy}","received_events_url":"https://api.github.com/users/ejgallego/received_events","type":"User","site_admin":false},"created_at":"2020-06-12T14:04:03Z","updated_at":"2020-06-12T14:04:03Z","author_association":"MEMBER","body":"Not likely but some object stored in `Summary` could be culprit.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/643287522/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/643307749","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-643307749","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":643307749,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MzMwNzc0OQ==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2020-06-12T14:41:01Z","updated_at":"2020-06-12T14:41:01Z","author_association":"MEMBER","body":"After a careful analysis, it turns out that the STM keeps a pointer to the global state of Coq at the entrance of every single proof, seemingly to allow a faster `Undo`. No wonder why we are eating a crapload of memory...","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/643307749/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/643313366","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-643313366","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":643313366,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MzMxMzM2Ng==","user":{"login":"ejgallego","id":7192257,"node_id":"MDQ6VXNlcjcxOTIyNTc=","avatar_url":"https://avatars.githubusercontent.com/u/7192257?v=4","gravatar_id":"","url":"https://api.github.com/users/ejgallego","html_url":"https://github.com/ejgallego","followers_url":"https://api.github.com/users/ejgallego/followers","following_url":"https://api.github.com/users/ejgallego/following{/other_user}","gists_url":"https://api.github.com/users/ejgallego/gists{/gist_id}","starred_url":"https://api.github.com/users/ejgallego/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ejgallego/subscriptions","organizations_url":"https://api.github.com/users/ejgallego/orgs","repos_url":"https://api.github.com/users/ejgallego/repos","events_url":"https://api.github.com/users/ejgallego/events{/privacy}","received_events_url":"https://api.github.com/users/ejgallego/received_events","type":"User","site_admin":false},"created_at":"2020-06-12T14:50:38Z","updated_at":"2020-06-12T14:51:05Z","author_association":"MEMBER","body":"Maybe this very simple compiler can be of help to debug stuff https://github.com/ejgallego/coq/tree/simple_compiler\r\n\r\nIt is as minimal as it can get.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/643313366/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/643316254","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-643316254","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":643316254,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MzMxNjI1NA==","user":{"login":"ejgallego","id":7192257,"node_id":"MDQ6VXNlcjcxOTIyNTc=","avatar_url":"https://avatars.githubusercontent.com/u/7192257?v=4","gravatar_id":"","url":"https://api.github.com/users/ejgallego","html_url":"https://github.com/ejgallego","followers_url":"https://api.github.com/users/ejgallego/followers","following_url":"https://api.github.com/users/ejgallego/following{/other_user}","gists_url":"https://api.github.com/users/ejgallego/gists{/gist_id}","starred_url":"https://api.github.com/users/ejgallego/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ejgallego/subscriptions","organizations_url":"https://api.github.com/users/ejgallego/orgs","repos_url":"https://api.github.com/users/ejgallego/repos","events_url":"https://api.github.com/users/ejgallego/events{/privacy}","received_events_url":"https://api.github.com/users/ejgallego/received_events","type":"User","site_admin":false},"created_at":"2020-06-12T14:55:08Z","updated_at":"2020-06-12T14:55:08Z","author_association":"MEMBER","body":"By the way I did experiments in the past with such simple compilers as to see if there was an speedup, I didn't measure one so moved on, but indeed didn't check memory use.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/643316254/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/643331071","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-643331071","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":643331071,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MzMzMTA3MQ==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2020-06-12T15:20:10Z","updated_at":"2020-06-12T15:20:10Z","author_association":"MEMBER","body":"@ejgallego unfortunately the simple compiler is too simple for this test, I need to be able to add loadpaths to coqc...","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/643331071/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/643345047","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-643345047","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":643345047,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MzM0NTA0Nw==","user":{"login":"ejgallego","id":7192257,"node_id":"MDQ6VXNlcjcxOTIyNTc=","avatar_url":"https://avatars.githubusercontent.com/u/7192257?v=4","gravatar_id":"","url":"https://api.github.com/users/ejgallego","html_url":"https://github.com/ejgallego","followers_url":"https://api.github.com/users/ejgallego/followers","following_url":"https://api.github.com/users/ejgallego/following{/other_user}","gists_url":"https://api.github.com/users/ejgallego/gists{/gist_id}","starred_url":"https://api.github.com/users/ejgallego/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ejgallego/subscriptions","organizations_url":"https://api.github.com/users/ejgallego/orgs","repos_url":"https://api.github.com/users/ejgallego/repos","events_url":"https://api.github.com/users/ejgallego/events{/privacy}","received_events_url":"https://api.github.com/users/ejgallego/received_events","type":"User","site_admin":false},"created_at":"2020-06-12T15:48:28Z","updated_at":"2020-06-12T15:48:28Z","author_association":"MEMBER","body":"Let me fix that in a sec.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/643345047/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/643380116","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-643380116","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":643380116,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MzM4MDExNg==","user":{"login":"ejgallego","id":7192257,"node_id":"MDQ6VXNlcjcxOTIyNTc=","avatar_url":"https://avatars.githubusercontent.com/u/7192257?v=4","gravatar_id":"","url":"https://api.github.com/users/ejgallego","html_url":"https://github.com/ejgallego","followers_url":"https://api.github.com/users/ejgallego/followers","following_url":"https://api.github.com/users/ejgallego/following{/other_user}","gists_url":"https://api.github.com/users/ejgallego/gists{/gist_id}","starred_url":"https://api.github.com/users/ejgallego/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ejgallego/subscriptions","organizations_url":"https://api.github.com/users/ejgallego/orgs","repos_url":"https://api.github.com/users/ejgallego/repos","events_url":"https://api.github.com/users/ejgallego/events{/privacy}","received_events_url":"https://api.github.com/users/ejgallego/received_events","type":"User","site_admin":false},"created_at":"2020-06-12T16:50:29Z","updated_at":"2020-06-12T16:50:45Z","author_association":"MEMBER","body":"Sorry @ppedrot , I got a call just while I was doing this, commit pushed.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/643380116/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/643382312","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-643382312","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":643382312,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MzM4MjMxMg==","user":{"login":"ejgallego","id":7192257,"node_id":"MDQ6VXNlcjcxOTIyNTc=","avatar_url":"https://avatars.githubusercontent.com/u/7192257?v=4","gravatar_id":"","url":"https://api.github.com/users/ejgallego","html_url":"https://github.com/ejgallego","followers_url":"https://api.github.com/users/ejgallego/followers","following_url":"https://api.github.com/users/ejgallego/following{/other_user}","gists_url":"https://api.github.com/users/ejgallego/gists{/gist_id}","starred_url":"https://api.github.com/users/ejgallego/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ejgallego/subscriptions","organizations_url":"https://api.github.com/users/ejgallego/orgs","repos_url":"https://api.github.com/users/ejgallego/repos","events_url":"https://api.github.com/users/ejgallego/events{/privacy}","received_events_url":"https://api.github.com/users/ejgallego/received_events","type":"User","site_admin":false},"created_at":"2020-06-12T16:55:21Z","updated_at":"2020-06-12T16:55:21Z","author_association":"MEMBER","body":"On the more general issue of `coqc` , indeed I identified problems of this kind in the past, unfortunately I could not see simple fix other than rewriting the Stm , as the uses of large closures there is pervasive so it is hard to track what is going on.\r\n\r\nOne has indeed to be very careful in the DM w.r.t. caching, memory use, etc...","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/643382312/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/643619185","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-643619185","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":643619185,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MzYxOTE4NQ==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2020-06-13T12:48:21Z","updated_at":"2020-06-13T12:48:21Z","author_association":"MEMBER","body":"So the simple coqc didn't help, these evar instances are still reachable somehow even when dropping the STM cache...","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/643619185/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/643620689","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-643620689","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":643620689,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MzYyMDY4OQ==","user":{"login":"ejgallego","id":7192257,"node_id":"MDQ6VXNlcjcxOTIyNTc=","avatar_url":"https://avatars.githubusercontent.com/u/7192257?v=4","gravatar_id":"","url":"https://api.github.com/users/ejgallego","html_url":"https://github.com/ejgallego","followers_url":"https://api.github.com/users/ejgallego/followers","following_url":"https://api.github.com/users/ejgallego/following{/other_user}","gists_url":"https://api.github.com/users/ejgallego/gists{/gist_id}","starred_url":"https://api.github.com/users/ejgallego/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ejgallego/subscriptions","organizations_url":"https://api.github.com/users/ejgallego/orgs","repos_url":"https://api.github.com/users/ejgallego/repos","events_url":"https://api.github.com/users/ejgallego/events{/privacy}","received_events_url":"https://api.github.com/users/ejgallego/received_events","type":"User","site_admin":false},"created_at":"2020-06-13T13:01:16Z","updated_at":"2020-06-13T13:01:16Z","author_association":"MEMBER","body":"> So the simple coqc didn't help, these evar instances are still reachable somehow even when dropping the STM cache...\r\n\r\nAha, interesting; thanks for the info. We still need to be sure that `cloop` is tail recursive, and the GC is properly triggered. Next step is Libobject / Summary. What does OCaml report the size of the `st` structure (of type `Vernacstate.t`) to be?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/643620689/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/643621910","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-643621910","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":643621910,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MzYyMTkxMA==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2020-06-13T13:11:30Z","updated_at":"2020-06-13T13:11:30Z","author_association":"MEMBER","body":"From your code it's fairly obvious that `cloop` is tail-rec, isn't it? Furthermore, I called the GC in two places, once by hand in Coq with `Optimize Heap` and the second time with an `at_exit` ML callback before tracing the remaining live instances. It took a bit of time so I am fairly sure it was triggered not once but actually twice.\r\n\r\nAs for the size of the vernacstate, I am not sure about which global entry you're referring to?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/643621910/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/643621961","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-643621961","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":643621961,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MzYyMTk2MQ==","user":{"login":"ejgallego","id":7192257,"node_id":"MDQ6VXNlcjcxOTIyNTc=","avatar_url":"https://avatars.githubusercontent.com/u/7192257?v=4","gravatar_id":"","url":"https://api.github.com/users/ejgallego","html_url":"https://github.com/ejgallego","followers_url":"https://api.github.com/users/ejgallego/followers","following_url":"https://api.github.com/users/ejgallego/following{/other_user}","gists_url":"https://api.github.com/users/ejgallego/gists{/gist_id}","starred_url":"https://api.github.com/users/ejgallego/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ejgallego/subscriptions","organizations_url":"https://api.github.com/users/ejgallego/orgs","repos_url":"https://api.github.com/users/ejgallego/repos","events_url":"https://api.github.com/users/ejgallego/events{/privacy}","received_events_url":"https://api.github.com/users/ejgallego/received_events","type":"User","site_admin":false},"created_at":"2020-06-13T13:11:55Z","updated_at":"2020-06-13T13:11:55Z","author_association":"MEMBER","body":"I'm gonna push some stats code I have that should print memory consumption for some objects.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/643621961/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/643622134","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-643622134","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":643622134,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MzYyMjEzNA==","user":{"login":"ejgallego","id":7192257,"node_id":"MDQ6VXNlcjcxOTIyNTc=","avatar_url":"https://avatars.githubusercontent.com/u/7192257?v=4","gravatar_id":"","url":"https://api.github.com/users/ejgallego","html_url":"https://github.com/ejgallego","followers_url":"https://api.github.com/users/ejgallego/followers","following_url":"https://api.github.com/users/ejgallego/following{/other_user}","gists_url":"https://api.github.com/users/ejgallego/gists{/gist_id}","starred_url":"https://api.github.com/users/ejgallego/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ejgallego/subscriptions","organizations_url":"https://api.github.com/users/ejgallego/orgs","repos_url":"https://api.github.com/users/ejgallego/repos","events_url":"https://api.github.com/users/ejgallego/events{/privacy}","received_events_url":"https://api.github.com/users/ejgallego/received_events","type":"User","site_admin":false},"created_at":"2020-06-13T13:13:27Z","updated_at":"2020-06-13T13:13:27Z","author_association":"MEMBER","body":"> From your code it's fairly obvious that `cloop` is tail-rec, isn't it? Furthermore, I called the GC in two places, once by hand in Coq with `Optimize Heap` and the second time with an `at_exit` ML callback before tracing the remaining live instances. It took a bit of time so I am fairly sure it was triggered not once but actually twice.\r\n\r\nIndeed, I've added a warning just in case.\r\n\r\n> As for the size of the vernacstate, I am not sure about which global entry you're referring to?\r\n\r\nLook at the newer commit, I'm gonna print more detailed stats to see if something looks off.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/643622134/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/643622387","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-643622387","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":643622387,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MzYyMjM4Nw==","user":{"login":"ejgallego","id":7192257,"node_id":"MDQ6VXNlcjcxOTIyNTc=","avatar_url":"https://avatars.githubusercontent.com/u/7192257?v=4","gravatar_id":"","url":"https://api.github.com/users/ejgallego","html_url":"https://github.com/ejgallego","followers_url":"https://api.github.com/users/ejgallego/followers","following_url":"https://api.github.com/users/ejgallego/following{/other_user}","gists_url":"https://api.github.com/users/ejgallego/gists{/gist_id}","starred_url":"https://api.github.com/users/ejgallego/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ejgallego/subscriptions","organizations_url":"https://api.github.com/users/ejgallego/orgs","repos_url":"https://api.github.com/users/ejgallego/repos","events_url":"https://api.github.com/users/ejgallego/events{/privacy}","received_events_url":"https://api.github.com/users/ejgallego/received_events","type":"User","site_admin":false},"created_at":"2020-06-13T13:15:32Z","updated_at":"2020-06-13T13:15:32Z","author_association":"MEMBER","body":"There are many places an `evar_map` could remain dangling, even in the parsing state.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/643622387/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/643622513","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-643622513","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":643622513,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MzYyMjUxMw==","user":{"login":"ejgallego","id":7192257,"node_id":"MDQ6VXNlcjcxOTIyNTc=","avatar_url":"https://avatars.githubusercontent.com/u/7192257?v=4","gravatar_id":"","url":"https://api.github.com/users/ejgallego","html_url":"https://github.com/ejgallego","followers_url":"https://api.github.com/users/ejgallego/followers","following_url":"https://api.github.com/users/ejgallego/following{/other_user}","gists_url":"https://api.github.com/users/ejgallego/gists{/gist_id}","starred_url":"https://api.github.com/users/ejgallego/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ejgallego/subscriptions","organizations_url":"https://api.github.com/users/ejgallego/orgs","repos_url":"https://api.github.com/users/ejgallego/repos","events_url":"https://api.github.com/users/ejgallego/events{/privacy}","received_events_url":"https://api.github.com/users/ejgallego/received_events","type":"User","site_admin":false},"created_at":"2020-06-13T13:16:35Z","updated_at":"2020-06-13T13:16:35Z","author_association":"MEMBER","body":"But a preliminary run shows:\r\n```\r\n [parsing] mem reach: 23855\r\n [system ] mem reach: 787202\r\n [lemmas ] mem reach: 0\r\n```\r\nSo proof state seems to be correctly collected [my example is a toy one tho]","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/643622513/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/643625103","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-643625103","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":643625103,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MzYyNTEwMw==","user":{"login":"ejgallego","id":7192257,"node_id":"MDQ6VXNlcjcxOTIyNTc=","avatar_url":"https://avatars.githubusercontent.com/u/7192257?v=4","gravatar_id":"","url":"https://api.github.com/users/ejgallego","html_url":"https://github.com/ejgallego","followers_url":"https://api.github.com/users/ejgallego/followers","following_url":"https://api.github.com/users/ejgallego/following{/other_user}","gists_url":"https://api.github.com/users/ejgallego/gists{/gist_id}","starred_url":"https://api.github.com/users/ejgallego/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ejgallego/subscriptions","organizations_url":"https://api.github.com/users/ejgallego/orgs","repos_url":"https://api.github.com/users/ejgallego/repos","events_url":"https://api.github.com/users/ejgallego/events{/privacy}","received_events_url":"https://api.github.com/users/ejgallego/received_events","type":"User","site_admin":false},"created_at":"2020-06-13T13:37:54Z","updated_at":"2020-06-13T13:37:54Z","author_association":"MEMBER","body":"[basic] Libobject stats added, moving on to summary.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/643625103/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/643626532","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-643626532","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":643626532,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MzYyNjUzMg==","user":{"login":"ejgallego","id":7192257,"node_id":"MDQ6VXNlcjcxOTIyNTc=","avatar_url":"https://avatars.githubusercontent.com/u/7192257?v=4","gravatar_id":"","url":"https://api.github.com/users/ejgallego","html_url":"https://github.com/ejgallego","followers_url":"https://api.github.com/users/ejgallego/followers","following_url":"https://api.github.com/users/ejgallego/following{/other_user}","gists_url":"https://api.github.com/users/ejgallego/gists{/gist_id}","starred_url":"https://api.github.com/users/ejgallego/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ejgallego/subscriptions","organizations_url":"https://api.github.com/users/ejgallego/orgs","repos_url":"https://api.github.com/users/ejgallego/repos","events_url":"https://api.github.com/users/ejgallego/events{/privacy}","received_events_url":"https://api.github.com/users/ejgallego/received_events","type":"User","site_admin":false},"created_at":"2020-06-13T13:50:18Z","updated_at":"2020-06-13T13:50:18Z","author_association":"MEMBER","body":"summary stats added.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/643626532/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/646276585","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-646276585","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":646276585,"node_id":"MDEyOklzc3VlQ29tbWVudDY0NjI3NjU4NQ==","user":{"login":"jfehrle","id":1253341,"node_id":"MDQ6VXNlcjEyNTMzNDE=","avatar_url":"https://avatars.githubusercontent.com/u/1253341?v=4","gravatar_id":"","url":"https://api.github.com/users/jfehrle","html_url":"https://github.com/jfehrle","followers_url":"https://api.github.com/users/jfehrle/followers","following_url":"https://api.github.com/users/jfehrle/following{/other_user}","gists_url":"https://api.github.com/users/jfehrle/gists{/gist_id}","starred_url":"https://api.github.com/users/jfehrle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jfehrle/subscriptions","organizations_url":"https://api.github.com/users/jfehrle/orgs","repos_url":"https://api.github.com/users/jfehrle/repos","events_url":"https://api.github.com/users/jfehrle/events{/privacy}","received_events_url":"https://api.github.com/users/jfehrle/received_events","type":"User","site_admin":false},"created_at":"2020-06-18T20:00:12Z","updated_at":"2020-06-18T20:00:12Z","author_association":"CONTRIBUTOR","body":"Is this stuck because we can't tell what variable(s) point to the leaked memory?\r\n\r\nPerhaps we could track it down by:\r\n- Using the address of one of the leaked objects from memprof\r\n- Modifying [`caml-do_roots`](https://github.com/ocaml/ocaml/blob/82f77b8ebd5e96ccbe8aa6d25382c35acb766e41/runtime/roots_nat.c#L399) to identify which root(s) can reach that address.  (And maybe also report how many roots have `reachable_words` over some given threshold to verify that it's only one leak.)\r\n- Working backwards somehow TBD to find the source code line corresponding to that root\r\n\r\nThis is a fair bit of work.  Is it worthwhile/necessary?  If it works, would you be confident you can identify the root cause of the problem?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/646276585/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/646306133","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-646306133","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":646306133,"node_id":"MDEyOklzc3VlQ29tbWVudDY0NjMwNjEzMw==","user":{"login":"jfehrle","id":1253341,"node_id":"MDQ6VXNlcjEyNTMzNDE=","avatar_url":"https://avatars.githubusercontent.com/u/1253341?v=4","gravatar_id":"","url":"https://api.github.com/users/jfehrle","html_url":"https://github.com/jfehrle","followers_url":"https://api.github.com/users/jfehrle/followers","following_url":"https://api.github.com/users/jfehrle/following{/other_user}","gists_url":"https://api.github.com/users/jfehrle/gists{/gist_id}","starred_url":"https://api.github.com/users/jfehrle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jfehrle/subscriptions","organizations_url":"https://api.github.com/users/jfehrle/orgs","repos_url":"https://api.github.com/users/jfehrle/repos","events_url":"https://api.github.com/users/jfehrle/events{/privacy}","received_events_url":"https://api.github.com/users/jfehrle/received_events","type":"User","site_admin":false},"created_at":"2020-06-18T21:07:25Z","updated_at":"2020-06-18T21:07:25Z","author_association":"CONTRIBUTOR","body":"@ejgallego I had assumed you intended `simple_compiler` was meant for @ppedrot to use.  Or did you mean that I should run it?  From my cursory examination of the code, it looks like it gets `reachable_words` for a few key variables.  Is that right or is there more to it?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/646306133/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/646315250","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-646315250","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":646315250,"node_id":"MDEyOklzc3VlQ29tbWVudDY0NjMxNTI1MA==","user":{"login":"ejgallego","id":7192257,"node_id":"MDQ6VXNlcjcxOTIyNTc=","avatar_url":"https://avatars.githubusercontent.com/u/7192257?v=4","gravatar_id":"","url":"https://api.github.com/users/ejgallego","html_url":"https://github.com/ejgallego","followers_url":"https://api.github.com/users/ejgallego/followers","following_url":"https://api.github.com/users/ejgallego/following{/other_user}","gists_url":"https://api.github.com/users/ejgallego/gists{/gist_id}","starred_url":"https://api.github.com/users/ejgallego/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ejgallego/subscriptions","organizations_url":"https://api.github.com/users/ejgallego/orgs","repos_url":"https://api.github.com/users/ejgallego/repos","events_url":"https://api.github.com/users/ejgallego/events{/privacy}","received_events_url":"https://api.github.com/users/ejgallego/received_events","type":"User","site_admin":false},"created_at":"2020-06-18T21:28:54Z","updated_at":"2020-06-18T21:28:54Z","author_association":"MEMBER","body":"@jfehrle It was meant to be used by anyone that may want to analyze \"core\" memory consumption, without involving other layers such as the document manager.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/646315250/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/651259572","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-651259572","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":651259572,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MTI1OTU3Mg==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2020-06-29T17:32:00Z","updated_at":"2020-06-29T19:10:59Z","author_association":"MEMBER","body":"Here is a reliable test that generates dangling evar instances even with the simple compiler:\r\n```coq\r\nDefinition relation (A : Type) := A -> A -> Prop.\r\n\r\nAxiom respectful :\r\n  forall {A B : Type}, relation A -> relation B -> relation (A -> B).\r\n\r\nAxiom Proper : forall {A : Type}, relation A -> A -> Prop.\r\n\r\nParameter t : Type.\r\nAxiom le : t -> t -> Prop.\r\n\r\nLemma max_mono2 : forall f : t -> t, Proper (@respectful _ _ le le) f -> False.\r\nProof.\r\nintros.\r\ntry change (le (@respectful t t le le) f) in H.\r\nAdmitted.\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/651259572/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/651324970","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-651324970","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":651324970,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MTMyNDk3MA==","user":{"login":"jfehrle","id":1253341,"node_id":"MDQ6VXNlcjEyNTMzNDE=","avatar_url":"https://avatars.githubusercontent.com/u/1253341?v=4","gravatar_id":"","url":"https://api.github.com/users/jfehrle","html_url":"https://github.com/jfehrle","followers_url":"https://api.github.com/users/jfehrle/followers","following_url":"https://api.github.com/users/jfehrle/following{/other_user}","gists_url":"https://api.github.com/users/jfehrle/gists{/gist_id}","starred_url":"https://api.github.com/users/jfehrle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jfehrle/subscriptions","organizations_url":"https://api.github.com/users/jfehrle/orgs","repos_url":"https://api.github.com/users/jfehrle/repos","events_url":"https://api.github.com/users/jfehrle/events{/privacy}","received_events_url":"https://api.github.com/users/jfehrle/received_events","type":"User","site_admin":false},"created_at":"2020-06-29T19:52:34Z","updated_at":"2020-06-29T19:58:09Z","author_association":"CONTRIBUTOR","body":"Over the weekend I made good progress modifying the OCaml runtime to track down the leak(s) by examining all the heap roots.  For roots with high reachable_words, I think I'll be able to identify the source file and a range of lines containing the variable definition.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/651324970/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/651354663","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-651354663","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":651354663,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MTM1NDY2Mw==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2020-06-29T20:46:22Z","updated_at":"2020-06-29T20:46:22Z","author_association":"MEMBER","body":"@jfehrle you can generate a high number of dangling evars by changing the number of implicit arguments of `respectful` in my example. ","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/651354663/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/651750679","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-651750679","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":651750679,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MTc1MDY3OQ==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2020-06-30T12:07:57Z","updated_at":"2020-06-30T12:07:57Z","author_association":"MEMBER","body":"Quick feedback, the leaking evars appear in none of the following places:\r\n- Summaries\r\n- Libobject\r\n- VCS reference (stm.ml)\r\n- Exninfo cache\r\n\r\nI am starting to run out of ideas.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/651750679/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/651753778","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-651753778","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":651753778,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MTc1Mzc3OA==","user":{"login":"ejgallego","id":7192257,"node_id":"MDQ6VXNlcjcxOTIyNTc=","avatar_url":"https://avatars.githubusercontent.com/u/7192257?v=4","gravatar_id":"","url":"https://api.github.com/users/ejgallego","html_url":"https://github.com/ejgallego","followers_url":"https://api.github.com/users/ejgallego/followers","following_url":"https://api.github.com/users/ejgallego/following{/other_user}","gists_url":"https://api.github.com/users/ejgallego/gists{/gist_id}","starred_url":"https://api.github.com/users/ejgallego/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ejgallego/subscriptions","organizations_url":"https://api.github.com/users/ejgallego/orgs","repos_url":"https://api.github.com/users/ejgallego/repos","events_url":"https://api.github.com/users/ejgallego/events{/privacy}","received_events_url":"https://api.github.com/users/ejgallego/received_events","type":"User","site_admin":false},"created_at":"2020-06-30T12:15:12Z","updated_at":"2020-06-30T12:15:12Z","author_association":"MEMBER","body":"Indeed that's bizarre, I was doing some investigation yesterday with your example and found very weird results, at first I thought the summary `symbols` in `Notation` could be the culprit, but when I investigated more I got very weird results.\r\n\r\nMaybe some registration of genargs / etc... could be at fault here? But indeed I'm a bit lost too.\r\n\r\nWhat does @JasonGross 's example do with the simple_compiler?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/651753778/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/651754343","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-651754343","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":651754343,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MTc1NDM0Mw==","user":{"login":"ejgallego","id":7192257,"node_id":"MDQ6VXNlcjcxOTIyNTc=","avatar_url":"https://avatars.githubusercontent.com/u/7192257?v=4","gravatar_id":"","url":"https://api.github.com/users/ejgallego","html_url":"https://github.com/ejgallego","followers_url":"https://api.github.com/users/ejgallego/followers","following_url":"https://api.github.com/users/ejgallego/following{/other_user}","gists_url":"https://api.github.com/users/ejgallego/gists{/gist_id}","starred_url":"https://api.github.com/users/ejgallego/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ejgallego/subscriptions","organizations_url":"https://api.github.com/users/ejgallego/orgs","repos_url":"https://api.github.com/users/ejgallego/repos","events_url":"https://api.github.com/users/ejgallego/events{/privacy}","received_events_url":"https://api.github.com/users/ejgallego/received_events","type":"User","site_admin":false},"created_at":"2020-06-30T12:16:34Z","updated_at":"2020-06-30T12:17:23Z","author_association":"MEMBER","body":"> at first I thought the summary `symbols` in `Notation` could be the culprit, but when I investigated more I got very weird results.\r\n\r\nTo be more concrete, I observe an increase of `symbols-SUMMARY` when differentially testing two examples, but then I see the summary itself is empty. The increase is suspicious because we have the same number of summary entries.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/651754343/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/651871978","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-651871978","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":651871978,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MTg3MTk3OA==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2020-06-30T15:34:32Z","updated_at":"2020-06-30T15:34:32Z","author_association":"MEMBER","body":"> Maybe some registration of genargs\r\n\r\nAll those functions are called statically, so it shouldn't influence runtime. The evars that leak in my example are also generated at runtime, so instead I suspect that somewhere there is a global cache that captures them and that is not freed, but I have no idea where it could be defined.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/651871978/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/652233489","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-652233489","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":652233489,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MjIzMzQ4OQ==","user":{"login":"jfehrle","id":1253341,"node_id":"MDQ6VXNlcjEyNTMzNDE=","avatar_url":"https://avatars.githubusercontent.com/u/1253341?v=4","gravatar_id":"","url":"https://api.github.com/users/jfehrle","html_url":"https://github.com/jfehrle","followers_url":"https://api.github.com/users/jfehrle/followers","following_url":"https://api.github.com/users/jfehrle/following{/other_user}","gists_url":"https://api.github.com/users/jfehrle/gists{/gist_id}","starred_url":"https://api.github.com/users/jfehrle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jfehrle/subscriptions","organizations_url":"https://api.github.com/users/jfehrle/orgs","repos_url":"https://api.github.com/users/jfehrle/repos","events_url":"https://api.github.com/users/jfehrle/events{/privacy}","received_events_url":"https://api.github.com/users/jfehrle/received_events","type":"User","site_admin":false},"created_at":"2020-07-01T07:03:51Z","updated_at":"2020-07-01T07:04:53Z","author_association":"CONTRIBUTOR","body":"@ppedrot Initial results for the 5 limb case showing fields (aka heap roots) in each .ml file that have more than 100000 reachable words.  Looks like `engine/evarutil.ml` is the main culprit.  Perhaps that's enough of a clue for you to find the leak.  Field numbers correspond to global symbols.  Sometimes they appear in the same order as in the file, but not always.  I can do further experiments tomorrow to refine it/validate it further/narrow it down to a single variable.\r\n\r\n```\r\n    102723 field   0 plugins/ltac/pltac.ml\r\n    102678 field   1 plugins/ltac/pltac.ml\r\n    102678 field   2 plugins/ltac/pltac.ml\r\n    102735 field   4 plugins/ltac/pltac.ml\r\n    102678 field   5 plugins/ltac/pltac.ml\r\n    102678 field   6 plugins/ltac/pltac.ml\r\n    102678 field   8 plugins/ltac/pltac.ml\r\n    102678 field  10 plugins/ltac/pltac.ml\r\n    102678 field  11 plugins/ltac/pltac.ml\r\n    102678 field  14 plugins/ltac/pltac.ml\r\n    102678 field  15 plugins/ltac/pltac.ml\r\n    102678 field  16 plugins/ltac/pltac.ml\r\n    102678 field  17 plugins/ltac/pltac.ml\r\n    102730 field  18 plugins/ltac/pltac.ml\r\n    164824 field  20 plugins/ltac/tacenv.ml\r\n   1542857 field  26 plugins/ltac/tacenv.ml\r\n  35253743 field  65 stm/stm.ml\r\n  35201913 field   8 vernac/vernacstate.ml\r\n   8991864 field  24 vernac/library.ml\r\n    112035 field   8 vernac/egramml.ml\r\n   6145454 field  84 vernac/declaremods.ml\r\n   6435878 field  89 vernac/declaremods.ml\r\n    162042 field   1 vernac/pvernac.ml\r\n    106740 field   4 vernac/pvernac.ml\r\n    106739 field   5 vernac/pvernac.ml\r\n    106739 field   8 vernac/pvernac.ml\r\n    110219 field  11 vernac/pvernac.ml\r\n    112510 field  12 vernac/pvernac.ml\r\n    140631 field  13 vernac/pvernac.ml\r\n    106108 field  14 vernac/pvernac.ml\r\n    159940 field  15 vernac/pvernac.ml\r\n    103902 field  16 vernac/pvernac.ml\r\n    102678 field  17 vernac/pvernac.ml\r\n    102791 field  18 vernac/pvernac.ml\r\n    160048 field  19 vernac/pvernac.ml\r\n    105569 field  20 vernac/pvernac.ml\r\n    351327 field  14 tactics/autorewrite.ml\r\n   1595070 field  63 tactics/hints.ml\r\n    105767 field  20 parsing/pcoq.ml\r\n    102872 field  24 parsing/pcoq.ml\r\n    103773 field  25 parsing/pcoq.ml\r\n    210280 field  47 parsing/pcoq.ml\r\n    105781 field  58 parsing/pcoq.ml\r\n    102706 field  71 parsing/pcoq.ml\r\n    102678 field 118 parsing/pcoq.ml\r\n    102678 field 119 parsing/pcoq.ml\r\n    102730 field 120 parsing/pcoq.ml\r\n    102678 field 121 parsing/pcoq.ml\r\n    102678 field 122 parsing/pcoq.ml\r\n    102678 field 129 parsing/pcoq.ml\r\n    102723 field 130 parsing/pcoq.ml\r\n    102678 field 131 parsing/pcoq.ml\r\n    102678 field 132 parsing/pcoq.ml\r\n    102678 field 133 parsing/pcoq.ml\r\n    102678 field 134 parsing/pcoq.ml\r\n    102678 field 135 parsing/pcoq.ml\r\n    102678 field 136 parsing/pcoq.ml\r\n    102678 field 137 parsing/pcoq.ml\r\n    102678 field 138 parsing/pcoq.ml\r\n    102678 field 139 parsing/pcoq.ml\r\n    102678 field 140 parsing/pcoq.ml\r\n    103770 field 142 parsing/pcoq.ml\r\n    947906 field  65 interp/impargs.ml\r\n    428734 field  29 interp/dumpglob.ml\r\n   1449580 field 158 interp/notation.ml\r\n 262800772 field  18 engine/evarutil.ml\r\n  27930992 field  60 library/lib.ml\r\n  18254871 field  80 library/global.ml\r\n   1548491 field  54 library/nametab.ml\r\n    414345 field  61 library/nametab.ml\r\n    669077 field  62 library/nametab.ml\r\n    148457 field  66 library/nametab.ml\r\n  10960660 field  20 library/summary.ml\r\n    291985 field  22 kernel/nativelib.ml\r\n   8096110 field  37 kernel/cbytegen.ml\r\n    254431 field 130 kernel/constr.ml\r\n    101533 field 131 kernel/constr.ml\r\n    159195 field  35 lib/system.ml\r\n    159195 field  35 clib/minisys.ml\r\n    131073 field  15 clib/unicode.ml\r\n    147454 field   7 clib/cEphemeron.ml\r\n```","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/652233489/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/652250604","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-652250604","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":652250604,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MjI1MDYwNA==","user":{"login":"SkySkimmer","id":2461932,"node_id":"MDQ6VXNlcjI0NjE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/2461932?v=4","gravatar_id":"","url":"https://api.github.com/users/SkySkimmer","html_url":"https://github.com/SkySkimmer","followers_url":"https://api.github.com/users/SkySkimmer/followers","following_url":"https://api.github.com/users/SkySkimmer/following{/other_user}","gists_url":"https://api.github.com/users/SkySkimmer/gists{/gist_id}","starred_url":"https://api.github.com/users/SkySkimmer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SkySkimmer/subscriptions","organizations_url":"https://api.github.com/users/SkySkimmer/orgs","repos_url":"https://api.github.com/users/SkySkimmer/repos","events_url":"https://api.github.com/users/SkySkimmer/events{/privacy}","received_events_url":"https://api.github.com/users/SkySkimmer/received_events","type":"User","site_admin":false},"created_at":"2020-07-01T07:41:48Z","updated_at":"2020-07-01T07:41:48Z","author_association":"CONTRIBUTOR","body":"Could it be this bit from evarutil?\r\n~~~ocaml\r\n(* Memoization is safe since evar_map and environ are applicative\r\n   structures *)\r\nlet memo f =\r\n  let m = ref None in\r\n  fun x y -> match !m with\r\n  | Some (x', y', r) when x == x' && y == y' -> r\r\n  | _ -> let r = f x y in m := Some (x, y, r); r\r\n\r\nlet is_ground_env = memo is_ground_env\r\n~~~","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/652250604/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/652251104","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-652251104","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":652251104,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MjI1MTEwNA==","user":{"login":"SkySkimmer","id":2461932,"node_id":"MDQ6VXNlcjI0NjE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/2461932?v=4","gravatar_id":"","url":"https://api.github.com/users/SkySkimmer","html_url":"https://github.com/SkySkimmer","followers_url":"https://api.github.com/users/SkySkimmer/followers","following_url":"https://api.github.com/users/SkySkimmer/following{/other_user}","gists_url":"https://api.github.com/users/SkySkimmer/gists{/gist_id}","starred_url":"https://api.github.com/users/SkySkimmer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SkySkimmer/subscriptions","organizations_url":"https://api.github.com/users/SkySkimmer/orgs","repos_url":"https://api.github.com/users/SkySkimmer/repos","events_url":"https://api.github.com/users/SkySkimmer/events{/privacy}","received_events_url":"https://api.github.com/users/SkySkimmer/received_events","type":"User","site_admin":false},"created_at":"2020-07-01T07:42:41Z","updated_at":"2020-07-01T07:42:41Z","author_association":"CONTRIBUTOR","body":"We can probably use a weak reference instead of option.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/652251104/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/652320335","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-652320335","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":652320335,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MjMyMDMzNQ==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2020-07-01T09:56:50Z","updated_at":"2020-07-01T09:56:50Z","author_association":"MEMBER","body":"@SkySkimmer cross-posting from the other PR, I confirm that your patch solves the problem on my reduced example.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/652320335/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/652621532","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-652621532","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":652621532,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MjYyMTUzMg==","user":{"login":"jfehrle","id":1253341,"node_id":"MDQ6VXNlcjEyNTMzNDE=","avatar_url":"https://avatars.githubusercontent.com/u/1253341?v=4","gravatar_id":"","url":"https://api.github.com/users/jfehrle","html_url":"https://github.com/jfehrle","followers_url":"https://api.github.com/users/jfehrle/followers","following_url":"https://api.github.com/users/jfehrle/following{/other_user}","gists_url":"https://api.github.com/users/jfehrle/gists{/gist_id}","starred_url":"https://api.github.com/users/jfehrle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jfehrle/subscriptions","organizations_url":"https://api.github.com/users/jfehrle/orgs","repos_url":"https://api.github.com/users/jfehrle/repos","events_url":"https://api.github.com/users/jfehrle/events{/privacy}","received_events_url":"https://api.github.com/users/jfehrle/received_events","type":"User","site_admin":false},"created_at":"2020-07-01T20:07:49Z","updated_at":"2020-07-01T20:07:49Z","author_association":"CONTRIBUTOR","body":"@JasonGross After syncing with Coq `master` and pulling and rebasing fiat-crypto on `sp2019lastest`, my local fiat-crypto make now fails with:\r\n\r\n```\r\nFile \"./bbv/src/bbv/NatLib.v\", line 71, characters 4-16:\r\nError: No primitive equality found.\r\n```\r\n\r\nI had been using master as of around June 9.  If you can fix that then it's easier for me to pull in changes from the others to get new numbers.  I should be able to use an earlier version of Coq for the moment.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/652621532/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/652626894","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-652626894","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":652626894,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MjYyNjg5NA==","user":{"login":"ejgallego","id":7192257,"node_id":"MDQ6VXNlcjcxOTIyNTc=","avatar_url":"https://avatars.githubusercontent.com/u/7192257?v=4","gravatar_id":"","url":"https://api.github.com/users/ejgallego","html_url":"https://github.com/ejgallego","followers_url":"https://api.github.com/users/ejgallego/followers","following_url":"https://api.github.com/users/ejgallego/following{/other_user}","gists_url":"https://api.github.com/users/ejgallego/gists{/gist_id}","starred_url":"https://api.github.com/users/ejgallego/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ejgallego/subscriptions","organizations_url":"https://api.github.com/users/ejgallego/orgs","repos_url":"https://api.github.com/users/ejgallego/repos","events_url":"https://api.github.com/users/ejgallego/events{/privacy}","received_events_url":"https://api.github.com/users/ejgallego/received_events","type":"User","site_admin":false},"created_at":"2020-07-01T20:20:48Z","updated_at":"2020-07-01T20:20:48Z","author_association":"MEMBER","body":"It'd be interesting to see (once the memo bug is fixed) if the simple compiler has some memory advantage over coqc. It should not.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/652626894/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/652639226","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-652639226","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":652639226,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MjYzOTIyNg==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2020-07-01T20:48:51Z","updated_at":"2020-07-01T20:48:51Z","author_association":"MEMBER","body":"@jfehrle Did you forget `git submodule update`?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/652639226/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/652641417","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-652641417","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":652641417,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MjY0MTQxNw==","user":{"login":"jfehrle","id":1253341,"node_id":"MDQ6VXNlcjEyNTMzNDE=","avatar_url":"https://avatars.githubusercontent.com/u/1253341?v=4","gravatar_id":"","url":"https://api.github.com/users/jfehrle","html_url":"https://github.com/jfehrle","followers_url":"https://api.github.com/users/jfehrle/followers","following_url":"https://api.github.com/users/jfehrle/following{/other_user}","gists_url":"https://api.github.com/users/jfehrle/gists{/gist_id}","starred_url":"https://api.github.com/users/jfehrle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jfehrle/subscriptions","organizations_url":"https://api.github.com/users/jfehrle/orgs","repos_url":"https://api.github.com/users/jfehrle/repos","events_url":"https://api.github.com/users/jfehrle/events{/privacy}","received_events_url":"https://api.github.com/users/jfehrle/received_events","type":"User","site_admin":false},"created_at":"2020-07-01T20:54:04Z","updated_at":"2020-07-01T20:54:04Z","author_association":"CONTRIBUTOR","body":"@ejgallego I'll try that at some point, but not today.  What does simple_compiler do?  I thought it was just a way to get memory-use statistics.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/652641417/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/652646806","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-652646806","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":652646806,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MjY0NjgwNg==","user":{"login":"jfehrle","id":1253341,"node_id":"MDQ6VXNlcjEyNTMzNDE=","avatar_url":"https://avatars.githubusercontent.com/u/1253341?v=4","gravatar_id":"","url":"https://api.github.com/users/jfehrle","html_url":"https://github.com/jfehrle","followers_url":"https://api.github.com/users/jfehrle/followers","following_url":"https://api.github.com/users/jfehrle/following{/other_user}","gists_url":"https://api.github.com/users/jfehrle/gists{/gist_id}","starred_url":"https://api.github.com/users/jfehrle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jfehrle/subscriptions","organizations_url":"https://api.github.com/users/jfehrle/orgs","repos_url":"https://api.github.com/users/jfehrle/repos","events_url":"https://api.github.com/users/jfehrle/events{/privacy}","received_events_url":"https://api.github.com/users/jfehrle/received_events","type":"User","site_admin":false},"created_at":"2020-07-01T21:06:32Z","updated_at":"2020-07-01T21:06:32Z","author_association":"CONTRIBUTOR","body":"@JasonGross That was it, thanks.  Even taking notes, it's hard to remember all the little details 2+ weeks later.  Modifying OCaml adds an additional layer of fun to it.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/652646806/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/652659057","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-652659057","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":652659057,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MjY1OTA1Nw==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2020-07-01T21:37:15Z","updated_at":"2020-07-01T21:37:15Z","author_association":"MEMBER","body":"@ejgallego why not? since coqc is storing useless proof data in the VCS I don't see how it could perform as efficiently as scoqc...","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/652659057/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/652680336","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-652680336","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":652680336,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MjY4MDMzNg==","user":{"login":"ejgallego","id":7192257,"node_id":"MDQ6VXNlcjcxOTIyNTc=","avatar_url":"https://avatars.githubusercontent.com/u/7192257?v=4","gravatar_id":"","url":"https://api.github.com/users/ejgallego","html_url":"https://github.com/ejgallego","followers_url":"https://api.github.com/users/ejgallego/followers","following_url":"https://api.github.com/users/ejgallego/following{/other_user}","gists_url":"https://api.github.com/users/ejgallego/gists{/gist_id}","starred_url":"https://api.github.com/users/ejgallego/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ejgallego/subscriptions","organizations_url":"https://api.github.com/users/ejgallego/orgs","repos_url":"https://api.github.com/users/ejgallego/repos","events_url":"https://api.github.com/users/ejgallego/events{/privacy}","received_events_url":"https://api.github.com/users/ejgallego/received_events","type":"User","site_admin":false},"created_at":"2020-07-01T22:38:45Z","updated_at":"2020-07-01T22:38:45Z","author_association":"MEMBER","body":"> since coqc is storing useless proof data in the VCS I don't see how it could perform as efficiently as scoq\r\n\r\nActually when not in interactive mode it should not cache data, so indeed memory use should remain in the same ballpark.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/652680336/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/652683012","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-652683012","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":652683012,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MjY4MzAxMg==","user":{"login":"jfehrle","id":1253341,"node_id":"MDQ6VXNlcjEyNTMzNDE=","avatar_url":"https://avatars.githubusercontent.com/u/1253341?v=4","gravatar_id":"","url":"https://api.github.com/users/jfehrle","html_url":"https://github.com/jfehrle","followers_url":"https://api.github.com/users/jfehrle/followers","following_url":"https://api.github.com/users/jfehrle/following{/other_user}","gists_url":"https://api.github.com/users/jfehrle/gists{/gist_id}","starred_url":"https://api.github.com/users/jfehrle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jfehrle/subscriptions","organizations_url":"https://api.github.com/users/jfehrle/orgs","repos_url":"https://api.github.com/users/jfehrle/repos","events_url":"https://api.github.com/users/jfehrle/events{/privacy}","received_events_url":"https://api.github.com/users/jfehrle/received_events","type":"User","site_admin":false},"created_at":"2020-07-01T22:48:19Z","updated_at":"2020-07-02T21:52:50Z","author_association":"CONTRIBUTOR","body":"Well done @SkySkimmer!  After gc, the run now uses 53 863 708 live words.  That's almost 50% less than where we started, at 101 353 755 words.  That's still more than the following trivial script that loads the completed proof, which uses 36 283 987 live words.  \r\n\r\n```\r\nRequire Import Crypto.Specific.montgomery32_2e152m17_5limbs.femul.\r\n\r\nOptimize Heap.\r\nPrint Debug GC.\r\n```\r\n\r\nHere are the biggest differences I see now:\r\n\r\n```\r\nFULL RUN\r\n  35327283 field  65 stm/stm.ml\r\n   9033104 field  24 vernac/library.ml\r\n   8096110 field  37 kernel/cbytegen.ml\r\n\r\nTRIVIAL SCRIPT\r\n    810103 field  65 stm/stm.ml\r\n(vernac/library.ml < 100000 so not listed)\r\n(kernel/cbytegen.ml < 100000 so not listed)\r\n```\r\n\r\nIf we can figure out these 3 we may be able to save another 17M words, though some of the memory is surely counted more than once.  Also, the less-significant `plugins/ltac/pltac.ml`, `vernac/pvernac.ml` and `parsing/pcoq.ml` entries from the earlier stats don't show up in the trivial script.\r\n\r\nI'll try to figure out what these fields correspond to and also rerun the largest case, 8 limbs, to see how that's changed.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/652683012/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/652857839","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-652857839","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":652857839,"node_id":"MDEyOklzc3VlQ29tbWVudDY1Mjg1NzgzOQ==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2020-07-02T08:12:09Z","updated_at":"2020-07-02T08:12:09Z","author_association":"MEMBER","body":"@jfehrle for cbytegen it's most likely due to the use of a global variable to compute the bytecode. Never understood why it's done that way but it is trivial to fix.\r\n\r\n> Actually when not in interactive mode it should not cache data\r\n\r\n@ejgallego if you wrote *ought to* instead of *should* I would agree, but currently coqc still retains pointers to useless memory, as it was discussed above. Or did you write a PR to solve this already?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/652857839/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/652967836","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-652967836","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":652967836,"node_id":"MDEyOklzc3VlQ29tbWVudDY1Mjk2NzgzNg==","user":{"login":"ejgallego","id":7192257,"node_id":"MDQ6VXNlcjcxOTIyNTc=","avatar_url":"https://avatars.githubusercontent.com/u/7192257?v=4","gravatar_id":"","url":"https://api.github.com/users/ejgallego","html_url":"https://github.com/ejgallego","followers_url":"https://api.github.com/users/ejgallego/followers","following_url":"https://api.github.com/users/ejgallego/following{/other_user}","gists_url":"https://api.github.com/users/ejgallego/gists{/gist_id}","starred_url":"https://api.github.com/users/ejgallego/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ejgallego/subscriptions","organizations_url":"https://api.github.com/users/ejgallego/orgs","repos_url":"https://api.github.com/users/ejgallego/repos","events_url":"https://api.github.com/users/ejgallego/events{/privacy}","received_events_url":"https://api.github.com/users/ejgallego/received_events","type":"User","site_admin":false},"created_at":"2020-07-02T12:09:12Z","updated_at":"2020-07-02T12:09:12Z","author_association":"MEMBER","body":"@ppedrot maybe I was confused, I thought the main problem was the `memo` thing, if `coqc` still retains pointers to useless memory indeed we should open a bug, I didn't do any patch/action yet, I was waiting to identify the culprit affecting the lower layers.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/652967836/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/652969989","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-652969989","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":652969989,"node_id":"MDEyOklzc3VlQ29tbWVudDY1Mjk2OTk4OQ==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2020-07-02T12:14:17Z","updated_at":"2020-07-02T12:14:17Z","author_association":"MEMBER","body":"@ejgallego nope, in addition to the memo cache it was also pointed out (on zulip I think?) that `coqc` keeps the global state at the opening of every proof. The reason for that seems to support `Undo` even in batch mode, which doesn't look like a great idea to me. That said, this proof state is not that big, as observed in @jfehrle's experiments. I think we should get rid of it still.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/652969989/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/653259796","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-653259796","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":653259796,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MzI1OTc5Ng==","user":{"login":"jfehrle","id":1253341,"node_id":"MDQ6VXNlcjEyNTMzNDE=","avatar_url":"https://avatars.githubusercontent.com/u/1253341?v=4","gravatar_id":"","url":"https://api.github.com/users/jfehrle","html_url":"https://github.com/jfehrle","followers_url":"https://api.github.com/users/jfehrle/followers","following_url":"https://api.github.com/users/jfehrle/following{/other_user}","gists_url":"https://api.github.com/users/jfehrle/gists{/gist_id}","starred_url":"https://api.github.com/users/jfehrle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jfehrle/subscriptions","organizations_url":"https://api.github.com/users/jfehrle/orgs","repos_url":"https://api.github.com/users/jfehrle/repos","events_url":"https://api.github.com/users/jfehrle/events{/privacy}","received_events_url":"https://api.github.com/users/jfehrle/received_events","type":"User","site_admin":false},"created_at":"2020-07-02T23:29:56Z","updated_at":"2020-07-02T23:30:36Z","author_association":"CONTRIBUTOR","body":"@ppedrot These are the variables holding the leaked data for the 3 leak points I mentioned.  Would be great if you can clean them up:\r\n- stm.ml:  vcs (line ~527)\r\n- library.ml: opaque_tables\r\n- cbytegen: fun_code\r\n\r\nGetting from the field number to the variable isn't as simple as I thought.  In particular I don't have an easy way to find variables in modules defined (`sig`) and instantiated (`struct`) within a single .ml file.\r\n\r\nHere's a summary of our progress on live words for the 8 limb case:\r\n\r\n```\r\n550057352   with @ppedrot fix, without GC\r\n398748067   plus a final GC (72% of previous line)\r\n 75174701   plus @SkySkimmer fix (19% of previous line)\r\n 39275064   FOR COMPARISON: trivial script loading the proof (52% of previous line)\r\n```","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/653259796/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/653395388","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-653395388","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":653395388,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MzM5NTM4OA==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2020-07-03T07:22:35Z","updated_at":"2020-07-03T07:22:35Z","author_association":"MEMBER","body":"@jfehrle\r\n- stm.ml: this is the cache behaviour of coqc I mentioned above, I have no idea how to fix it since I don't understand the stm (but @gares and @ejgallego should be able to help)\r\n- library.ml: opaque_tables: this is a cache for the body of opaque proofs. As part of my work on not keeping the proofs in memory, I have a PR that removes that entry point (and a lot of other stuff), but it needs further polishing and evaluation, so I am not going to actively work on this precise issue\r\n- cbytegen: fun_code: this is the weird compilation scheme mentioned above. I'll first submit a few PRs on the VM I had lying on my drive, and will address it.\r\n\r\nAll in all, I think the major issue is the STM being too conservative in what it caches, so it'd be good that the specialists address this specifically.\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/653395388/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/653397278","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-653397278","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":653397278,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MzM5NzI3OA==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2020-07-03T07:27:47Z","updated_at":"2020-07-03T07:27:47Z","author_association":"MEMBER","body":"Also, forgot to say that this is quite orthogonal to Coq using way too much memory. The bug we are currently scrutinizing is about Coq not releasing it at exit time, but the root of the problem persists, insofar as Coq generates a hell of a lot of useless data (hello, identity evar instances) for no good reason. There is still a lot of work ahead to reduce dynamic memory consumption to a reasonable amount.\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/653397278/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/653519789","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-653519789","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":653519789,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MzUxOTc4OQ==","user":{"login":"ejgallego","id":7192257,"node_id":"MDQ6VXNlcjcxOTIyNTc=","avatar_url":"https://avatars.githubusercontent.com/u/7192257?v=4","gravatar_id":"","url":"https://api.github.com/users/ejgallego","html_url":"https://github.com/ejgallego","followers_url":"https://api.github.com/users/ejgallego/followers","following_url":"https://api.github.com/users/ejgallego/following{/other_user}","gists_url":"https://api.github.com/users/ejgallego/gists{/gist_id}","starred_url":"https://api.github.com/users/ejgallego/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ejgallego/subscriptions","organizations_url":"https://api.github.com/users/ejgallego/orgs","repos_url":"https://api.github.com/users/ejgallego/repos","events_url":"https://api.github.com/users/ejgallego/events{/privacy}","received_events_url":"https://api.github.com/users/ejgallego/received_events","type":"User","site_admin":false},"created_at":"2020-07-03T12:15:15Z","updated_at":"2020-07-03T12:15:15Z","author_association":"MEMBER","body":"> * stm.ml: this is the cache behaviour of coqc I mentioned above, I have no idea how to fix it since I don't understand the stm (but @gares and @ejgallego should be able to help)\r\n\r\nIndeed, I think we will be able to tweak the cache so this is not a problem. In that sense, I'd suggest opening a specific bug for this case [an example like a huge proof of `100 < 1000` could help]","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/653519789/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/653620943","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-653620943","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":653620943,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MzYyMDk0Mw==","user":{"login":"jfehrle","id":1253341,"node_id":"MDQ6VXNlcjEyNTMzNDE=","avatar_url":"https://avatars.githubusercontent.com/u/1253341?v=4","gravatar_id":"","url":"https://api.github.com/users/jfehrle","html_url":"https://github.com/jfehrle","followers_url":"https://api.github.com/users/jfehrle/followers","following_url":"https://api.github.com/users/jfehrle/following{/other_user}","gists_url":"https://api.github.com/users/jfehrle/gists{/gist_id}","starred_url":"https://api.github.com/users/jfehrle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jfehrle/subscriptions","organizations_url":"https://api.github.com/users/jfehrle/orgs","repos_url":"https://api.github.com/users/jfehrle/repos","events_url":"https://api.github.com/users/jfehrle/events{/privacy}","received_events_url":"https://api.github.com/users/jfehrle/received_events","type":"User","site_admin":false},"created_at":"2020-07-03T16:48:49Z","updated_at":"2020-07-03T16:48:49Z","author_association":"CONTRIBUTOR","body":"@ejgallego See #12639.  I've not written many (any?) proofs in the last 2 years, so creating the example you suggest would take me a while.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/653620943/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/653648757","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-653648757","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":653648757,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MzY0ODc1Nw==","user":{"login":"jfehrle","id":1253341,"node_id":"MDQ6VXNlcjEyNTMzNDE=","avatar_url":"https://avatars.githubusercontent.com/u/1253341?v=4","gravatar_id":"","url":"https://api.github.com/users/jfehrle","html_url":"https://github.com/jfehrle","followers_url":"https://api.github.com/users/jfehrle/followers","following_url":"https://api.github.com/users/jfehrle/following{/other_user}","gists_url":"https://api.github.com/users/jfehrle/gists{/gist_id}","starred_url":"https://api.github.com/users/jfehrle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jfehrle/subscriptions","organizations_url":"https://api.github.com/users/jfehrle/orgs","repos_url":"https://api.github.com/users/jfehrle/repos","events_url":"https://api.github.com/users/jfehrle/events{/privacy}","received_events_url":"https://api.github.com/users/jfehrle/received_events","type":"User","site_admin":false},"created_at":"2020-07-03T18:53:11Z","updated_at":"2020-07-03T18:58:27Z","author_association":"CONTRIBUTOR","body":"@ppedrot Indeed, I was starting to consider that.\r\n\r\nI adjusted my instrumentation to use `Gc.create_alarm` so I can print stats in the middle of the proof.  Just after the 12th major collection, at which point the proof is not complete, I `Gc.compact`, dump the field information, `Gc.print_stat` and print a stack trace.\r\n\r\nThe field information is not all that different from previous runs.  There are several items that use 10s of millions of words, but they total nowhere near enough to account for 399 907 814 live words.  The stack trace is about 88 screenfuls.  Then I got a seg fault for some reason.\r\n\r\nThe bulk of the heap may be rooted in the stack frames.  I'll create additional instrumentation to report reachable_words for each frame.  In the meantime, feel free to ponder the stack trace.\r\n\r\nAlso, for the purpose of evaluating any fixes that we make, it would be preferable to trigger reporting the info at a known point in the proof with a new command to get the most useful comparison.  Perhaps @JasonGross can suggest some places to do that.\r\n\r\n[big_trace.txt](https://github.com/coq/coq/files/4871071/big_trace.txt)\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/653648757/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/653686059","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-653686059","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":653686059,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MzY4NjA1OQ==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2020-07-03T22:05:42Z","updated_at":"2020-07-03T22:05:42Z","author_association":"MEMBER","body":"> Also, for the purpose of evaluating any fixes that we make, it would be preferable to trigger reporting the info at a known point in the proof with a new command to get the most useful comparison. Perhaps @JasonGross can suggest some places to do that\r\n\r\nNot sure what you're asking about here, but if you want some relevant breakpoints in the proof script, the best places to insert things are in the tactics `do_reflective_pipeline` (you can either insert before it runs, between its two subtactics, or if you have something that doesn't require a focussed goal, after both subtactics), in `solve_side_conditions` (where you can look at things before and after reification), or in `solve_post_reified_side_conditions` (where you can breakpoint right before attempting to solve any of the 12 side-conditions).  All of these tactics are in https://github.com/mit-plv/fiat-crypto/blob/sp2019latest/src/Compilers/Z/Bounds/Pipeline/ReflectiveTactics.v#L296-L362.  Is this what you're looking for?  (If you need a vernacular command, you can do `Ltac Crypto.Compilers.Z.Bounds.Pipeline.ReflectiveTactics.solve_side_conditions ::= idtac.` before calling the main tactic (if `idtac` doesn't work, you should try `shelve`, and then you'll need `Unshelve. all: shelve_unifiable`, I think).  Then you can invoke the subtactics by hand, if you want to.)","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/653686059/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/653713692","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-653713692","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":653713692,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MzcxMzY5Mg==","user":{"login":"jfehrle","id":1253341,"node_id":"MDQ6VXNlcjEyNTMzNDE=","avatar_url":"https://avatars.githubusercontent.com/u/1253341?v=4","gravatar_id":"","url":"https://api.github.com/users/jfehrle","html_url":"https://github.com/jfehrle","followers_url":"https://api.github.com/users/jfehrle/followers","following_url":"https://api.github.com/users/jfehrle/following{/other_user}","gists_url":"https://api.github.com/users/jfehrle/gists{/gist_id}","starred_url":"https://api.github.com/users/jfehrle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jfehrle/subscriptions","organizations_url":"https://api.github.com/users/jfehrle/orgs","repos_url":"https://api.github.com/users/jfehrle/repos","events_url":"https://api.github.com/users/jfehrle/events{/privacy}","received_events_url":"https://api.github.com/users/jfehrle/received_events","type":"User","site_admin":false},"created_at":"2020-07-04T03:08:51Z","updated_at":"2020-07-04T03:08:51Z","author_association":"CONTRIBUTOR","body":"These are the stack heap roots after the 12th major collection with over 100K reachable words.  Clearly a lot of data is shared between them.  The stack frame is shown only if it has a root of that size.  Full stack trace at the bottom.  Not comparable to the previous info.\r\n\r\nIf we use a point in the proof such as those @JasonGross suggests we will be able get repeatable results.  We could also add debug code to Coq if you wish.  The point where the stack heap roots jump from 22M to 375M words looks interesting.\r\n\r\n```\r\nCalled from file \"tactics/redexpr.ml\" (inlined), line 207, characters 29-40\r\n 356758154 item    0 (stack)\r\nCalled from file \"plugins/ltac/tacinterp.ml\", line 752, characters 6-51\r\n  17646719 item    0 (stack)\r\n    119041 item    1 (stack)\r\nCalled from file \"engine/logic_monad.ml\", line 195, characters 38-43\r\n    119130 item    0 (stack)\r\n 373378237 item    1 (stack)\r\nCalled from file \"engine/logic_monad.ml\", line 263, characters 6-27\r\n 373378344 item    0 (stack)\r\nCalled from file \"engine/logic_monad.ml\", line 263, characters 6-27\r\n 373378487 item    0 (stack)\r\nCalled from file \"engine/logic_monad.ml\", line 70, characters 36-42\r\n 373379751 item    0 (stack)\r\nCalled from file \"engine/logic_monad.ml\", line 70, characters 36-42\r\n 373382172 item    0 (stack)\r\nCalled from file \"engine/logic_monad.ml\", line 70, characters 36-42\r\n 373379532 item    0 (stack)\r\nCalled from file \"engine/logic_monad.ml\", line 70, characters 36-42\r\n 375174842 item    0 (stack)\r\nCalled from file \"engine/logic_monad.ml\", line 70, characters 36-42\r\n 373269394 item    0 (stack)\r\nCalled from file \"engine/logic_monad.ml\", line 70, characters 36-42\r\n 375780892 item    0 (stack)\r\nCalled from file \"engine/logic_monad.ml\", line 70, characters 36-42\r\n  22937285 item    0 (stack)\r\nCalled from file \"engine/logic_monad.ml\", line 70, characters 36-42\r\n  22944656 item    0 (stack)\r\nCalled from file \"engine/logic_monad.ml\", line 70, characters 36-42\r\n  21289070 item    0 (stack)\r\nCalled from file \"engine/logic_monad.ml\", line 70, characters 36-42\r\n  21393808 item    0 (stack)\r\nCalled from file \"engine/logic_monad.ml\", line 70, characters 36-42\r\n  20036562 item    0 (stack)\r\nCalled from file \"engine/logic_monad.ml\", line 70, characters 36-42\r\n  20148343 item    0 (stack)\r\nCalled from file \"engine/logic_monad.ml\", line 70, characters 36-42\r\n  17166662 item    0 (stack)\r\nCalled from file \"engine/logic_monad.ml\", line 70, characters 36-42\r\n  17094536 item    0 (stack)\r\nCalled from file \"engine/logic_monad.ml\", line 70, characters 36-42\r\n  17094701 item    0 (stack)\r\nCalled from file \"engine/logic_monad.ml\", line 70, characters 36-42\r\n  17094890 item    0 (stack)\r\nCalled from file \"engine/logic_monad.ml\", line 70, characters 36-42\r\n  17094347 item    0 (stack)\r\nCalled from file \"engine/logic_monad.ml\", line 70, characters 36-42\r\n  17094509 item    0 (stack)\r\nCalled from file \"engine/logic_monad.ml\", line 70, characters 36-42\r\n  17094375 item    0 (stack)\r\nCalled from file \"engine/logic_monad.ml\", line 70, characters 36-42\r\n  17093771 item    0 (stack)\r\nCalled from file \"engine/logic_monad.ml\", line 70, characters 36-42\r\n  17093933 item    0 (stack)\r\nCalled from file \"engine/logic_monad.ml\", line 70, characters 36-42\r\n  17093864 item    0 (stack)\r\nCalled from file \"engine/logic_monad.ml\", line 70, characters 36-42\r\n  17093723 item    0 (stack)\r\nCalled from file \"engine/logic_monad.ml\", line 70, characters 36-42\r\n  17093885 item    0 (stack)\r\nCalled from file \"engine/logic_monad.ml\", line 70, characters 36-42\r\n  17093941 item    0 (stack)\r\nCalled from file \"proofs/proof.ml\", line 386, characters 4-42\r\n    470499 item    0 (stack)\r\nCalled from file \"vernac/declare.ml\", line 1406, characters 20-33\r\n    470533 item    0 (stack)\r\nCalled from file \"vernac/vernacinterp.ml\", line 206, characters 20-60\r\n    467368 item    0 (stack)\r\nCalled from file \"stm/stm.ml\", line 2726, characters 4-60\r\n  33997361 item    0 (stack)\r\n    470506 item    2 (stack)\r\nminor_collections: 6019\r\nmajor_collections: 14\r\ncompactions:       1\r\n\r\nminor_words:    201545205708\r\npromoted_words:   1047623856\r\nmajor_words:      1089911789\r\n\r\ntop_heap_words: 828360192\r\nheap_words:     828360192\r\nlive_words:     397297801\r\nfree_words:     431062390\r\nlargest_free:    53718528\r\nfragments:              1\r\n\r\nlive_blocks: 147143065\r\nfree_blocks: 51\r\nheap_chunks: 55\r\nRaised by primitive operation at file \"toplevel/coqtop.ml\", line 167, characters 44-73\r\nCalled from file \"kernel/csymtable.ml\", line 200, characters 2-73\r\nCalled from file \"pretyping/vnorm.ml\", line 406, characters 10-39\r\nCalled from file \"tactics/redexpr.ml\" (inlined), line 207, characters 29-40\r\nCalled from file \"tactics/redexpr.ml\", line 220, characters 12-19\r\nCalled from file \"plugins/ltac/tacinterp.ml\", line 752, characters 6-51\r\nCalled from file \"plugins/ltac/tacinterp.ml\", line 1241, characters 31-69\r\nCalled from file \"engine/proofview.ml\", line 1277, characters 8-12\r\nCalled from file \"engine/logic_monad.ml\", line 195, characters 38-43\r\nCalled from file \"engine/logic_monad.ml\", line 263, characters 6-27\r\nCalled from file \"engine/logic_monad.ml\", line 263, characters 6-27\r\nCalled from file \"engine/logic_monad.ml\", line 70, characters 36-42\r\nCalled from file \"engine/logic_monad.ml\", line 70, characters 36-42\r\nCalled from file \"engine/logic_monad.ml\", line 70, characters 36-42\r\nCalled from file \"engine/logic_monad.ml\", line 70, characters 36-42\r\nCalled from file \"engine/logic_monad.ml\", line 70, characters 36-42\r\nCalled from file \"engine/logic_monad.ml\", line 70, characters 36-42\r\nCalled from file \"engine/logic_monad.ml\", line 70, characters 36-42\r\nCalled from file \"engine/logic_monad.ml\", line 70, characters 36-42\r\nCalled from file \"engine/logic_monad.ml\", line 70, characters 36-42\r\nCalled from file \"engine/logic_monad.ml\", line 70, characters 36-42\r\nCalled from file \"engine/logic_monad.ml\", line 70, characters 36-42\r\nCalled from file \"engine/logic_monad.ml\", line 70, characters 36-42\r\nCalled from file \"engine/logic_monad.ml\", line 70, characters 36-42\r\nCalled from file \"engine/logic_monad.ml\", line 70, characters 36-42\r\nCalled from file \"engine/logic_monad.ml\", line 70, characters 36-42\r\nCalled from file \"engine/logic_monad.ml\", line 70, characters 36-42\r\nCalled from file \"engine/logic_monad.ml\", line 70, characters 36-42\r\nCalled from file \"engine/logic_monad.ml\", line 70, characters 36-42\r\nCalled from file \"engine/logic_monad.ml\", line 70, characters 36-42\r\nCalled from file \"engine/logic_monad.ml\", line 70, characters 36-42\r\nCalled from file \"engine/logic_monad.ml\", line 70, characters 36-42\r\nCalled from file \"engine/logic_monad.ml\", line 70, characters 36-42\r\nCalled from file \"engine/logic_monad.ml\", line 70, characters 36-42\r\nCalled from file \"engine/logic_monad.ml\", line 70, characters 36-42\r\nCalled from file \"engine/logic_monad.ml\", line 70, characters 36-42\r\nCalled from file \"engine/logic_monad.ml\", line 120, characters 8-12\r\nCalled from file \"engine/proofview.ml\", line 232, characters 12-42\r\nCalled from file \"proofs/proof.ml\", line 386, characters 4-42\r\nCalled from file \"proofs/proof.ml\", line 560, characters 31-52\r\nCalled from file \"plugins/ltac/g_ltac.mlg\", line 371, characters 8-83\r\nCalled from file \"vernac/declare.ml\", line 1406, characters 20-33\r\nCalled from file \"plugins/ltac/g_ltac.mlg\", line 366, characters 23-576\r\nCalled from file \"vernac/vernacstate.ml\", line 87, characters 30-34\r\nCalled from file \"clib/option.ml\", line 103, characters 19-24\r\nCalled from file \"vernac/vernacinterp.ml\", line 206, characters 20-60\r\nCalled from file \"lib/system.ml\", line 280, characters 12-15\r\nCalled from file \"lib/flags.ml\", line 20, characters 14-17\r\nCalled from file \"vernac/vernacinterp.ml\", line 251, characters 18-43\r\nCalled from file \"vernac/vernacinterp.ml\", line 249, characters 6-279\r\nCalled from file \"stm/stm.ml\", line 2395, characters 20-47\r\nCalled from file \"stm/stm.ml\", line 2325, characters 10-14\r\nCalled from file \"stm/stm.ml\", line 973, characters 6-10\r\nCalled from file \"stm/stm.ml\", line 2545, characters 4-105\r\nCalled from file \"stm/stm.ml\", line 2726, characters 4-60\r\nCalled from file \"toplevel/vernac.ml\", line 71, characters 31-52\r\nCalled from file \"lib/flags.ml\", line 20, characters 14-17\r\nCalled from file \"lib/flags.ml\" (inlined), line 69, characters 19-40\r\nCalled from file \"toplevel/vernac.ml\", line 114, characters 8-69\r\nCalled from file \"toplevel/vernac.ml\", line 118, characters 6-19\r\nCalled from file \"toplevel/vernac.ml\", line 174, characters 30-88\r\nCalled from file \"toplevel/ccompile.ml\", line 151, characters 18-89\r\nCalled from file \"toplevel/ccompile.ml\" (inlined), line 217, characters 2-39\r\nCalled from file \"toplevel/ccompile.ml\", line 226, characters 4-41\r\nCalled from file \"list.ml\", line 110, characters 12-15\r\nCalled from file \"toplevel/coqc.ml\", line 48, characters 2-81\r\nCalled from file \"toplevel/coqc.ml\", line 70, characters 4-25\r\nCalled from file \"toplevel/coqc.ml\" (inlined), line 88, characters 2-30\r\nCalled from file \"topbin/coqc_bin.ml\", line 16, characters 2-14\r\nSegmentation fault (core dumped)\r\nMakefile.coq:719: recipe for target 'src/Specific/montgomery64_2e511m187_8limbs/femul.vo' failed\r\n```","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/653713692/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/655039755","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-655039755","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":655039755,"node_id":"MDEyOklzc3VlQ29tbWVudDY1NTAzOTc1NQ==","user":{"login":"jfehrle","id":1253341,"node_id":"MDQ6VXNlcjEyNTMzNDE=","avatar_url":"https://avatars.githubusercontent.com/u/1253341?v=4","gravatar_id":"","url":"https://api.github.com/users/jfehrle","html_url":"https://github.com/jfehrle","followers_url":"https://api.github.com/users/jfehrle/followers","following_url":"https://api.github.com/users/jfehrle/following{/other_user}","gists_url":"https://api.github.com/users/jfehrle/gists{/gist_id}","starred_url":"https://api.github.com/users/jfehrle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jfehrle/subscriptions","organizations_url":"https://api.github.com/users/jfehrle/orgs","repos_url":"https://api.github.com/users/jfehrle/repos","events_url":"https://api.github.com/users/jfehrle/events{/privacy}","received_events_url":"https://api.github.com/users/jfehrle/received_events","type":"User","site_admin":false},"created_at":"2020-07-07T18:20:19Z","updated_at":"2020-07-07T18:53:17Z","author_association":"CONTRIBUTOR","body":"Looks like the evar map is indeed the issue.  I'll try to break it down further.\r\n\r\n```\r\ndefn_evars size = 95873\r\ndefn_evars words = 356349945\r\nundf_evars size = 19\r\nundf_evars words = 1222952\r\nfuture_goals size = 203\r\nfuture_goals words = 609\r\nevar map: 357913708 reachable words\r\n```","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/655039755/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/655147918","html_url":"https://github.com/coq/coq/issues/12487#issuecomment-655147918","issue_url":"https://api.github.com/repos/coq/coq/issues/12487","id":655147918,"node_id":"MDEyOklzc3VlQ29tbWVudDY1NTE0NzkxOA==","user":{"login":"jfehrle","id":1253341,"node_id":"MDQ6VXNlcjEyNTMzNDE=","avatar_url":"https://avatars.githubusercontent.com/u/1253341?v=4","gravatar_id":"","url":"https://api.github.com/users/jfehrle","html_url":"https://github.com/jfehrle","followers_url":"https://api.github.com/users/jfehrle/followers","following_url":"https://api.github.com/users/jfehrle/following{/other_user}","gists_url":"https://api.github.com/users/jfehrle/gists{/gist_id}","starred_url":"https://api.github.com/users/jfehrle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jfehrle/subscriptions","organizations_url":"https://api.github.com/users/jfehrle/orgs","repos_url":"https://api.github.com/users/jfehrle/repos","events_url":"https://api.github.com/users/jfehrle/events{/privacy}","received_events_url":"https://api.github.com/users/jfehrle/received_events","type":"User","site_admin":false},"created_at":"2020-07-07T21:34:40Z","updated_at":"2020-07-07T21:34:40Z","author_association":"CONTRIBUTOR","body":"@JasonGross Where is `synthesize_mul` defined?  I wanted to instrument that to figure out what tactics cause the huge increase in memory use between these two stack frames.  At the moment, I dump the evar info before any work is done in `solve_post_reified_side_conditions`.\r\n\r\n```\r\nCalled from file \"engine/logic_monad.ml\", line 70, characters 36-42\r\n 375780892 item    0 (stack)\r\nCalled from file \"engine/logic_monad.ml\", line 70, characters 36-42\r\n  22937285 item    0 (stack)\r\n```","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/655147918/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]