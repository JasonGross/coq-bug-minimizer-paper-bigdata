Comment author: @JasonGross
```coq
Section foo.
  Let typeof T (_ : T) := T.
  Fail Arguments typeof / . (* Error: in : Modifiers of the behavior of the simpl tactic are relevant for constants only. *)
  Goal typeof _ 1 = nat.
    simpl. (* I want to see [nat = nat] *)
```

Comment author: @gares

The status of "constants" generated by Let is unfortunate.

In trunk you can use "Local Definition" instead of "Let" to obtain
a constant that does not pollute the global name space (once the section is closed) but that is a real constant, and hence accepts Arguments directives.

ciao


Comment author: @JasonGross

Will there then be a reason to keep [Let], other than backwards compatibility?  I have found that I always prefer local aliases ([Local Notation foo := ...]) over [Let], when I can get away with it (that is, I want them to be auto-unfolded and inlined at the end of section, rather than just getting a [let ... in]), unless it's an opaque lemma, in which case I think [Local Lemma]/[Local Definition] fits the bill nicely.  Can I use the same name for a [Local Definition] in multiple sections in the same file?


