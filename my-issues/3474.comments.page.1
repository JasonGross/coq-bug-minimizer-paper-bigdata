[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337521787","html_url":"https://github.com/coq/coq/issues/3474#issuecomment-337521787","issue_url":"https://api.github.com/repos/coq/coq/issues/3474","id":337521787,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMTc4Nw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-08-01T15:18:45Z","updated_at":"2017-10-18T09:24:55Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nI would like a tactical [fail_harder] (or some other name) that, when passed an argument [tac], will:\n- if [tac] is a constr, [fail_harder tac] should evaluate to [tac]\n- if [tac] is a tactic, and running [tac] succeeds, running [fail_harder tac] should also succeed\n- if [tac] is a tactic, and running [tac] fails at level [n] with message [msg], then running [fail_harder tac] should fail at level [n + 1] with message [msg]\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337521787/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337521788","html_url":"https://github.com/coq/coq/issues/3474#issuecomment-337521788","issue_url":"https://api.github.com/repos/coq/coq/issues/3474","id":337521788,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMTc4OA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-08-06T10:10:51Z","updated_at":"2017-10-18T09:24:55Z","author_association":"CONTRIBUTOR","body":"Comment author: @aspiwack\n\nI think it is a bit too specific, I would rather you do a plugin on that. Bumping failure level is easy (see the available tactics in proofs/proofview.mli, and the definitions used by Ltac in the submodule New of tactics/tactics.ml). You will find it harder to deal with the possibility of a constr.\n\nPlease reopen if you think you have a compelling case for this.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337521788/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337521789","html_url":"https://github.com/coq/coq/issues/3474#issuecomment-337521789","issue_url":"https://api.github.com/repos/coq/coq/issues/3474","id":337521789,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMTc4OQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-12-06T19:49:51Z","updated_at":"2017-10-18T09:24:55Z","author_association":"CONTRIBUTOR","body":"Comment author: @jonleivent\n\nJason, \n\nI think I have found the tactic you want.  It uses the fact that fail N  \"neutralizes\" the M preceeding \"+\" tacticals before becoming fail N-M with respect to throwing out of a construct.  Thus, if one generates the proper M preceding \"+\" tacticals by recursion, the next fail N becomes fail N-M with respect to its behavior prior to those generated \"+\" tacticals.\n\nSo, fail_harder can take an arg saying how much harder:\n\nLtac fail_harder N :=\nlet n := eval compute in N in \nlet rec f m := \n  lazymatch m with (S ?m') => (idtac + fail);f m' | _ => idtac end in\n  f n.\n\nTactic Notation \"test_fail_harder\" constr(N) int_or_var(M) :=\ntry (try (try (fail_harder N; idtac 0; fail M); idtac 1); idtac 2).\n\nGoal True.\ntest_fail_harder 1 2. (*test with different values*)\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337521789/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337521790","html_url":"https://github.com/coq/coq/issues/3474#issuecomment-337521790","issue_url":"https://api.github.com/repos/coq/coq/issues/3474","id":337521790,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMTc5MA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-12-06T19:56:23Z","updated_at":"2017-10-18T09:24:56Z","author_association":"CONTRIBUTOR","body":"Comment author: @jonleivent\n\nOh - never mind.  This fail_harder tactic is obviously really just a fail_easier - but that's trivial to do other ways.  Sorry.\n\nAnyway - if you develop a fail_harder plugin, please share.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337521790/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337521791","html_url":"https://github.com/coq/coq/issues/3474#issuecomment-337521791","issue_url":"https://api.github.com/repos/coq/coq/issues/3474","id":337521791,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMTc5MQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-12-08T20:18:23Z","updated_at":"2017-10-18T09:24:56Z","author_association":"CONTRIBUTOR","body":"Comment author: @jonleivent\n\nHere's a workaround for some cases:\n\nTactic Notation \n  \"if\" tactic3(cond) \"then\" tactic3(tpart) \"else\" tactic3(epart) :=\n  let R := fresh in\n  first [cond; set (R:=true) | set (R:=false)];\n  let x := eval cbv delta in R in \n  clear R; lazymatch x with true => tpart | false => epart end.\n\nThis if-then-else tactical avoids capturing fails from the then or else parts by first converting the condition into a boolean and lazymatching on that.\n\nI'm not sure if this idiom can be used in all cases where one wants to avoid capturing a fail.  But, maybe it covers the most likely cases.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337521791/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337521792","html_url":"https://github.com/coq/coq/issues/3474#issuecomment-337521792","issue_url":"https://api.github.com/repos/coq/coq/issues/3474","id":337521792,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMTc5Mg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-12-08T20:29:01Z","updated_at":"2017-10-18T09:24:56Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\n> This if-then-else tactical avoids capturing fails from the then or else\n> parts by first converting the condition into a boolean and lazymatching on\n> that.\n\nNice!  Thanks!  Presumably combining this with [test] (https://github.com/JasonGross/coq-tactics/blob/master/Common.v#L25) to not have [cond] give side-effects if desired.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337521792/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]