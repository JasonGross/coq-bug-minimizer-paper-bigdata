[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337515167","html_url":"https://github.com/coq/coq/issues/3080#issuecomment-337515167","issue_url":"https://api.github.com/repos/coq/coq/issues/3080","id":337515167,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUxNTE2Nw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2013-07-02T18:36:30Z","updated_at":"2017-10-18T09:05:49Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nI would like a way to do the following without the [%function]:\n\nDelimit Scope function_scope with function.\n(*Bind Scope function_scope with Funclass.*)\nDefinition foo (A : Type -> Type) := A.\nNotation \"f 'o' g\" := (fun x => f (g x)) (at level 40, left associativity) : function_scope.\nCheck foo (@ id Type o @ id Type)%function.\n\nI think it would be conceptually cleaner to demote the special status of [type_scope] and define it very early on as [Bind Scope type_scope with Sortclass.]  Then you could add something like [Bind Scope function_scope with Funclass.], and [Delimit Scope function_scope with function.] to, e.g., Notations.v.  Alternatively, if this is actually more complicated or not worth the effort, I'd like to see a [function_scope] like [type_scope], so that in the above code, [Print foo.] would give [Argument scopes are [function_scope type_scope]] rather than [Argument scopes are [_ type_scope]].\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337515167/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337515168","html_url":"https://github.com/coq/coq/issues/3080#issuecomment-337515168","issue_url":"https://api.github.com/repos/coq/coq/issues/3080","id":337515168,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUxNTE2OA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-02-03T01:02:53Z","updated_at":"2017-10-18T09:05:49Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nHow hard is this to implement (either adding [Bind Scope foo_scope with Sortclass] and [Bind Scope foo_scope with Funclass], or, failing that, adding a special [function_scope] which is like [type_scope])?  Any chance this could make it in to the next 8.5 beta?  (Or if you point me to the code that does [type_scope], I could possibly submit a pull request?)\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337515168/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337515170","html_url":"https://github.com/coq/coq/issues/3080#issuecomment-337515170","issue_url":"https://api.github.com/repos/coq/coq/issues/3080","id":337515170,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUxNTE3MA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-04-17T15:19:25Z","updated_at":"2017-10-18T09:05:50Z","author_association":"CONTRIBUTOR","body":"Comment author: @herbelin\n\nThis can probably be experimented by hacking the function Notation.compute_scope_class, adding a field ScopeFun to the type Notation.scope_class.\n\nNote that type_scope is known internally, before any .v file is loaded, so as to interpret terms which are known at parsing time to be types. So, it is a priori difficult to have it defined in a .v file.\n\nHope it helps.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337515170/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337515172","html_url":"https://github.com/coq/coq/issues/3080#issuecomment-337515172","issue_url":"https://api.github.com/repos/coq/coq/issues/3080","id":337515172,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUxNTE3Mg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-05-09T16:08:50Z","updated_at":"2017-10-18T09:05:50Z","author_association":"CONTRIBUTOR","body":"Comment author: @ppedrot\n\nThis has been fixed by 16536fd734, right?\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337515172/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]