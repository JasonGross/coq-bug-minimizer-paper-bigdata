[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337523283","html_url":"https://github.com/coq/coq/issues/3566#issuecomment-337523283","issue_url":"https://api.github.com/repos/coq/coq/issues/3566","id":337523283,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMzI4Mw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-09-02T02:43:12Z","updated_at":"2017-10-18T09:29:18Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\n(* File reduced by coq-bug-finder from original input, then from 5098 lines to 133 lines, then from 142 lines to 113 lines, then from 76 lines to 25 lines *)\n(* coqc version trunk (August 2014) compiled on Aug 31 2014 10:12:32 with OCaml 4.01.0\n   coqtop version cagnode17:/afs/csail.mit.edu/u/j/jgross/coq-trunk,trunk (437b91a3ffd7327975a129b95b24d3f66ad7f3e4) *)\n\nNotation idmap := (fun x => x).\nInductive paths {A : Type} (a : A) : A -> Type := idpath : paths a a.\nArguments idpath {A a} , [A] a.\nNotation \"x = y :> A\" := (@ paths A x y) : type_scope.\nNotation \"x = y\" := (x = y :>_) : type_scope.\nDelimit Scope path_scope with path.\nDefinition concat {A : Type} {x y z : A} (p : x = y) (q : y = z) : x = z := match p, q with idpath, idpath => idpath end.\nDefinition inverse {A : Type} {x y : A} (p : x = y) : y = x := match p with idpath => idpath end.\nNotation \"p @  q\" := (concat p q) (at level 20) : path_scope.\nNotation \"p ^\" := (inverse p) (at level 3, format \"p '^'\") : path_scope.\nClass IsEquiv {A B : Type} (f : A -> B) := {}.\nAxiom path_universe : forall {A B : Type} (f : A -> B) {feq : IsEquiv f}, (A = B).\n\nDefinition Lift : Type@ {i} -> Type@ {j}\n  := Eval hnf in let lt := Type@ {i} : Type@ {j} in fun T => T.\n\nDefinition lift {T} : T -> Lift T := fun x => x.\n\nGoal forall x y : Type, x = y.\n  intros.\n  pose proof ((fun H0 : idmap _ => (@ path_universe _ _ (@ lift x) (H0 x) @  (@ path_universe _ _ (@ lift y) (H0 y))^)))%path as H''.\n(* Anomaly: Uncaught exception Term.DestKO(_). Please report. *)\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337523283/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]