[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337516653","html_url":"https://github.com/coq/coq/issues/3171#issuecomment-337516653","issue_url":"https://api.github.com/repos/coq/coq/issues/3171","id":337516653,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUxNjY1Mw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2013-11-30T22:44:09Z","updated_at":"2017-10-18T09:10:15Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nPlease support mix-in modules, so that if I want to take the structure\n\n$ cat A/A.v\n$ cat A/B.v\nRequire Import B.A.\n$ cat B/A.v\nRequire Import A.A.\n$ cat B/B.v\nRequire Import A.B.\n\nand put it in a single file, I need to do:\n\nModule _A_1.\n  Module A.\n  End A.\nEnd _A_1.\nModule _B_1.\n  Module A.\n    Require Import _A_1.A.\n  End A.\nEnd _B_1.\nModule A.\n  Include _A_1.\n  Module B.\n    Require Import _B_1.A.\n  End B.\nEnd A.\nModule B.\n  Include _B_1.\n  Module B.\n    Require Import A.B.\n  End B.\nEnd B.\n\nThis is terrible.  If files are actually modules, then Coq should support mix-in modules (directories).  It would not be terrible if these mix-in modules could only contain modules (no parameters/definitions/etc), but it would be preferable to have namespaces.  If not, Coq should have a better story for namespacing in general.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337516653/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337516654","html_url":"https://github.com/coq/coq/issues/3171#issuecomment-337516654","issue_url":"https://api.github.com/repos/coq/coq/issues/3171","id":337516654,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUxNjY1NA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2013-11-30T22:56:37Z","updated_at":"2021-06-20T17:08:42Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\r\n\r\nThat's not quite right, though, see e.g. #1736.  Perhaps what I want is the ability to declare module names with dots in them, so that I can do\r\n```\r\nModule A.B.\r\n  ...\r\nEnd A.B.\r\n```\r\nAnd this will create a \"mix-in\" module \"A\" with a module \"B\" inside of it, mimicing directory structure.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337516654/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/864583488","html_url":"https://github.com/coq/coq/issues/3171#issuecomment-864583488","issue_url":"https://api.github.com/repos/coq/coq/issues/3171","id":864583488,"node_id":"MDEyOklzc3VlQ29tbWVudDg2NDU4MzQ4OA==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2021-06-20T17:02:28Z","updated_at":"2021-06-21T20:36:58Z","author_association":"MEMBER","body":"I guess a more precise version of this request is that I'd like to be able to write something like\r\n```coq\r\nAbsoluteModule A.B.C.\r\nEnd A.B.C.\r\n```\r\nand have Coq create a module `C` with the [`ModPath.t`](https://github.com/coq/coq/blob/76e20b5efcf4ad8ff75a64d40c1280565eb3330e/kernel/names.ml#L276-L281) kernel name `MPdot(MPfile [\"B\"; \"A\"], \"C\")`.  I'm fine if this feature is marked unsafe or low-level or undocumented or something like that, but it's really quite essential to being able to inline files in Coq.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/864583488/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]