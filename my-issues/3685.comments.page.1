[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337525220","html_url":"https://github.com/coq/coq/issues/3685#issuecomment-337525220","issue_url":"https://api.github.com/repos/coq/coq/issues/3685","id":337525220,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNTIyMA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-09-30T17:13:47Z","updated_at":"2017-10-18T09:34:47Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\n(* File reduced by coq-bug-finder from original input, then from 14001 lines to 844 lines, then from 848 lines to 524 lines, then fro\\\nm 525 lines to 336 lines, then from 259 lines to 186 lines, then from 98 lines to 64 lines *)\n(* coqc version trunk (September 2014) compiled on Sep 29 2014 14:5:39 with OCaml 4.01.0\n   coqtop version cagnode16:/afs/csail.mit.edu/u/j/jgross/coq-HoTT,(no branch) (e8726550e01e51ef3ccf8602f2ecbe2b3737cca3) *)\n\nSet Universe Polymorphism.\nClass Funext := { }.\nDelimit Scope category_scope with category.\nRecord PreCategory := { object :> Type ; morphism : object -> object -> Type }.\nSet Implicit Arguments.\nRecord Functor (C D : PreCategory) :=\n  { object_of :> C -> D;\n    morphism_of : forall s d, morphism C s d -> morphism D (object_of s) (object_of d);\n    identity_of : forall s m, morphism_of s s m = morphism_of s s m }.\nDefinition sub_pre_cat `{Funext} (P : PreCategory -> Type) : PreCategory.\nProof.\n  exact (@ Build_PreCategory PreCategory Functor).\nDefined.\nDefinition opposite (C : PreCategory) : PreCategory.\nProof.\n  exact (@ Build_PreCategory C (fun s d => morphism C d s)).\nDefined.\nLocal Notation \"C ^op\" := (opposite C) (at level 3, format \"C '^op'\") : category_scope.\nDefinition prod (C D : PreCategory) : PreCategory.\nProof.\n  refine (@ Build_PreCategory\n            (C * D)%type\n            (fun s d => (morphism C (fst s) (fst d) * morphism D (snd s) (snd d))%type)).\nDefined.\nLocal Infix \"*\" := prod : category_scope.\nRecord NaturalTransformation C D (F G : Functor C D) := {}.\nDefinition functor_category (C D : PreCategory) : PreCategory.\nProof.\n  exact (@ Build_PreCategory (Functor C D) (@ NaturalTransformation C D)).\nDefined.\nLocal Notation \"C -> D\" := (functor_category C D) : category_scope.\nModule Export PointwiseCore.\n  Local Open Scope category_scope.\n  Definition pointwise\n             (C C' : PreCategory)\n             (F : Functor C' C)\n             (D D' : PreCategory)\n             (G : Functor D D')\n  : Functor (C -> D) (C' -> D').\n  Proof.\n    refine (Build_Functor\n              (C -> D) (C' -> D')\n              _\n              _\n              _);\n    abstract admit.\n  Defined.\nEnd PointwiseCore.\nAxiom Pidentity_of : forall (C D : PreCategory) (F : Functor C C) (G : Functor D D), pointwise F G = pointwise F G.\nLocal Open Scope category_scope.\nModule Success.\n  Definition functor_uncurried `{Funext} (P : PreCategory -> Type)\n             (has_functor_categories : forall C D : sub_pre_cat P, P (C -> D))\n  : object (((sub_pre_cat P)^op * (sub_pre_cat P)) -> (sub_pre_cat P))\n    := Eval cbv zeta in\n        let object_of := (fun CD => (((fst CD) -> (snd CD))))\n        in Build_Functor\n             ((sub_pre_cat P)^op * (sub_pre_cat P)) (sub_pre_cat P)\n             object_of\n             (fun CD C'D' FG => pointwise (fst FG) (snd FG))\n             (fun _ _ => @ Pidentity_of _ _ _ _).\nEnd Success.\nModule Bad.\n  Include PointwiseCore.\n  Fail Definition functor_uncurried `{Funext} (P : PreCategory -> Type)\n             (has_functor_categories : forall C D : sub_pre_cat P, P (C -> D))\n  : object (((sub_pre_cat P)^op * (sub_pre_cat P)) -> (sub_pre_cat P))\n    := Eval cbv zeta in\n        let object_of := (fun CD => (((fst CD) -> (snd CD))))\n        in Build_Functor\n             ((sub_pre_cat P)^op * (sub_pre_cat P)) (sub_pre_cat P)\n             object_of\n             (fun CD C'D' FG => pointwise (fst FG) (snd FG))\n             (fun _ _ => @ Pidentity_of _ _ _ _).\n  (* Toplevel input, characters 15-541:\nError: Illegal application:\nThe term \"Build_Functor\" of type\n \"forall (C D : PreCategory) (object_of : C -> D)\n    (morphism_of : forall s d : C,\n                   morphism C s d -> morphism D (object_of s) (object_of d)),\n  (forall (s : C) (m : morphism C s s), morphism_of s s m = morphism_of s s m) ->\n  Functor C D\"\ncannot be applied to the terms\n \"(sub_pre_cat P)^op * sub_pre_cat P\" : \"PreCategory\"\n \"sub_pre_cat P\" : \"PreCategory\"\n \"fun CD : PreCategory * PreCategory => fst CD -> snd CD\"\n   : \"(PreCategory * PreCategory -> PreCategory)%type\"\n \"fun (CD C'D' : ((sub_pre_cat P)^op * sub_pre_cat P)%category)\n    (FG : morphism ((sub_pre_cat P)^op * sub_pre_cat P) CD C'D') =>\n  pointwise (fst FG) (snd FG)\"\n   : \"forall CD C'D' : ((sub_pre_cat P)^op * sub_pre_cat P)%category,\n      morphism ((sub_pre_cat P)^op * sub_pre_cat P) CD C'D' ->\n      Functor (fst CD -> snd CD) (fst C'D' -> snd C'D')\"\n \"fun (s : ((sub_pre_cat P)^op * sub_pre_cat P)%category)\n    (m : morphism ((sub_pre_cat P)^op * sub_pre_cat P) s s) =>\n  Pidentity_of (fst m) (snd m)\"\n   : \"forall (s : ((sub_pre_cat P)^op * sub_pre_cat P)%category)\n        (m : morphism ((sub_pre_cat P)^op * sub_pre_cat P) s s),\n      PointwiseCore.pointwise (fst m) (snd m) =\n      PointwiseCore.pointwise (fst m) (snd m)\"\nThe 5th term has type\n \"forall (s : ((sub_pre_cat P)^op * sub_pre_cat P)%category)\n    (m : morphism ((sub_pre_cat P)^op * sub_pre_cat P) s s),\n  PointwiseCore.pointwise (fst m) (snd m) =\n  PointwiseCore.pointwise (fst m) (snd m)\" which should be coercible to\n \"forall (s : ((sub_pre_cat P)^op * sub_pre_cat P)%category)\n    (m : morphism ((sub_pre_cat P)^op * sub_pre_cat P) s s),\n  (fun (CD C'D' : ((sub_pre_cat P)^op * sub_pre_cat P)%category)\n     (FG : morphism ((sub_pre_cat P)^op * sub_pre_cat P) CD C'D') =>\n   pointwise (fst FG) (snd FG)) s s m =\n  (fun (CD C'D' : ((sub_pre_cat P)^op * sub_pre_cat P)%category)\n     (FG : morphism ((sub_pre_cat P)^op * sub_pre_cat P) CD C'D') =>\n   pointwise (fst FG) (snd FG)) s s m\".\n*)\nEnd Bad.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337525220/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337525222","html_url":"https://github.com/coq/coq/issues/3685#issuecomment-337525222","issue_url":"https://api.github.com/repos/coq/coq/issues/3685","id":337525222,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNTIyMg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-07-10T11:45:12Z","updated_at":"2017-10-18T09:34:47Z","author_association":"CONTRIBUTOR","body":"Comment author: @maximedenes\n\nSeems fixed in v8.5 branch. Jason, can you confirm?\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337525222/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337525223","html_url":"https://github.com/coq/coq/issues/3685#issuecomment-337525223","issue_url":"https://api.github.com/repos/coq/coq/issues/3685","id":337525223,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNTIyMw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-07-17T16:45:40Z","updated_at":"2017-10-18T09:34:47Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nThis is still broken in fdd6a17b272995237c9f95fc465bb1ff6871bedc, though I have to add [Axiom proof_admitted : False. Ltac admit := case proof_admitted.] to the top.  That is, if I remove the [Fail], the [Definition] still fails.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337525223/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337525224","html_url":"https://github.com/coq/coq/issues/3685#issuecomment-337525224","issue_url":"https://api.github.com/repos/coq/coq/issues/3685","id":337525224,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNTIyNA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-07-18T10:57:06Z","updated_at":"2017-10-18T09:34:47Z","author_association":"CONTRIBUTOR","body":"Comment author: @maximedenes\n\nI can't reproduce it. I tried both coqtop and coqc. What flags are you using? And what filename (just in case)?\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337525224/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337525227","html_url":"https://github.com/coq/coq/issues/3685#issuecomment-337525227","issue_url":"https://api.github.com/repos/coq/coq/issues/3685","id":337525227,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNTIyNw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-07-18T18:34:19Z","updated_at":"2017-10-18T09:34:48Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nCreated attachment 607\nbash script that reproduces the output\n\nI've attached a script that writes the file and invokes coqc.  When I run this script, I get:\n\n$ ~/public_html/tmp/3685.sh\nCOQBIN=\n/afs/csail.mit.edu/u/j/jgross/.local64/bin/coqc\nThe Coq Proof Assistant, version 8.5beta2 (July 2015)\ncompiled on Jul 17 2015 9:42:12 with OCaml 4.01.0\nWelcome to Coq cagnode13:/afs/csail.mit.edu/u/j/jgross/coq-8.5,v8.5 (fdd6a17b272995237c9f95fc465bb1ff6871bedc)\n\nCoq < Coq <\nFile \"/tmp/bug3685.v\", line 70, characters 2-532:\nError: Illegal application:\nThe term \"Build_Functor\" of type\n \"forall (C D : PreCategory) (object_of : C -> D)\n    (morphism_of : forall s d : C,\n                   morphism C s d -> morphism D (object_of s) (object_of d)),\n  (forall (s : C) (m : morphism C s s), morphism_of s s m = morphism_of s s m) ->\n  Functor C D\"\ncannot be applied to the terms\n \"(sub_pre_cat P)^op * sub_pre_cat P\" : \"PreCategory\"\n \"sub_pre_cat P\" : \"PreCategory\"\n \"fun CD : PreCategory * PreCategory => fst CD -> snd CD\"\n   : \"(PreCategory * PreCategory -> PreCategory)%type\"\n \"fun (CD C'D' : ((sub_pre_cat P)^op * sub_pre_cat P)%category)\n    (FG : morphism ((sub_pre_cat P)^op * sub_pre_cat P) CD C'D') =>\n  pointwise (fst FG) (snd FG)\"\n   : \"forall CD C'D' : ((sub_pre_cat P)^op * sub_pre_cat P)%category,\n      morphism ((sub_pre_cat P)^op * sub_pre_cat P) CD C'D' ->\n      Functor (fst CD -> snd CD) (fst C'D' -> snd C'D')\"\n \"fun (s : ((sub_pre_cat P)^op * sub_pre_cat P)%category)\n    (m : morphism ((sub_pre_cat P)^op * sub_pre_cat P) s s) =>\n  Pidentity_of (fst m) (snd m)\"\n   : \"forall (s : ((sub_pre_cat P)^op * sub_pre_cat P)%category)\n        (m : morphism ((sub_pre_cat P)^op * sub_pre_cat P) s s),\n      PointwiseCore.pointwise (fst m) (snd m) =\n      PointwiseCore.pointwise (fst m) (snd m)\"\nThe 5th term has type\n \"forall (s : ((sub_pre_cat P)^op * sub_pre_cat P)%category)\n    (m : morphism ((sub_pre_cat P)^op * sub_pre_cat P) s s),\n  PointwiseCore.pointwise (fst m) (snd m) =\n  PointwiseCore.pointwise (fst m) (snd m)\" which should be coercible to\n \"forall (s : ((sub_pre_cat P)^op * sub_pre_cat P)%category)\n    (m : morphism ((sub_pre_cat P)^op * sub_pre_cat P) s s),\n  (fun (CD C'D' : ((sub_pre_cat P)^op * sub_pre_cat P)%category)\n     (FG : morphism ((sub_pre_cat P)^op * sub_pre_cat P) CD C'D') =>\n   pointwise (fst FG) (snd FG)) s s m =\n  (fun (CD C'D' : ((sub_pre_cat P)^op * sub_pre_cat P)%category)\n     (FG : morphism ((sub_pre_cat P)^op * sub_pre_cat P) CD C'D') =>\n   pointwise (fst FG) (snd FG)) s s m\".\n$?=1\n\n> Attached file: [3685.sh](https://coq.inria.fr/bugfiles/attachment.cgi?id=607) (text/plain, 6147 bytes)\n> Description:   bash script that reproduces the output\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337525227/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337525228","html_url":"https://github.com/coq/coq/issues/3685#issuecomment-337525228","issue_url":"https://api.github.com/repos/coq/coq/issues/3685","id":337525228,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNTIyOA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-07-18T21:26:24Z","updated_at":"2017-10-18T09:34:48Z","author_association":"CONTRIBUTOR","body":"Comment author: @maximedenes\n\nThanks Jason! Not sure why I failed to reproduce it earlier, sorry about that.\nAnyway, the problem vanishes after replacing \"pointwise\" by \"PointwiseCore.pointwise\" in the module \"Bad\". So something seems broken with constant aliases.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337525228/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337525229","html_url":"https://github.com/coq/coq/issues/3685#issuecomment-337525229","issue_url":"https://api.github.com/repos/coq/coq/issues/3685","id":337525229,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNTIyOQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-07-18T21:34:10Z","updated_at":"2017-10-18T09:34:48Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nRight, it's only the constant generated by the module [Include] that breaks things.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337525229/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337525230","html_url":"https://github.com/coq/coq/issues/3685#issuecomment-337525230","issue_url":"https://api.github.com/repos/coq/coq/issues/3685","id":337525230,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNTIzMA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-09-16T09:45:25Z","updated_at":"2017-10-18T09:34:48Z","author_association":"CONTRIBUTOR","body":"Comment author: @silene\n\nHere is a bit reduced testcase. The fundamental parts to reproduce the bug are:\n- sub_pre_cat needs to have a dummy argument (???),\n- baz needs to be universe-polymorphic and part of the module of pointwise.\n\nClass Funext : Prop := { }.\nContext {foo : Funext}.\nPolymorphic Record PreCategory := { object :> Type ; morphism : object -> Type }.\nPolymorphic Record Functor (C : PreCategory) :=\n  { object_of :> C -> C;\n    morphism_of : forall s, morphism C (object_of s);\n    identity_of : forall (s : C), morphism_of s = morphism_of s }.\nDefinition sub_pre_cat `{Funext} := Build_PreCategory PreCategory Functor.\nDefinition functor_category C := Build_PreCategory (Functor C) (fun _ => True).\nModule PointwiseCore.\n  Polymorphic Axiom baz : PreCategory -> False.\n  Definition pointwise (C : PreCategory) :=\n    Build_Functor (functor_category C) (match baz C with end) (fun _ => I) (fun _ => eq_refl).\nEnd PointwiseCore.\nAxiom Pidentity_of : forall C : PreCategory,\n  PointwiseCore.pointwise C = PointwiseCore.pointwise C.\nModule Success.\n  Import PointwiseCore.\n  Definition functor_uncurried := Build_Functor sub_pre_cat _ pointwise Pidentity_of.\nEnd Success.\nModule Bad.\n  Include PointwiseCore.\n  Definition functor_uncurried := Build_Functor sub_pre_cat _ pointwise Pidentity_of.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337525230/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337525231","html_url":"https://github.com/coq/coq/issues/3685#issuecomment-337525231","issue_url":"https://api.github.com/repos/coq/coq/issues/3685","id":337525231,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNTIzMQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-09-16T12:48:38Z","updated_at":"2017-10-18T09:34:48Z","author_association":"CONTRIBUTOR","body":"Comment author: @silene\n\nMatthieu, it seems like there is something strange going on with universe levels/constraints there. As mentioned, the last definition does not go through:\n\nDefinition functor_uncurried := Build_Functor sub_pre_cat _ pointwise Pidentity_of. (* failure *)\n\nBut if you add the following dummy definitions before it, the last one magically goes through:\n\nDefinition dummy := Build_Functor sub_pre_cat _ pointwise.\nDefinition dummy':= dummy Pidentity_of.\nDefinition functor_uncurried := Build_Functor sub_pre_cat _ pointwise Pidentity_of. (* success *)\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337525231/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337525233","html_url":"https://github.com/coq/coq/issues/3685#issuecomment-337525233","issue_url":"https://api.github.com/repos/coq/coq/issues/3685","id":337525233,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNTIzMw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-09-30T17:07:04Z","updated_at":"2017-10-18T09:34:48Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nFix in 8.5 coming up.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337525233/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]