[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337544778","html_url":"https://github.com/coq/coq/issues/4901#issuecomment-337544778","issue_url":"https://api.github.com/repos/coq/coq/issues/4901","id":337544778,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0NDc3OA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-07-05T20:04:41Z","updated_at":"2022-02-03T15:10:48Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\r\n~~~coq\r\nRequire Import Coq.NArith.NArith Coq.Arith.Div2.\r\nSet Implicit Arguments.\r\nSet Asymmetric Patterns.\r\n\r\nInductive word : nat -> Set :=\r\n| WO : word O\r\n| WS : bool -> forall n, word n -> word (S n).\r\n\r\nFixpoint mod2 (n : nat) : bool :=\r\n  match n with\r\n    | 0 => false\r\n    | 1 => true\r\n    | S (S n') => mod2 n'\r\n  end.\r\n\r\nFixpoint wordToN sz (w : word sz) : N :=\r\n  match w with\r\n    | WO => 0\r\n    | WS false _ w' => 2 * wordToN w'\r\n    | WS true _ w' => Nsucc (2 * wordToN w')\r\n  end%N.\r\n\r\nFixpoint natToWord (sz n : nat) : word sz :=\r\n  match sz with\r\n    | O => WO\r\n    | S sz' => WS (mod2 n) (natToWord sz' (div2 n))\r\n  end.\r\n\r\nDefinition foo (n n0 : nat)\r\n           (_32 := 32)\r\n           (_4 : nat) (P : Set) (w : forall _ : N, P)\r\n  : @ eq P (w (@ wordToN _32 (natToWord _32 (n + n0)%nat))) (w (@ wordToN _32 (natToWord _32 (n * _4)%nat))).\r\n  Time Timeout 1 repeat esplit.\r\n~~~\r\nIf you change [32] to [13], it'll take a bit under a second.  Increasing the value by 1 seems to double the time it takes for unification to fail.  In 8.4, it's instantaneous for [32].\r\n\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337544778/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337544779","html_url":"https://github.com/coq/coq/issues/4901#issuecomment-337544779","issue_url":"https://api.github.com/repos/coq/coq/issues/4901","id":337544779,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0NDc3OQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-10-04T11:48:12Z","updated_at":"2017-10-18T10:33:14Z","author_association":"CONTRIBUTOR","body":"Comment author: @herbelin\n\nA bisection would be useful here. Could you?\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337544779/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337544780","html_url":"https://github.com/coq/coq/issues/4901#issuecomment-337544780","issue_url":"https://api.github.com/repos/coq/coq/issues/4901","id":337544780,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0NDc4MA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-10-08T01:04:06Z","updated_at":"2017-10-18T10:33:14Z","author_association":"CONTRIBUTOR","body":"Comment author: @ppedrot\n\nErm, it also diverges in 8.4 for me...\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337544780/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337544781","html_url":"https://github.com/coq/coq/issues/4901#issuecomment-337544781","issue_url":"https://api.github.com/repos/coq/coq/issues/4901","id":337544781,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0NDc4MQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-10-11T09:54:22Z","updated_at":"2017-10-18T10:33:14Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nCan't reproduce non-divergence with 8.4 either. Shall we close as invalid?\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337544781/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337544783","html_url":"https://github.com/coq/coq/issues/4901#issuecomment-337544783","issue_url":"https://api.github.com/repos/coq/coq/issues/4901","id":337544783,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0NDc4Mw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-10-11T11:07:50Z","updated_at":"2017-10-18T10:33:14Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nLet me see if I can reproduce...\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337544783/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337544784","html_url":"https://github.com/coq/coq/issues/4901#issuecomment-337544784","issue_url":"https://api.github.com/repos/coq/coq/issues/4901","id":337544784,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0NDc4NA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-10-11T21:30:53Z","updated_at":"2017-10-18T10:33:14Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nI'm rather confused.  The code here, with 8.4pl6, if I remove the [Timeout 1], gives \"Finished transaction in 0. secs (0.064u,0.004s)\".  Here is proof (via cloud) that the code runs fine on 8.4pl1 (https://travis-ci.org/JasonGross/coq-bug-4901/jobs/166882238), 8.4pl3 (https://travis-ci.org/JasonGross/coq-bug-4901/jobs/166882241), and 8.4pl6 (https://travis-ci.org/JasonGross/coq-bug-4901/jobs/166882237), but fails on 8.5 (https://travis-ci.org/JasonGross/coq-bug-4901/jobs/166882236) and 8.5pl2 (https://travis-ci.org/JasonGross/coq-bug-4901/jobs/166882234).\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337544784/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337544785","html_url":"https://github.com/coq/coq/issues/4901#issuecomment-337544785","issue_url":"https://api.github.com/repos/coq/coq/issues/4901","id":337544785,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0NDc4NQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-10-11T22:04:11Z","updated_at":"2022-02-03T15:24:07Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\r\n\r\nBisecting it with my coq-bisect script says:\r\n\r\ned93de78345ecd93c4fd8cac0917f1fd34f51d44 is the first bad commit\r\ncommit ed93de78345ecd93c4fd8cac0917f1fd34f51d44\r\nAuthor: Bruno Barras <bruno.barras@ inria.fr>\r\nDate:   Thu Nov 27 17:01:58 2014 +0100\r\n\r\n    improve efficiency of the reduction interpreter of coqtop\r\n\r\n    Conflicts:\r\n        kernel/closure.ml\r\n        kernel/closure.mli\r\n        kernel/reduction.ml\r\n\r\n\r\nThe file I used to bisect on was:\r\n~~~coq\r\n(* -*- coq-prog-args: (\"-emacs\" \"-nois\" \"-boot\") -*- *)\r\nSet Implicit Arguments.\r\nSet Asymmetric Patterns.\r\nReserved Notation \"x -> y\" (at level 99, right associativity, y at level 200).\r\nNotation \"A -> B\" := (forall (_ : A), B) : type_scope.\r\nReserved Notation \"x + y\" (at level 50, left associativity).\r\nReserved Notation \"x - y\" (at level 50, left associativity).\r\nReserved Notation \"x * y\" (at level 40, left associativity).\r\nReserved Notation \"x / y\" (at level 40, left associativity).\r\nReserved Notation \"- x\" (at level 35, right associativity).\r\nReserved Notation \"/ x\" (at level 35, right associativity).\r\nReserved Notation \"x ^ y\" (at level 30, right associativity).\r\nOpen Scope type_scope.\r\nInductive nat : Set :=\r\n  | O : nat\r\n  | S : nat -> nat.\r\n\r\nDelimit Scope nat_scope with nat.\r\nBind Scope nat_scope with nat.\r\nArguments S _%nat.\r\nOpen Scope nat_scope.\r\nNotation \"'10'\" := (S (S (S (S (S (S (S (S (S (S O)))))))))) : nat_scope.\r\nNotation add_16 n := (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S n)))))))))))))))).\r\nNotation \"'16'\" := (add_16 O) : nat_scope.\r\nNotation \"'32'\" := (add_16 16%nat) : nat_scope.\r\nNotation \"'48'\" := (add_16 32%nat) : nat_scope.\r\nNotation \"'64'\" := (add_16 48%nat) : nat_scope.\r\nInductive bool : Set :=\r\n  | true : bool\r\n  | false : bool.\r\n\r\nAdd Printing If bool.\r\n\r\nDelimit Scope bool_scope with bool.\r\n\r\nBind Scope bool_scope with bool.\r\n\r\nInductive positive : Set :=\r\n  | xI : positive -> positive\r\n  | xO : positive -> positive\r\n  | xH : positive.\r\n\r\nDelimit Scope positive_scope with positive.\r\nBind Scope positive_scope with positive.\r\nArguments xO _%positive.\r\nArguments xI _%positive.\r\n\r\nInductive N : Set :=\r\n  | N0 : N\r\n  | Npos : positive -> N.\r\n\r\nDelimit Scope N_scope with N.\r\nBind Scope N_scope with N.\r\nArguments Npos _%positive.\r\n\r\nNotation \"'2'\" := (Npos (xO xH)) : N_scope.\r\n\r\nModule Import Pos.\r\n  Notation \"'1'\" := xH : positive_scope.\r\n  Notation \"p ~ 1\" := (xI p)\r\n (at level 7, left associativity, format \"p '~' '1'\") : positive_scope.\r\nNotation \"p ~ 0\" := (xO p)\r\n (at level 7, left associativity, format \"p '~' '0'\") : positive_scope.\r\n\r\nLocal Open Scope positive_scope.\r\nFixpoint succ x :=\r\n  match x with\r\n    | p~1 => (succ p)~0\r\n    | p~0 => p~1\r\n    | 1 => 1~0\r\n  end.\r\nFixpoint add x y :=\r\n  match x, y with\r\n    | p~1, q~1 => (add_carry p q)~0\r\n    | p~1, q~0 => (add p q)~1\r\n    | p~1, 1 => (succ p)~0\r\n    | p~0, q~1 => (add p q)~1\r\n    | p~0, q~0 => (add p q)~0\r\n    | p~0, 1 => p~1\r\n    | 1, q~1 => (succ q)~0\r\n    | 1, q~0 => q~1\r\n    | 1, 1 => 1~0\r\n  end\r\n\r\nwith add_carry x y :=\r\n  match x, y with\r\n    | p~1, q~1 => (add_carry p q)~1\r\n    | p~1, q~0 => (add_carry p q)~0\r\n    | p~1, 1 => (succ p)~1\r\n    | p~0, q~1 => (add_carry p q)~0\r\n    | p~0, q~0 => (add p q)~1\r\n    | p~0, 1 => (succ p)~0\r\n    | 1, q~1 => (succ q)~1\r\n    | 1, q~0 => (succ q)~0\r\n    | 1, 1 => 1~1\r\n  end.\r\n\r\nInfix \"+\" := add : positive_scope.\r\nFixpoint mul x y :=\r\n  match x with\r\n    | p~1 => y + (mul p y)~0\r\n    | p~0 => (mul p y)~0\r\n    | 1 => y\r\n  end.\r\n\r\nInfix \"*\" := mul : positive_scope.\r\n\r\nEnd Pos.\r\nModule Import N.\r\n  Notation \"'0'\" := N0 : N_scope.\r\n  Notation \"'1'\" := (Npos xH) : N_scope.\r\n  Local Open Scope N_scope.\r\nDefinition mul n m :=\r\n  match n, m with\r\n  | 0, _ => 0\r\n  | _, 0 => 0\r\n  | Npos p, Npos q => Npos (p * q)\r\n  end.\r\n\r\nInfix \"*\" := mul : N_scope.\r\nDefinition succ n :=\r\n  match n with\r\n  | 0 => 1\r\n  | Npos p => Npos (Pos.succ p)\r\n  end.\r\nEnd N.\r\n\r\nFixpoint div2 (n : nat) : nat :=\r\n  match n return nat with\r\n  | O => O\r\n  | S n0 => match n0 return nat with\r\n            | O => O\r\n            | S n' => S (div2 n')\r\n            end\r\n                end.\r\nInductive eq (A : Type) (x : A) : forall _ : A, Prop :=  eq_refl : @ eq A x x.\r\n\r\nModule Import Nat.\r\n  Local Open Scope nat_scope.\r\n  Notation \"'0'\" := O : nat_scope.\r\n  Fixpoint add n m :=\r\n    match n with\r\n    | 0 => m\r\n    | S p => S (p + m)\r\n    end\r\n\r\n  where \"n + m\" := (add n m) : nat_scope.\r\n  Fixpoint mul n m :=\r\n  match n with\r\n  | 0 => 0\r\n  | S p => m + p * m\r\n  end\r\n\r\nwhere \"n * m\" := (mul n m) : nat_scope.\r\nEnd Nat.\r\nInductive word : nat -> Set :=\r\n| WO : word O\r\n| WS : bool -> forall n, word n -> word (S n).\r\n\r\nFixpoint mod2 (n : nat) : bool :=\r\n  match n with\r\n  | O => false\r\n  | S O => true\r\n  | S (S n') => mod2 n'\r\n  end.\r\nFixpoint wordToN sz (w : word sz) : N :=\r\n  match w with\r\n  | WO => N0\r\n  | WS false _ w' => 2 * wordToN w'\r\n  | WS true _ w' => N.succ (2 * wordToN w')\r\n  end%N.\r\n\r\nFixpoint natToWord (sz n : nat) : word sz :=\r\n  match sz with\r\n  | O => WO\r\n  | S sz' => WS (mod2 n) (natToWord sz' (div2 n))\r\n  end.\r\n\r\nDefinition bar (n n0 : nat)\r\n           (_32 := 10)\r\n           (_4 : nat) (P : Set) (w : forall _ : N, P)\r\n  : @ eq P (w (@ wordToN _32 (natToWord _32 (n + n0)%nat))) (w (@ wordToN _32 (natToWord _32 (n * _4)%nat))).\r\n\r\n  Time Timeout 1 repeat apply eq_refl.\r\nAbort.\r\n\r\nDefinition foo (n n0 : nat)\r\n           (_32 := 32)\r\n           (_4 : nat) (P : Set) (w : forall _ : N, P)\r\n  : @ eq P (w (@ wordToN _32 (natToWord _32 (n + n0)%nat))) (w (@ wordToN _32 (natToWord _32 (n * _4)%nat))).\r\n  Time Timeout 1 repeat apply eq_refl.\r\nAbort.\r\n\r\nDefinition baz (n n0 : nat)\r\n           (_32 := 64)\r\n           (_4 : nat) (P : Set) (w : forall _ : N, P)\r\n  : @ eq P (w (@ wordToN _32 (natToWord _32 (n + n0)%nat))) (w (@ wordToN _32 (natToWord _32 (n * _4)%nat))).\r\n  Time Timeout 2 repeat apply eq_refl.\r\nAbort.\r\n~~~\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337544785/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337544788","html_url":"https://github.com/coq/coq/issues/4901#issuecomment-337544788","issue_url":"https://api.github.com/repos/coq/coq/issues/4901","id":337544788,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0NDc4OA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-10-12T06:30:26Z","updated_at":"2017-10-18T10:33:14Z","author_association":"CONTRIBUTOR","body":"Comment author: @silene\n\nFor the record, I get the same behavior as Jason: both scripts succeed with Coq 8.4pl6 and both scripts fail with Coq 8.5pl2.\n\nIn the commit Jason points out, I fail to understand what the removal of \"closure optimization\" achieves. I am not saying this is responsible for the divergence (there is another likely candidate) but it is troubling.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337544788/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]