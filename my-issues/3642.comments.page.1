[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524541","html_url":"https://github.com/coq/coq/issues/3642#issuecomment-337524541","issue_url":"https://api.github.com/repos/coq/coq/issues/3642","id":337524541,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNDU0MQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-09-18T09:07:56Z","updated_at":"2017-10-18T09:32:45Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\n(* File reduced by coq-bug-finder from original input, then from 7593 lines to 243 lines, then from 256 lines to 102 lines, then from 104 lines to 28 lines, then from 38 lines to 20 lines *)\n(* coqc version trunk (September 2014) compiled on Sep 17 2014 0:22:30 with OCaml 4.01.0\n   coqtop version cagnode16:/afs/csail.mit.edu/u/j/jgross/coq-trunk,trunk (d34e1eed232c84590ddb80d70db9f7f7cf13584a) *)\nSet Implicit Arguments.\nClass UnitSubuniverse := { O : Type -> Type ; O_unit : forall T, T -> O T }.\nClass ReflectiveSubuniverse := { rsubu_usubu : UnitSubuniverse ; O_rectnd : forall {P Q : Type} (f : P -> Q), O P -> Q }.\nGlobal Existing Instance rsubu_usubu.\nContext {subU : ReflectiveSubuniverse}.\nGoal forall (A B : Type) (x : O A * O B) (x0 : B),\n       { g : _ & O_rectnd (fun z : A * B => (O_unit (fst z), O_unit (snd z)))\n                          (O_rectnd (fun a : A => O_unit (a, x0)) (fst x)) =\n                 g x0 }.\n  eexists.\n  match goal with\n    | [ |- context[?e] ] => is_evar e; let e' := fresh \"e'\" in pose (e' := e)\n  end.\n  let g := match goal with |- context[?e] => constr:$(is_evar e; exact e)$ end in\n  unify g e'. (* success *)\n  let g := match goal with |- context[?e] => constr:$(is_evar e; exact e)$ end in\n  change g with e'. (* not convertible *)\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524541/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524544","html_url":"https://github.com/coq/coq/issues/3642#issuecomment-337524544","issue_url":"https://api.github.com/repos/coq/coq/issues/3642","id":337524544,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNDU0NA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-09-18T09:10:30Z","updated_at":"2017-10-18T09:32:45Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nHere is a variant, which doesn't make use of the constructed value of a tactic in a term\n(* File reduced by coq-bug-finder from original input, then from 7593 lines to 243 lines, then from 256 lines to 102 lines, then from 104 lines to 28 lines, then from 38 lines to 20 lines *)\n(* coqc version trunk (September 2014) compiled on Sep 17 2014 0:22:30 with OCaml 4.01.0\n   coqtop version cagnode16:/afs/csail.mit.edu/u/j/jgross/coq-trunk,trunk (d34e1eed232c84590ddb80d70db9f7f7cf13584a) *)\nSet Implicit Arguments.\nClass UnitSubuniverse := { O : Type -> Type ; O_unit : forall T, T -> O T }.\nClass ReflectiveSubuniverse := { rsubu_usubu : UnitSubuniverse ; O_rectnd : forall {P Q : Type} (f : P -> Q), O P -> Q }.\nGlobal Existing Instance rsubu_usubu.\nContext {subU : ReflectiveSubuniverse}.\nGoal forall (A B : Type) (x : O A * O B) (x0 : B),\n       { g : _ & O_rectnd (fun z : A * B => (O_unit (fst z), O_unit (snd z)))\n                          (O_rectnd (fun a : A => O_unit (a, x0)) (fst x)) =\n                 g x0 }.\n  eexists.\n  match goal with\n    | [ |- context[?e] ] => is_evar e; let e' := fresh \"e'\" in pose (e' := e)\n  end.\n  let g := match goal with |- context[?e] => let x := constr:$(is_evar e; exact I)$ in e end in\n  unify g e'.\n  let g := match goal with |- context[?e] => let x := constr:$(is_evar e; exact I)$ in e end in\n  change g with e'.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524544/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524545","html_url":"https://github.com/coq/coq/issues/3642#issuecomment-337524545","issue_url":"https://api.github.com/repos/coq/coq/issues/3642","id":337524545,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNDU0NQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-02-24T16:33:19Z","updated_at":"2017-10-18T09:32:45Z","author_association":"CONTRIBUTOR","body":"Comment author: @silene\n\nIf I correctly understand what you are trying to do, the following is a reduced testcase:\n\nLemma foo T : exists x : T, let y := x in True.\neexists.\nchange ?x with ?x. (* Error: Types are incompatible. *)\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524545/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524546","html_url":"https://github.com/coq/coq/issues/3642#issuecomment-337524546","issue_url":"https://api.github.com/repos/coq/coq/issues/3642","id":337524546,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNDU0Ng==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-06-07T16:18:19Z","updated_at":"2017-10-18T09:32:45Z","author_association":"CONTRIBUTOR","body":"Comment author: @Zimmi48\n\nThe reported samples do not work with current trunk. What is the current status of this issue?\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524546/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524547","html_url":"https://github.com/coq/coq/issues/3642#issuecomment-337524547","issue_url":"https://api.github.com/repos/coq/coq/issues/3642","id":337524547,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNDU0Nw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-06-07T16:23:56Z","updated_at":"2017-10-18T09:32:45Z","author_association":"CONTRIBUTOR","body":"Comment author: @silene\n\nStill an issue, I guess.\n\nLemma foo (T : Type) : True.\nevar (x : T).\nchange ?x with ?x. (* Error: Types are incompatible. *)\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524547/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524551","html_url":"https://github.com/coq/coq/issues/3642#issuecomment-337524551","issue_url":"https://api.github.com/repos/coq/coq/issues/3642","id":337524551,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNDU1MQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-06-08T09:21:45Z","updated_at":"2017-10-18T09:32:45Z","author_association":"CONTRIBUTOR","body":"Comment author: @herbelin\n\nAs far as I can judge, the original example is fixed as part of thfix to [BZ#2602](https://github.com/coq/coq/issues?q=is%3Aissue%20%22Original%20bug%20ID%3A%20BZ%232602%22) and [BZ#5487](https://github.com/coq/coq/issues?q=is%3Aissue%20%22Original%20bug%20ID%3A%20BZ%235487%22) (c3aec655a8a and 12f1c409daf) and one could add a test.\n\nGuillaume's example is different: it comes from the overloaded meaning of ?x: a pattern variable in patterns, an evar in terms. So, \"change ?x with ?x\" is not different here from \"change ?y with ?x\". The pattern matches \"True\" while \"?x\" on the right refers to the evar \"?x\" which has type \"T\". So, no hope that they have the same type.\n\nIf one would like to be able to match evars in patterns, one would need a syntax for it, e.g. say \"??x\", to mean match the evar \"?x\".\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524551/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524553","html_url":"https://github.com/coq/coq/issues/3642#issuecomment-337524553","issue_url":"https://api.github.com/repos/coq/coq/issues/3642","id":337524553,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNDU1Mw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-06-08T09:29:46Z","updated_at":"2017-10-18T09:32:46Z","author_association":"CONTRIBUTOR","body":"Comment author: @Zimmi48\n\nMaybe the only remaining issue then would be to have a better error message explaining this?\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524553/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524554","html_url":"https://github.com/coq/coq/issues/3642#issuecomment-337524554","issue_url":"https://api.github.com/repos/coq/coq/issues/3642","id":337524554,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNDU1NA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-06-08T09:45:13Z","updated_at":"2017-10-18T09:32:46Z","author_association":"CONTRIBUTOR","body":"Comment author: @herbelin\n\nYes, detecting it and warn could be tried.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524554/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]