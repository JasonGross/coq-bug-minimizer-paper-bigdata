[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337523351","html_url":"https://github.com/coq/coq/issues/3571#issuecomment-337523351","issue_url":"https://api.github.com/repos/coq/coq/issues/3571","id":337523351,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMzM1MQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-09-03T07:30:42Z","updated_at":"2017-10-18T09:29:29Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nAxiom foo : forall {T : Type}, Type -> Type.\nGoal exists x y, @ foo Set x = @ foo (Set -> Set) y.\n  eexists.\n  eexists.\n  reflexivity. (* Toplevel input, characters 15-26:\nIn nested Ltac calls to \"reflexivity\", last call failed.\nError: Unable to unify \"foo ?9\" with \"foo ?6\".\n *)\n\nI think implicit arguments should be printed, here.\n\nAlso, here:\n\nAxiom foo : forall {T : Type}, Type -> Type.\nGoal exists x, @ foo Set x = @ foo (Set -> Set) Set.\n  eexists.\n  reflexivity.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337523351/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337523352","html_url":"https://github.com/coq/coq/issues/3571#issuecomment-337523352","issue_url":"https://api.github.com/repos/coq/coq/issues/3571","id":337523352,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMzM1Mg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-09-04T08:35:58Z","updated_at":"2017-10-18T09:29:29Z","author_association":"CONTRIBUTOR","body":"Comment author: @aspiwack\n\nSo the idea would be to consider evars as \"equal\" to every other terms for this purpose.\n\nI looks useful (at least your examples are convincing). But I've played with constr_expr_eq too much for my sanity the day before yesterday, so I will take a break for a few more days (but it sounds like it is simple enough).\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337523352/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/943517477","html_url":"https://github.com/coq/coq/issues/3571#issuecomment-943517477","issue_url":"https://api.github.com/repos/coq/coq/issues/3571","id":943517477,"node_id":"IC_kwDOABUDh844PO8l","user":{"login":"WojciechKarpiel","id":9764220,"node_id":"MDQ6VXNlcjk3NjQyMjA=","avatar_url":"https://avatars.githubusercontent.com/u/9764220?v=4","gravatar_id":"","url":"https://api.github.com/users/WojciechKarpiel","html_url":"https://github.com/WojciechKarpiel","followers_url":"https://api.github.com/users/WojciechKarpiel/followers","following_url":"https://api.github.com/users/WojciechKarpiel/following{/other_user}","gists_url":"https://api.github.com/users/WojciechKarpiel/gists{/gist_id}","starred_url":"https://api.github.com/users/WojciechKarpiel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/WojciechKarpiel/subscriptions","organizations_url":"https://api.github.com/users/WojciechKarpiel/orgs","repos_url":"https://api.github.com/users/WojciechKarpiel/repos","events_url":"https://api.github.com/users/WojciechKarpiel/events{/privacy}","received_events_url":"https://api.github.com/users/WojciechKarpiel/received_events","type":"User","site_admin":false},"created_at":"2021-10-14T16:24:46Z","updated_at":"2021-10-14T16:24:46Z","author_association":"CONTRIBUTOR","body":"It's already fixed by #14672\r\n\r\nError messages are as clear as they can possibly get now :)\r\nFor the recod:\r\n```\r\nAxiom foo : forall {T : Type}, Type -> Type.\r\nGoal exists x y, @ foo Set x = @ foo (Set -> Set) y.\r\neexists.\r\neexists.\r\nreflexivity. \r\n```\r\nFails with `Error: Unable to unify \"@foo (Set -> Set) ?y\" with \"@foo Set ?x\".`\r\n```\r\nAxiom foo : forall {T : Type}, Type -> Type.\r\nGoal exists x y, @ foo Set x = @ foo (Set -> Set) y.\r\neexists.\r\neexists.\r\nreflexivity. \r\n```\r\nFails with `Error: Unable to unify \"@foo (Set -> Set) ?y\" with \"@foo Set ?x\".`\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/943517477/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/943519936","html_url":"https://github.com/coq/coq/issues/3571#issuecomment-943519936","issue_url":"https://api.github.com/repos/coq/coq/issues/3571","id":943519936,"node_id":"IC_kwDOABUDh844PPjA","user":{"login":"SkySkimmer","id":2461932,"node_id":"MDQ6VXNlcjI0NjE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/2461932?v=4","gravatar_id":"","url":"https://api.github.com/users/SkySkimmer","html_url":"https://github.com/SkySkimmer","followers_url":"https://api.github.com/users/SkySkimmer/followers","following_url":"https://api.github.com/users/SkySkimmer/following{/other_user}","gists_url":"https://api.github.com/users/SkySkimmer/gists{/gist_id}","starred_url":"https://api.github.com/users/SkySkimmer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SkySkimmer/subscriptions","organizations_url":"https://api.github.com/users/SkySkimmer/orgs","repos_url":"https://api.github.com/users/SkySkimmer/repos","events_url":"https://api.github.com/users/SkySkimmer/events{/privacy}","received_events_url":"https://api.github.com/users/SkySkimmer/received_events","type":"User","site_admin":false},"created_at":"2021-10-14T16:27:34Z","updated_at":"2021-10-14T16:27:34Z","author_association":"CONTRIBUTOR","body":"Thanks for noticing ","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/943519936/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]