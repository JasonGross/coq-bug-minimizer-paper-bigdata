[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337510804","html_url":"https://github.com/coq/coq/issues/2814#issuecomment-337510804","issue_url":"https://api.github.com/repos/coq/coq/issues/2814","id":337510804,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUxMDgwNA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2012-06-13T07:15:53Z","updated_at":"2017-10-18T08:53:44Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nThe code\n\nRequire Import Program.\n\nGoal forall (x : Type) (f g : Type -> Type) (H : f x ~= g x), False.\n  intros.\n  induction H.\n\ngives \n\nToplevel input, characters 0-11:\nAnomaly: Uncaught exception Option.IsNone. Please report.\n\non [induction H], using Coq 8.4beta2\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337510804/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337510805","html_url":"https://github.com/coq/coq/issues/2814#issuecomment-337510805","issue_url":"https://api.github.com/repos/coq/coq/issues/2814","id":337510805,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUxMDgwNQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2012-06-25T14:05:00Z","updated_at":"2017-10-18T08:53:44Z","author_association":"CONTRIBUTOR","body":"Comment author: @pirbo\n\ninduction asks for an induction lemma in a very constrained form.\nJMeq canonical induction principle has type\nforall A (a: A) (P: forall X (x: X), Type) (H: P A a) B (b: B), P B b.\n       -------- -------------------------- ---------- --------\n        params          predicate            branch     args\n\nbut JMeq_ind is filled by hand with a term of type :\nforall A (a: A) (P: forall X (x: X), Type) (H: P A a) (b: A), P B b.\n                                                      ------\n                                                  a missing arg !!!!\n\nThis means that\nGoal forall (x : Type) (f g : Type -> Type) (H : f x ~= g x), False.\n  intros.\n  induction H using JMeq_ind.\n\nwould make checks and fails gently but because we've called it JMeq_ind, \ninduction H. uses it without sanity check and fails badly.\n\nThis is the case in v8.2 v8.3 and v8.4, An hand_made JMeq_ind is older than v8 syntax, I did not try but I'm not sure it has ever worked.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337510805/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]