[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337525481","html_url":"https://github.com/coq/coq/issues/3703#issuecomment-337525481","issue_url":"https://api.github.com/repos/coq/coq/issues/3703","id":337525481,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNTQ4MQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-10-07T18:25:22Z","updated_at":"2017-10-18T09:35:30Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\n(* File reduced by coq-bug-finder from original input, then from 6746 lines to 4190 lines, then from 29 lines to 18 lines, then fro\\\nm 30 lines to 19 lines *)\n(* coqc version trunk (October 2014) compiled on Oct 7 2014 12:42:41 with OCaml 4.01.0\n   coqtop version cagnode16:/afs/csail.mit.edu/u/j/jgross/coq-trunk,trunk (2313bde0116a5916912bebbaca77d291f7b2760a) *)\nRecord PreCategory := { identity : forall x, x -> x }.\nDefinition set_cat : PreCategory := @ Build_PreCategory (fun T x => x).\nModule UnKeyed.\n  Global Unset Keyed Unification.\n  Goal forall (T : Type) (g0 g1 : T) (k : T) (H' : forall x : T, k = @ identity set_cat T x),\n         ((fun x : T => x) g0) = ((fun x : T => x) g1).\n    intros T g0 g1 k H'.\n    change (identity _ _) with (fun y : T => y) in H';\n      rewrite <- H' || fail \"too early\".\n    Undo.\n    rewrite <- H'.\n    admit.\n  Defined.\nEnd UnKeyed.\nModule Keyed.\n  Global Set Keyed Unification.\n  Goal forall (T : Type) (g0 g1 : T) (k : T) (H' : forall x : T, k = @ identity set_cat T x),\n         ((fun x : T => x) g0) = ((fun x : T => x) g1).\n    intros T g0 g1 k H'.\n    change (identity _ _) with (fun y : T => y) in H';\n      rewrite <- H' || fail \"too early\".\n    Undo.\n    rewrite <- H'.\n    admit.\n  Defined.\nEnd Keyed.\n\n\nIt's not clear to me whether we want to change this or not.  Note that, e.g., if we have [H' : k = @ identity set_cat T g1], then the unkeyed [rewrite <- H'] fails.  So there's something special about the [forall].  Can someone explain that to me, and why [rewrite] works in this first case?\n\nIt would be nice, at a minimum, to have some directive I can issue to get the [rewrite <- H'] in the second case working.  Perhaps something that says [identity set_cat] is unfoldable?  I don't know the rewriting infrastructure well enough to know what to suggest here.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337525481/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337525482","html_url":"https://github.com/coq/coq/issues/3703#issuecomment-337525482","issue_url":"https://api.github.com/repos/coq/coq/issues/3703","id":337525482,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNTQ4Mg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-02-16T21:11:49Z","updated_at":"2017-10-18T09:35:31Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nFixed using [Declare Equivalent Keys (fun x => _) identity].\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337525482/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]