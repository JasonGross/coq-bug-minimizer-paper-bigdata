[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337516017","html_url":"https://github.com/coq/coq/issues/3132#issuecomment-337516017","issue_url":"https://api.github.com/repos/coq/coq/issues/3132","id":337516017,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUxNjAxNw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2013-09-26T14:05:09Z","updated_at":"2021-07-17T23:06:38Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\r\n\r\nCreated attachment 417\r\nAn example setup containing a run.sh file, which shows the problem\r\n\r\nCurrently [Scheme] does not register its schemes with the database used by [find_scheme] for [discriminate]; I think it should register its schemes with that database.  For example, in the attached zip file, where I have copied the theories/Init/Logic.v from coq 8.4 and replaced the given definition of equality with\r\n```coq\r\nUnset Elimination Schemes.\r\nInductive eq (A:Type) (x:A) : A -> Prop :=\r\n    eq_refl : x = x :>A\r\n\r\nwhere \"x = y :> A\" := (@ eq A x y) : type_scope.\r\n\r\nNotation \"x = y\" := (x = y :>_) : type_scope.\r\nNotation \"x <> y  :> T\" := (~ x = y :>T) : type_scope.\r\nNotation \"x <> y\" := (x <> y :>_) : type_scope.\r\n\r\nArguments eq {A} x _.\r\nArguments eq_refl {A x} , [A] x.\r\nSet Elimination Schemes.\r\n\r\nScheme eq_rect := Minimality for eq Sort Type.\r\nScheme eq_rec := Minimality for eq Sort Set.\r\nScheme eq_ind := Minimality for eq Sort Prop.\r\n```\r\n\r\nand then updated Datatypes.v with\r\n```coq\r\nLemma foo (H : true = false) : False.\r\nProof.\r\n  discriminate.\r\nDefined.\r\nPrint foo.\r\n```\r\nCoq deines [foo] as\r\n```coq\r\nfoo =\r\nfun H : true = false =>\r\n(fun H0 : False => (fun H1 : False => False_ind False H1) H0)\r\n  (internal_eq_ind (fun e : bool => if e then True else False) I H)\r\n     : true = false -> False\r\n```\r\nwhen I think it should actually define it as \r\n```coq\r\nfoo =\r\nfun H : true = false =>\r\n(fun H0 : False => (fun H1 : False => False_ind False H1) H0)\r\n  (eq_ind (fun e : bool => if e then True else False) I H)\r\n     : true = false -> False\r\n```\r\n> Attached file: [example.zip](https://coq.inria.fr/bugfiles/attachment.cgi?id=417) (application/zip, 80501 bytes)\r\n> Description:   An example setup containing a run.sh file, which shows the problem\r\n\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337516017/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]