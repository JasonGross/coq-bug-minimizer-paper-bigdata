[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337550947","html_url":"https://github.com/coq/coq/issues/5329#issuecomment-337550947","issue_url":"https://api.github.com/repos/coq/coq/issues/5329","id":337550947,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1MDk0Nw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-01-28T01:25:54Z","updated_at":"2017-10-18T10:53:21Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nI'd like to be able to define inductive types (or, at least, inductive records) \nwith negative occurrences, which can not be consumed by [fix] nor created by \n[cofix].\n\nFor example, following \nhttps://www.cs.cmu.edu/~aldrich/papers/objects-essay.pdf, I'd like to be able \nto write\n\nBiInductive FiniteNatSet := \n  { contains : nat -> bool ; is_subset_of : FiniteNatSet -> bool }.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337550947/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337550948","html_url":"https://github.com/coq/coq/issues/5329#issuecomment-337550948","issue_url":"https://api.github.com/repos/coq/coq/issues/5329","id":337550948,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1MDk0OA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-01-28T08:58:35Z","updated_at":"2017-10-18T10:53:21Z","author_association":"CONTRIBUTOR","body":"Comment author: @silene\n\nAs I mentioned on github, this is trivially inconsistent as long as constructors are injective.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337550948/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337550949","html_url":"https://github.com/coq/coq/issues/5329#issuecomment-337550949","issue_url":"https://api.github.com/repos/coq/coq/issues/5329","id":337550949,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1MDk0OQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-01-28T15:12:59Z","updated_at":"2017-10-18T10:53:21Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nOh, I see.  The proof goes like this? (Untested)\n\nBiInductive P := wrap { unwrap : P -> bool }.\nDefinition diagonal {T} (f : T -> (T -> bool)) : T -> bool\n  := fun x => negb (f x x).\nLemma diagonal_false {T} f x\n  : @ diagonal T f <> f x.\nProof.\n  unfold diagonal; intro H.\n  apply (f_equal (fun g => g x)) in H.\n  simpl in H.\n  destruct (f x x); compute in H; congruence.\nQed.\nDefinition bad : False\n  := diagonal unwrap (wrap (diagonal unwrap)) eq_refl.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337550949/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337550950","html_url":"https://github.com/coq/coq/issues/5329#issuecomment-337550950","issue_url":"https://api.github.com/repos/coq/coq/issues/5329","id":337550950,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1MDk1MA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-01-28T17:00:56Z","updated_at":"2017-10-18T10:53:21Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nWait, no, that proof doesn't work, that merely proves that P is uninhabited.  What's the diagonalization proof you had in mind?\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337550950/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337550951","html_url":"https://github.com/coq/coq/issues/5329#issuecomment-337550951","issue_url":"https://api.github.com/repos/coq/coq/issues/5329","id":337550951,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1MDk1MQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-01-28T17:02:55Z","updated_at":"2017-10-18T10:53:21Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nArgh, this is why I need an external type checker.  I think it does work, though I typoed diagonal instead of diagonal_false on the last line.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337550951/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]