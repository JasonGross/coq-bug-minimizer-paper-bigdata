[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337543214","html_url":"https://github.com/coq/coq/issues/4795#issuecomment-337543214","issue_url":"https://api.github.com/repos/coq/coq/issues/4795","id":337543214,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU0MzIxNA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2016-06-08T14:00:14Z","updated_at":"2021-10-11T15:04:29Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\r\n\r\nI would like something to support the following version of [change (fst (?x, ?y)) with x] which works in scripts and under binders.\r\n\r\n```\r\nDefinition nonunfoldable_fst := @ fst.\r\nArguments nonunfoldable_fst {_ _} _.\r\nDefinition uncategorized_fst {A B} := @ fst A B.\r\n\r\nLtac good_unfold_fst :=\r\n  repeat (change @ fst with @ uncategorized_fst at 1;\r\n          match goal with\r\n          | [ |- appcontext[uncategorized_fst (_, _)] ]\r\n            => unfold @ uncategorized_fst\r\n          | _ => change @ uncategorized_fst with @ nonunfoldable_fst\r\n          end);\r\n  cbv delta [nonunfoldable_fst].\r\n\r\n```\r\nMaybe something like\r\n```\r\n\r\n  rewrite_strat topdown subterms (fun s => match s with\r\n                                           | fst (_, _) => unfold fst\r\n                                           | snd (_, _) => unfold snd\r\n                                           end).\r\n\r\n\r\n```\r\n(If this works (I haven't tested it), it's not documented.)\r\n\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337543214/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]