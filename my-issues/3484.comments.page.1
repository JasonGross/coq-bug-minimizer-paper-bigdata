[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337521970","html_url":"https://github.com/coq/coq/issues/3484#issuecomment-337521970","issue_url":"https://api.github.com/repos/coq/coq/issues/3484","id":337521970,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMTk3MA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-08-04T07:52:05Z","updated_at":"2017-10-18T09:25:29Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\n(* File reduced by coq-bug-finder from original input, then from 14259 lines to 305 lines, then from 237 lines to 120 lines, then from 100 lines to 30 lines *)\nSet Primitive Projections.\nRecord sigT (A : Type) (P : A -> Type) := existT { projT1 : A ; projT2 : P projT1 }.\nNotation \"{ x : A & P }\" := (@ sigT A (fun x : A => P)) : type_scope.\nNotation pr1 := (@ projT1 _ _).\nInductive paths {A : Type} (a : A) : A -> Type := idpath : paths a a where \"x = y\" := (@ paths _ x y) : type_scope.\nArguments idpath {A a} , [A] a.\nDefinition ap {A B:Type} (f:A -> B) {x y:A} (p:x = y) : f x = f y := match p with idpath => idpath end.\nGoal forall (T : Type) (H :  { g : T & g = g }) (x : T), projT1 H = projT1 (existT _ (fun g : T => g = g) x idpath).\nProof.\n  intros.\n  let y := match goal with |- projT1 ?x = projT1 ?y => constr:(y) end in\n  apply (@ ap _ _ pr1 _ y).\n  Undo.\n  Unset Printing Notations.\n  apply (ap pr1). (* Toplevel input, characters 22-28:\nError:\nIn environment\nT : Type\nH : sigT T (fun g : T => paths g g)\nx : T\nUnable to unify \"paths (@ projT1 ?24 ?23 ?25) (@ projT1 ?24 ?23 ?26)\" with\n \"paths (projT1 H) (projT1 {| projT1 := x; projT2 := idpath |})\". *)\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337521970/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337521972","html_url":"https://github.com/coq/coq/issues/3484#issuecomment-337521972","issue_url":"https://api.github.com/repos/coq/coq/issues/3484","id":337521972,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMTk3Mg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-08-28T10:52:49Z","updated_at":"2017-10-18T09:25:29Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nFixed in trunk, this was due to the unfolding heuristic which unfolded the primitive projection first, resulting in an unsolvable problem projT1 _ _ ?26 = x. Making the eta-expanded form unfold first resolves this by allowing first-order unification of ?26.(proj1) and the proj1 {| proj1 ... |} subterm. You should realize this unification problem is quite brittle though, a simpl before it and it wouldn't be solvable.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337521972/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337521973","html_url":"https://github.com/coq/coq/issues/3484#issuecomment-337521973","issue_url":"https://api.github.com/repos/coq/coq/issues/3484","id":337521973,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMTk3Mw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-08-29T18:02:11Z","updated_at":"2017-10-18T09:25:29Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nYes, I realize this is fragile, but I expect it to be the case that if some subterms unify syntactically, then those subterms will be successfully unified, assuming the other subterms can be unified by appropriate reduction.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337521973/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]