[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337532218","html_url":"https://github.com/coq/coq/issues/4097#issuecomment-337532218","issue_url":"https://api.github.com/repos/coq/coq/issues/4097","id":337532218,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzMjIxOA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-03-02T01:27:44Z","updated_at":"2017-10-18T09:54:54Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\n(* File reduced by coq-bug-finder from original input, then from 6082 lines to 81 lines, then from 436 lines to 93 lines *)\n(* coqc version 8.5beta1 (February 2015) compiled on Feb 27 2015 15:10:37 with OCaml 4.01.0\n   coqtop version cagnode15:/afs/csail.mit.edu/u/j/jgross/coq-8.5,v8.5 (fc1b3ef9d7270938cd83c524aae0383093b7a4b5) *)\nGlobal Set Primitive Projections.\nRecord sigT {A} (P : A -> Type) := exist { projT1 : A ; projT2 : P projT1 }.\nArguments projT1 {A P} _ / .\nArguments projT2 {A P} _ / .\nNotation \"{ x : A  & P }\" := (sigT (fun x:A => P)) : type_scope.\nDelimit Scope path_scope with path.\nDelimit Scope fibration_scope with fibration.\nOpen Scope path_scope.\nOpen Scope fibration_scope.\nNotation \"( x ; y )\" := (existT _ x y) : fibration_scope.\nNotation pr1 := projT1.\nNotation pr2 := projT2.\nNotation \"x .1\" := (pr1 x) (at level 3, format \"x '.1'\") : fibration_scope.\nNotation \"x .2\" := (pr2 x) (at level 3, format \"x '.2'\") : fibration_scope.\nInductive paths {A : Type} (a : A) : A -> Type := idpath : paths a a.\nArguments idpath {A a} , [A] a.\nNotation \"x = y :> A\" := (@ paths A x y) : type_scope.\nNotation \"x = y\" := (x = y :>_) : type_scope.\nDefinition inverse {A : Type} {x y : A} (p : x = y) : y = x\n  := match p with idpath => idpath end.\nDefinition concat {A : Type} {x y z : A} (p : x = y) (q : y = z) : x = z :=\n  match p, q with idpath, idpath => idpath end.\nNotation \"p @  q\" := (concat p%path q%path) (at level 20) : path_scope.\nNotation \"p ^\" := (inverse p%path) (at level 3, format \"p '^'\") : path_scope.\nDefinition transport {A : Type} (P : A -> Type) {x y : A} (p : x = y) (u : P x) : P y :=\n  match p with idpath => u end.\nNotation \"p # x\" := (transport _ p x) (right associativity, at level 65, only parsing) : path_scope.\nDefinition ap {A B:Type} (f:A -> B) {x y:A} (p:x = y) : f x = f y\n  := match p with idpath => idpath end.\nDefinition apD {A:Type} {B:A->Type} (f:forall a:A, B a) {x y:A} (p:x=y):\n  p # (f x) = f y\n  :=\n  match p with idpath => idpath end.\nLemma transport_compose {A B} {x y : A} (P : B -> Type) (f : A -> B)\n  (p : x = y) (z : P (f x))\n  : transport (fun x => P (f x)) p z  =  transport P (ap f p) z.\nadmit.\nDefined.\nGeneralizable Variables X A B C f g n.\nDefinition pr1_path `{P : A -> Type} {u v : sigT P} (p : u = v)\n: u.1 = v.1\n  := ap pr1 p.\nNotation \"p ..1\" := (pr1_path p) (at level 3) : fibration_scope.\nDefinition pr2_path `{P : A -> Type} {u v : sigT P} (p : u = v)\n: p..1 # u.2 = v.2\n  := (transport_compose P pr1 p u.2)^\n     @  (@ apD {x:A & P x} _ pr2 _ _ p).\nNotation \"p ..2\" := (pr2_path p) (at level 3) : fibration_scope.\nDefinition path_path_sigma_uncurried {A : Type} (P : A -> Type) (u v : sigT P)\n           (p q : u = v)\n           (rs : {r : p..1 = q..1 & transport (fun x => transport P x u.2 = v.2) r p..2 = q..2})\n: p = q.\nadmit.\nDefined.\n\nDefinition path_path_sigma {A : Type} (P : A -> Type) (u v : sigT P)\n           (p q : u = v)\n           (r : p..1 = q..1)\n           (s : transport (fun x => transport P x u.2 = v.2) r p..2 = q..2)\n: p = q\n  := path_path_sigma_uncurried P u v p q (r; s). (* Toplevel input, characters 15-270:\nAnomaly: Uncaught exception Retyping.RetypeError(3). Please report. *)\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337532218/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337532219","html_url":"https://github.com/coq/coq/issues/4097#issuecomment-337532219","issue_url":"https://api.github.com/repos/coq/coq/issues/4097","id":337532219,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUzMjIxOQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-03-02T12:25:43Z","updated_at":"2017-10-18T09:54:54Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nFixed in v8.5 branch\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337532219/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]