[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337551738","html_url":"https://github.com/coq/coq/issues/5389#issuecomment-337551738","issue_url":"https://api.github.com/repos/coq/coq/issues/5389","id":337551738,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1MTczOA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-03-10T01:52:13Z","updated_at":"2017-10-18T10:56:00Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\n(* -*- mode: coq; coq-prog-args: (\"-emacs\" \"-R\" \".\" \"Top\" \"-top\" \n\"bug_unif_not_repeat_02\") -*- *)\n(* File reduced by coq-bug-finder from original input, then from 282 lines to \n108 lines, then from 324 lines to 147 lines, then from 342 lines to 172 lines, \nthen from 226 lines to 187 lines, then from 246 lines to 195 lines, then from \n273 lines to 211 lines, then from 251 lines to 216 lines, then from 265 lines \nto 217 lines, then from 231 lines to 217 lines, then from 233 lines to 109 \nlines, then from 123 lines to 109 lines *)\n(* coqc version 8.6 (February 2017) compiled on Feb 16 2017 14:36:53 with OCaml \n4.02.3\n   coqtop version jgross-Leopard-WS:/home/jgross/Downloads/coq/coq-v8.6,(HEAD \ndetached from 7e992fa) (29d7872c0159d2aab7264c0577a2f5a\\\n9dc7c90c9) *)\n\nGlobal Set Asymmetric Patterns.\nSection language.\n  Context (base_type_code : Type).\n\n  Inductive flat_type := Tbase (T : base_type_code) | Unit | Prod (A B : \nflat_type).\n\n  Section interp.\n    Section flat_type.\n      Context (interp_base_type : base_type_code -> Type).\n      Fixpoint interp_flat_type (t : flat_type) :=\n        match t with\n        | Tbase t => interp_base_type t\n        | Unit => unit\n        | Prod x y => prod (interp_flat_type x) (interp_flat_type y)\n        end.\n    End flat_type.\n  End interp.\n\nEnd language.\nGlobal Arguments interp_flat_type {_} _ _.\n\nGoal forall (base_type_code Name : Type) (var : base_type_code -> Type) \n(Context : Type)\n            (T1 T2 : flat_type base_type_code)\n            (N : interp_flat_type (fun _ : base_type_code => Name) T1 * \ninterp_flat_type (fun _ : base_type_code => Name) T2)\n            (t : base_type_code) (n : Name) (v : interp_flat_type var T1 * \ninterp_flat_type var T2)\n            (lookupb : Context -> Name -> forall t0 : base_type_code, option \n(var t0))\n            (extend : Context ->\n                      forall t0 : flat_type base_type_code,\n                        interp_flat_type (fun _ : base_type_code => Name) t0 -> \ninterp_flat_type var t0 -> Context),\n    exists ctx' y,\n      @ lookupb\n        (@ extend ctx' T2\n                 (@ snd\n                    ((fix interp_flat_type (t0 : flat_type base_type_code) : \nType :=\n                        match t0 with\n                        | @ Tbase _ _ => Name\n                        | @ Unit _ => unit\n                        | @ Prod _ x y => (interp_flat_type x * interp_flat_type \ny)%type\n                        end) T1)\n                    ((fix interp_flat_type (t0 : flat_type base_type_code) : \nType :=\n                        match t0 with\n                        | @ Tbase _ _ => Name\n                        | @ Unit _ => unit\n                        | @ Prod _ x y => (interp_flat_type x * interp_flat_type \ny)%type\n                        end) T2) N)\n                 (@ snd\n                    ((fix interp_flat_type (t0 : flat_type base_type_code) : \nType :=\n                        match t0 with\n                        | @ Tbase _ t1 => var t1\n                        | @ Unit _ => unit\n                        | @ Prod _ x y => (interp_flat_type x * interp_flat_type \ny)%type\n                        end) T1)\n                    ((fix interp_flat_type (t0 : flat_type base_type_code) : \nType :=\n                        match t0 with\n                        | @ Tbase _ t1 => var t1\n                        | @ Unit _ => unit\n                        | @ Prod _ x y => (interp_flat_type x * interp_flat_type \ny)%type\n                        end) T2) v)) n t = y.\nProof.\n  clear; intros.\n  do 2 eexists.\n  try tauto. (* Error:\nIn environment\nbase_type_code : Type\nName : Type\nvar : base_type_code -> Type\nContext : Type\nT1, T2 : flat_type base_type_code\nt : base_type_code\nn : Name\nlookupb : Context -> Name -> forall t0 : base_type_code, option (var t0)\nextend : Context ->\n         forall t0 : flat_type base_type_code,\n         interp_flat_type (fun _ : base_type_code => Name) t0 -> \ninterp_flat_type var t0 -> Context\na : interp_flat_type (fun _ : base_type_code => Name) T1\nb : interp_flat_type (fun _ : base_type_code => Name) T2\na0 : interp_flat_type var T1\nb0 : interp_flat_type var T2\nUnable to unify \"?c@ {N:=(a, b); v:=(a0, b0)}\" with \"?ctx'@ {N:=(a, b); v:=(a0, \nb0)}\". *)\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337551738/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337551739","html_url":"https://github.com/coq/coq/issues/5389#issuecomment-337551739","issue_url":"https://api.github.com/repos/coq/coq/issues/5389","id":337551739,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzU1MTczOQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2017-06-09T15:26:38Z","updated_at":"2017-10-18T10:56:00Z","author_association":"CONTRIBUTOR","body":"Comment author: @Zimmi48\n\nFTR this is a regression since 8.5.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337551739/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]