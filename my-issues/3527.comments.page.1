[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337522652","html_url":"https://github.com/coq/coq/issues/3527#issuecomment-337522652","issue_url":"https://api.github.com/repos/coq/coq/issues/3527","id":337522652,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMjY1Mg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-08-19T14:55:17Z","updated_at":"2017-11-19T10:32:30Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\r\n``` coq\r\nSet Implicit Arguments.\r\nRecord Category := { obj :> Type ; hom :> obj -> obj -> Type }.\r\nRecord > PackagedHom (C : Category) := { x : C ; y : C ; unpackage :> C x y }.\r\nModule Export FMap.\r\n  Record Functor (C D : Category) := { fobj : C -> D ; map : forall x y, C x y -> D (fobj x) (fobj y) }.\r\nEnd FMap.\r\nDefinition mapT1 {C D} (F : Functor C D) := forall x y, C x y -> D (fobj F x) (fobj F y).\r\nDefinition mapT2 {C D} (F : Functor C D) := forall m : PackagedHom C, D (fobj F m.(x)) (fobj F m.(y)).\r\nDefinition annoying_helper {C D F} (map : @ mapT1 C D F) : @ mapT2 C D F := fun m => map _ _ m.\r\nCoercion annoying_helper : mapT1 >-> mapT2.\r\nIdentity Coercion unfold_mapT2 : mapT2 >-> Funclass.\r\nModule Type mapT.\r\n  Definition map {C D} (F : Functor C D) : mapT1 F := map F.\r\nEnd mapT.\r\nModule MapCoercion (T : mapT).\r\n  Coercion T.map : Functor >-> mapT1.\r\nEnd MapCoercion.\r\nModule Export FunctorMapCoercion := MapCoercion FMap.\r\nSection foo.\r\n  Context C D (F : Functor C D) x y (m : C x y).\r\n  Set Printing All.\r\n  Check F _. (* @ annoying_helper (@ map C D F) ?48\r\n     : forall F0 : Functor (@ map C D F) ?48,\r\n       @ mapT1 (@ map C D F) ?48 F0 -> @ mapT2 (@ map C D F) ?48 F0 *)\r\n  Definition foo k := F k. (* Error: Illegal application (Type Error): \r\nThe term \"annoying_helper\" of type\r\n \"forall (C D : Category) (F : Functor C D), @ mapT1 C D F -> @ mapT2 C D F\"\r\ncannot be applied to the terms\r\n \"@ map C D F\"\r\n   : \"forall x y : obj C, hom C x y -> hom D (@ fobj C D F x) (@ fobj C D F y)\"\r\n \"k\" : \"Category\"\r\nThe 1st term has type\r\n \"forall x y : obj C, hom C x y -> hom D (@ fobj C D F x) (@ fobj C D F y)\"\r\nwhich should be coercible to \"Category\". *)\r\n```\r\n\r\n\r\nWhy has Coq decided that the mapT1 argument to annoying_helper should be inserted first, rather than in its correct slot?\r\n\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337522652/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337522654","html_url":"https://github.com/coq/coq/issues/3527#issuecomment-337522654","issue_url":"https://api.github.com/repos/coq/coq/issues/3527","id":337522654,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMjY1NA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-08-19T14:58:49Z","updated_at":"2017-10-18T09:27:35Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nAnd in trunk, I get \"Anomaly: Uncaught exception Coercion.NoCoercion(_). Please report.\"\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337522654/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337522656","html_url":"https://github.com/coq/coq/issues/3527#issuecomment-337522656","issue_url":"https://api.github.com/repos/coq/coq/issues/3527","id":337522656,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMjY1Ng==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-05-15T12:39:05Z","updated_at":"2017-10-18T09:27:35Z","author_association":"CONTRIBUTOR","body":"Comment author: @ppedrot\n\nI fixed the anomaly part in 8.5-dev. The provided code now raises a typing error, but it still seems to be a bug linked to the use of modules.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337522656/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/881914758","html_url":"https://github.com/coq/coq/issues/3527#issuecomment-881914758","issue_url":"https://api.github.com/repos/coq/coq/issues/3527","id":881914758,"node_id":"IC_kwDOABUDh840kPOG","user":{"login":"herbelin","id":460771,"node_id":"MDQ6VXNlcjQ2MDc3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/460771?v=4","gravatar_id":"","url":"https://api.github.com/users/herbelin","html_url":"https://github.com/herbelin","followers_url":"https://api.github.com/users/herbelin/followers","following_url":"https://api.github.com/users/herbelin/following{/other_user}","gists_url":"https://api.github.com/users/herbelin/gists{/gist_id}","starred_url":"https://api.github.com/users/herbelin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/herbelin/subscriptions","organizations_url":"https://api.github.com/users/herbelin/orgs","repos_url":"https://api.github.com/users/herbelin/repos","events_url":"https://api.github.com/users/herbelin/events{/privacy}","received_events_url":"https://api.github.com/users/herbelin/received_events","type":"User","site_admin":false},"created_at":"2021-07-17T15:25:34Z","updated_at":"2021-07-17T15:25:34Z","author_association":"MEMBER","body":"> it still seems to be a bug linked to the use of modules.\r\n\r\nIt seems so indeed. After module instantiation, the coercion `T.map` has changed its type (it has the type of `FMap.map`) and it is not anymore able to see that it is a coercion from `Functor >-> mapT1`.\r\n\r\nShould we keep the types in the coercion table?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/881914758/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]