[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524804","html_url":"https://github.com/coq/coq/issues/3658#issuecomment-337524804","issue_url":"https://api.github.com/repos/coq/coq/issues/3658","id":337524804,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNDgwNA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-09-24T01:01:34Z","updated_at":"2017-10-18T09:33:32Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\n(* File reduced by coq-bug-finder from original input, then from 12178 lines to 457 lines, then from 500 lines to 147 lines, then from 175 lines to 56 lines *)\n(* coqc version trunk (September 2014) compiled on Sep 21 2014 16:34:4 with OCaml 4.01.0\n   coqtop version cagnode16:/afs/csail.mit.edu/u/j/jgross/coq-trunk,trunk (eaf864354c3fda9ddc1f03f0b1c7807b6fd44322) *)\n\nAxiom transport : forall {A : Type} (P : A -> Type) {x y : A} (p : x = y) (u : P x), P y.\nAxiom ap : forall {A B:Type} (f:A -> B) {x y:A} (p:x = y), f x = f y.\nModule NonPrim.\n  Class Contr_internal (A : Type) := { center : A ; contr : (forall y : A, center = y) }.\n  Arguments center A {_} / .\n  Inductive trunc_index : Type := minus_two | trunc_S (_ : trunc_index).\n  Notation \"-2\" := minus_two (at level 0).\n  Fixpoint IsTrunc_internal (n : trunc_index) (A : Type) : Type :=\n    match n with\n      | -2 => Contr_internal A\n      | trunc_S n' => forall (x y : A), IsTrunc_internal n' (x = y)\n    end.\n  Class IsTrunc (n : trunc_index) (A : Type) : Type := Trunc_is_trunc : IsTrunc_internal n A.\n  Notation Contr := (IsTrunc -2).\n  Hint Extern 0 => progress change Contr_internal with Contr in * : typeclass_instances.\n  Goal forall (H : Type) (H0 : H -> H -> Type) (H1 : Type)\n              (H2 : Contr H1) (H3 : H1) (H4 : H1 -> H)\n              (H5 : H0 (H4 (center H1)) (H4 H3))\n              (H6 : H0 (H4 (center H1)) (H4 (center H1))),\n         transport (fun y : H => H0 (H4 (center H1)) y) (ap H4 (contr H3)) H6 = H5.\n    intros.\n    match goal with\n      | [ |- context[contr (center _)] ] => fail 1 \"bad\"\n      | _ => idtac\n    end.\n    match goal with\n      | [ H : _ |- _ ] => destruct (contr H)\n    end.\n    match goal with\n      | [ |- context[contr (center ?x)] ] => fail 1 \"bad\" x\n      | _ => idtac\n    end.\n    admit.\n  Defined.\nEnd NonPrim.\n\nModule Prim.\n  Set Primitive Projections.\n  Class Contr_internal (A : Type) := { center : A ; contr : (forall y : A, center = y) }.\n  Arguments center A {_} / .\n  Inductive trunc_index : Type := minus_two | trunc_S (_ : trunc_index).\n  Notation \"-2\" := minus_two (at level 0).\n  Fixpoint IsTrunc_internal (n : trunc_index) (A : Type) : Type :=\n    match n with\n      | -2 => Contr_internal A\n      | trunc_S n' => forall (x y : A), IsTrunc_internal n' (x = y)\n    end.\n  Class IsTrunc (n : trunc_index) (A : Type) : Type := Trunc_is_trunc : IsTrunc_internal n A.\n  Notation Contr := (IsTrunc -2).\n  Hint Extern 0 => progress change Contr_internal with Contr in * : typeclass_instances.\n  Goal forall (H : Type) (H0 : H -> H -> Type) (H1 : Type)\n              (H2 : Contr H1) (H3 : H1) (H4 : H1 -> H)\n              (H5 : H0 (H4 (center H1)) (H4 H3))\n              (H6 : H0 (H4 (center H1)) (H4 (center H1))),\n         transport (fun y : H => H0 (H4 (center H1)) y) (ap H4 (contr H3)) H6 = H5.\n    intros.\n    match goal with\n      | [ |- context[contr (center _)] ] => fail 1 \"bad\"\n      | _ => idtac\n    end.\n    match goal with\n      | [ H : _ |- _ ] => destruct (contr H)\n    end.\n    match goal with\n      | [ |- context[contr (center ?x)] ] => fail 1 \"bad\" x\n      | _ => idtac\n    end. (* Error: Tactic failure: bad H1. *)\n    admit.\n  Defined.\nEnd Prim.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524804/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524805","html_url":"https://github.com/coq/coq/issues/3658#issuecomment-337524805","issue_url":"https://api.github.com/repos/coq/coq/issues/3658","id":337524805,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyNDgwNQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-09-24T20:35:50Z","updated_at":"2017-10-18T09:33:32Z","author_association":"CONTRIBUTOR","body":"Comment author: @mattam82\n\nFixed in trunk.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337524805/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]