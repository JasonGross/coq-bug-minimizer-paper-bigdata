[{"url":"https://api.github.com/repos/coq/coq/issues/comments/337522922","html_url":"https://github.com/coq/coq/issues/3545#issuecomment-337522922","issue_url":"https://api.github.com/repos/coq/coq/issues/3545","id":337522922,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMjkyMg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-08-26T15:55:16Z","updated_at":"2017-10-18T09:28:22Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nHere is some code that works with 8.4pl4, but fails with a very recent trunk (it worked fine a few days ago).  Possibly related to https://coq.inria.fr/bugs/show_bug.cgi?id=3544, just because both cropped up at about the same time and both involve [apply].\n\n(* coqc version trunk (August 2014) compiled on Aug 26 2014 10:11:53 with OCaml 4.01.0\n   coqtop version cagnode17:/afs/csail.mit.edu/u/j/jgross/coq-trunk,trunk (9ef5dbb1f340971036aa0c7d4d7a0986188fd971) *)\nClass IsConnected (A : Type)\n := isconnected_elim :>\n      forall (C : Type) (f : A -> C),\n        { c:C & forall a:A, f a = c }.\nDefinition hfiber {A B : Type} (f : A -> B) (y : B) := { x : A & f x = y }.\nClass IsConnMap {A B : Type} (f : A -> B)\n  := isconnected_hfiber_conn_map :>\n       forall b:B, IsConnected (hfiber f b).\nDefinition conn_map_elim\n  {A B : Type} (f : A -> B) `{IsConnMap _ _ f}\n  (P : B -> Type)\n  (d : forall a:A, P (f a))\n: forall b:B, P b.\nProof.\n  intros b.\n  pose (@ isconnected_elim) as H0.\n  refine (projT1 (H0 _ _ _ _)).\n  Undo.\n  apply isconnected_elim. (* Error: No applicable tactic. *)\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337522922/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337522923","html_url":"https://github.com/coq/coq/issues/3545#issuecomment-337522923","issue_url":"https://api.github.com/repos/coq/coq/issues/3545","id":337522923,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMjkyMw==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-08-31T17:31:59Z","updated_at":"2017-10-18T09:28:22Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nAccording to git bisect:\nThere are only 'skip'ped commits left to test.\nThe first bad commit could be any of:\n19a7a5789c42a143f92232ce15298c2f44db96ba\n6c72e455a048d69048ddf386c43d5fc5eb4597a4\nWe cannot bisect more!\nbisect run cannot continue any more\n\nThese are\n\ncommit 19a7a5789c42a143f92232ce15298c2f44db96ba\nAuthor: Hugo Herbelin <Hugo.Herbelin@ inria.fr>\nDate:   Tue Aug 19 17:57:24 2014 +0200\n\n    Fixing a bug introduced in the extension of 'apply in' + simplifying code.\n\n\n\ncommit 6c72e455a048d69048ddf386c43d5fc5eb4597a4\nAuthor: Pierre-Marie PÃ©drot <pierre-marie.pedrot@ inria.fr>\nDate:   Mon Aug 25 13:55:03 2014 +0200\n\n    Fixing previous commit.\n\n\nThe bisect script is\n\n#!/bin/bash\n\nSCRIPT=\"$(readlink -f \"${BASH_SOURCE[0]}\")\"\nCOQ_DIR=\"$HOME/coq\"\n\n# exit immediately and abort the bisect if killed\ntrap \"exit 128\" SIGHUP SIGINT SIGTERM\n\nif [ \"$1\" = \"--init\" ]\nthen\n    shift\n    cd \"$COQ_DIR\"\n    PS4='$ '\n    set -x\n    # git bisect start [--no-checkout] [<bad> [<good>...]] [--] [<paths>...]\n    git bisect start c70d5b27ad5872c74e20b6c997383fb4462a68dc 728b6c31df7a3e6c53b6f7be4ef62bf2a2a75505 # f23e7e7d6f8912ef3ddcc6288cd0f5710a12b99a # aa2f0216bb39a1054737b1edf695f28f59c14ea7\n    git bisect run \"$SCRIPT\" \"$@ \"\n    exit 128 # if git bisect run gets --init, abort immediately\nfi\n\ncd \"$COQ_DIR\"\n\nARGS=\"-local\"\nfor arg in \"-nodoc\" \"-no-native-compiler\"; do\n    if [ ! -z \"$(./configure -h 2>&1 | grep -- \"$arg\")\" ]; then\n        ARGS=\"$ARGS $arg\"\n    fi\ndone\nfor arg in \"-coqide\" \"-with-doc\"; do\n    if [ ! -z \"$(./configure -h 2>&1 | grep -- \"$arg\")\" ]; then\n        ARGS=\"$ARGS $arg no\"\n    fi\ndone\nif [ \"$1\" == \"--no-build\" ]; then\n    shift\nelse\n    git clean -xfd 2>&1 >/dev/null\n    echo \"./configure $ARGS\"\n    ./configure $ARGS\n    make coqbinaries \"$@ \" || exit 125\nfi\nls ./bin\n\n\nFILE=`mktemp --suffix=.v --tmpdir tmpXXXXXXXXXX`\n\ncat > \"$FILE\" <<'EOF'\n(* -*- coq-prog-args: (\"-emacs\" \"-nois\") -*- *)\n(* coqc version trunk (August 2014) compiled on Aug 26 2014 10:11:53 with OCaml 4.01.0\n   coqtop version cagnode17:/afs/csail.mit.edu/u/j/jgross/coq-trunk,trunk (9ef5dbb1f340971036aa0c7d4d7a0986188fd971) *)\nAxiom admit : forall {T}, T.\nRecord sigT {A} (P : forall _ : A, Type) := existT { projT1 : A ; projT2 : P projT1 }.\nInductive eq {A} (x : A) : forall _ : A, Type := eq_refl : eq x x.\nClass IsConnected (A : Type)\n := isconnected_elim :>\n      forall (C : Type) (f : forall _ : A, C),\n        sigT (fun c:C => forall a:A, eq (f a) c ).\nDefinition hfiber {A B : Type} (f : forall _ : A, B) (y : B) := sigT (fun x : A => eq (f x) y ).\nClass IsConnMap {A B : Type} (f : forall _ : A, B)\n  := isconnected_hfiber_conn_map :>\n       forall b:B, IsConnected (hfiber f b).\nDefinition conn_map_elim\n  {A B : Type} (f : forall _ : A, B) `{IsConnMap _ _ f}\n  (P : forall _ : B, Type)\n  (d : forall a:A, P (f a))\n: forall b:B, P b.\nProof.\n  intros b.\n  pose (@ isconnected_elim) as H0.\n  apply isconnected_elim. (* Error: No applicable tactic. *)\nAdmitted.\nEOF\n\nrm -f \"${FILE%.v}.vo\"\nOUTPUT=\"$(timeout 30 ./bin/coqtop -nois -boot -compile \"${FILE%.v}\" 2>&1)\"\nls \"${FILE%.v}\"*\nERR=$?\necho \"$OUTPUT\"\necho \"$ERR\"\n#echo \"$FILE\"\nrm -f \"$FILE\" \"${FILE%.v}.vo\" \"${FILE%.v}.glob\"\n\nif [ ! -z \"$(echo \"$OUTPUT\" | grep -o 'Error: No applicable tactic')\" ]; then\n    echo 'exit 1'\n    exit 1 # bad\nelif [ $ERR = 0 ]; then\n    echo 'exit 0'\n    exit 0 # good\nelse\n    echo 'exit 125'\n    exit 125 # failed for other reason\nfi\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337522923/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337522924","html_url":"https://github.com/coq/coq/issues/3545#issuecomment-337522924","issue_url":"https://api.github.com/repos/coq/coq/issues/3545","id":337522924,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMjkyNA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2014-08-31T18:29:33Z","updated_at":"2017-10-18T09:28:23Z","author_association":"CONTRIBUTOR","body":"Comment author: @herbelin\n\nThe problem is when \"apply\" destruct the lemma and apply one of the component of the lemma (and recursively). The \"old\" (internal) refine is not able to do that sometimes. I'm waiting for hints from Arnaud on how to solve this with the new refine. This is probably the same cause of failure as in RelationAlgebra.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337522924/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337522926","html_url":"https://github.com/coq/coq/issues/3545#issuecomment-337522926","issue_url":"https://api.github.com/repos/coq/coq/issues/3545","id":337522926,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMjkyNg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-07-30T17:20:34Z","updated_at":"2017-10-18T09:28:23Z","author_association":"CONTRIBUTOR","body":"Comment author: @herbelin\n\nI'm looking again at this report. The observed behavior is actually a feature implemented in 029f850bceb1 (maybe it did not work at some previous time, but reverting 029f850bceb1 at least makes the example working again).\n\nMy previous comment did not seem to be related to this bug (or at least I don't see the relation yet).\n\nInstead the problem is dual to the one mentioned in report [BZ#3544](https://github.com/coq/coq/issues?q=is%3Aissue%20%22Original%20bug%20ID%3A%20BZ%233544%22) where commit \n029f850bceb1 precisely implements what [BZ#3544](https://github.com/coq/coq/issues?q=is%3Aissue%20%22Original%20bug%20ID%3A%20BZ%233544%22) is asking for.\n\nI'm leaning towards keeping the new behavior and to close this bug.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337522926/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337522929","html_url":"https://github.com/coq/coq/issues/3545#issuecomment-337522929","issue_url":"https://api.github.com/repos/coq/coq/issues/3545","id":337522929,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMjkyOQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-07-30T18:41:25Z","updated_at":"2017-10-18T09:28:23Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nHow much trouble would it be to add a compatibility flag to change this behavior (and set it in Coq84.v suggested in bug [BZ#4300](https://github.com/coq/coq/issues?q=is%3Aissue%20%22Original%20bug%20ID%3A%20BZ%234300%22))?\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337522929/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337522931","html_url":"https://github.com/coq/coq/issues/3545#issuecomment-337522931","issue_url":"https://api.github.com/repos/coq/coq/issues/3545","id":337522931,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMjkzMQ==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-07-31T19:36:36Z","updated_at":"2017-10-18T09:28:23Z","author_association":"CONTRIBUTOR","body":"Comment author: @herbelin\n\n> How much trouble would it be to add a compatibility flag to change this behavior (and set it in Coq84.v suggested in bug [BZ#4300](https://github.com/coq/coq/issues?q=is%3Aissue%20%22Original%20bug%20ID%3A%20BZ%234300%22))?\n\nVery little trouble, except extending the list of flags. Do you have several examples where it should be really useful to have the 8.4 behavior?\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337522931/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337522932","html_url":"https://github.com/coq/coq/issues/3545#issuecomment-337522932","issue_url":"https://api.github.com/repos/coq/coq/issues/3545","id":337522932,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMjkzMg==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-07-31T20:51:26Z","updated_at":"2017-10-18T09:28:23Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nI don't have a list of several examples, but here's one that would be a pain to debug behavior changes in:\n\nLtac apply_hyps :=\n  repeat match goal with\n           | [ H : _ |- _ ] => apply H\n         end.\n\nFeel free to throw this into some general [Set Compatibility Mode v84.] flag, or similar.\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337522932/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/337522934","html_url":"https://github.com/coq/coq/issues/3545#issuecomment-337522934","issue_url":"https://api.github.com/repos/coq/coq/issues/3545","id":337522934,"node_id":"MDEyOklzc3VlQ29tbWVudDMzNzUyMjkzNA==","user":{"login":"coqbot","id":13040781,"node_id":"MDQ6VXNlcjEzMDQwNzgx","avatar_url":"https://avatars.githubusercontent.com/u/13040781?v=4","gravatar_id":"","url":"https://api.github.com/users/coqbot","html_url":"https://github.com/coqbot","followers_url":"https://api.github.com/users/coqbot/followers","following_url":"https://api.github.com/users/coqbot/following{/other_user}","gists_url":"https://api.github.com/users/coqbot/gists{/gist_id}","starred_url":"https://api.github.com/users/coqbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coqbot/subscriptions","organizations_url":"https://api.github.com/users/coqbot/orgs","repos_url":"https://api.github.com/users/coqbot/repos","events_url":"https://api.github.com/users/coqbot/events{/privacy}","received_events_url":"https://api.github.com/users/coqbot/received_events","type":"User","site_admin":false},"created_at":"2015-08-14T04:48:05Z","updated_at":"2017-10-18T09:28:23Z","author_association":"CONTRIBUTOR","body":"Comment author: @JasonGross\n\nFor future reference, the wish has been granted in 2418cf8d5ff6f479a5b43a87c861141bf9067507.  Thanks!\n\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/337522934/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]