[{"url":"https://api.github.com/repos/coq/coq/issues/comments/353480864","html_url":"https://github.com/coq/coq/issues/6488#issuecomment-353480864","issue_url":"https://api.github.com/repos/coq/coq/issues/6488","id":353480864,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MzQ4MDg2NA==","user":{"login":"psteckler","id":2244648,"node_id":"MDQ6VXNlcjIyNDQ2NDg=","avatar_url":"https://avatars.githubusercontent.com/u/2244648?v=4","gravatar_id":"","url":"https://api.github.com/users/psteckler","html_url":"https://github.com/psteckler","followers_url":"https://api.github.com/users/psteckler/followers","following_url":"https://api.github.com/users/psteckler/following{/other_user}","gists_url":"https://api.github.com/users/psteckler/gists{/gist_id}","starred_url":"https://api.github.com/users/psteckler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/psteckler/subscriptions","organizations_url":"https://api.github.com/users/psteckler/orgs","repos_url":"https://api.github.com/users/psteckler/repos","events_url":"https://api.github.com/users/psteckler/events{/privacy}","received_events_url":"https://api.github.com/users/psteckler/received_events","type":"User","site_admin":false},"created_at":"2017-12-21T23:11:35Z","updated_at":"2017-12-21T23:11:35Z","author_association":"CONTRIBUTOR","body":"I will look at this.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/353480864/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/353481134","html_url":"https://github.com/coq/coq/issues/6488#issuecomment-353481134","issue_url":"https://api.github.com/repos/coq/coq/issues/6488","id":353481134,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MzQ4MTEzNA==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2017-12-21T23:13:24Z","updated_at":"2017-12-21T23:13:24Z","author_association":"MEMBER","body":"Thanks!","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/353481134/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/353497538","html_url":"https://github.com/coq/coq/issues/6488#issuecomment-353497538","issue_url":"https://api.github.com/repos/coq/coq/issues/6488","id":353497538,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MzQ5NzUzOA==","user":{"login":"ejgallego","id":7192257,"node_id":"MDQ6VXNlcjcxOTIyNTc=","avatar_url":"https://avatars.githubusercontent.com/u/7192257?v=4","gravatar_id":"","url":"https://api.github.com/users/ejgallego","html_url":"https://github.com/ejgallego","followers_url":"https://api.github.com/users/ejgallego/followers","following_url":"https://api.github.com/users/ejgallego/following{/other_user}","gists_url":"https://api.github.com/users/ejgallego/gists{/gist_id}","starred_url":"https://api.github.com/users/ejgallego/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ejgallego/subscriptions","organizations_url":"https://api.github.com/users/ejgallego/orgs","repos_url":"https://api.github.com/users/ejgallego/repos","events_url":"https://api.github.com/users/ejgallego/events{/privacy}","received_events_url":"https://api.github.com/users/ejgallego/received_events","type":"User","site_admin":false},"created_at":"2017-12-22T01:12:36Z","updated_at":"2017-12-22T01:28:20Z","author_association":"MEMBER","body":"Just a note, quoting @ppedrot \"Optimize Proof\" cannot be made into a tactic, due to layering reasons.\r\n\r\n[I am ignorant on the level of the hack needed to make this work, but it would 99% sure it is in conflict with the 8.8 roadmap]","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/353497538/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/353497712","html_url":"https://github.com/coq/coq/issues/6488#issuecomment-353497712","issue_url":"https://api.github.com/repos/coq/coq/issues/6488","id":353497712,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MzQ5NzcxMg==","user":{"login":"psteckler","id":2244648,"node_id":"MDQ6VXNlcjIyNDQ2NDg=","avatar_url":"https://avatars.githubusercontent.com/u/2244648?v=4","gravatar_id":"","url":"https://api.github.com/users/psteckler","html_url":"https://github.com/psteckler","followers_url":"https://api.github.com/users/psteckler/followers","following_url":"https://api.github.com/users/psteckler/following{/other_user}","gists_url":"https://api.github.com/users/psteckler/gists{/gist_id}","starred_url":"https://api.github.com/users/psteckler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/psteckler/subscriptions","organizations_url":"https://api.github.com/users/psteckler/orgs","repos_url":"https://api.github.com/users/psteckler/repos","events_url":"https://api.github.com/users/psteckler/events{/privacy}","received_events_url":"https://api.github.com/users/psteckler/received_events","type":"User","site_admin":false},"created_at":"2017-12-22T01:13:56Z","updated_at":"2017-12-22T01:13:56Z","author_association":"CONTRIBUTOR","body":"OK, will `Optimize Heap` be enough, then, @JasonGross?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/353497712/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/353499589","html_url":"https://github.com/coq/coq/issues/6488#issuecomment-353499589","issue_url":"https://api.github.com/repos/coq/coq/issues/6488","id":353499589,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MzQ5OTU4OQ==","user":{"login":"ejgallego","id":7192257,"node_id":"MDQ6VXNlcjcxOTIyNTc=","avatar_url":"https://avatars.githubusercontent.com/u/7192257?v=4","gravatar_id":"","url":"https://api.github.com/users/ejgallego","html_url":"https://github.com/ejgallego","followers_url":"https://api.github.com/users/ejgallego/followers","following_url":"https://api.github.com/users/ejgallego/following{/other_user}","gists_url":"https://api.github.com/users/ejgallego/gists{/gist_id}","starred_url":"https://api.github.com/users/ejgallego/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ejgallego/subscriptions","organizations_url":"https://api.github.com/users/ejgallego/orgs","repos_url":"https://api.github.com/users/ejgallego/repos","events_url":"https://api.github.com/users/ejgallego/events{/privacy}","received_events_url":"https://api.github.com/users/ejgallego/received_events","type":"User","site_admin":false},"created_at":"2017-12-22T01:29:12Z","updated_at":"2017-12-22T01:29:12Z","author_association":"MEMBER","body":"For @JasonGross use case you could certainly create a weaker version of `Optimize Proof` that maybe is enough.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/353499589/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/353500411","html_url":"https://github.com/coq/coq/issues/6488#issuecomment-353500411","issue_url":"https://api.github.com/repos/coq/coq/issues/6488","id":353500411,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MzUwMDQxMQ==","user":{"login":"ejgallego","id":7192257,"node_id":"MDQ6VXNlcjcxOTIyNTc=","avatar_url":"https://avatars.githubusercontent.com/u/7192257?v=4","gravatar_id":"","url":"https://api.github.com/users/ejgallego","html_url":"https://github.com/ejgallego","followers_url":"https://api.github.com/users/ejgallego/followers","following_url":"https://api.github.com/users/ejgallego/following{/other_user}","gists_url":"https://api.github.com/users/ejgallego/gists{/gist_id}","starred_url":"https://api.github.com/users/ejgallego/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ejgallego/subscriptions","organizations_url":"https://api.github.com/users/ejgallego/orgs","repos_url":"https://api.github.com/users/ejgallego/repos","events_url":"https://api.github.com/users/ejgallego/events{/privacy}","received_events_url":"https://api.github.com/users/ejgallego/received_events","type":"User","site_admin":false},"created_at":"2017-12-22T01:36:14Z","updated_at":"2017-12-22T01:36:14Z","author_association":"MEMBER","body":"If you are curious, the problem stems from the fact that optimize proof works at the `Proof.t` level, which in a sense contains non-local goals that cannot be seen from the perspective of a tactic. However, as I just wrote, you can do a very simple tactic that calls `Proofview.compact` and that could work. [may require a bit of surgery in `Proofview` thou to get the right type]","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/353500411/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/353501132","html_url":"https://github.com/coq/coq/issues/6488#issuecomment-353501132","issue_url":"https://api.github.com/repos/coq/coq/issues/6488","id":353501132,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MzUwMTEzMg==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2017-12-22T01:41:24Z","updated_at":"2017-12-22T01:41:24Z","author_association":"MEMBER","body":"I am fine with a version that can only see things which are visible from the focused goals.  I was previously doing things like\r\n```coq\r\nassert (H : <test type>);\r\n[ do_test | clear H ]\r\n```\r\nand repeating that a bunch of times, and now I'm doing\r\n```coq\r\nlet __ := constr:(ltac:(assert (H : <test type>); [ do_test | clear H; exact I ])) in\r\nidtac\r\n```\r\nand I want to not have the fact that I've been building terms and evars pollute, e.g., the evar map, the heap, etc.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/353501132/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/353502498","html_url":"https://github.com/coq/coq/issues/6488#issuecomment-353502498","issue_url":"https://api.github.com/repos/coq/coq/issues/6488","id":353502498,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MzUwMjQ5OA==","user":{"login":"ejgallego","id":7192257,"node_id":"MDQ6VXNlcjcxOTIyNTc=","avatar_url":"https://avatars.githubusercontent.com/u/7192257?v=4","gravatar_id":"","url":"https://api.github.com/users/ejgallego","html_url":"https://github.com/ejgallego","followers_url":"https://api.github.com/users/ejgallego/followers","following_url":"https://api.github.com/users/ejgallego/following{/other_user}","gists_url":"https://api.github.com/users/ejgallego/gists{/gist_id}","starred_url":"https://api.github.com/users/ejgallego/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ejgallego/subscriptions","organizations_url":"https://api.github.com/users/ejgallego/orgs","repos_url":"https://api.github.com/users/ejgallego/repos","events_url":"https://api.github.com/users/ejgallego/events{/privacy}","received_events_url":"https://api.github.com/users/ejgallego/received_events","type":"User","site_admin":false},"created_at":"2017-12-22T01:50:57Z","updated_at":"2017-12-22T01:50:57Z","author_association":"MEMBER","body":"Sounds good to me then, the local version should be reasonably easy to implement.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/353502498/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/353549799","html_url":"https://github.com/coq/coq/issues/6488#issuecomment-353549799","issue_url":"https://api.github.com/repos/coq/coq/issues/6488","id":353549799,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MzU0OTc5OQ==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2017-12-22T08:36:53Z","updated_at":"2017-12-22T08:36:53Z","author_association":"MEMBER","body":"> Just a note, quoting @ppedrot \"Optimize Proof\" cannot be made into a tactic, due to layering reasons.\r\n\r\nThe problem is not the implementation, it's the semantics. Such a tactic is fundamentally dangerous, because it can create dangling evars resulting in nasty anomalies. This should *not* be a standard Coq tactic.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/353549799/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/353557308","html_url":"https://github.com/coq/coq/issues/6488#issuecomment-353557308","issue_url":"https://api.github.com/repos/coq/coq/issues/6488","id":353557308,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MzU1NzMwOA==","user":{"login":"ejgallego","id":7192257,"node_id":"MDQ6VXNlcjcxOTIyNTc=","avatar_url":"https://avatars.githubusercontent.com/u/7192257?v=4","gravatar_id":"","url":"https://api.github.com/users/ejgallego","html_url":"https://github.com/ejgallego","followers_url":"https://api.github.com/users/ejgallego/followers","following_url":"https://api.github.com/users/ejgallego/following{/other_user}","gists_url":"https://api.github.com/users/ejgallego/gists{/gist_id}","starred_url":"https://api.github.com/users/ejgallego/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ejgallego/subscriptions","organizations_url":"https://api.github.com/users/ejgallego/orgs","repos_url":"https://api.github.com/users/ejgallego/repos","events_url":"https://api.github.com/users/ejgallego/events{/privacy}","received_events_url":"https://api.github.com/users/ejgallego/received_events","type":"User","site_admin":false},"created_at":"2017-12-22T09:20:21Z","updated_at":"2017-12-22T09:20:21Z","author_association":"MEMBER","body":"Umm, well, I won't rehash even more all the discussions you had about `evar_maps`, but it seems very fishy that `Proofview.compact` is unsound, given that the monad is supposed to implement a functional state.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/353557308/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/353564731","html_url":"https://github.com/coq/coq/issues/6488#issuecomment-353564731","issue_url":"https://api.github.com/repos/coq/coq/issues/6488","id":353564731,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MzU2NDczMQ==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2017-12-22T10:00:18Z","updated_at":"2017-12-22T10:00:26Z","author_association":"MEMBER","body":"To summarize for people that weren't there: this has nothing to do with the fact the state is functional, but because an `evar_map` is a heap **without** a proper notion of reachability. So you can erase data from it, and suddenly another structure depending on the existence of an evar in ther blows up in flight.\r\n\r\nThe problem is even more apparent in Ltac where you can write things along the lines of:\r\n```\r\nlet t := open_constr:(_) in\r\noptimize_heap; (** This clears the evar contained in t **)\r\nexact t (** BOOM *)\r\n```","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/353564731/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/353565082","html_url":"https://github.com/coq/coq/issues/6488#issuecomment-353565082","issue_url":"https://api.github.com/repos/coq/coq/issues/6488","id":353565082,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MzU2NTA4Mg==","user":{"login":"mattam82","id":98373,"node_id":"MDQ6VXNlcjk4Mzcz","avatar_url":"https://avatars.githubusercontent.com/u/98373?v=4","gravatar_id":"","url":"https://api.github.com/users/mattam82","html_url":"https://github.com/mattam82","followers_url":"https://api.github.com/users/mattam82/followers","following_url":"https://api.github.com/users/mattam82/following{/other_user}","gists_url":"https://api.github.com/users/mattam82/gists{/gist_id}","starred_url":"https://api.github.com/users/mattam82/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattam82/subscriptions","organizations_url":"https://api.github.com/users/mattam82/orgs","repos_url":"https://api.github.com/users/mattam82/repos","events_url":"https://api.github.com/users/mattam82/events{/privacy}","received_events_url":"https://api.github.com/users/mattam82/received_events","type":"User","site_admin":false},"created_at":"2017-12-22T10:02:08Z","updated_at":"2017-12-22T10:02:08Z","author_association":"MEMBER","body":"@gares Suggested that maybe we could use weak refs and maps to do automatic garbage collection. I have no idea if this fits though.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/353565082/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/353567918","html_url":"https://github.com/coq/coq/issues/6488#issuecomment-353567918","issue_url":"https://api.github.com/repos/coq/coq/issues/6488","id":353567918,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MzU2NzkxOA==","user":{"login":"ejgallego","id":7192257,"node_id":"MDQ6VXNlcjcxOTIyNTc=","avatar_url":"https://avatars.githubusercontent.com/u/7192257?v=4","gravatar_id":"","url":"https://api.github.com/users/ejgallego","html_url":"https://github.com/ejgallego","followers_url":"https://api.github.com/users/ejgallego/followers","following_url":"https://api.github.com/users/ejgallego/following{/other_user}","gists_url":"https://api.github.com/users/ejgallego/gists{/gist_id}","starred_url":"https://api.github.com/users/ejgallego/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ejgallego/subscriptions","organizations_url":"https://api.github.com/users/ejgallego/orgs","repos_url":"https://api.github.com/users/ejgallego/repos","events_url":"https://api.github.com/users/ejgallego/events{/privacy}","received_events_url":"https://api.github.com/users/ejgallego/received_events","type":"User","site_admin":false},"created_at":"2017-12-22T10:17:05Z","updated_at":"2017-12-22T10:17:05Z","author_association":"MEMBER","body":"Oh, I would have thought that optimize wouldn't have cleared still used evars, but just compacted the ones already instantiated.\r\n\r\nWhy is the variable in `t` indeed removed? Shouldn't it be the case that only variables that are known to be substituted are collected?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/353567918/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/353568156","html_url":"https://github.com/coq/coq/issues/6488#issuecomment-353568156","issue_url":"https://api.github.com/repos/coq/coq/issues/6488","id":353568156,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MzU2ODE1Ng==","user":{"login":"ejgallego","id":7192257,"node_id":"MDQ6VXNlcjcxOTIyNTc=","avatar_url":"https://avatars.githubusercontent.com/u/7192257?v=4","gravatar_id":"","url":"https://api.github.com/users/ejgallego","html_url":"https://github.com/ejgallego","followers_url":"https://api.github.com/users/ejgallego/followers","following_url":"https://api.github.com/users/ejgallego/following{/other_user}","gists_url":"https://api.github.com/users/ejgallego/gists{/gist_id}","starred_url":"https://api.github.com/users/ejgallego/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ejgallego/subscriptions","organizations_url":"https://api.github.com/users/ejgallego/orgs","repos_url":"https://api.github.com/users/ejgallego/repos","events_url":"https://api.github.com/users/ejgallego/events{/privacy}","received_events_url":"https://api.github.com/users/ejgallego/received_events","type":"User","site_admin":false},"created_at":"2017-12-22T10:18:27Z","updated_at":"2017-12-22T10:18:27Z","author_association":"MEMBER","body":"> So you can erase data from it, and suddenly another structure depending on the existence of an evar in ther blows up in flight.\r\n\r\nWell, my reference to \"functional state\" was indeed to note that `proofview` should already have in scope all the structures that depend on the `evar_map`, so it should be able to properly update them, right?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/353568156/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/353568221","html_url":"https://github.com/coq/coq/issues/6488#issuecomment-353568221","issue_url":"https://api.github.com/repos/coq/coq/issues/6488","id":353568221,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MzU2ODIyMQ==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2017-12-22T10:18:47Z","updated_at":"2017-12-22T10:18:47Z","author_association":"MEMBER","body":"> Oh, I would have thought that optimize wouldn't have cleared still used evars, but just compacted the ones already instantiated.\r\n\r\nThat's actually counter-productive: expanding all the intermediate evars consume more memory than keeping indirections.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/353568221/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/353569041","html_url":"https://github.com/coq/coq/issues/6488#issuecomment-353569041","issue_url":"https://api.github.com/repos/coq/coq/issues/6488","id":353569041,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MzU2OTA0MQ==","user":{"login":"ejgallego","id":7192257,"node_id":"MDQ6VXNlcjcxOTIyNTc=","avatar_url":"https://avatars.githubusercontent.com/u/7192257?v=4","gravatar_id":"","url":"https://api.github.com/users/ejgallego","html_url":"https://github.com/ejgallego","followers_url":"https://api.github.com/users/ejgallego/followers","following_url":"https://api.github.com/users/ejgallego/following{/other_user}","gists_url":"https://api.github.com/users/ejgallego/gists{/gist_id}","starred_url":"https://api.github.com/users/ejgallego/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ejgallego/subscriptions","organizations_url":"https://api.github.com/users/ejgallego/orgs","repos_url":"https://api.github.com/users/ejgallego/repos","events_url":"https://api.github.com/users/ejgallego/events{/privacy}","received_events_url":"https://api.github.com/users/ejgallego/received_events","type":"User","site_admin":false},"created_at":"2017-12-22T10:23:12Z","updated_at":"2017-12-22T10:25:50Z","author_association":"MEMBER","body":"Counter-productive or not, it seems that this is what `nf_evar` (and thus `optimize`) does, isn't it?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/353569041/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/353569750","html_url":"https://github.com/coq/coq/issues/6488#issuecomment-353569750","issue_url":"https://api.github.com/repos/coq/coq/issues/6488","id":353569750,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MzU2OTc1MA==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2017-12-22T10:27:01Z","updated_at":"2017-12-22T10:27:01Z","author_association":"MEMBER","body":"@ejgallego No, in addition to expanding the root evars, it also drops the intermediate ones.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/353569750/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/353570131","html_url":"https://github.com/coq/coq/issues/6488#issuecomment-353570131","issue_url":"https://api.github.com/repos/coq/coq/issues/6488","id":353570131,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MzU3MDEzMQ==","user":{"login":"ejgallego","id":7192257,"node_id":"MDQ6VXNlcjcxOTIyNTc=","avatar_url":"https://avatars.githubusercontent.com/u/7192257?v=4","gravatar_id":"","url":"https://api.github.com/users/ejgallego","html_url":"https://github.com/ejgallego","followers_url":"https://api.github.com/users/ejgallego/followers","following_url":"https://api.github.com/users/ejgallego/following{/other_user}","gists_url":"https://api.github.com/users/ejgallego/gists{/gist_id}","starred_url":"https://api.github.com/users/ejgallego/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ejgallego/subscriptions","organizations_url":"https://api.github.com/users/ejgallego/orgs","repos_url":"https://api.github.com/users/ejgallego/repos","events_url":"https://api.github.com/users/ejgallego/events{/privacy}","received_events_url":"https://api.github.com/users/ejgallego/received_events","type":"User","site_admin":false},"created_at":"2017-12-22T10:29:09Z","updated_at":"2017-12-22T10:29:09Z","author_association":"MEMBER","body":"Yes, so it does what I thought, however, the variable in your example is not an intermediate one, why is it dropped then?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/353570131/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/353570518","html_url":"https://github.com/coq/coq/issues/6488#issuecomment-353570518","issue_url":"https://api.github.com/repos/coq/coq/issues/6488","id":353570518,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MzU3MDUxOA==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2017-12-22T10:31:31Z","updated_at":"2017-12-22T10:31:31Z","author_association":"MEMBER","body":"@ejgallego Indeed you're right, my example is wrong. But it's easy to come up with a similar one that still fails, e.g. replace `open_constr` by a call to a tactic in term or something. As soon as `t` structurally contains a defined evar, the optimize process is unsound as it's going to wipe it out of the map, leaving `t` with what amounts to a dangling pointer.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/353570518/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/353570994","html_url":"https://github.com/coq/coq/issues/6488#issuecomment-353570994","issue_url":"https://api.github.com/repos/coq/coq/issues/6488","id":353570994,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MzU3MDk5NA==","user":{"login":"ejgallego","id":7192257,"node_id":"MDQ6VXNlcjcxOTIyNTc=","avatar_url":"https://avatars.githubusercontent.com/u/7192257?v=4","gravatar_id":"","url":"https://api.github.com/users/ejgallego","html_url":"https://github.com/ejgallego","followers_url":"https://api.github.com/users/ejgallego/followers","following_url":"https://api.github.com/users/ejgallego/following{/other_user}","gists_url":"https://api.github.com/users/ejgallego/gists{/gist_id}","starred_url":"https://api.github.com/users/ejgallego/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ejgallego/subscriptions","organizations_url":"https://api.github.com/users/ejgallego/orgs","repos_url":"https://api.github.com/users/ejgallego/repos","events_url":"https://api.github.com/users/ejgallego/events{/privacy}","received_events_url":"https://api.github.com/users/ejgallego/received_events","type":"User","site_admin":false},"created_at":"2017-12-22T10:34:24Z","updated_at":"2017-12-22T10:34:24Z","author_association":"MEMBER","body":"Well, I am not sure where the bug is as optimized should substitute indeed all the occurrences of the evar before removing it, so I am not sure why it would skip `t`. Is that due to a problem with the implementation of \"tactic in term\"? Is it a case of being bitten by plugins?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/353570994/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/353571397","html_url":"https://github.com/coq/coq/issues/6488#issuecomment-353571397","issue_url":"https://api.github.com/repos/coq/coq/issues/6488","id":353571397,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MzU3MTM5Nw==","user":{"login":"ejgallego","id":7192257,"node_id":"MDQ6VXNlcjcxOTIyNTc=","avatar_url":"https://avatars.githubusercontent.com/u/7192257?v=4","gravatar_id":"","url":"https://api.github.com/users/ejgallego","html_url":"https://github.com/ejgallego","followers_url":"https://api.github.com/users/ejgallego/followers","following_url":"https://api.github.com/users/ejgallego/following{/other_user}","gists_url":"https://api.github.com/users/ejgallego/gists{/gist_id}","starred_url":"https://api.github.com/users/ejgallego/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ejgallego/subscriptions","organizations_url":"https://api.github.com/users/ejgallego/orgs","repos_url":"https://api.github.com/users/ejgallego/repos","events_url":"https://api.github.com/users/ejgallego/events{/privacy}","received_events_url":"https://api.github.com/users/ejgallego/received_events","type":"User","site_admin":false},"created_at":"2017-12-22T10:36:55Z","updated_at":"2017-12-22T10:36:55Z","author_association":"MEMBER","body":"Yeah so in this case I wouldn't blame `optimize`, IMHO it is not their fault that the state is not truly functional and other parts of the system are using the evar_map without the knolegde of `proofview`.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/353571397/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/353572297","html_url":"https://github.com/coq/coq/issues/6488#issuecomment-353572297","issue_url":"https://api.github.com/repos/coq/coq/issues/6488","id":353572297,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MzU3MjI5Nw==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2017-12-22T10:42:16Z","updated_at":"2017-12-22T10:42:16Z","author_association":"MEMBER","body":"> Is that due to a problem with the implementation of \"tactic in term\"? Is it a case of being bitten by plugins?\r\n\r\nAlthough they're the easiest way to shoot you in the foot, neither of those, you can already do that in vanilla Ltac.\r\n\r\nThe problem is that there is a notion of global root for the heap that is not stored anywhere. Morally, the optimize tactic should be aware of the Ltac runtime through some kind of global root registration process, as in any GC-ed language. Any tactic written in ML should also register its roots, as in the good old C FFI.\r\n\r\n> IMHO it is not their fault that the state is not truly functional\r\n\r\nPlease stop using the sureptiously overloaded word *functional* for this kind of property, it has little to do with functional programming if at all. We have a heap, we want an automatic GC, but we don't have neither a proper notion of reachability nor global roots. Looks more like separation logic if anything.\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/353572297/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/353573612","html_url":"https://github.com/coq/coq/issues/6488#issuecomment-353573612","issue_url":"https://api.github.com/repos/coq/coq/issues/6488","id":353573612,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MzU3MzYxMg==","user":{"login":"ejgallego","id":7192257,"node_id":"MDQ6VXNlcjcxOTIyNTc=","avatar_url":"https://avatars.githubusercontent.com/u/7192257?v=4","gravatar_id":"","url":"https://api.github.com/users/ejgallego","html_url":"https://github.com/ejgallego","followers_url":"https://api.github.com/users/ejgallego/followers","following_url":"https://api.github.com/users/ejgallego/following{/other_user}","gists_url":"https://api.github.com/users/ejgallego/gists{/gist_id}","starred_url":"https://api.github.com/users/ejgallego/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ejgallego/subscriptions","organizations_url":"https://api.github.com/users/ejgallego/orgs","repos_url":"https://api.github.com/users/ejgallego/repos","events_url":"https://api.github.com/users/ejgallego/events{/privacy}","received_events_url":"https://api.github.com/users/ejgallego/received_events","type":"User","site_admin":false},"created_at":"2017-12-22T10:50:26Z","updated_at":"2017-12-22T10:50:26Z","author_association":"MEMBER","body":"That's your point of view, my point of view is that `optimize` doesn't have in scope all the users of the heap so it cannot indeed compute roots.\r\n\r\nWith your GC hook proposal, you would solve little, as you wouldn't be able to update and traverse the LTAC terms properly, so yeah, you would prevent removing intermediate evars. This is a fix, but a poor one IMHO, as it basically amounts to \"in order to avoid bugs in optimize, we just make optimize a noop\".\r\n\r\nI do stand on my lack of \"functionality\" analysis then :p ","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/353573612/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/353578815","html_url":"https://github.com/coq/coq/issues/6488#issuecomment-353578815","issue_url":"https://api.github.com/repos/coq/coq/issues/6488","id":353578815,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MzU3ODgxNQ==","user":{"login":"maximedenes","id":647105,"node_id":"MDQ6VXNlcjY0NzEwNQ==","avatar_url":"https://avatars.githubusercontent.com/u/647105?v=4","gravatar_id":"","url":"https://api.github.com/users/maximedenes","html_url":"https://github.com/maximedenes","followers_url":"https://api.github.com/users/maximedenes/followers","following_url":"https://api.github.com/users/maximedenes/following{/other_user}","gists_url":"https://api.github.com/users/maximedenes/gists{/gist_id}","starred_url":"https://api.github.com/users/maximedenes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maximedenes/subscriptions","organizations_url":"https://api.github.com/users/maximedenes/orgs","repos_url":"https://api.github.com/users/maximedenes/repos","events_url":"https://api.github.com/users/maximedenes/events{/privacy}","received_events_url":"https://api.github.com/users/maximedenes/received_events","type":"User","site_admin":false},"created_at":"2017-12-22T11:21:44Z","updated_at":"2017-12-22T11:21:44Z","author_association":"MEMBER","body":"> Please stop using the sureptiously overloaded word functional for this kind of property, it has little to do with functional programming if at all.\r\n\r\nIs that really true? If you see evars as pointers, the fact that you can update the state (the evar_map) and yet access terms that were typechecked in a previous state looks like an imperative feature, doesn't it? Not saying we want it, but a functional view would mean enforcing proper scoping of partial terms w.r.t. evar maps.\r\n\r\nIronically, the old interface was closer to that, by packing terms and evar_maps (although not enforcing proper scoping). What probably happened is that it was too restrictive so client code started to do weird stuff, and breaking this abstraction.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/353578815/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/353609812","html_url":"https://github.com/coq/coq/issues/6488#issuecomment-353609812","issue_url":"https://api.github.com/repos/coq/coq/issues/6488","id":353609812,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MzYwOTgxMg==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2017-12-22T14:36:28Z","updated_at":"2017-12-22T14:36:28Z","author_association":"MEMBER","body":"What about a variant of optimize that took a tactic and only compacted evars which were both introduced and filled by that tactic?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/353609812/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/353610429","html_url":"https://github.com/coq/coq/issues/6488#issuecomment-353610429","issue_url":"https://api.github.com/repos/coq/coq/issues/6488","id":353610429,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MzYxMDQyOQ==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2017-12-22T14:39:55Z","updated_at":"2017-12-22T14:39:55Z","author_association":"MEMBER","body":"@JasonGross This is still unsound, you may have instantiated another previous evar by one of those freshly generated evars.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/353610429/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/353611609","html_url":"https://github.com/coq/coq/issues/6488#issuecomment-353611609","issue_url":"https://api.github.com/repos/coq/coq/issues/6488","id":353611609,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MzYxMTYwOQ==","user":{"login":"JasonGross","id":396076,"node_id":"MDQ6VXNlcjM5NjA3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/396076?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonGross","html_url":"https://github.com/JasonGross","followers_url":"https://api.github.com/users/JasonGross/followers","following_url":"https://api.github.com/users/JasonGross/following{/other_user}","gists_url":"https://api.github.com/users/JasonGross/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonGross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonGross/subscriptions","organizations_url":"https://api.github.com/users/JasonGross/orgs","repos_url":"https://api.github.com/users/JasonGross/repos","events_url":"https://api.github.com/users/JasonGross/events{/privacy}","received_events_url":"https://api.github.com/users/JasonGross/received_events","type":"User","site_admin":false},"created_at":"2017-12-22T14:46:06Z","updated_at":"2017-12-22T14:46:06Z","author_association":"MEMBER","body":"Argh.  Is there a hope of getting such unsound tactics in some `IReallyKnowWhatImDoingAndAmWillingToRiskAnomaliesWithTheseTactics.v` file?  Or name it `unsafe_optimize_proof` or such?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/353611609/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/353612302","html_url":"https://github.com/coq/coq/issues/6488#issuecomment-353612302","issue_url":"https://api.github.com/repos/coq/coq/issues/6488","id":353612302,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MzYxMjMwMg==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2017-12-22T14:49:45Z","updated_at":"2017-12-22T14:49:45Z","author_association":"MEMBER","body":"Yes, I'm not saying these tactics should not exist. I'm saying that they should not be available to the casual user, which is very different.\r\n\r\nFTR, in Ltac2 it's easy to trigger dangling evars because the computation model is more powerful. Most of them are (or at least should be) caught by dynamic checks, but you can really wreak havoc if you use unsafe primitives just as you would do in OCaml code.\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/353612302/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/353621497","html_url":"https://github.com/coq/coq/issues/6488#issuecomment-353621497","issue_url":"https://api.github.com/repos/coq/coq/issues/6488","id":353621497,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MzYyMTQ5Nw==","user":{"login":"ejgallego","id":7192257,"node_id":"MDQ6VXNlcjcxOTIyNTc=","avatar_url":"https://avatars.githubusercontent.com/u/7192257?v=4","gravatar_id":"","url":"https://api.github.com/users/ejgallego","html_url":"https://github.com/ejgallego","followers_url":"https://api.github.com/users/ejgallego/followers","following_url":"https://api.github.com/users/ejgallego/following{/other_user}","gists_url":"https://api.github.com/users/ejgallego/gists{/gist_id}","starred_url":"https://api.github.com/users/ejgallego/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ejgallego/subscriptions","organizations_url":"https://api.github.com/users/ejgallego/orgs","repos_url":"https://api.github.com/users/ejgallego/repos","events_url":"https://api.github.com/users/ejgallego/events{/privacy}","received_events_url":"https://api.github.com/users/ejgallego/received_events","type":"User","site_admin":false},"created_at":"2017-12-22T15:39:14Z","updated_at":"2017-12-22T15:39:14Z","author_association":"MEMBER","body":"I totally disagree, what @JasonGross asks should be available and it is not unsound, it is the Coq implementation that is wrong.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/353621497/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/353622088","html_url":"https://github.com/coq/coq/issues/6488#issuecomment-353622088","issue_url":"https://api.github.com/repos/coq/coq/issues/6488","id":353622088,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MzYyMjA4OA==","user":{"login":"ejgallego","id":7192257,"node_id":"MDQ6VXNlcjcxOTIyNTc=","avatar_url":"https://avatars.githubusercontent.com/u/7192257?v=4","gravatar_id":"","url":"https://api.github.com/users/ejgallego","html_url":"https://github.com/ejgallego","followers_url":"https://api.github.com/users/ejgallego/followers","following_url":"https://api.github.com/users/ejgallego/following{/other_user}","gists_url":"https://api.github.com/users/ejgallego/gists{/gist_id}","starred_url":"https://api.github.com/users/ejgallego/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ejgallego/subscriptions","organizations_url":"https://api.github.com/users/ejgallego/orgs","repos_url":"https://api.github.com/users/ejgallego/repos","events_url":"https://api.github.com/users/ejgallego/events{/privacy}","received_events_url":"https://api.github.com/users/ejgallego/received_events","type":"User","site_admin":false},"created_at":"2017-12-22T15:42:31Z","updated_at":"2017-12-22T15:42:31Z","author_association":"MEMBER","body":"There is a reason this is very worrying, as indeed the current model for management of evars seems non-trivially broken, and instead of trying to solve the core problem, we are moving forward and ignoring the numerous warning signs that something is definitively not right.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/353622088/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/353623643","html_url":"https://github.com/coq/coq/issues/6488#issuecomment-353623643","issue_url":"https://api.github.com/repos/coq/coq/issues/6488","id":353623643,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MzYyMzY0Mw==","user":{"login":"mattam82","id":98373,"node_id":"MDQ6VXNlcjk4Mzcz","avatar_url":"https://avatars.githubusercontent.com/u/98373?v=4","gravatar_id":"","url":"https://api.github.com/users/mattam82","html_url":"https://github.com/mattam82","followers_url":"https://api.github.com/users/mattam82/followers","following_url":"https://api.github.com/users/mattam82/following{/other_user}","gists_url":"https://api.github.com/users/mattam82/gists{/gist_id}","starred_url":"https://api.github.com/users/mattam82/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattam82/subscriptions","organizations_url":"https://api.github.com/users/mattam82/orgs","repos_url":"https://api.github.com/users/mattam82/repos","events_url":"https://api.github.com/users/mattam82/events{/privacy}","received_events_url":"https://api.github.com/users/mattam82/received_events","type":"User","site_admin":false},"created_at":"2017-12-22T15:50:24Z","updated_at":"2017-12-22T15:50:24Z","author_association":"MEMBER","body":"As Pierre-Marie mentioned: an approximation of well-scoped, garbage collectable evars in terms would require a kind of separation logic / ownership typing in the language used to write tactics. Do you want to go there @ejgallego ?","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/353623643/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/353623677","html_url":"https://github.com/coq/coq/issues/6488#issuecomment-353623677","issue_url":"https://api.github.com/repos/coq/coq/issues/6488","id":353623677,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MzYyMzY3Nw==","user":{"login":"ppedrot","id":1202327,"node_id":"MDQ6VXNlcjEyMDIzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1202327?v=4","gravatar_id":"","url":"https://api.github.com/users/ppedrot","html_url":"https://github.com/ppedrot","followers_url":"https://api.github.com/users/ppedrot/followers","following_url":"https://api.github.com/users/ppedrot/following{/other_user}","gists_url":"https://api.github.com/users/ppedrot/gists{/gist_id}","starred_url":"https://api.github.com/users/ppedrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppedrot/subscriptions","organizations_url":"https://api.github.com/users/ppedrot/orgs","repos_url":"https://api.github.com/users/ppedrot/repos","events_url":"https://api.github.com/users/ppedrot/events{/privacy}","received_events_url":"https://api.github.com/users/ppedrot/received_events","type":"User","site_admin":false},"created_at":"2017-12-22T15:50:33Z","updated_at":"2017-12-22T15:50:33Z","author_association":"MEMBER","body":"> I totally disagree, what @JasonGross asks should be available and it is not unsound, it is the Coq implementation that is wrong.\r\n\r\nOnce again, if you want a GC, you need roots. And you need a notion of reachability to start with. That's like memory management 101.\r\n\r\n> There is a reason this is very worrying, as indeed the current model for management of evars seems non-trivially broken, and instead of trying to solve the core problem, we are moving forward and ignoring the numerous warning signs that something is definitively not right.\r\n\r\nI'm not saying that the current model is nice. It is complex, just as manipulating pointers is tricky. If you can come up with an abstraction layer that get rids of that, I'd be personally very glad. But apart from an ownership-based type-system, I don't see well how to allow pointer manipulation without danger. If you go up the abstraction layer, you could give a try at [this](http://www.redprl.org/pdfs/afpr.pdf).\r\n\r\nStill, evars are way sounder than the previous model, which was not preserving well-typedness. At least we now have this property.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/353623677/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/353629875","html_url":"https://github.com/coq/coq/issues/6488#issuecomment-353629875","issue_url":"https://api.github.com/repos/coq/coq/issues/6488","id":353629875,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MzYyOTg3NQ==","user":{"login":"psteckler","id":2244648,"node_id":"MDQ6VXNlcjIyNDQ2NDg=","avatar_url":"https://avatars.githubusercontent.com/u/2244648?v=4","gravatar_id":"","url":"https://api.github.com/users/psteckler","html_url":"https://github.com/psteckler","followers_url":"https://api.github.com/users/psteckler/followers","following_url":"https://api.github.com/users/psteckler/following{/other_user}","gists_url":"https://api.github.com/users/psteckler/gists{/gist_id}","starred_url":"https://api.github.com/users/psteckler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/psteckler/subscriptions","organizations_url":"https://api.github.com/users/psteckler/orgs","repos_url":"https://api.github.com/users/psteckler/repos","events_url":"https://api.github.com/users/psteckler/events{/privacy}","received_events_url":"https://api.github.com/users/psteckler/received_events","type":"User","site_admin":false},"created_at":"2017-12-22T16:19:44Z","updated_at":"2017-12-22T17:53:02Z","author_association":"CONTRIBUTOR","body":"So, to summarize, no one has issues with `Optimize Heap` tactic? The existing Vernac is just a call to `Gc.compact`, so that should be OK.\r\n\r\nAnd we don't have sound existing code to wrap an `Optimize Proof` around? `Proofview.compact` won't do?\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/353629875/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/coq/coq/issues/comments/353676998","html_url":"https://github.com/coq/coq/issues/6488#issuecomment-353676998","issue_url":"https://api.github.com/repos/coq/coq/issues/6488","id":353676998,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MzY3Njk5OA==","user":{"login":"psteckler","id":2244648,"node_id":"MDQ6VXNlcjIyNDQ2NDg=","avatar_url":"https://avatars.githubusercontent.com/u/2244648?v=4","gravatar_id":"","url":"https://api.github.com/users/psteckler","html_url":"https://github.com/psteckler","followers_url":"https://api.github.com/users/psteckler/followers","following_url":"https://api.github.com/users/psteckler/following{/other_user}","gists_url":"https://api.github.com/users/psteckler/gists{/gist_id}","starred_url":"https://api.github.com/users/psteckler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/psteckler/subscriptions","organizations_url":"https://api.github.com/users/psteckler/orgs","repos_url":"https://api.github.com/users/psteckler/repos","events_url":"https://api.github.com/users/psteckler/events{/privacy}","received_events_url":"https://api.github.com/users/psteckler/received_events","type":"User","site_admin":false},"created_at":"2017-12-22T21:25:33Z","updated_at":"2017-12-22T21:25:39Z","author_association":"CONTRIBUTOR","body":"Created #6497, which addresses the request for a tactic like `Optimize Heap`. That PR does not have anything for the request for a tactic like `Optimize Proof`.","reactions":{"url":"https://api.github.com/repos/coq/coq/issues/comments/353676998/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]